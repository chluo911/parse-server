"use strict";function cov_rk8of8zk9(){var path="/parse-server/lib/Controllers/AdaptableController.js";var hash="0407f62bc6b3e87c2e838f7e1d7b5dc0fffe2de6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Controllers/AdaptableController.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:55}},"2":{start:{line:18,column:15},end:{line:18,column:23}},"3":{start:{line:22,column:4},end:{line:22,column:27}},"4":{start:{line:23,column:4},end:{line:23,column:23}},"5":{start:{line:24,column:4},end:{line:24,column:27}},"6":{start:{line:28,column:4},end:{line:28,column:34}},"7":{start:{line:29,column:4},end:{line:29,column:29}},"8":{start:{line:33,column:4},end:{line:33,column:26}},"9":{start:{line:37,column:4},end:{line:37,column:73}},"10":{start:{line:41,column:4},end:{line:41,column:55}},"11":{start:{line:45,column:4},end:{line:47,column:5}},"12":{start:{line:46,column:6},end:{line:46,column:70}},"13":{start:{line:49,column:17},end:{line:49,column:59}},"14":{start:{line:51,column:4},end:{line:53,column:5}},"15":{start:{line:52,column:6},end:{line:52,column:13}},"16":{start:{line:56,column:23},end:{line:68,column:10}},"17":{start:{line:57,column:26},end:{line:57,column:45}},"18":{start:{line:58,column:27},end:{line:58,column:53}},"19":{start:{line:60,column:6},end:{line:65,column:7}},"20":{start:{line:61,column:8},end:{line:64,column:10}},"21":{start:{line:67,column:6},end:{line:67,column:17}},"22":{start:{line:70,column:4},end:{line:72,column:5}},"23":{start:{line:71,column:6},end:{line:71,column:95}},"24":{start:{line:77,column:0},end:{line:77,column:50}},"25":{start:{line:78,column:15},end:{line:78,column:34}},"26":{start:{line:79,column:0},end:{line:79,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:21,column:2},end:{line:21,column:3}},loc:{start:{line:21,column:39},end:{line:25,column:3}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:27,column:2},end:{line:27,column:3}},loc:{start:{line:27,column:23},end:{line:30,column:3}},line:27},"2":{name:"(anonymous_2)",decl:{start:{line:32,column:2},end:{line:32,column:3}},loc:{start:{line:32,column:16},end:{line:34,column:3}},line:32},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:2},end:{line:36,column:3}},loc:{start:{line:36,column:24},end:{line:38,column:3}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:2},end:{line:40,column:3}},loc:{start:{line:40,column:27},end:{line:42,column:3}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:44,column:2},end:{line:44,column:3}},loc:{start:{line:44,column:54},end:{line:73,column:3}},line:44},"6":{name:"(anonymous_6)",decl:{start:{line:56,column:73},end:{line:56,column:74}},loc:{start:{line:56,column:87},end:{line:68,column:5}},line:56}},branchMap:{"0":{loc:{start:{line:45,column:4},end:{line:47,column:5}},type:"if",locations:[{start:{line:45,column:4},end:{line:47,column:5}},{start:{line:45,column:4},end:{line:47,column:5}}],line:45},"1":{loc:{start:{line:49,column:17},end:{line:49,column:59}},type:"binary-expr",locations:[{start:{line:49,column:17},end:{line:49,column:29}},{start:{line:49,column:33},end:{line:49,column:59}}],line:49},"2":{loc:{start:{line:51,column:4},end:{line:53,column:5}},type:"if",locations:[{start:{line:51,column:4},end:{line:53,column:5}},{start:{line:51,column:4},end:{line:53,column:5}}],line:51},"3":{loc:{start:{line:60,column:6},end:{line:65,column:7}},type:"if",locations:[{start:{line:60,column:6},end:{line:65,column:7}},{start:{line:60,column:6},end:{line:65,column:7}}],line:60},"4":{loc:{start:{line:70,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:70,column:4},end:{line:72,column:5}},{start:{line:70,column:4},end:{line:72,column:5}}],line:70}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},inputSourceMap:{version:3,sources:["../../src/Controllers/AdaptableController.js"],names:["_adapter","Symbol","AdaptableController","constructor","adapter","appId","options","validateAdapter","expectedAdapterType","Error","self","ExpectedType","name","Type","mismatches","Object","getOwnPropertyNames","prototype","reduce","obj","key","adapterType","expectedType","expected","actual","keys","length"],mappings:";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,QAAQ,GAAGC,MAAM,EAArB;;AAEO,MAAMC,mBAAN,CAA0B;AAC/BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACnC,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEU,MAAPA,OAAO,CAACA,OAAD,EAAU;AACnB,SAAKG,eAAL,CAAqBH,OAArB;AACA,SAAKJ,QAAL,IAAiBI,OAAjB;AACD;;AAEU,MAAPA,OAAO,GAAG;AACZ,WAAO,KAAKJ,QAAL,CAAP;AACD;;AAEDQ,EAAAA,mBAAmB,GAAG;AACpB,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAEDF,EAAAA,eAAe,CAACH,OAAD,EAAU;AACvBF,IAAAA,mBAAmB,CAACK,eAApB,CAAoCH,OAApC,EAA6C,IAA7C;AACD;;AAEqB,SAAfG,eAAe,CAACH,OAAD,EAAUM,IAAV,EAAgBC,YAAhB,EAA8B;AAClD,QAAI,CAACP,OAAL,EAAc;AACZ,YAAM,IAAIK,KAAJ,CAAU,KAAKN,WAAL,CAAiBS,IAAjB,GAAwB,sBAAlC,CAAN;AACD;;AAED,UAAMC,IAAI,GAAGF,YAAY,IAAID,IAAI,CAACF,mBAAL,EAA7B,CALkD,CAMlD;;AACA,QAAI,CAACK,IAAL,EAAW;AACT;AACD,KATiD,CAWlD;;;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,IAAI,CAACI,SAAhC,EAA2CC,MAA3C,CAAkD,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjF,YAAMC,WAAW,GAAG,OAAOjB,OAAO,CAACgB,GAAD,CAAlC;AACA,YAAME,YAAY,GAAG,OAAOT,IAAI,CAACI,SAAL,CAAeG,GAAf,CAA5B;;AACA,UAAIC,WAAW,KAAKC,YAApB,EAAkC;AAChCH,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAW;AACTG,UAAAA,QAAQ,EAAED,YADD;AAETE,UAAAA,MAAM,EAAEH;AAFC,SAAX;AAID;;AACD,aAAOF,GAAP;AACD,KAVkB,EAUhB,EAVgB,CAAnB;;AAYA,QAAIJ,MAAM,CAACU,IAAP,CAAYX,UAAZ,EAAwBY,MAAxB,GAAiC,CAArC,EAAwC;AACtC,YAAM,IAAIjB,KAAJ,CAAU,kDAAV,EAA8DL,OAA9D,EAAuEU,UAAvE,CAAN;AACD;AACF;;AAnD8B;;;eAsDlBZ,mB",sourcesContent:["/*\nAdaptableController.js\n\nAdaptableController is the base class for all controllers\nthat support adapter,\nThe super class takes care of creating the right instance for the adapter\nbased on the parameters passed\n\n */\n\n// _adapter is private, use Symbol\nvar _adapter = Symbol();\n\nexport class AdaptableController {\n  constructor(adapter, appId, options) {\n    this.options = options;\n    this.appId = appId;\n    this.adapter = adapter;\n  }\n\n  set adapter(adapter) {\n    this.validateAdapter(adapter);\n    this[_adapter] = adapter;\n  }\n\n  get adapter() {\n    return this[_adapter];\n  }\n\n  expectedAdapterType() {\n    throw new Error('Subclasses should implement expectedAdapterType()');\n  }\n\n  validateAdapter(adapter) {\n    AdaptableController.validateAdapter(adapter, this);\n  }\n\n  static validateAdapter(adapter, self, ExpectedType) {\n    if (!adapter) {\n      throw new Error(this.constructor.name + ' requires an adapter');\n    }\n\n    const Type = ExpectedType || self.expectedAdapterType();\n    // Allow skipping for testing\n    if (!Type) {\n      return;\n    }\n\n    // Makes sure the prototype matches\n    const mismatches = Object.getOwnPropertyNames(Type.prototype).reduce((obj, key) => {\n      const adapterType = typeof adapter[key];\n      const expectedType = typeof Type.prototype[key];\n      if (adapterType !== expectedType) {\n        obj[key] = {\n          expected: expectedType,\n          actual: adapterType,\n        };\n      }\n      return obj;\n    }, {});\n\n    if (Object.keys(mismatches).length > 0) {\n      throw new Error(\"Adapter prototype don't match expected prototype\", adapter, mismatches);\n    }\n  }\n}\n\nexport default AdaptableController;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0407f62bc6b3e87c2e838f7e1d7b5dc0fffe2de6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_rk8of8zk9=function(){return actualCoverage;};}return actualCoverage;}cov_rk8of8zk9();cov_rk8of8zk9().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_rk8of8zk9().s[1]++;exports.default=exports.AdaptableController=void 0;/*
AdaptableController.js

AdaptableController is the base class for all controllers
that support adapter,
The super class takes care of creating the right instance for the adapter
based on the parameters passed

 */ // _adapter is private, use Symbol
var _adapter=(cov_rk8of8zk9().s[2]++,Symbol());class AdaptableController{constructor(adapter,appId,options){cov_rk8of8zk9().f[0]++;cov_rk8of8zk9().s[3]++;this.options=options;cov_rk8of8zk9().s[4]++;this.appId=appId;cov_rk8of8zk9().s[5]++;this.adapter=adapter;}set adapter(adapter){cov_rk8of8zk9().f[1]++;cov_rk8of8zk9().s[6]++;this.validateAdapter(adapter);cov_rk8of8zk9().s[7]++;this[_adapter]=adapter;}get adapter(){cov_rk8of8zk9().f[2]++;cov_rk8of8zk9().s[8]++;return this[_adapter];}expectedAdapterType(){cov_rk8of8zk9().f[3]++;cov_rk8of8zk9().s[9]++;throw new Error('Subclasses should implement expectedAdapterType()');}validateAdapter(adapter){cov_rk8of8zk9().f[4]++;cov_rk8of8zk9().s[10]++;AdaptableController.validateAdapter(adapter,this);}static validateAdapter(adapter,self,ExpectedType){cov_rk8of8zk9().f[5]++;cov_rk8of8zk9().s[11]++;if(!adapter){cov_rk8of8zk9().b[0][0]++;cov_rk8of8zk9().s[12]++;throw new Error(this.constructor.name+' requires an adapter');}else{cov_rk8of8zk9().b[0][1]++;}const Type=(cov_rk8of8zk9().s[13]++,(cov_rk8of8zk9().b[1][0]++,ExpectedType)||(cov_rk8of8zk9().b[1][1]++,self.expectedAdapterType()));// Allow skipping for testing
cov_rk8of8zk9().s[14]++;if(!Type){cov_rk8of8zk9().b[2][0]++;cov_rk8of8zk9().s[15]++;return;}else{cov_rk8of8zk9().b[2][1]++;}// Makes sure the prototype matches
const mismatches=(cov_rk8of8zk9().s[16]++,Object.getOwnPropertyNames(Type.prototype).reduce((obj,key)=>{cov_rk8of8zk9().f[6]++;const adapterType=(cov_rk8of8zk9().s[17]++,typeof adapter[key]);const expectedType=(cov_rk8of8zk9().s[18]++,typeof Type.prototype[key]);cov_rk8of8zk9().s[19]++;if(adapterType!==expectedType){cov_rk8of8zk9().b[3][0]++;cov_rk8of8zk9().s[20]++;obj[key]={expected:expectedType,actual:adapterType};}else{cov_rk8of8zk9().b[3][1]++;}cov_rk8of8zk9().s[21]++;return obj;},{}));cov_rk8of8zk9().s[22]++;if(Object.keys(mismatches).length>0){cov_rk8of8zk9().b[4][0]++;cov_rk8of8zk9().s[23]++;throw new Error("Adapter prototype don't match expected prototype",adapter,mismatches);}else{cov_rk8of8zk9().b[4][1]++;}}}cov_rk8of8zk9().s[24]++;exports.AdaptableController=AdaptableController;var _default=(cov_rk8of8zk9().s[25]++,AdaptableController);cov_rk8of8zk9().s[26]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db250cm9sbGVycy9BZGFwdGFibGVDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIl9hZGFwdGVyIiwiU3ltYm9sIiwiQWRhcHRhYmxlQ29udHJvbGxlciIsImNvbnN0cnVjdG9yIiwiYWRhcHRlciIsImFwcElkIiwib3B0aW9ucyIsInZhbGlkYXRlQWRhcHRlciIsImV4cGVjdGVkQWRhcHRlclR5cGUiLCJFcnJvciIsInNlbGYiLCJFeHBlY3RlZFR5cGUiLCJuYW1lIiwiVHlwZSIsIm1pc21hdGNoZXMiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwicHJvdG90eXBlIiwicmVkdWNlIiwib2JqIiwia2V5IiwiYWRhcHRlclR5cGUiLCJleHBlY3RlZFR5cGUiLCJleHBlY3RlZCIsImFjdHVhbCIsImtleXMiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLElBQUlBLFFBQVEsR0FBR0MsTUFBTSxFQUFyQjs7QUFFTyxNQUFNQyxtQkFBTixDQUEwQjtBQUMvQkMsRUFBQUEsV0FBVyxDQUFDQyxPQUFELEVBQVVDLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQ25DLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtELEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNEOztBQUVVLE1BQVBBLE9BQU8sQ0FBQ0EsT0FBRCxFQUFVO0FBQ25CLFNBQUtHLGVBQUwsQ0FBcUJILE9BQXJCO0FBQ0EsU0FBS0osUUFBTCxJQUFpQkksT0FBakI7QUFDRDs7QUFFVSxNQUFQQSxPQUFPLEdBQUc7QUFDWixXQUFPLEtBQUtKLFFBQUwsQ0FBUDtBQUNEOztBQUVEUSxFQUFBQSxtQkFBbUIsR0FBRztBQUNwQixVQUFNLElBQUlDLEtBQUosQ0FBVSxtREFBVixDQUFOO0FBQ0Q7O0FBRURGLEVBQUFBLGVBQWUsQ0FBQ0gsT0FBRCxFQUFVO0FBQ3ZCRixJQUFBQSxtQkFBbUIsQ0FBQ0ssZUFBcEIsQ0FBb0NILE9BQXBDLEVBQTZDLElBQTdDO0FBQ0Q7O0FBRXFCLFNBQWZHLGVBQWUsQ0FBQ0gsT0FBRCxFQUFVTSxJQUFWLEVBQWdCQyxZQUFoQixFQUE4QjtBQUNsRCxRQUFJLENBQUNQLE9BQUwsRUFBYztBQUNaLFlBQU0sSUFBSUssS0FBSixDQUFVLEtBQUtOLFdBQUwsQ0FBaUJTLElBQWpCLEdBQXdCLHNCQUFsQyxDQUFOO0FBQ0Q7O0FBRUQsVUFBTUMsSUFBSSxHQUFHRixZQUFZLElBQUlELElBQUksQ0FBQ0YsbUJBQUwsRUFBN0IsQ0FMa0QsQ0FNbEQ7O0FBQ0EsUUFBSSxDQUFDSyxJQUFMLEVBQVc7QUFDVDtBQUNELEtBVGlELENBV2xEOzs7QUFDQSxVQUFNQyxVQUFVLEdBQUdDLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkJILElBQUksQ0FBQ0ksU0FBaEMsRUFBMkNDLE1BQTNDLENBQWtELENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ2pGLFlBQU1DLFdBQVcsR0FBRyxPQUFPakIsT0FBTyxDQUFDZ0IsR0FBRCxDQUFsQztBQUNBLFlBQU1FLFlBQVksR0FBRyxPQUFPVCxJQUFJLENBQUNJLFNBQUwsQ0FBZUcsR0FBZixDQUE1Qjs7QUFDQSxVQUFJQyxXQUFXLEtBQUtDLFlBQXBCLEVBQWtDO0FBQ2hDSCxRQUFBQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxHQUFXO0FBQ1RHLFVBQUFBLFFBQVEsRUFBRUQsWUFERDtBQUVURSxVQUFBQSxNQUFNLEVBQUVIO0FBRkMsU0FBWDtBQUlEOztBQUNELGFBQU9GLEdBQVA7QUFDRCxLQVZrQixFQVVoQixFQVZnQixDQUFuQjs7QUFZQSxRQUFJSixNQUFNLENBQUNVLElBQVAsQ0FBWVgsVUFBWixFQUF3QlksTUFBeEIsR0FBaUMsQ0FBckMsRUFBd0M7QUFDdEMsWUFBTSxJQUFJakIsS0FBSixDQUFVLGtEQUFWLEVBQThETCxPQUE5RCxFQUF1RVUsVUFBdkUsQ0FBTjtBQUNEO0FBQ0Y7O0FBbkQ4Qjs7O2VBc0RsQlosbUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWRhcHRhYmxlQ29udHJvbGxlci5qc1xuXG5BZGFwdGFibGVDb250cm9sbGVyIGlzIHRoZSBiYXNlIGNsYXNzIGZvciBhbGwgY29udHJvbGxlcnNcbnRoYXQgc3VwcG9ydCBhZGFwdGVyLFxuVGhlIHN1cGVyIGNsYXNzIHRha2VzIGNhcmUgb2YgY3JlYXRpbmcgdGhlIHJpZ2h0IGluc3RhbmNlIGZvciB0aGUgYWRhcHRlclxuYmFzZWQgb24gdGhlIHBhcmFtZXRlcnMgcGFzc2VkXG5cbiAqL1xuXG4vLyBfYWRhcHRlciBpcyBwcml2YXRlLCB1c2UgU3ltYm9sXG52YXIgX2FkYXB0ZXIgPSBTeW1ib2woKTtcblxuZXhwb3J0IGNsYXNzIEFkYXB0YWJsZUNvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyLCBhcHBJZCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5hcHBJZCA9IGFwcElkO1xuICAgIHRoaXMuYWRhcHRlciA9IGFkYXB0ZXI7XG4gIH1cblxuICBzZXQgYWRhcHRlcihhZGFwdGVyKSB7XG4gICAgdGhpcy52YWxpZGF0ZUFkYXB0ZXIoYWRhcHRlcik7XG4gICAgdGhpc1tfYWRhcHRlcl0gPSBhZGFwdGVyO1xuICB9XG5cbiAgZ2V0IGFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXNbX2FkYXB0ZXJdO1xuICB9XG5cbiAgZXhwZWN0ZWRBZGFwdGVyVHlwZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1YmNsYXNzZXMgc2hvdWxkIGltcGxlbWVudCBleHBlY3RlZEFkYXB0ZXJUeXBlKCknKTtcbiAgfVxuXG4gIHZhbGlkYXRlQWRhcHRlcihhZGFwdGVyKSB7XG4gICAgQWRhcHRhYmxlQ29udHJvbGxlci52YWxpZGF0ZUFkYXB0ZXIoYWRhcHRlciwgdGhpcyk7XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVBZGFwdGVyKGFkYXB0ZXIsIHNlbGYsIEV4cGVjdGVkVHlwZSkge1xuICAgIGlmICghYWRhcHRlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuY29uc3RydWN0b3IubmFtZSArICcgcmVxdWlyZXMgYW4gYWRhcHRlcicpO1xuICAgIH1cblxuICAgIGNvbnN0IFR5cGUgPSBFeHBlY3RlZFR5cGUgfHwgc2VsZi5leHBlY3RlZEFkYXB0ZXJUeXBlKCk7XG4gICAgLy8gQWxsb3cgc2tpcHBpbmcgZm9yIHRlc3RpbmdcbiAgICBpZiAoIVR5cGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBNYWtlcyBzdXJlIHRoZSBwcm90b3R5cGUgbWF0Y2hlc1xuICAgIGNvbnN0IG1pc21hdGNoZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhUeXBlLnByb3RvdHlwZSkucmVkdWNlKChvYmosIGtleSkgPT4ge1xuICAgICAgY29uc3QgYWRhcHRlclR5cGUgPSB0eXBlb2YgYWRhcHRlcltrZXldO1xuICAgICAgY29uc3QgZXhwZWN0ZWRUeXBlID0gdHlwZW9mIFR5cGUucHJvdG90eXBlW2tleV07XG4gICAgICBpZiAoYWRhcHRlclR5cGUgIT09IGV4cGVjdGVkVHlwZSkge1xuICAgICAgICBvYmpba2V5XSA9IHtcbiAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWRUeXBlLFxuICAgICAgICAgIGFjdHVhbDogYWRhcHRlclR5cGUsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH0sIHt9KTtcblxuICAgIGlmIChPYmplY3Qua2V5cyhtaXNtYXRjaGVzKS5sZW5ndGggPiAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBZGFwdGVyIHByb3RvdHlwZSBkb24ndCBtYXRjaCBleHBlY3RlZCBwcm90b3R5cGVcIiwgYWRhcHRlciwgbWlzbWF0Y2hlcyk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFkYXB0YWJsZUNvbnRyb2xsZXI7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db250cm9sbGVycy9BZGFwdGFibGVDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIl9hZGFwdGVyIiwiU3ltYm9sIiwiY29uc3RydWN0b3IiLCJhZGFwdGVyIiwiZXhwZWN0ZWRBZGFwdGVyVHlwZSIsInZhbGlkYXRlQWRhcHRlciIsIkFkYXB0YWJsZUNvbnRyb2xsZXIiLCJUeXBlIiwiRXhwZWN0ZWRUeXBlIiwic2VsZiIsIm1pc21hdGNoZXMiLCJhZGFwdGVyVHlwZSIsImV4cGVjdGVkVHlwZSIsIm9iaiIsImV4cGVjdGVkIiwiYWN0dWFsIiwiT2JqZWN0Il0sIm1hcHBpbmdzIjoia3hQQVFBO21QQVJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHLENBRUE7QUFDQSxHQUFJQSxDQUFBQSxRQUFRLHlCQUFHQyxNQUFmLEVBQVksQ0FBWixDQUVPLEtBQUEsQ0FBQSxtQkFBMEIsQ0FDL0JDLFdBQVcsQ0FBQSxPQUFBLENBQUEsS0FBQSxDQUFBLE9BQUEsQ0FBMEIsK0NBQ25DLEtBQUEsT0FBQSxDQUFBLE9BQUEsQ0FEbUMsdUJBRW5DLEtBQUEsS0FBQSxDQUFBLEtBQUEsQ0FGbUMsdUJBR25DLEtBQUEsT0FBQSxDQUFBLE9BQUEsQ0FDRCxDQUVVLEdBQVBDLENBQUFBLE9BQU8sQ0FBQSxPQUFBLENBQVUsK0NBQ25CLEtBQUEsZUFBQSxDQUFBLE9BQUEsRUFEbUIsdUJBRW5CLEtBQUEsUUFBQSxFQUFBLE9BQUEsQ0FDRCxDQUVVLEdBQVBBLENBQUFBLE9BQU8sRUFBRywrQ0FDWixNQUFPLE1BQVAsUUFBTyxDQUFQLENBQ0QsQ0FFREMsbUJBQW1CLEVBQUcsK0NBQ3BCLEtBQU0sSUFBQSxDQUFBLEtBQUEsQ0FBTixtREFBTSxDQUFOLENBQ0QsQ0FFREMsZUFBZSxDQUFBLE9BQUEsQ0FBVSxnREFDdkJDLG1CQUFtQixDQUFuQkEsZUFBQUEsQ0FBQUEsT0FBQUEsQ0FBQUEsSUFBQUEsRUFDRCxDQUVxQixNQUFmRCxDQUFBQSxlQUFlLENBQUEsT0FBQSxDQUFBLElBQUEsQ0FBQSxZQUFBLENBQThCLGdEQUNsRCxHQUFJLENBQUosT0FBQSxDQUFjLG1EQUNaLEtBQU0sSUFBQSxDQUFBLEtBQUEsQ0FBVSxLQUFBLFdBQUEsQ0FBQSxJQUFBLENBQWhCLHNCQUFNLENBQU4sQ0FDRCxDQUZELGdDQUlBLEtBQU1FLENBQUFBLElBQUksMEJBQUdDLDJCQUFBQSxZQUFZLDhCQUFJQyxJQUFJLENBTGlCLG1CQUtyQkEsRUFBSixDQUFmLENBQVYsQ0FDQTtBQU5rRCx3QkFPbEQsR0FBSSxDQUFKLElBQUEsQ0FBVyxtREFDVCxPQVJnRCxDQU9sRCxnQ0FJQTtBQUNBLEtBQU1DLENBQUFBLFVBQVUsMEJBQUcsTUFBTSxDQUFOLG1CQUFBLENBQTJCSCxJQUFJLENBQS9CLFNBQUEsRUFBQSxNQUFBLENBQWtELENBQUEsR0FBQSxDQUFBLEdBQUEsR0FBYyx3QkFDakYsS0FBTUksQ0FBQUEsV0FBVywwQkFBRyxNQUFPUixDQUFBQSxPQUFPLENBQWxDLEdBQWtDLENBQWpCLENBQWpCLENBQ0EsS0FBTVMsQ0FBQUEsWUFBWSwwQkFBRyxNQUFPTCxDQUFBQSxJQUFJLENBQUpBLFNBQUFBLENBQTVCLEdBQTRCQSxDQUFWLENBQWxCLENBRmlGLHdCQUdqRixHQUFJSSxXQUFXLEdBQWYsWUFBQSxDQUFrQyxtREFDaENFLEdBQUcsQ0FBSEEsR0FBRyxDQUFIQSxDQUFXLENBQ1RDLFFBQVEsQ0FEQyxZQUFBLENBRVRDLE1BQU0sQ0FBRUosV0FGQyxDQUFYRSxDQUlELENBTEQsZ0NBSGlGLHdCQVNqRixNQUFBLENBQUEsR0FBQSxDQVRpQixDQUFBLENBQW5CLEVBQW1CLENBQUgsQ0FBaEIsQ0Faa0Qsd0JBd0JsRCxHQUFJRyxNQUFNLENBQU5BLElBQUFBLENBQUFBLFVBQUFBLEVBQUFBLE1BQUFBLENBQUosQ0FBQSxDQUF3QyxtREFDdEMsS0FBTSxJQUFBLENBQUEsS0FBQSxDQUFBLGtEQUFBLENBQUEsT0FBQSxDQUFOLFVBQU0sQ0FBTixDQUNELENBRkQsZ0NBR0QsQ0FuRDhCLEMsOEdBc0RsQlYsbUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWRhcHRhYmxlQ29udHJvbGxlci5qc1xuXG5BZGFwdGFibGVDb250cm9sbGVyIGlzIHRoZSBiYXNlIGNsYXNzIGZvciBhbGwgY29udHJvbGxlcnNcbnRoYXQgc3VwcG9ydCBhZGFwdGVyLFxuVGhlIHN1cGVyIGNsYXNzIHRha2VzIGNhcmUgb2YgY3JlYXRpbmcgdGhlIHJpZ2h0IGluc3RhbmNlIGZvciB0aGUgYWRhcHRlclxuYmFzZWQgb24gdGhlIHBhcmFtZXRlcnMgcGFzc2VkXG5cbiAqL1xuXG4vLyBfYWRhcHRlciBpcyBwcml2YXRlLCB1c2UgU3ltYm9sXG52YXIgX2FkYXB0ZXIgPSBTeW1ib2woKTtcblxuZXhwb3J0IGNsYXNzIEFkYXB0YWJsZUNvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyLCBhcHBJZCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5hcHBJZCA9IGFwcElkO1xuICAgIHRoaXMuYWRhcHRlciA9IGFkYXB0ZXI7XG4gIH1cblxuICBzZXQgYWRhcHRlcihhZGFwdGVyKSB7XG4gICAgdGhpcy52YWxpZGF0ZUFkYXB0ZXIoYWRhcHRlcik7XG4gICAgdGhpc1tfYWRhcHRlcl0gPSBhZGFwdGVyO1xuICB9XG5cbiAgZ2V0IGFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXNbX2FkYXB0ZXJdO1xuICB9XG5cbiAgZXhwZWN0ZWRBZGFwdGVyVHlwZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1YmNsYXNzZXMgc2hvdWxkIGltcGxlbWVudCBleHBlY3RlZEFkYXB0ZXJUeXBlKCknKTtcbiAgfVxuXG4gIHZhbGlkYXRlQWRhcHRlcihhZGFwdGVyKSB7XG4gICAgQWRhcHRhYmxlQ29udHJvbGxlci52YWxpZGF0ZUFkYXB0ZXIoYWRhcHRlciwgdGhpcyk7XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVBZGFwdGVyKGFkYXB0ZXIsIHNlbGYsIEV4cGVjdGVkVHlwZSkge1xuICAgIGlmICghYWRhcHRlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuY29uc3RydWN0b3IubmFtZSArICcgcmVxdWlyZXMgYW4gYWRhcHRlcicpO1xuICAgIH1cblxuICAgIGNvbnN0IFR5cGUgPSBFeHBlY3RlZFR5cGUgfHwgc2VsZi5leHBlY3RlZEFkYXB0ZXJUeXBlKCk7XG4gICAgLy8gQWxsb3cgc2tpcHBpbmcgZm9yIHRlc3RpbmdcbiAgICBpZiAoIVR5cGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBNYWtlcyBzdXJlIHRoZSBwcm90b3R5cGUgbWF0Y2hlc1xuICAgIGNvbnN0IG1pc21hdGNoZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhUeXBlLnByb3RvdHlwZSkucmVkdWNlKChvYmosIGtleSkgPT4ge1xuICAgICAgY29uc3QgYWRhcHRlclR5cGUgPSB0eXBlb2YgYWRhcHRlcltrZXldO1xuICAgICAgY29uc3QgZXhwZWN0ZWRUeXBlID0gdHlwZW9mIFR5cGUucHJvdG90eXBlW2tleV07XG4gICAgICBpZiAoYWRhcHRlclR5cGUgIT09IGV4cGVjdGVkVHlwZSkge1xuICAgICAgICBvYmpba2V5XSA9IHtcbiAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWRUeXBlLFxuICAgICAgICAgIGFjdHVhbDogYWRhcHRlclR5cGUsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH0sIHt9KTtcblxuICAgIGlmIChPYmplY3Qua2V5cyhtaXNtYXRjaGVzKS5sZW5ndGggPiAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBZGFwdGVyIHByb3RvdHlwZSBkb24ndCBtYXRjaCBleHBlY3RlZCBwcm90b3R5cGVcIiwgYWRhcHRlciwgbWlzbWF0Y2hlcyk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFkYXB0YWJsZUNvbnRyb2xsZXI7XG4iXX0=