"use strict";function cov_1w246vk5b6(){var path="/parse-server/lib/Routers/PushRouter.js";var hash="d780b5834bd8e30d27bb758a20da5bc37b5d6906";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/PushRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:46}},"2":{start:{line:8,column:21},end:{line:8,column:72}},"3":{start:{line:10,column:17},end:{line:10,column:67}},"4":{start:{line:12,column:12},end:{line:12,column:33}},"5":{start:{line:14,column:49},end:{line:14,column:96}},"6":{start:{line:14,column:84},end:{line:14,column:96}},"7":{start:{line:14,column:121},end:{line:14,column:134}},"8":{start:{line:14,column:159},end:{line:14,column:172}},"9":{start:{line:14,column:174},end:{line:14,column:309}},"10":{start:{line:14,column:234},end:{line:14,column:292}},"11":{start:{line:16,column:53},end:{line:16,column:111}},"12":{start:{line:16,column:98},end:{line:16,column:109}},"13":{start:{line:16,column:112},end:{line:16,column:214}},"14":{start:{line:16,column:188},end:{line:16,column:212}},"15":{start:{line:16,column:227},end:{line:16,column:264}},"16":{start:{line:16,column:266},end:{line:16,column:321}},"17":{start:{line:16,column:297},end:{line:16,column:319}},"18":{start:{line:16,column:335},end:{line:16,column:337}},"19":{start:{line:16,column:367},end:{line:16,column:423}},"20":{start:{line:16,column:425},end:{line:16,column:726}},"21":{start:{line:16,column:448},end:{line:16,column:724}},"22":{start:{line:16,column:534},end:{line:16,column:606}},"23":{start:{line:16,column:608},end:{line:16,column:722}},"24":{start:{line:16,column:646},end:{line:16,column:687}},"25":{start:{line:16,column:697},end:{line:16,column:720}},"26":{start:{line:16,column:727},end:{line:16,column:748}},"27":{start:{line:16,column:749},end:{line:16,column:787}},"28":{start:{line:16,column:762},end:{line:16,column:785}},"29":{start:{line:16,column:788},end:{line:16,column:802}},"30":{start:{line:18,column:39},end:{line:18,column:93}},"31":{start:{line:22,column:4},end:{line:22,column:97}},"32":{start:{line:26,column:4},end:{line:28,column:5}},"33":{start:{line:27,column:6},end:{line:27,column:138}},"34":{start:{line:30,column:27},end:{line:30,column:52}},"35":{start:{line:32,column:4},end:{line:34,column:5}},"36":{start:{line:33,column:6},end:{line:33,column:102}},"37":{start:{line:36,column:18},end:{line:36,column:51}},"38":{start:{line:38,column:20},end:{line:40,column:6}},"39":{start:{line:39,column:6},end:{line:39,column:25}},"40":{start:{line:42,column:4},end:{line:54,column:7}},"41":{start:{line:43,column:6},end:{line:43,column:30}},"42":{start:{line:44,column:6},end:{line:51,column:9}},"43":{start:{line:53,column:6},end:{line:53,column:102}},"44":{start:{line:55,column:4},end:{line:55,column:19}},"45":{start:{line:65,column:17},end:{line:65,column:31}},"46":{start:{line:66,column:21},end:{line:66,column:54}},"47":{start:{line:67,column:24},end:{line:67,column:60}},"48":{start:{line:70,column:4},end:{line:82,column:5}},"49":{start:{line:71,column:6},end:{line:71,column:127}},"50":{start:{line:72,column:11},end:{line:82,column:5}},"51":{start:{line:73,column:6},end:{line:73,column:25}},"52":{start:{line:74,column:11},end:{line:82,column:5}},"53":{start:{line:75,column:6},end:{line:79,column:8}},"54":{start:{line:81,column:6},end:{line:81,column:137}},"55":{start:{line:84,column:4},end:{line:84,column:17}},"56":{start:{line:89,column:0},end:{line:89,column:32}},"57":{start:{line:90,column:15},end:{line:90,column:25}},"58":{start:{line:91,column:0},end:{line:91,column:27}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:14,column:9},end:{line:14,column:33}},loc:{start:{line:14,column:47},end:{line:14,column:311}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:209},end:{line:14,column:210}},loc:{start:{line:14,column:232},end:{line:14,column:294}},line:14},"2":{name:"_interopRequireWildcard",decl:{start:{line:16,column:9},end:{line:16,column:32}},loc:{start:{line:16,column:51},end:{line:16,column:804}},line:16},"3":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:21,column:2},end:{line:21,column:3}},loc:{start:{line:21,column:16},end:{line:23,column:3}},line:21},"5":{name:"(anonymous_5)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:25},end:{line:56,column:3}},line:25},"6":{name:"(anonymous_6)",decl:{start:{line:38,column:32},end:{line:38,column:33}},loc:{start:{line:38,column:44},end:{line:40,column:5}},line:38},"7":{name:"(anonymous_7)",decl:{start:{line:42,column:67},end:{line:42,column:68}},loc:{start:{line:42,column:79},end:{line:52,column:5}},line:42},"8":{name:"(anonymous_8)",decl:{start:{line:52,column:13},end:{line:52,column:14}},loc:{start:{line:52,column:20},end:{line:54,column:5}},line:52},"9":{name:"(anonymous_9)",decl:{start:{line:64,column:2},end:{line:64,column:3}},loc:{start:{line:64,column:32},end:{line:85,column:3}},line:64}},branchMap:{"0":{loc:{start:{line:14,column:49},end:{line:14,column:96}},type:"if",locations:[{start:{line:14,column:49},end:{line:14,column:96}},{start:{line:14,column:49},end:{line:14,column:96}}],line:14},"1":{loc:{start:{line:14,column:241},end:{line:14,column:291}},type:"cond-expr",locations:[{start:{line:14,column:255},end:{line:14,column:271}},{start:{line:14,column:274},end:{line:14,column:291}}],line:14},"2":{loc:{start:{line:16,column:53},end:{line:16,column:111}},type:"if",locations:[{start:{line:16,column:53},end:{line:16,column:111}},{start:{line:16,column:53},end:{line:16,column:111}}],line:16},"3":{loc:{start:{line:16,column:57},end:{line:16,column:94}},type:"binary-expr",locations:[{start:{line:16,column:57},end:{line:16,column:69}},{start:{line:16,column:73},end:{line:16,column:76}},{start:{line:16,column:80},end:{line:16,column:94}}],line:16},"4":{loc:{start:{line:16,column:112},end:{line:16,column:214}},type:"if",locations:[{start:{line:16,column:112},end:{line:16,column:214}},{start:{line:16,column:112},end:{line:16,column:214}}],line:16},"5":{loc:{start:{line:16,column:116},end:{line:16,column:184}},type:"binary-expr",locations:[{start:{line:16,column:116},end:{line:16,column:128}},{start:{line:16,column:132},end:{line:16,column:155}},{start:{line:16,column:159},end:{line:16,column:184}}],line:16},"6":{loc:{start:{line:16,column:266},end:{line:16,column:321}},type:"if",locations:[{start:{line:16,column:266},end:{line:16,column:321}},{start:{line:16,column:266},end:{line:16,column:321}}],line:16},"7":{loc:{start:{line:16,column:270},end:{line:16,column:293}},type:"binary-expr",locations:[{start:{line:16,column:270},end:{line:16,column:275}},{start:{line:16,column:279},end:{line:16,column:293}}],line:16},"8":{loc:{start:{line:16,column:367},end:{line:16,column:423}},type:"binary-expr",locations:[{start:{line:16,column:367},end:{line:16,column:388}},{start:{line:16,column:392},end:{line:16,column:423}}],line:16},"9":{loc:{start:{line:16,column:448},end:{line:16,column:724}},type:"if",locations:[{start:{line:16,column:448},end:{line:16,column:724}},{start:{line:16,column:448},end:{line:16,column:724}}],line:16},"10":{loc:{start:{line:16,column:452},end:{line:16,column:519}},type:"binary-expr",locations:[{start:{line:16,column:452},end:{line:16,column:469}},{start:{line:16,column:473},end:{line:16,column:519}}],line:16},"11":{loc:{start:{line:16,column:534},end:{line:16,column:606}},type:"cond-expr",locations:[{start:{line:16,column:558},end:{line:16,column:599}},{start:{line:16,column:602},end:{line:16,column:606}}],line:16},"12":{loc:{start:{line:16,column:608},end:{line:16,column:722}},type:"if",locations:[{start:{line:16,column:608},end:{line:16,column:722}},{start:{line:16,column:608},end:{line:16,column:722}}],line:16},"13":{loc:{start:{line:16,column:612},end:{line:16,column:642}},type:"binary-expr",locations:[{start:{line:16,column:612},end:{line:16,column:616}},{start:{line:16,column:621},end:{line:16,column:629}},{start:{line:16,column:633},end:{line:16,column:641}}],line:16},"14":{loc:{start:{line:16,column:749},end:{line:16,column:787}},type:"if",locations:[{start:{line:16,column:749},end:{line:16,column:787}},{start:{line:16,column:749},end:{line:16,column:787}}],line:16},"15":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"16":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"17":{loc:{start:{line:26,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:28,column:5}},{start:{line:26,column:4},end:{line:28,column:5}}],line:26},"18":{loc:{start:{line:32,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:34,column:5}},{start:{line:32,column:4},end:{line:34,column:5}}],line:32},"19":{loc:{start:{line:65,column:17},end:{line:65,column:31}},type:"binary-expr",locations:[{start:{line:65,column:17},end:{line:65,column:25}},{start:{line:65,column:29},end:{line:65,column:31}}],line:65},"20":{loc:{start:{line:70,column:4},end:{line:82,column:5}},type:"if",locations:[{start:{line:70,column:4},end:{line:82,column:5}},{start:{line:70,column:4},end:{line:82,column:5}}],line:70},"21":{loc:{start:{line:70,column:8},end:{line:70,column:31}},type:"binary-expr",locations:[{start:{line:70,column:8},end:{line:70,column:16}},{start:{line:70,column:20},end:{line:70,column:31}}],line:70},"22":{loc:{start:{line:72,column:11},end:{line:82,column:5}},type:"if",locations:[{start:{line:72,column:11},end:{line:82,column:5}},{start:{line:72,column:11},end:{line:82,column:5}}],line:72},"23":{loc:{start:{line:74,column:11},end:{line:82,column:5}},type:"if",locations:[{start:{line:74,column:11},end:{line:82,column:5}},{start:{line:74,column:11},end:{line:82,column:5}}],line:74}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/PushRouter.js"],names:["PushRouter","PromiseRouter","mountRoutes","route","middleware","promiseEnforceMasterKeyAccess","handlePOST","req","auth","isReadOnly","Parse","Error","OPERATION_FORBIDDEN","pushController","config","PUSH_MISCONFIGURED","where","getQueryCondition","resolve","promise","Promise","_resolve","pushStatusId","sendPush","body","objectId","headers","response","result","catch","err","loggerController","error","hasWhere","hasChannels","channels","$in"],mappings:";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEO,MAAMA,UAAN,SAAyBC,sBAAzB,CAAuC;AAC5CC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,CAAW,MAAX,EAAmB,OAAnB,EAA4BC,UAAU,CAACC,6BAAvC,EAAsEL,UAAU,CAACM,UAAjF;AACD;;AAEgB,SAAVA,UAAU,CAACC,GAAD,EAAM;AACrB,QAAIA,GAAG,CAACC,IAAJ,CAASC,UAAb,EAAyB;AACvB,YAAM,IAAIC,YAAMC,KAAV,CACJD,YAAMC,KAAN,CAAYC,mBADR,EAEJ,+DAFI,CAAN;AAID;;AACD,UAAMC,cAAc,GAAGN,GAAG,CAACO,MAAJ,CAAWD,cAAlC;;AACA,QAAI,CAACA,cAAL,EAAqB;AACnB,YAAM,IAAIH,YAAMC,KAAV,CAAgBD,YAAMC,KAAN,CAAYI,kBAA5B,EAAgD,4BAAhD,CAAN;AACD;;AAED,UAAMC,KAAK,GAAGhB,UAAU,CAACiB,iBAAX,CAA6BV,GAA7B,CAAd;AACA,QAAIW,OAAJ;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,QAAQ,IAAI;AACtCH,MAAAA,OAAO,GAAGG,QAAV;AACD,KAFe,CAAhB;AAGA,QAAIC,YAAJ;AACAT,IAAAA,cAAc,CACXU,QADH,CACYhB,GAAG,CAACiB,IADhB,EACsBR,KADtB,EAC6BT,GAAG,CAACO,MADjC,EACyCP,GAAG,CAACC,IAD7C,EACmDiB,QAAQ,IAAI;AAC3DH,MAAAA,YAAY,GAAGG,QAAf;AACAP,MAAAA,OAAO,CAAC;AACNQ,QAAAA,OAAO,EAAE;AACP,oCAA0BJ;AADnB,SADH;AAINK,QAAAA,QAAQ,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA;AAJJ,OAAD,CAAP;AAQD,KAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZvB,MAAAA,GAAG,CAACO,MAAJ,CAAWiB,gBAAX,CAA4BC,KAA5B,CACG,eAAcV,YAAa,4BAD9B,EAEEQ,GAFF;AAID,KAjBH;AAkBA,WAAOX,OAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AAC0B,SAAjBF,iBAAiB,CAACV,GAAD,EAAM;AAC5B,UAAMiB,IAAI,GAAGjB,GAAG,CAACiB,IAAJ,IAAY,EAAzB;AACA,UAAMS,QAAQ,GAAG,OAAOT,IAAI,CAACR,KAAZ,KAAsB,WAAvC;AACA,UAAMkB,WAAW,GAAG,OAAOV,IAAI,CAACW,QAAZ,KAAyB,WAA7C;AAEA,QAAInB,KAAJ;;AACA,QAAIiB,QAAQ,IAAIC,WAAhB,EAA6B;AAC3B,YAAM,IAAIxB,YAAMC,KAAV,CACJD,YAAMC,KAAN,CAAYI,kBADR,EAEJ,qDAFI,CAAN;AAID,KALD,MAKO,IAAIkB,QAAJ,EAAc;AACnBjB,MAAAA,KAAK,GAAGQ,IAAI,CAACR,KAAb;AACD,KAFM,MAEA,IAAIkB,WAAJ,EAAiB;AACtBlB,MAAAA,KAAK,GAAG;AACNmB,QAAAA,QAAQ,EAAE;AACRC,UAAAA,GAAG,EAAEZ,IAAI,CAACW;AADF;AADJ,OAAR;AAKD,KANM,MAMA;AACL,YAAM,IAAIzB,YAAMC,KAAV,CACJD,YAAMC,KAAN,CAAYI,kBADR,EAEJ,+DAFI,CAAN;AAID;;AACD,WAAOC,KAAP;AACD;;AA3E2C;;;eA8E/BhB,U",sourcesContent:["import PromiseRouter from '../PromiseRouter';\nimport * as middleware from '../middlewares';\nimport { Parse } from 'parse/node';\n\nexport class PushRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route('POST', '/push', middleware.promiseEnforceMasterKeyAccess, PushRouter.handlePOST);\n  }\n\n  static handlePOST(req) {\n    if (req.auth.isReadOnly) {\n      throw new Parse.Error(\n        Parse.Error.OPERATION_FORBIDDEN,\n        \"read-only masterKey isn't allowed to send push notifications.\"\n      );\n    }\n    const pushController = req.config.pushController;\n    if (!pushController) {\n      throw new Parse.Error(Parse.Error.PUSH_MISCONFIGURED, 'Push controller is not set');\n    }\n\n    const where = PushRouter.getQueryCondition(req);\n    let resolve;\n    const promise = new Promise(_resolve => {\n      resolve = _resolve;\n    });\n    let pushStatusId;\n    pushController\n      .sendPush(req.body, where, req.config, req.auth, objectId => {\n        pushStatusId = objectId;\n        resolve({\n          headers: {\n            'X-Parse-Push-Status-Id': pushStatusId,\n          },\n          response: {\n            result: true,\n          },\n        });\n      })\n      .catch(err => {\n        req.config.loggerController.error(\n          `_PushStatus ${pushStatusId}: error while sending push`,\n          err\n        );\n      });\n    return promise;\n  }\n\n  /**\n   * Get query condition from the request body.\n   * @param {Object} req A request object\n   * @returns {Object} The query condition, the where field in a query api call\n   */\n  static getQueryCondition(req) {\n    const body = req.body || {};\n    const hasWhere = typeof body.where !== 'undefined';\n    const hasChannels = typeof body.channels !== 'undefined';\n\n    let where;\n    if (hasWhere && hasChannels) {\n      throw new Parse.Error(\n        Parse.Error.PUSH_MISCONFIGURED,\n        'Channels and query can not be set at the same time.'\n      );\n    } else if (hasWhere) {\n      where = body.where;\n    } else if (hasChannels) {\n      where = {\n        channels: {\n          $in: body.channels,\n        },\n      };\n    } else {\n      throw new Parse.Error(\n        Parse.Error.PUSH_MISCONFIGURED,\n        'Sending a push requires either \"channels\" or a \"where\" query.'\n      );\n    }\n    return where;\n  }\n}\n\nexport default PushRouter;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d780b5834bd8e30d27bb758a20da5bc37b5d6906"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1w246vk5b6=function(){return actualCoverage;};}return actualCoverage;}cov_1w246vk5b6();cov_1w246vk5b6().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1w246vk5b6().s[1]++;exports.default=exports.PushRouter=void 0;var _PromiseRouter=(cov_1w246vk5b6().s[2]++,_interopRequireDefault(require("../PromiseRouter")));var middleware=(cov_1w246vk5b6().s[3]++,_interopRequireWildcard(require("../middlewares")));var _node=(cov_1w246vk5b6().s[4]++,require("parse/node"));function _getRequireWildcardCache(nodeInterop){cov_1w246vk5b6().f[0]++;cov_1w246vk5b6().s[5]++;if(typeof WeakMap!=="function"){cov_1w246vk5b6().b[0][0]++;cov_1w246vk5b6().s[6]++;return null;}else{cov_1w246vk5b6().b[0][1]++;}var cacheBabelInterop=(cov_1w246vk5b6().s[7]++,new WeakMap());var cacheNodeInterop=(cov_1w246vk5b6().s[8]++,new WeakMap());cov_1w246vk5b6().s[9]++;return(_getRequireWildcardCache=function(nodeInterop){cov_1w246vk5b6().f[1]++;cov_1w246vk5b6().s[10]++;return nodeInterop?(cov_1w246vk5b6().b[1][0]++,cacheNodeInterop):(cov_1w246vk5b6().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_1w246vk5b6().f[2]++;cov_1w246vk5b6().s[11]++;if((cov_1w246vk5b6().b[3][0]++,!nodeInterop)&&(cov_1w246vk5b6().b[3][1]++,obj)&&(cov_1w246vk5b6().b[3][2]++,obj.__esModule)){cov_1w246vk5b6().b[2][0]++;cov_1w246vk5b6().s[12]++;return obj;}else{cov_1w246vk5b6().b[2][1]++;}cov_1w246vk5b6().s[13]++;if((cov_1w246vk5b6().b[5][0]++,obj===null)||(cov_1w246vk5b6().b[5][1]++,typeof obj!=="object")&&(cov_1w246vk5b6().b[5][2]++,typeof obj!=="function")){cov_1w246vk5b6().b[4][0]++;cov_1w246vk5b6().s[14]++;return{default:obj};}else{cov_1w246vk5b6().b[4][1]++;}var cache=(cov_1w246vk5b6().s[15]++,_getRequireWildcardCache(nodeInterop));cov_1w246vk5b6().s[16]++;if((cov_1w246vk5b6().b[7][0]++,cache)&&(cov_1w246vk5b6().b[7][1]++,cache.has(obj))){cov_1w246vk5b6().b[6][0]++;cov_1w246vk5b6().s[17]++;return cache.get(obj);}else{cov_1w246vk5b6().b[6][1]++;}var newObj=(cov_1w246vk5b6().s[18]++,{});var hasPropertyDescriptor=(cov_1w246vk5b6().s[19]++,(cov_1w246vk5b6().b[8][0]++,Object.defineProperty)&&(cov_1w246vk5b6().b[8][1]++,Object.getOwnPropertyDescriptor));cov_1w246vk5b6().s[20]++;for(var key in obj){cov_1w246vk5b6().s[21]++;if((cov_1w246vk5b6().b[10][0]++,key!=="default")&&(cov_1w246vk5b6().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_1w246vk5b6().b[9][0]++;var desc=(cov_1w246vk5b6().s[22]++,hasPropertyDescriptor?(cov_1w246vk5b6().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_1w246vk5b6().b[11][1]++,null));cov_1w246vk5b6().s[23]++;if((cov_1w246vk5b6().b[13][0]++,desc)&&((cov_1w246vk5b6().b[13][1]++,desc.get)||(cov_1w246vk5b6().b[13][2]++,desc.set))){cov_1w246vk5b6().b[12][0]++;cov_1w246vk5b6().s[24]++;Object.defineProperty(newObj,key,desc);}else{cov_1w246vk5b6().b[12][1]++;cov_1w246vk5b6().s[25]++;newObj[key]=obj[key];}}else{cov_1w246vk5b6().b[9][1]++;}}cov_1w246vk5b6().s[26]++;newObj.default=obj;cov_1w246vk5b6().s[27]++;if(cache){cov_1w246vk5b6().b[14][0]++;cov_1w246vk5b6().s[28]++;cache.set(obj,newObj);}else{cov_1w246vk5b6().b[14][1]++;}cov_1w246vk5b6().s[29]++;return newObj;}function _interopRequireDefault(obj){cov_1w246vk5b6().f[3]++;cov_1w246vk5b6().s[30]++;return(cov_1w246vk5b6().b[16][0]++,obj)&&(cov_1w246vk5b6().b[16][1]++,obj.__esModule)?(cov_1w246vk5b6().b[15][0]++,obj):(cov_1w246vk5b6().b[15][1]++,{default:obj});}class PushRouter extends(_PromiseRouter.default){mountRoutes(){cov_1w246vk5b6().f[4]++;cov_1w246vk5b6().s[31]++;this.route('POST','/push',middleware.promiseEnforceMasterKeyAccess,PushRouter.handlePOST);}static handlePOST(req){cov_1w246vk5b6().f[5]++;cov_1w246vk5b6().s[32]++;if(req.auth.isReadOnly){cov_1w246vk5b6().b[17][0]++;cov_1w246vk5b6().s[33]++;throw new _node.Parse.Error(_node.Parse.Error.OPERATION_FORBIDDEN,"read-only masterKey isn't allowed to send push notifications.");}else{cov_1w246vk5b6().b[17][1]++;}const pushController=(cov_1w246vk5b6().s[34]++,req.config.pushController);cov_1w246vk5b6().s[35]++;if(!pushController){cov_1w246vk5b6().b[18][0]++;cov_1w246vk5b6().s[36]++;throw new _node.Parse.Error(_node.Parse.Error.PUSH_MISCONFIGURED,'Push controller is not set');}else{cov_1w246vk5b6().b[18][1]++;}const where=(cov_1w246vk5b6().s[37]++,PushRouter.getQueryCondition(req));let resolve;const promise=(cov_1w246vk5b6().s[38]++,new Promise(_resolve=>{cov_1w246vk5b6().f[6]++;cov_1w246vk5b6().s[39]++;resolve=_resolve;}));let pushStatusId;cov_1w246vk5b6().s[40]++;pushController.sendPush(req.body,where,req.config,req.auth,objectId=>{cov_1w246vk5b6().f[7]++;cov_1w246vk5b6().s[41]++;pushStatusId=objectId;cov_1w246vk5b6().s[42]++;resolve({headers:{'X-Parse-Push-Status-Id':pushStatusId},response:{result:true}});}).catch(err=>{cov_1w246vk5b6().f[8]++;cov_1w246vk5b6().s[43]++;req.config.loggerController.error(`_PushStatus ${pushStatusId}: error while sending push`,err);});cov_1w246vk5b6().s[44]++;return promise;}/**
   * Get query condition from the request body.
   * @param {Object} req A request object
   * @returns {Object} The query condition, the where field in a query api call
   */static getQueryCondition(req){cov_1w246vk5b6().f[9]++;const body=(cov_1w246vk5b6().s[45]++,(cov_1w246vk5b6().b[19][0]++,req.body)||(cov_1w246vk5b6().b[19][1]++,{}));const hasWhere=(cov_1w246vk5b6().s[46]++,typeof body.where!=='undefined');const hasChannels=(cov_1w246vk5b6().s[47]++,typeof body.channels!=='undefined');let where;cov_1w246vk5b6().s[48]++;if((cov_1w246vk5b6().b[21][0]++,hasWhere)&&(cov_1w246vk5b6().b[21][1]++,hasChannels)){cov_1w246vk5b6().b[20][0]++;cov_1w246vk5b6().s[49]++;throw new _node.Parse.Error(_node.Parse.Error.PUSH_MISCONFIGURED,'Channels and query can not be set at the same time.');}else{cov_1w246vk5b6().b[20][1]++;cov_1w246vk5b6().s[50]++;if(hasWhere){cov_1w246vk5b6().b[22][0]++;cov_1w246vk5b6().s[51]++;where=body.where;}else{cov_1w246vk5b6().b[22][1]++;cov_1w246vk5b6().s[52]++;if(hasChannels){cov_1w246vk5b6().b[23][0]++;cov_1w246vk5b6().s[53]++;where={channels:{$in:body.channels}};}else{cov_1w246vk5b6().b[23][1]++;cov_1w246vk5b6().s[54]++;throw new _node.Parse.Error(_node.Parse.Error.PUSH_MISCONFIGURED,'Sending a push requires either "channels" or a "where" query.');}}}cov_1w246vk5b6().s[55]++;return where;}}cov_1w246vk5b6().s[56]++;exports.PushRouter=PushRouter;var _default=(cov_1w246vk5b6().s[57]++,PushRouter);cov_1w246vk5b6().s[58]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Sb3V0ZXJzL1B1c2hSb3V0ZXIuanMiXSwibmFtZXMiOlsiUHVzaFJvdXRlciIsIlByb21pc2VSb3V0ZXIiLCJtb3VudFJvdXRlcyIsInJvdXRlIiwibWlkZGxld2FyZSIsInByb21pc2VFbmZvcmNlTWFzdGVyS2V5QWNjZXNzIiwiaGFuZGxlUE9TVCIsInJlcSIsImF1dGgiLCJpc1JlYWRPbmx5IiwiUGFyc2UiLCJFcnJvciIsIk9QRVJBVElPTl9GT1JCSURERU4iLCJwdXNoQ29udHJvbGxlciIsImNvbmZpZyIsIlBVU0hfTUlTQ09ORklHVVJFRCIsIndoZXJlIiwiZ2V0UXVlcnlDb25kaXRpb24iLCJyZXNvbHZlIiwicHJvbWlzZSIsIlByb21pc2UiLCJfcmVzb2x2ZSIsInB1c2hTdGF0dXNJZCIsInNlbmRQdXNoIiwiYm9keSIsIm9iamVjdElkIiwiaGVhZGVycyIsInJlc3BvbnNlIiwicmVzdWx0IiwiY2F0Y2giLCJlcnIiLCJsb2dnZXJDb250cm9sbGVyIiwiZXJyb3IiLCJoYXNXaGVyZSIsImhhc0NoYW5uZWxzIiwiY2hhbm5lbHMiLCIkaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFTyxNQUFNQSxVQUFOLFNBQXlCQyxzQkFBekIsQ0FBdUM7QUFDNUNDLEVBQUFBLFdBQVcsR0FBRztBQUNaLFNBQUtDLEtBQUwsQ0FBVyxNQUFYLEVBQW1CLE9BQW5CLEVBQTRCQyxVQUFVLENBQUNDLDZCQUF2QyxFQUFzRUwsVUFBVSxDQUFDTSxVQUFqRjtBQUNEOztBQUVnQixTQUFWQSxVQUFVLENBQUNDLEdBQUQsRUFBTTtBQUNyQixRQUFJQSxHQUFHLENBQUNDLElBQUosQ0FBU0MsVUFBYixFQUF5QjtBQUN2QixZQUFNLElBQUlDLFlBQU1DLEtBQVYsQ0FDSkQsWUFBTUMsS0FBTixDQUFZQyxtQkFEUixFQUVKLCtEQUZJLENBQU47QUFJRDs7QUFDRCxVQUFNQyxjQUFjLEdBQUdOLEdBQUcsQ0FBQ08sTUFBSixDQUFXRCxjQUFsQzs7QUFDQSxRQUFJLENBQUNBLGNBQUwsRUFBcUI7QUFDbkIsWUFBTSxJQUFJSCxZQUFNQyxLQUFWLENBQWdCRCxZQUFNQyxLQUFOLENBQVlJLGtCQUE1QixFQUFnRCw0QkFBaEQsQ0FBTjtBQUNEOztBQUVELFVBQU1DLEtBQUssR0FBR2hCLFVBQVUsQ0FBQ2lCLGlCQUFYLENBQTZCVixHQUE3QixDQUFkO0FBQ0EsUUFBSVcsT0FBSjtBQUNBLFVBQU1DLE9BQU8sR0FBRyxJQUFJQyxPQUFKLENBQVlDLFFBQVEsSUFBSTtBQUN0Q0gsTUFBQUEsT0FBTyxHQUFHRyxRQUFWO0FBQ0QsS0FGZSxDQUFoQjtBQUdBLFFBQUlDLFlBQUo7QUFDQVQsSUFBQUEsY0FBYyxDQUNYVSxRQURILENBQ1loQixHQUFHLENBQUNpQixJQURoQixFQUNzQlIsS0FEdEIsRUFDNkJULEdBQUcsQ0FBQ08sTUFEakMsRUFDeUNQLEdBQUcsQ0FBQ0MsSUFEN0MsRUFDbURpQixRQUFRLElBQUk7QUFDM0RILE1BQUFBLFlBQVksR0FBR0csUUFBZjtBQUNBUCxNQUFBQSxPQUFPLENBQUM7QUFDTlEsUUFBQUEsT0FBTyxFQUFFO0FBQ1Asb0NBQTBCSjtBQURuQixTQURIO0FBSU5LLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxNQUFNLEVBQUU7QUFEQTtBQUpKLE9BQUQsQ0FBUDtBQVFELEtBWEgsRUFZR0MsS0FaSCxDQVlTQyxHQUFHLElBQUk7QUFDWnZCLE1BQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXaUIsZ0JBQVgsQ0FBNEJDLEtBQTVCLENBQ0csZUFBY1YsWUFBYSw0QkFEOUIsRUFFRVEsR0FGRjtBQUlELEtBakJIO0FBa0JBLFdBQU9YLE9BQVA7QUFDRDtBQUVEO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7OztBQUMwQixTQUFqQkYsaUJBQWlCLENBQUNWLEdBQUQsRUFBTTtBQUM1QixVQUFNaUIsSUFBSSxHQUFHakIsR0FBRyxDQUFDaUIsSUFBSixJQUFZLEVBQXpCO0FBQ0EsVUFBTVMsUUFBUSxHQUFHLE9BQU9ULElBQUksQ0FBQ1IsS0FBWixLQUFzQixXQUF2QztBQUNBLFVBQU1rQixXQUFXLEdBQUcsT0FBT1YsSUFBSSxDQUFDVyxRQUFaLEtBQXlCLFdBQTdDO0FBRUEsUUFBSW5CLEtBQUo7O0FBQ0EsUUFBSWlCLFFBQVEsSUFBSUMsV0FBaEIsRUFBNkI7QUFDM0IsWUFBTSxJQUFJeEIsWUFBTUMsS0FBVixDQUNKRCxZQUFNQyxLQUFOLENBQVlJLGtCQURSLEVBRUoscURBRkksQ0FBTjtBQUlELEtBTEQsTUFLTyxJQUFJa0IsUUFBSixFQUFjO0FBQ25CakIsTUFBQUEsS0FBSyxHQUFHUSxJQUFJLENBQUNSLEtBQWI7QUFDRCxLQUZNLE1BRUEsSUFBSWtCLFdBQUosRUFBaUI7QUFDdEJsQixNQUFBQSxLQUFLLEdBQUc7QUFDTm1CLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxHQUFHLEVBQUVaLElBQUksQ0FBQ1c7QUFERjtBQURKLE9BQVI7QUFLRCxLQU5NLE1BTUE7QUFDTCxZQUFNLElBQUl6QixZQUFNQyxLQUFWLENBQ0pELFlBQU1DLEtBQU4sQ0FBWUksa0JBRFIsRUFFSiwrREFGSSxDQUFOO0FBSUQ7O0FBQ0QsV0FBT0MsS0FBUDtBQUNEOztBQTNFMkM7OztlQThFL0JoQixVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb21pc2VSb3V0ZXIgZnJvbSAnLi4vUHJvbWlzZVJvdXRlcic7XG5pbXBvcnQgKiBhcyBtaWRkbGV3YXJlIGZyb20gJy4uL21pZGRsZXdhcmVzJztcbmltcG9ydCB7IFBhcnNlIH0gZnJvbSAncGFyc2Uvbm9kZSc7XG5cbmV4cG9ydCBjbGFzcyBQdXNoUm91dGVyIGV4dGVuZHMgUHJvbWlzZVJvdXRlciB7XG4gIG1vdW50Um91dGVzKCkge1xuICAgIHRoaXMucm91dGUoJ1BPU1QnLCAnL3B1c2gnLCBtaWRkbGV3YXJlLnByb21pc2VFbmZvcmNlTWFzdGVyS2V5QWNjZXNzLCBQdXNoUm91dGVyLmhhbmRsZVBPU1QpO1xuICB9XG5cbiAgc3RhdGljIGhhbmRsZVBPU1QocmVxKSB7XG4gICAgaWYgKHJlcS5hdXRoLmlzUmVhZE9ubHkpIHtcbiAgICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihcbiAgICAgICAgUGFyc2UuRXJyb3IuT1BFUkFUSU9OX0ZPUkJJRERFTixcbiAgICAgICAgXCJyZWFkLW9ubHkgbWFzdGVyS2V5IGlzbid0IGFsbG93ZWQgdG8gc2VuZCBwdXNoIG5vdGlmaWNhdGlvbnMuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IHB1c2hDb250cm9sbGVyID0gcmVxLmNvbmZpZy5wdXNoQ29udHJvbGxlcjtcbiAgICBpZiAoIXB1c2hDb250cm9sbGVyKSB7XG4gICAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuUFVTSF9NSVNDT05GSUdVUkVELCAnUHVzaCBjb250cm9sbGVyIGlzIG5vdCBzZXQnKTtcbiAgICB9XG5cbiAgICBjb25zdCB3aGVyZSA9IFB1c2hSb3V0ZXIuZ2V0UXVlcnlDb25kaXRpb24ocmVxKTtcbiAgICBsZXQgcmVzb2x2ZTtcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoX3Jlc29sdmUgPT4ge1xuICAgICAgcmVzb2x2ZSA9IF9yZXNvbHZlO1xuICAgIH0pO1xuICAgIGxldCBwdXNoU3RhdHVzSWQ7XG4gICAgcHVzaENvbnRyb2xsZXJcbiAgICAgIC5zZW5kUHVzaChyZXEuYm9keSwgd2hlcmUsIHJlcS5jb25maWcsIHJlcS5hdXRoLCBvYmplY3RJZCA9PiB7XG4gICAgICAgIHB1c2hTdGF0dXNJZCA9IG9iamVjdElkO1xuICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnWC1QYXJzZS1QdXNoLVN0YXR1cy1JZCc6IHB1c2hTdGF0dXNJZCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlc3BvbnNlOiB7XG4gICAgICAgICAgICByZXN1bHQ6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIHJlcS5jb25maWcubG9nZ2VyQ29udHJvbGxlci5lcnJvcihcbiAgICAgICAgICBgX1B1c2hTdGF0dXMgJHtwdXNoU3RhdHVzSWR9OiBlcnJvciB3aGlsZSBzZW5kaW5nIHB1c2hgLFxuICAgICAgICAgIGVyclxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHF1ZXJ5IGNvbmRpdGlvbiBmcm9tIHRoZSByZXF1ZXN0IGJvZHkuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSByZXEgQSByZXF1ZXN0IG9iamVjdFxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgcXVlcnkgY29uZGl0aW9uLCB0aGUgd2hlcmUgZmllbGQgaW4gYSBxdWVyeSBhcGkgY2FsbFxuICAgKi9cbiAgc3RhdGljIGdldFF1ZXJ5Q29uZGl0aW9uKHJlcSkge1xuICAgIGNvbnN0IGJvZHkgPSByZXEuYm9keSB8fCB7fTtcbiAgICBjb25zdCBoYXNXaGVyZSA9IHR5cGVvZiBib2R5LndoZXJlICE9PSAndW5kZWZpbmVkJztcbiAgICBjb25zdCBoYXNDaGFubmVscyA9IHR5cGVvZiBib2R5LmNoYW5uZWxzICE9PSAndW5kZWZpbmVkJztcblxuICAgIGxldCB3aGVyZTtcbiAgICBpZiAoaGFzV2hlcmUgJiYgaGFzQ2hhbm5lbHMpIHtcbiAgICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihcbiAgICAgICAgUGFyc2UuRXJyb3IuUFVTSF9NSVNDT05GSUdVUkVELFxuICAgICAgICAnQ2hhbm5lbHMgYW5kIHF1ZXJ5IGNhbiBub3QgYmUgc2V0IGF0IHRoZSBzYW1lIHRpbWUuJ1xuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGhhc1doZXJlKSB7XG4gICAgICB3aGVyZSA9IGJvZHkud2hlcmU7XG4gICAgfSBlbHNlIGlmIChoYXNDaGFubmVscykge1xuICAgICAgd2hlcmUgPSB7XG4gICAgICAgIGNoYW5uZWxzOiB7XG4gICAgICAgICAgJGluOiBib2R5LmNoYW5uZWxzLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFxuICAgICAgICBQYXJzZS5FcnJvci5QVVNIX01JU0NPTkZJR1VSRUQsXG4gICAgICAgICdTZW5kaW5nIGEgcHVzaCByZXF1aXJlcyBlaXRoZXIgXCJjaGFubmVsc1wiIG9yIGEgXCJ3aGVyZVwiIHF1ZXJ5LidcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiB3aGVyZTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQdXNoUm91dGVyO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Sb3V0ZXJzL1B1c2hSb3V0ZXIuanMiXSwibmFtZXMiOlsiUHJvbWlzZVJvdXRlciIsIm1vdW50Um91dGVzIiwibWlkZGxld2FyZSIsIlB1c2hSb3V0ZXIiLCJoYW5kbGVQT1NUIiwicmVxIiwiUGFyc2UiLCJwdXNoQ29udHJvbGxlciIsIndoZXJlIiwicHJvbWlzZSIsIl9yZXNvbHZlIiwicmVzb2x2ZSIsIm9iamVjdElkIiwicHVzaFN0YXR1c0lkIiwiaGVhZGVycyIsInJlc3BvbnNlIiwicmVzdWx0IiwiZXJyIiwiZ2V0UXVlcnlDb25kaXRpb24iLCJib2R5IiwiaGFzV2hlcmUiLCJoYXNDaGFubmVscyIsImNoYW5uZWxzIiwiJGluIl0sIm1hcHBpbmdzIjoiOzhPQUFBLEdBQUEsQ0FBQSxjQUFBLDBCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLFVBQUEsMEJBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsS0FBQSwwQkFBQSxPQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsQyw4MkZBRU8sS0FBQSxDQUFBLFVBQUEsU0FBeUJBLGNBQUFBLENBQXpCLE9BQUEsQ0FBdUMsQ0FDNUNDLFdBQVcsRUFBRyxrREFDWixLQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsT0FBQSxDQUE0QkMsVUFBVSxDQUF0Qyw2QkFBQSxDQUFzRUMsVUFBVSxDQUFoRixVQUFBLEVBQ0QsQ0FFZ0IsTUFBVkMsQ0FBQUEsVUFBVSxDQUFBLEdBQUEsQ0FBTSxrREFDckIsR0FBSUMsR0FBRyxDQUFIQSxJQUFBQSxDQUFKLFVBQUEsQ0FBeUIsc0RBQ3ZCLEtBQU0sSUFBSUMsQ0FBQUEsS0FBQUEsQ0FBQUEsS0FBQUEsQ0FBSixLQUFBLENBQ0pBLEtBQUFBLENBQUFBLEtBQUFBLENBQUFBLEtBQUFBLENBREksbUJBQUEsQ0FBTiwrREFBTSxDQUFOLENB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ZXInO1xuaW1wb3J0ICogYXMgbWlkZGxld2FyZSBmcm9tICcuLi9taWRkbGV3YXJlcyc7XG5pbXBvcnQgeyBQYXJzZSB9IGZyb20gJ3BhcnNlL25vZGUnO1xuXG5leHBvcnQgY2xhc3MgUHVzaFJvdXRlciBleHRlbmRzIFByb21pc2VSb3V0ZXIge1xuICBtb3VudFJvdXRlcygpIHtcbiAgICB0aGlzLnJvdXRlKCdQT1NUJywgJy9wdXNoJywgbWlkZGxld2FyZS5wcm9taXNlRW5mb3JjZU1hc3RlcktleUFjY2VzcywgUHVzaFJvdXRlci5oYW5kbGVQT1NUKTtcbiAgfVxuXG4gIHN0YXRpYyBoYW5kbGVQT1NUKHJlcSkge1xuICAgIGlmIChyZXEuYXV0aC5pc1JlYWRPbmx5KSB7XG4gICAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoXG4gICAgICAgIFBhcnNlLkVycm9yLk9QRVJBVElPTl9GT1JCSURERU4sXG4gICAgICAgIFwicmVhZC1vbmx5IG1hc3RlcktleSBpc24ndCBhbGxvd2VkIHRvIHNlbmQgcHVzaCBub3RpZmljYXRpb25zLlwiXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCBwdXNoQ29udHJvbGxlciA9IHJlcS5jb25maWcucHVzaENvbnRyb2xsZXI7XG4gICAgaWYgKCFwdXNoQ29udHJvbGxlcikge1xuICAgICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLlBVU0hfTUlTQ09ORklHVVJFRCwgJ1B1c2ggY29udHJvbGxlciBpcyBub3Qgc2V0Jyk7XG4gICAgfVxuXG4gICAgY29uc3Qgd2hlcmUgPSBQdXNoUm91dGVyLmdldFF1ZXJ5Q29uZGl0aW9uKHJlcSk7XG4gICAgbGV0IHJlc29sdmU7XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKF9yZXNvbHZlID0+IHtcbiAgICAgIHJlc29sdmUgPSBfcmVzb2x2ZTtcbiAgICB9KTtcbiAgICBsZXQgcHVzaFN0YXR1c0lkO1xuICAgIHB1c2hDb250cm9sbGVyXG4gICAgICAuc2VuZFB1c2gocmVxLmJvZHksIHdoZXJlLCByZXEuY29uZmlnLCByZXEuYXV0aCwgb2JqZWN0SWQgPT4ge1xuICAgICAgICBwdXNoU3RhdHVzSWQgPSBvYmplY3RJZDtcbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ1gtUGFyc2UtUHVzaC1TdGF0dXMtSWQnOiBwdXNoU3RhdHVzSWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXNwb25zZToge1xuICAgICAgICAgICAgcmVzdWx0OiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICByZXEuY29uZmlnLmxvZ2dlckNvbnRyb2xsZXIuZXJyb3IoXG4gICAgICAgICAgYF9QdXNoU3RhdHVzICR7cHVzaFN0YXR1c0lkfTogZXJyb3Igd2hpbGUgc2VuZGluZyBwdXNoYCxcbiAgICAgICAgICBlcnJcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBxdWVyeSBjb25kaXRpb24gZnJvbSB0aGUgcmVxdWVzdCBib2R5LlxuICAgKiBAcGFyYW0ge09iamVjdH0gcmVxIEEgcmVxdWVzdCBvYmplY3RcbiAgICogQHJldHVybnMge09iamVjdH0gVGhlIHF1ZXJ5IGNvbmRpdGlvbiwgdGhlIHdoZXJlIGZpZWxkIGluIGEgcXVlcnkgYXBpIGNhbGxcbiAgICovXG4gIHN0YXRpYyBnZXRRdWVyeUNvbmRpdGlvbihyZXEpIHtcbiAgICBjb25zdCBib2R5ID0gcmVxLmJvZHkgfHwge307XG4gICAgY29uc3QgaGFzV2hlcmUgPSB0eXBlb2YgYm9keS53aGVyZSAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgY29uc3QgaGFzQ2hhbm5lbHMgPSB0eXBlb2YgYm9keS5jaGFubmVscyAhPT0gJ3VuZGVmaW5lZCc7XG5cbiAgICBsZXQgd2hlcmU7XG4gICAgaWYgKGhhc1doZXJlICYmIGhhc0NoYW5uZWxzKSB7XG4gICAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoXG4gICAgICAgIFBhcnNlLkVycm9yLlBVU0hfTUlTQ09ORklHVVJFRCxcbiAgICAgICAgJ0NoYW5uZWxzIGFuZCBxdWVyeSBjYW4gbm90IGJlIHNldCBhdCB0aGUgc2FtZSB0aW1lLidcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChoYXNXaGVyZSkge1xuICAgICAgd2hlcmUgPSBib2R5LndoZXJlO1xuICAgIH0gZWxzZSBpZiAoaGFzQ2hhbm5lbHMpIHtcbiAgICAgIHdoZXJlID0ge1xuICAgICAgICBjaGFubmVsczoge1xuICAgICAgICAgICRpbjogYm9keS5jaGFubmVscyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihcbiAgICAgICAgUGFyc2UuRXJyb3IuUFVTSF9NSVNDT05GSUdVUkVELFxuICAgICAgICAnU2VuZGluZyBhIHB1c2ggcmVxdWlyZXMgZWl0aGVyIFwiY2hhbm5lbHNcIiBvciBhIFwid2hlcmVcIiBxdWVyeS4nXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gd2hlcmU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHVzaFJvdXRlcjtcbiJdfQ==