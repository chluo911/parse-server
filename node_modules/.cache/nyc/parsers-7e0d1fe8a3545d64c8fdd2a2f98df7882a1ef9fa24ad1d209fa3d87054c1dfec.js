"use strict";function cov_2qroy7shfl(){var path="/parse-server/lib/Options/parsers.js";var hash="d5300570229bdfa820fa2a3f5f9df7205b945fbb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Options/parsers.js",statementMap:{"0":{start:{line:4,column:2},end:{line:12,column:4}},"1":{start:{line:5,column:19},end:{line:5,column:32}},"2":{start:{line:7,column:4},end:{line:9,column:5}},"3":{start:{line:8,column:6},end:{line:8,column:61}},"4":{start:{line:11,column:4},end:{line:11,column:18}},"5":{start:{line:16,column:2},end:{line:30,column:4}},"6":{start:{line:17,column:4},end:{line:19,column:5}},"7":{start:{line:18,column:6},end:{line:18,column:17}},"8":{start:{line:21,column:4},end:{line:23,column:5}},"9":{start:{line:22,column:6},end:{line:22,column:18}},"10":{start:{line:25,column:4},end:{line:27,column:5}},"11":{start:{line:26,column:6},end:{line:26,column:19}},"12":{start:{line:29,column:4},end:{line:29,column:34}},"13":{start:{line:34,column:2},end:{line:36,column:3}},"14":{start:{line:35,column:4},end:{line:35,column:15}},"15":{start:{line:38,column:2},end:{line:38,column:25}},"16":{start:{line:42,column:2},end:{line:48,column:3}},"17":{start:{line:43,column:4},end:{line:43,column:15}},"18":{start:{line:44,column:9},end:{line:48,column:3}},"19":{start:{line:45,column:4},end:{line:45,column:26}},"20":{start:{line:47,column:4},end:{line:47,column:77}},"21":{start:{line:52,column:2},end:{line:54,column:3}},"22":{start:{line:53,column:4},end:{line:53,column:15}},"23":{start:{line:56,column:2},end:{line:60,column:3}},"24":{start:{line:57,column:4},end:{line:57,column:27}},"25":{start:{line:62,column:2},end:{line:62,column:13}},"26":{start:{line:66,column:2},end:{line:68,column:3}},"27":{start:{line:67,column:4},end:{line:67,column:16}},"28":{start:{line:70,column:2},end:{line:70,column:15}},"29":{start:{line:74,column:2},end:{line:76,column:3}},"30":{start:{line:75,column:4},end:{line:75,column:16}},"31":{start:{line:78,column:2},end:{line:78,column:13}},"32":{start:{line:81,column:0},end:{line:89,column:2}}},fnMap:{"0":{name:"numberParser",decl:{start:{line:3,column:9},end:{line:3,column:21}},loc:{start:{line:3,column:27},end:{line:13,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:4,column:9},end:{line:4,column:10}},loc:{start:{line:4,column:24},end:{line:12,column:3}},line:4},"2":{name:"numberOrBoolParser",decl:{start:{line:15,column:9},end:{line:15,column:27}},loc:{start:{line:15,column:33},end:{line:31,column:1}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:16,column:9},end:{line:16,column:10}},loc:{start:{line:16,column:24},end:{line:30,column:3}},line:16},"4":{name:"objectParser",decl:{start:{line:33,column:9},end:{line:33,column:21}},loc:{start:{line:33,column:27},end:{line:39,column:1}},line:33},"5":{name:"arrayParser",decl:{start:{line:41,column:9},end:{line:41,column:20}},loc:{start:{line:41,column:26},end:{line:49,column:1}},line:41},"6":{name:"moduleOrObjectParser",decl:{start:{line:51,column:9},end:{line:51,column:29}},loc:{start:{line:51,column:35},end:{line:63,column:1}},line:51},"7":{name:"booleanParser",decl:{start:{line:65,column:9},end:{line:65,column:22}},loc:{start:{line:65,column:28},end:{line:71,column:1}},line:65},"8":{name:"nullParser",decl:{start:{line:73,column:9},end:{line:73,column:19}},loc:{start:{line:73,column:25},end:{line:79,column:1}},line:73}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:9,column:5}},type:"if",locations:[{start:{line:7,column:4},end:{line:9,column:5}},{start:{line:7,column:4},end:{line:9,column:5}}],line:7},"1":{loc:{start:{line:17,column:4},end:{line:19,column:5}},type:"if",locations:[{start:{line:17,column:4},end:{line:19,column:5}},{start:{line:17,column:4},end:{line:19,column:5}}],line:17},"2":{loc:{start:{line:21,column:4},end:{line:23,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:23,column:5}},{start:{line:21,column:4},end:{line:23,column:5}}],line:21},"3":{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:25,column:4},end:{line:27,column:5}}],line:25},"4":{loc:{start:{line:34,column:2},end:{line:36,column:3}},type:"if",locations:[{start:{line:34,column:2},end:{line:36,column:3}},{start:{line:34,column:2},end:{line:36,column:3}}],line:34},"5":{loc:{start:{line:42,column:2},end:{line:48,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:48,column:3}},{start:{line:42,column:2},end:{line:48,column:3}}],line:42},"6":{loc:{start:{line:44,column:9},end:{line:48,column:3}},type:"if",locations:[{start:{line:44,column:9},end:{line:48,column:3}},{start:{line:44,column:9},end:{line:48,column:3}}],line:44},"7":{loc:{start:{line:52,column:2},end:{line:54,column:3}},type:"if",locations:[{start:{line:52,column:2},end:{line:54,column:3}},{start:{line:52,column:2},end:{line:54,column:3}}],line:52},"8":{loc:{start:{line:66,column:2},end:{line:68,column:3}},type:"if",locations:[{start:{line:66,column:2},end:{line:68,column:3}},{start:{line:66,column:2},end:{line:68,column:3}}],line:66},"9":{loc:{start:{line:66,column:6},end:{line:66,column:48}},type:"binary-expr",locations:[{start:{line:66,column:6},end:{line:66,column:17}},{start:{line:66,column:21},end:{line:66,column:34}},{start:{line:66,column:38},end:{line:66,column:48}}],line:66},"10":{loc:{start:{line:74,column:2},end:{line:76,column:3}},type:"if",locations:[{start:{line:74,column:2},end:{line:76,column:3}},{start:{line:74,column:2},end:{line:76,column:3}}],line:74}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},inputSourceMap:{version:3,sources:["../../src/Options/parsers.js"],names:["numberParser","key","opt","intOpt","parseInt","Number","isInteger","Error","numberOrBoolParser","objectParser","JSON","parse","arrayParser","Array","isArray","split","moduleOrObjectParser","e","booleanParser","nullParser","module","exports"],mappings:";;AAAA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAO,UAAUC,GAAV,EAAe;AACpB,UAAMC,MAAM,GAAGC,QAAQ,CAACF,GAAD,CAAvB;;AACA,QAAI,CAACG,MAAM,CAACC,SAAP,CAAiBH,MAAjB,CAAL,EAA+B;AAC7B,YAAM,IAAII,KAAJ,CAAW,OAAMN,GAAI,sBAAqBC,GAAI,EAA9C,CAAN;AACD;;AACD,WAAOC,MAAP;AACD,GAND;AAOD;;AAED,SAASK,kBAAT,CAA4BP,GAA5B,EAAiC;AAC/B,SAAO,UAAUC,GAAV,EAAe;AACpB,QAAI,OAAOA,GAAP,KAAe,SAAnB,EAA8B;AAC5B,aAAOA,GAAP;AACD;;AACD,QAAIA,GAAG,KAAK,MAAZ,EAAoB;AAClB,aAAO,IAAP;AACD;;AACD,QAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnB,aAAO,KAAP;AACD;;AACD,WAAOF,YAAY,CAACC,GAAD,CAAZ,CAAkBC,GAAlB,CAAP;AACD,GAXD;AAYD;;AAED,SAASO,YAAT,CAAsBP,GAAtB,EAA2B;AACzB,MAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;AAC1B,WAAOA,GAAP;AACD;;AACD,SAAOQ,IAAI,CAACC,KAAL,CAAWT,GAAX,CAAP;AACD;;AAED,SAASU,WAAT,CAAqBV,GAArB,EAA0B;AACxB,MAAIW,KAAK,CAACC,OAAN,CAAcZ,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAP;AACD,GAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,WAAOA,GAAG,CAACa,KAAJ,CAAU,GAAV,CAAP;AACD,GAFM,MAEA;AACL,UAAM,IAAIR,KAAJ,CAAW,GAAEL,GAAI,iDAAjB,CAAN;AACD;AACF;;AAED,SAASc,oBAAT,CAA8Bd,GAA9B,EAAmC;AACjC,MAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;AAC1B,WAAOA,GAAP;AACD;;AACD,MAAI;AACF,WAAOQ,IAAI,CAACC,KAAL,CAAWT,GAAX,CAAP;AACD,GAFD,CAEE,OAAOe,CAAP,EAAU;AACV;AACD;;AACD,SAAOf,GAAP;AACD;;AAED,SAASgB,aAAT,CAAuBhB,GAAvB,EAA4B;AAC1B,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,MAAtB,IAAgCA,GAAG,IAAI,GAA3C,EAAgD;AAC9C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAASiB,UAAT,CAAoBjB,GAApB,EAAyB;AACvB,MAAIA,GAAG,IAAI,MAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AACD,SAAOA,GAAP;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,YADe;AAEfQ,EAAAA,kBAFe;AAGfW,EAAAA,UAHe;AAIfD,EAAAA,aAJe;AAKfF,EAAAA,oBALe;AAMfJ,EAAAA,WANe;AAOfH,EAAAA;AAPe,CAAjB",sourcesContent:["function numberParser(key) {\n  return function (opt) {\n    const intOpt = parseInt(opt);\n    if (!Number.isInteger(intOpt)) {\n      throw new Error(`Key ${key} has invalid value ${opt}`);\n    }\n    return intOpt;\n  };\n}\n\nfunction numberOrBoolParser(key) {\n  return function (opt) {\n    if (typeof opt === 'boolean') {\n      return opt;\n    }\n    if (opt === 'true') {\n      return true;\n    }\n    if (opt === 'false') {\n      return false;\n    }\n    return numberParser(key)(opt);\n  };\n}\n\nfunction objectParser(opt) {\n  if (typeof opt == 'object') {\n    return opt;\n  }\n  return JSON.parse(opt);\n}\n\nfunction arrayParser(opt) {\n  if (Array.isArray(opt)) {\n    return opt;\n  } else if (typeof opt === 'string') {\n    return opt.split(',');\n  } else {\n    throw new Error(`${opt} should be a comma separated string or an array`);\n  }\n}\n\nfunction moduleOrObjectParser(opt) {\n  if (typeof opt == 'object') {\n    return opt;\n  }\n  try {\n    return JSON.parse(opt);\n  } catch (e) {\n    /* */\n  }\n  return opt;\n}\n\nfunction booleanParser(opt) {\n  if (opt == true || opt == 'true' || opt == '1') {\n    return true;\n  }\n  return false;\n}\n\nfunction nullParser(opt) {\n  if (opt == 'null') {\n    return null;\n  }\n  return opt;\n}\n\nmodule.exports = {\n  numberParser,\n  numberOrBoolParser,\n  nullParser,\n  booleanParser,\n  moduleOrObjectParser,\n  arrayParser,\n  objectParser,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d5300570229bdfa820fa2a3f5f9df7205b945fbb"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2qroy7shfl=function(){return actualCoverage;};}return actualCoverage;}cov_2qroy7shfl();function numberParser(key){cov_2qroy7shfl().f[0]++;cov_2qroy7shfl().s[0]++;return function(opt){cov_2qroy7shfl().f[1]++;const intOpt=(cov_2qroy7shfl().s[1]++,parseInt(opt));cov_2qroy7shfl().s[2]++;if(!Number.isInteger(intOpt)){cov_2qroy7shfl().b[0][0]++;cov_2qroy7shfl().s[3]++;throw new Error(`Key ${key} has invalid value ${opt}`);}else{cov_2qroy7shfl().b[0][1]++;}cov_2qroy7shfl().s[4]++;return intOpt;};}function numberOrBoolParser(key){cov_2qroy7shfl().f[2]++;cov_2qroy7shfl().s[5]++;return function(opt){cov_2qroy7shfl().f[3]++;cov_2qroy7shfl().s[6]++;if(typeof opt==='boolean'){cov_2qroy7shfl().b[1][0]++;cov_2qroy7shfl().s[7]++;return opt;}else{cov_2qroy7shfl().b[1][1]++;}cov_2qroy7shfl().s[8]++;if(opt==='true'){cov_2qroy7shfl().b[2][0]++;cov_2qroy7shfl().s[9]++;return true;}else{cov_2qroy7shfl().b[2][1]++;}cov_2qroy7shfl().s[10]++;if(opt==='false'){cov_2qroy7shfl().b[3][0]++;cov_2qroy7shfl().s[11]++;return false;}else{cov_2qroy7shfl().b[3][1]++;}cov_2qroy7shfl().s[12]++;return numberParser(key)(opt);};}function objectParser(opt){cov_2qroy7shfl().f[4]++;cov_2qroy7shfl().s[13]++;if(typeof opt=='object'){cov_2qroy7shfl().b[4][0]++;cov_2qroy7shfl().s[14]++;return opt;}else{cov_2qroy7shfl().b[4][1]++;}cov_2qroy7shfl().s[15]++;return JSON.parse(opt);}function arrayParser(opt){cov_2qroy7shfl().f[5]++;cov_2qroy7shfl().s[16]++;if(Array.isArray(opt)){cov_2qroy7shfl().b[5][0]++;cov_2qroy7shfl().s[17]++;return opt;}else{cov_2qroy7shfl().b[5][1]++;cov_2qroy7shfl().s[18]++;if(typeof opt==='string'){cov_2qroy7shfl().b[6][0]++;cov_2qroy7shfl().s[19]++;return opt.split(',');}else{cov_2qroy7shfl().b[6][1]++;cov_2qroy7shfl().s[20]++;throw new Error(`${opt} should be a comma separated string or an array`);}}}function moduleOrObjectParser(opt){cov_2qroy7shfl().f[6]++;cov_2qroy7shfl().s[21]++;if(typeof opt=='object'){cov_2qroy7shfl().b[7][0]++;cov_2qroy7shfl().s[22]++;return opt;}else{cov_2qroy7shfl().b[7][1]++;}cov_2qroy7shfl().s[23]++;try{cov_2qroy7shfl().s[24]++;return JSON.parse(opt);}catch(e){/* */}cov_2qroy7shfl().s[25]++;return opt;}function booleanParser(opt){cov_2qroy7shfl().f[7]++;cov_2qroy7shfl().s[26]++;if((cov_2qroy7shfl().b[9][0]++,opt==true)||(cov_2qroy7shfl().b[9][1]++,opt=='true')||(cov_2qroy7shfl().b[9][2]++,opt=='1')){cov_2qroy7shfl().b[8][0]++;cov_2qroy7shfl().s[27]++;return true;}else{cov_2qroy7shfl().b[8][1]++;}cov_2qroy7shfl().s[28]++;return false;}function nullParser(opt){cov_2qroy7shfl().f[8]++;cov_2qroy7shfl().s[29]++;if(opt=='null'){cov_2qroy7shfl().b[10][0]++;cov_2qroy7shfl().s[30]++;return null;}else{cov_2qroy7shfl().b[10][1]++;}cov_2qroy7shfl().s[31]++;return opt;}cov_2qroy7shfl().s[32]++;module.exports={numberParser,numberOrBoolParser,nullParser,booleanParser,moduleOrObjectParser,arrayParser,objectParser};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PcHRpb25zL3BhcnNlcnMuanMiXSwibmFtZXMiOlsibnVtYmVyUGFyc2VyIiwia2V5Iiwib3B0IiwiaW50T3B0IiwicGFyc2VJbnQiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJFcnJvciIsIm51bWJlck9yQm9vbFBhcnNlciIsIm9iamVjdFBhcnNlciIsIkpTT04iLCJwYXJzZSIsImFycmF5UGFyc2VyIiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaXQiLCJtb2R1bGVPck9iamVjdFBhcnNlciIsImUiLCJib29sZWFuUGFyc2VyIiwibnVsbFBhcnNlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsWUFBVCxDQUFzQkMsR0FBdEIsRUFBMkI7QUFDekIsU0FBTyxVQUFVQyxHQUFWLEVBQWU7QUFDcEIsVUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNGLEdBQUQsQ0FBdkI7O0FBQ0EsUUFBSSxDQUFDRyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJILE1BQWpCLENBQUwsRUFBK0I7QUFDN0IsWUFBTSxJQUFJSSxLQUFKLENBQVcsT0FBTU4sR0FBSSxzQkFBcUJDLEdBQUksRUFBOUMsQ0FBTjtBQUNEOztBQUNELFdBQU9DLE1BQVA7QUFDRCxHQU5EO0FBT0Q7O0FBRUQsU0FBU0ssa0JBQVQsQ0FBNEJQLEdBQTVCLEVBQWlDO0FBQy9CLFNBQU8sVUFBVUMsR0FBVixFQUFlO0FBQ3BCLFFBQUksT0FBT0EsR0FBUCxLQUFlLFNBQW5CLEVBQThCO0FBQzVCLGFBQU9BLEdBQVA7QUFDRDs7QUFDRCxRQUFJQSxHQUFHLEtBQUssTUFBWixFQUFvQjtBQUNsQixhQUFPLElBQVA7QUFDRDs7QUFDRCxRQUFJQSxHQUFHLEtBQUssT0FBWixFQUFxQjtBQUNuQixhQUFPLEtBQVA7QUFDRDs7QUFDRCxXQUFPRixZQUFZLENBQUNDLEdBQUQsQ0FBWixDQUFrQkMsR0FBbEIsQ0FBUDtBQUNELEdBWEQ7QUFZRDs7QUFFRCxTQUFTTyxZQUFULENBQXNCUCxHQUF0QixFQUEyQjtBQUN6QixNQUFJLE9BQU9BLEdBQVAsSUFBYyxRQUFsQixFQUE0QjtBQUMxQixXQUFPQSxHQUFQO0FBQ0Q7O0FBQ0QsU0FBT1EsSUFBSSxDQUFDQyxLQUFMLENBQVdULEdBQVgsQ0FBUDtBQUNEOztBQUVELFNBQVNVLFdBQVQsQ0FBcUJWLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUlXLEtBQUssQ0FBQ0MsT0FBTixDQUFjWixHQUFkLENBQUosRUFBd0I7QUFDdEIsV0FBT0EsR0FBUDtBQUNELEdBRkQsTUFFTyxJQUFJLE9BQU9BLEdBQVAsS0FBZSxRQUFuQixFQUE2QjtBQUNsQyxXQUFPQSxHQUFHLENBQUNhLEtBQUosQ0FBVSxHQUFWLENBQVA7QUFDRCxHQUZNLE1BRUE7QUFDTCxVQUFNLElBQUlSLEtBQUosQ0FBVyxHQUFFTCxHQUFJLGlEQUFqQixDQUFOO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTYyxvQkFBVCxDQUE4QmQsR0FBOUIsRUFBbUM7QUFDakMsTUFBSSxPQUFPQSxHQUFQLElBQWMsUUFBbEIsRUFBNEI7QUFDMUIsV0FBT0EsR0FBUDtBQUNEOztBQUNELE1BQUk7QUFDRixXQUFPUSxJQUFJLENBQUNDLEtBQUwsQ0FBV1QsR0FBWCxDQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9lLENBQVAsRUFBVTtBQUNWO0FBQ0Q7O0FBQ0QsU0FBT2YsR0FBUDtBQUNEOztBQUVELFNBQVNnQixhQUFULENBQXVCaEIsR0FBdkIsRUFBNEI7QUFDMUIsTUFBSUEsR0FBRyxJQUFJLElBQVAsSUFBZUEsR0FBRyxJQUFJLE1BQXRCLElBQWdDQSxHQUFHLElBQUksR0FBM0MsRUFBZ0Q7QUFDOUMsV0FBTyxJQUFQO0FBQ0Q7O0FBQ0QsU0FBTyxLQUFQO0FBQ0Q7O0FBRUQsU0FBU2lCLFVBQVQsQ0FBb0JqQixHQUFwQixFQUF5QjtBQUN2QixNQUFJQSxHQUFHLElBQUksTUFBWCxFQUFtQjtBQUNqQixXQUFPLElBQVA7QUFDRDs7QUFDRCxTQUFPQSxHQUFQO0FBQ0Q7O0FBRURrQixNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZnJCLEVBQUFBLFlBRGU7QUFFZlEsRUFBQUEsa0JBRmU7QUFHZlcsRUFBQUEsVUFIZTtBQUlmRCxFQUFBQSxhQUplO0FBS2ZGLEVBQUFBLG9CQUxlO0FBTWZKLEVBQUFBLFdBTmU7QUFPZkgsRUFBQUE7QUFQZSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG51bWJlclBhcnNlcihrZXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvcHQpIHtcbiAgICBjb25zdCBpbnRPcHQgPSBwYXJzZUludChvcHQpO1xuICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihpbnRPcHQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEtleSAke2tleX0gaGFzIGludmFsaWQgdmFsdWUgJHtvcHR9YCk7XG4gICAgfVxuICAgIHJldHVybiBpbnRPcHQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG51bWJlck9yQm9vbFBhcnNlcihrZXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvcHQpIHtcbiAgICBpZiAodHlwZW9mIG9wdCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gb3B0O1xuICAgIH1cbiAgICBpZiAob3B0ID09PSAndHJ1ZScpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAob3B0ID09PSAnZmFsc2UnKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBudW1iZXJQYXJzZXIoa2V5KShvcHQpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvYmplY3RQYXJzZXIob3B0KSB7XG4gIGlmICh0eXBlb2Ygb3B0ID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG9wdDtcbiAgfVxuICByZXR1cm4gSlNPTi5wYXJzZShvcHQpO1xufVxuXG5mdW5jdGlvbiBhcnJheVBhcnNlcihvcHQpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkob3B0KSkge1xuICAgIHJldHVybiBvcHQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG9wdCA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gb3B0LnNwbGl0KCcsJyk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke29wdH0gc2hvdWxkIGJlIGEgY29tbWEgc2VwYXJhdGVkIHN0cmluZyBvciBhbiBhcnJheWApO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1vZHVsZU9yT2JqZWN0UGFyc2VyKG9wdCkge1xuICBpZiAodHlwZW9mIG9wdCA9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBvcHQ7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShvcHQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLyogKi9cbiAgfVxuICByZXR1cm4gb3B0O1xufVxuXG5mdW5jdGlvbiBib29sZWFuUGFyc2VyKG9wdCkge1xuICBpZiAob3B0ID09IHRydWUgfHwgb3B0ID09ICd0cnVlJyB8fCBvcHQgPT0gJzEnKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBudWxsUGFyc2VyKG9wdCkge1xuICBpZiAob3B0ID09ICdudWxsJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBvcHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBudW1iZXJQYXJzZXIsXG4gIG51bWJlck9yQm9vbFBhcnNlcixcbiAgbnVsbFBhcnNlcixcbiAgYm9vbGVhblBhcnNlcixcbiAgbW9kdWxlT3JPYmplY3RQYXJzZXIsXG4gIGFycmF5UGFyc2VyLFxuICBvYmplY3RQYXJzZXIsXG59O1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PcHRpb25zL3BhcnNlcnMuanMiXSwibmFtZXMiOlsiaW50T3B0IiwicGFyc2VJbnQiLCJOdW1iZXIiLCJrZXkiLCJvcHQiLCJudW1iZXJQYXJzZXIiLCJKU09OIiwiQXJyYXkiLCJtb2R1bGUiLCJvYmplY3RQYXJzZXIiXSwibWFwcGluZ3MiOiJvN1NBV1M7MkZBWFQsUUFBQSxDQUFBLFlBQUEsQ0FBQSxHQUFBLENBQTJCLGlEQUN6QixNQUFPLFVBQUEsR0FBQSxDQUFlLHlCQUNwQixLQUFNQSxDQUFBQSxNQUFNLDBCQUFHQyxRQUFRLENBQXZCLEdBQXVCLENBQVgsQ0FBWixDQURvQix3QkFFcEIsR0FBSSxDQUFDQyxNQUFNLENBQU5BLFNBQUFBLENBQUwsTUFBS0EsQ0FBTCxDQUErQixvREFDN0IsS0FBTSxJQUFBLENBQUEsS0FBQSxDQUFXLE9BQU1DLEdBQUksc0JBQXFCQyxHQUFoRCxFQUFNLENBQU4sQ0FDRCxDQUZELGlDQUZvQix3QkFLcEIsTUFBQSxDQUFBLE1BQUEsQ0FMRixDQUFBLENBT0QsQ0FFRCxRQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBLENBQWlDLGlEQUMvQixNQUFPLFVBQUEsR0FBQSxDQUFlLGlEQUNwQixHQUFJLE1BQUEsQ0FBQSxHQUFBLEdBQUosU0FBQSxDQUE4QixvREFDNUIsTUFBQSxDQUFBLEdBQUEsQ0FDRCxDQUZELGlDQURvQix3QkFJcEIsR0FBSUEsR0FBRyxHQUFQLE1BQUEsQ0FBb0Isb0RBQ2xCLE1BQUEsS0FBQSxDQUNELENBRkQsaUNBSm9CLHlCQU9wQixHQUFJQSxHQUFHLEdBQVAsT0FBQSxDQUFxQixxREFDbkIsTUFBQSxNQUFBLENBQ0QsQ0FGRCxpQ0FQb0IseUJBVXBCLE1BQU9DLENBQUFBLFlBQVksQ0FBWkEsR0FBWSxDQUFaQSxDQUFQLEdBQU9BLENBQVAsQ0FWRixDQUFBLENBWUQsQ0FFRCxRQUFBLENBQUEsWUFBQSxDQUFBLEdBQUEsQ0FBMkIsa0RBQ3pCLEdBQUksTUFBQSxDQUFBLEdBQUEsRUFBSixRQUFBLENBQTRCLHFEQUMxQixNQUFBLENBQUEsR0FBQSxDQUNELENBRkQsaUNBRHlCLHlCQUl6QixNQUFPQyxDQUFBQSxJQUFJLENBQUpBLEtBQUFBLENBQVAsR0FBT0EsQ0FBUCxDQUNELENBRUQsUUFBQSxDQUFBLFdBQUEsQ0FBQSxHQUFBLENBQTBCLGtEQUN4QixHQUFJQyxLQUFLLENBQUxBLE9BQUFBLENBQUosR0FBSUEsQ0FBSixDQUF3QixxREFDdEIsTUFBQSxDQUFBLEdBQUEsQ0FERixDQUFBLElBRU8sd0RBQUksTUFBQSxDQUFBLEdBQUEsR0FBSixRQUFBLENBQTZCLHFEQUNsQyxNQUFPSCxDQUFBQSxHQUFHLENBQUhBLEtBQUFBLENBQVAsR0FBT0EsQ0FBUCxDQURLLENBQUEsSUFFQSxxREFDTCxLQUFNLElBQUEsQ0FBQSxLQUFBLENBQVcsR0FBRUEsR0FBbkIsaURBQU0sQ0FBTixDQUNELEVBQ0YsQ0FFRCxRQUFBLENBQUEsb0JBQUEsQ0FBQSxHQUFBLENBQW1DLGtEQUNqQyxHQUFJLE1BQUEsQ0FBQSxHQUFBLEVBQUosUUFBQSxDQUE0QixxREFDMUIsTUFBQSxDQUFBLEdBQUEsQ0FDRCxDQUZELGlDQURpQyx5QkFJakMsR0FBSSwwQkFDRixNQUFPRSxDQUFBQSxJQUFJLENBQUpBLEtBQUFBLENBQVAsR0FBT0EsQ0FBUCxDQURGLENBRUUsTUFBQSxDQUFBLENBQVUsQ0FDVixLQUNELENBUmdDLHlCQVNqQyxNQUFBLENBQUEsR0FBQSxDQUNELENBRUQsUUFBQSxDQUFBLGFBQUEsQ0FBQSxHQUFBLENBQTRCLGtEQUMxQixHQUFJRiw0QkFBQUEsR0FBRyxFQUFIQSxJQUFBQSwrQkFBZUEsR0FBRyxFQUFsQkEsTUFBQUEsK0JBQWdDQSxHQUFHLEVBQXZDLEdBQUlBLENBQUosQ0FBZ0QscURBQzlDLE1BQUEsS0FBQSxDQUNELENBRkQsaUNBRDBCLHlCQUkxQixNQUFBLE1BQUEsQ0FDRCxDQUVELFFBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQSxDQUF5QixrREFDdkIsR0FBSUEsR0FBRyxFQUFQLE1BQUEsQ0FBbUIsc0RBQ2pCLE1BQUEsS0FBQSxDQUNELENBRkQsa0NBRHVCLHlCQUl2QixNQUFBLENBQUEsR0FBQSxDQUNELEMseUJBRURJLE1BQU0sQ0FBTkEsT0FBQUEsQ0FBaUIsQ0FBQSxZQUFBLENBQUEsa0JBQUEsQ0FBQSxVQUFBLENBQUEsYUFBQSxDQUFBLG9CQUFBLENBQUEsV0FBQSxDQU9mQyxZQVBlLENBQWpCRCxDIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbnVtYmVyUGFyc2VyKGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24gKG9wdCkge1xuICAgIGNvbnN0IGludE9wdCA9IHBhcnNlSW50KG9wdCk7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGludE9wdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5ICR7a2V5fSBoYXMgaW52YWxpZCB2YWx1ZSAke29wdH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGludE9wdDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbnVtYmVyT3JCb29sUGFyc2VyKGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24gKG9wdCkge1xuICAgIGlmICh0eXBlb2Ygb3B0ID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiBvcHQ7XG4gICAgfVxuICAgIGlmIChvcHQgPT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChvcHQgPT09ICdmYWxzZScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bWJlclBhcnNlcihrZXkpKG9wdCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9iamVjdFBhcnNlcihvcHQpIHtcbiAgaWYgKHR5cGVvZiBvcHQgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0O1xuICB9XG4gIHJldHVybiBKU09OLnBhcnNlKG9wdCk7XG59XG5cbmZ1bmN0aW9uIGFycmF5UGFyc2VyKG9wdCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShvcHQpKSB7XG4gICAgcmV0dXJuIG9wdDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBvcHQuc3BsaXQoJywnKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B0fSBzaG91bGQgYmUgYSBjb21tYSBzZXBhcmF0ZWQgc3RyaW5nIG9yIGFuIGFycmF5YCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbW9kdWxlT3JPYmplY3RQYXJzZXIob3B0KSB7XG4gIGlmICh0eXBlb2Ygb3B0ID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG9wdDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKG9wdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvKiAqL1xuICB9XG4gIHJldHVybiBvcHQ7XG59XG5cbmZ1bmN0aW9uIGJvb2xlYW5QYXJzZXIob3B0KSB7XG4gIGlmIChvcHQgPT0gdHJ1ZSB8fCBvcHQgPT0gJ3RydWUnIHx8IG9wdCA9PSAnMScpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIG51bGxQYXJzZXIob3B0KSB7XG4gIGlmIChvcHQgPT0gJ251bGwnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIG9wdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG51bWJlclBhcnNlcixcbiAgbnVtYmVyT3JCb29sUGFyc2VyLFxuICBudWxsUGFyc2VyLFxuICBib29sZWFuUGFyc2VyLFxuICBtb2R1bGVPck9iamVjdFBhcnNlcixcbiAgYXJyYXlQYXJzZXIsXG4gIG9iamVjdFBhcnNlcixcbn07XG4iXX0=