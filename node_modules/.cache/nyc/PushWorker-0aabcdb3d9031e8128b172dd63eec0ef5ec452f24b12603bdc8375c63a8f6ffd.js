"use strict";function cov_7xx9cqn77(){var path="/parse-server/lib/Push/PushWorker.js";var hash="8344266a22493ddc7d5f413da6afeda399de6e11";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Push/PushWorker.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:46}},"2":{start:{line:8,column:16},end:{line:8,column:59}},"3":{start:{line:10,column:27},end:{line:10,column:96}},"4":{start:{line:12,column:12},end:{line:12,column:30}},"5":{start:{line:14,column:14},end:{line:14,column:58}},"6":{start:{line:16,column:19},end:{line:16,column:58}},"7":{start:{line:18,column:12},end:{line:18,column:54}},"8":{start:{line:20,column:21},end:{line:20,column:48}},"9":{start:{line:22,column:12},end:{line:22,column:55}},"10":{start:{line:24,column:25},end:{line:24,column:56}},"11":{start:{line:26,column:17},end:{line:26,column:39}},"12":{start:{line:28,column:14},end:{line:28,column:58}},"13":{start:{line:30,column:49},end:{line:30,column:96}},"14":{start:{line:30,column:84},end:{line:30,column:96}},"15":{start:{line:30,column:121},end:{line:30,column:134}},"16":{start:{line:30,column:159},end:{line:30,column:172}},"17":{start:{line:30,column:174},end:{line:30,column:309}},"18":{start:{line:30,column:234},end:{line:30,column:292}},"19":{start:{line:32,column:53},end:{line:32,column:111}},"20":{start:{line:32,column:98},end:{line:32,column:109}},"21":{start:{line:32,column:112},end:{line:32,column:214}},"22":{start:{line:32,column:188},end:{line:32,column:212}},"23":{start:{line:32,column:227},end:{line:32,column:264}},"24":{start:{line:32,column:266},end:{line:32,column:321}},"25":{start:{line:32,column:297},end:{line:32,column:319}},"26":{start:{line:32,column:335},end:{line:32,column:337}},"27":{start:{line:32,column:367},end:{line:32,column:423}},"28":{start:{line:32,column:425},end:{line:32,column:726}},"29":{start:{line:32,column:448},end:{line:32,column:724}},"30":{start:{line:32,column:534},end:{line:32,column:606}},"31":{start:{line:32,column:608},end:{line:32,column:722}},"32":{start:{line:32,column:646},end:{line:32,column:687}},"33":{start:{line:32,column:697},end:{line:32,column:720}},"34":{start:{line:32,column:727},end:{line:32,column:748}},"35":{start:{line:32,column:749},end:{line:32,column:787}},"36":{start:{line:32,column:762},end:{line:32,column:785}},"37":{start:{line:32,column:788},end:{line:32,column:802}},"38":{start:{line:34,column:39},end:{line:34,column:93}},"39":{start:{line:38,column:2},end:{line:43,column:9}},"40":{start:{line:39,column:18},end:{line:39,column:41}},"41":{start:{line:40,column:4},end:{line:40,column:34}},"42":{start:{line:41,column:4},end:{line:41,column:34}},"43":{start:{line:42,column:4},end:{line:42,column:15}},"44":{start:{line:48,column:4},end:{line:48,column:94}},"45":{start:{line:50,column:4},end:{line:50,column:31}},"46":{start:{line:51,column:4},end:{line:51,column:89}},"47":{start:{line:52,column:4},end:{line:52,column:94}},"48":{start:{line:54,column:4},end:{line:61,column:5}},"49":{start:{line:55,column:25},end:{line:55,column:40}},"50":{start:{line:56,column:6},end:{line:56,column:41}},"51":{start:{line:57,column:6},end:{line:60,column:9}},"52":{start:{line:58,column:25},end:{line:58,column:47}},"53":{start:{line:59,column:8},end:{line:59,column:27}},"54":{start:{line:71,column:19},end:{line:71,column:53}},"55":{start:{line:73,column:17},end:{line:73,column:42}},"56":{start:{line:74,column:18},end:{line:74,column:59}},"57":{start:{line:75,column:4},end:{line:75,column:23}},"58":{start:{line:76,column:4},end:{line:76,column:84}},"59":{start:{line:77,column:4},end:{line:85,column:7}},"60":{start:{line:80,column:6},end:{line:82,column:7}},"61":{start:{line:81,column:8},end:{line:81,column:15}},"62":{start:{line:84,column:6},end:{line:84,column:78}},"63":{start:{line:90,column:20},end:{line:90,column:50}},"64":{start:{line:92,column:4},end:{line:103,column:5}},"65":{start:{line:94,column:31},end:{line:94,column:68}},"66":{start:{line:96,column:36},end:{line:96,column:89}},"67":{start:{line:97,column:23},end:{line:101,column:8}},"68":{start:{line:98,column:30},end:{line:98,column:59}},"69":{start:{line:99,column:21},end:{line:99,column:45}},"70":{start:{line:100,column:8},end:{line:100,column:86}},"71":{start:{line:102,column:6},end:{line:102,column:35}},"72":{start:{line:105,column:4},end:{line:111,column:5}},"73":{start:{line:106,column:6},end:{line:106,column:73}},"74":{start:{line:108,column:6},end:{line:110,column:9}},"75":{start:{line:109,column:8},end:{line:109,column:76}},"76":{start:{line:109,column:67},end:{line:109,column:74}},"77":{start:{line:114,column:34},end:{line:114,column:61}},"78":{start:{line:116,column:21},end:{line:121,column:6}},"79":{start:{line:117,column:22},end:{line:117,column:50}},"80":{start:{line:118,column:6},end:{line:118,column:43}},"81":{start:{line:119,column:28},end:{line:119,column:56}},"82":{start:{line:120,column:6},end:{line:120,column:87}},"83":{start:{line:122,column:4},end:{line:122,column:33}},"84":{start:{line:127,column:0},end:{line:127,column:32}},"85":{start:{line:128,column:15},end:{line:128,column:25}},"86":{start:{line:129,column:0},end:{line:129,column:27}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:30,column:9},end:{line:30,column:33}},loc:{start:{line:30,column:47},end:{line:30,column:311}},line:30},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:209},end:{line:30,column:210}},loc:{start:{line:30,column:232},end:{line:30,column:294}},line:30},"2":{name:"_interopRequireWildcard",decl:{start:{line:32,column:9},end:{line:32,column:32}},loc:{start:{line:32,column:51},end:{line:32,column:804}},line:32},"3":{name:"_interopRequireDefault",decl:{start:{line:34,column:9},end:{line:34,column:31}},loc:{start:{line:34,column:37},end:{line:34,column:95}},line:34},"4":{name:"groupByBadge",decl:{start:{line:37,column:9},end:{line:37,column:21}},loc:{start:{line:37,column:37},end:{line:44,column:1}},line:37},"5":{name:"(anonymous_5)",decl:{start:{line:38,column:30},end:{line:38,column:31}},loc:{start:{line:38,column:53},end:{line:43,column:3}},line:38},"6":{name:"(anonymous_6)",decl:{start:{line:47,column:2},end:{line:47,column:3}},loc:{start:{line:47,column:50},end:{line:62,column:3}},line:47},"7":{name:"(anonymous_7)",decl:{start:{line:57,column:31},end:{line:57,column:32}},loc:{start:{line:57,column:56},end:{line:60,column:7}},line:57},"8":{name:"(anonymous_8)",decl:{start:{line:64,column:2},end:{line:64,column:3}},loc:{start:{line:70,column:5},end:{line:86,column:3}},line:70},"9":{name:"(anonymous_9)",decl:{start:{line:77,column:80},end:{line:77,column:81}},loc:{start:{line:79,column:10},end:{line:85,column:5}},line:79},"10":{name:"(anonymous_10)",decl:{start:{line:88,column:2},end:{line:88,column:3}},loc:{start:{line:88,column:68},end:{line:123,column:3}},line:88},"11":{name:"(anonymous_11)",decl:{start:{line:97,column:62},end:{line:97,column:63}},loc:{start:{line:97,column:72},end:{line:101,column:7}},line:97},"12":{name:"(anonymous_12)",decl:{start:{line:108,column:78},end:{line:108,column:79}},loc:{start:{line:108,column:89},end:{line:110,column:7}},line:108},"13":{name:"(anonymous_13)",decl:{start:{line:109,column:61},end:{line:109,column:62}},loc:{start:{line:109,column:67},end:{line:109,column:74}},line:109},"14":{name:"(anonymous_14)",decl:{start:{line:116,column:60},end:{line:116,column:61}},loc:{start:{line:116,column:69},end:{line:121,column:5}},line:116}},branchMap:{"0":{loc:{start:{line:30,column:49},end:{line:30,column:96}},type:"if",locations:[{start:{line:30,column:49},end:{line:30,column:96}},{start:{line:30,column:49},end:{line:30,column:96}}],line:30},"1":{loc:{start:{line:30,column:241},end:{line:30,column:291}},type:"cond-expr",locations:[{start:{line:30,column:255},end:{line:30,column:271}},{start:{line:30,column:274},end:{line:30,column:291}}],line:30},"2":{loc:{start:{line:32,column:53},end:{line:32,column:111}},type:"if",locations:[{start:{line:32,column:53},end:{line:32,column:111}},{start:{line:32,column:53},end:{line:32,column:111}}],line:32},"3":{loc:{start:{line:32,column:57},end:{line:32,column:94}},type:"binary-expr",locations:[{start:{line:32,column:57},end:{line:32,column:69}},{start:{line:32,column:73},end:{line:32,column:76}},{start:{line:32,column:80},end:{line:32,column:94}}],line:32},"4":{loc:{start:{line:32,column:112},end:{line:32,column:214}},type:"if",locations:[{start:{line:32,column:112},end:{line:32,column:214}},{start:{line:32,column:112},end:{line:32,column:214}}],line:32},"5":{loc:{start:{line:32,column:116},end:{line:32,column:184}},type:"binary-expr",locations:[{start:{line:32,column:116},end:{line:32,column:128}},{start:{line:32,column:132},end:{line:32,column:155}},{start:{line:32,column:159},end:{line:32,column:184}}],line:32},"6":{loc:{start:{line:32,column:266},end:{line:32,column:321}},type:"if",locations:[{start:{line:32,column:266},end:{line:32,column:321}},{start:{line:32,column:266},end:{line:32,column:321}}],line:32},"7":{loc:{start:{line:32,column:270},end:{line:32,column:293}},type:"binary-expr",locations:[{start:{line:32,column:270},end:{line:32,column:275}},{start:{line:32,column:279},end:{line:32,column:293}}],line:32},"8":{loc:{start:{line:32,column:367},end:{line:32,column:423}},type:"binary-expr",locations:[{start:{line:32,column:367},end:{line:32,column:388}},{start:{line:32,column:392},end:{line:32,column:423}}],line:32},"9":{loc:{start:{line:32,column:448},end:{line:32,column:724}},type:"if",locations:[{start:{line:32,column:448},end:{line:32,column:724}},{start:{line:32,column:448},end:{line:32,column:724}}],line:32},"10":{loc:{start:{line:32,column:452},end:{line:32,column:519}},type:"binary-expr",locations:[{start:{line:32,column:452},end:{line:32,column:469}},{start:{line:32,column:473},end:{line:32,column:519}}],line:32},"11":{loc:{start:{line:32,column:534},end:{line:32,column:606}},type:"cond-expr",locations:[{start:{line:32,column:558},end:{line:32,column:599}},{start:{line:32,column:602},end:{line:32,column:606}}],line:32},"12":{loc:{start:{line:32,column:608},end:{line:32,column:722}},type:"if",locations:[{start:{line:32,column:608},end:{line:32,column:722}},{start:{line:32,column:608},end:{line:32,column:722}}],line:32},"13":{loc:{start:{line:32,column:612},end:{line:32,column:642}},type:"binary-expr",locations:[{start:{line:32,column:612},end:{line:32,column:616}},{start:{line:32,column:621},end:{line:32,column:629}},{start:{line:32,column:633},end:{line:32,column:641}}],line:32},"14":{loc:{start:{line:32,column:749},end:{line:32,column:787}},type:"if",locations:[{start:{line:32,column:749},end:{line:32,column:787}},{start:{line:32,column:749},end:{line:32,column:787}}],line:32},"15":{loc:{start:{line:34,column:46},end:{line:34,column:92}},type:"cond-expr",locations:[{start:{line:34,column:70},end:{line:34,column:73}},{start:{line:34,column:76},end:{line:34,column:92}}],line:34},"16":{loc:{start:{line:34,column:46},end:{line:34,column:67}},type:"binary-expr",locations:[{start:{line:34,column:46},end:{line:34,column:49}},{start:{line:34,column:53},end:{line:34,column:67}}],line:34},"17":{loc:{start:{line:40,column:17},end:{line:40,column:33}},type:"binary-expr",locations:[{start:{line:40,column:17},end:{line:40,column:27}},{start:{line:40,column:31},end:{line:40,column:33}}],line:40},"18":{loc:{start:{line:47,column:27},end:{line:47,column:48}},type:"default-arg",locations:[{start:{line:47,column:46},end:{line:47,column:48}}],line:47},"19":{loc:{start:{line:51,column:19},end:{line:51,column:88}},type:"binary-expr",locations:[{start:{line:51,column:19},end:{line:51,column:43}},{start:{line:51,column:47},end:{line:51,column:88}}],line:51},"20":{loc:{start:{line:54,column:4},end:{line:61,column:5}},type:"if",locations:[{start:{line:54,column:4},end:{line:61,column:5}},{start:{line:54,column:4},end:{line:61,column:5}}],line:54},"21":{loc:{start:{line:80,column:6},end:{line:82,column:7}},type:"if",locations:[{start:{line:80,column:6},end:{line:82,column:7}},{start:{line:80,column:6},end:{line:82,column:7}}],line:80},"22":{loc:{start:{line:92,column:4},end:{line:103,column:5}},type:"if",locations:[{start:{line:92,column:4},end:{line:103,column:5}},{start:{line:92,column:4},end:{line:103,column:5}}],line:92},"23":{loc:{start:{line:105,column:4},end:{line:111,column:5}},type:"if",locations:[{start:{line:105,column:4},end:{line:111,column:5}},{start:{line:105,column:4},end:{line:111,column:5}}],line:105}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},inputSourceMap:{version:3,sources:["../../src/Push/PushWorker.js"],names:["groupByBadge","installations","reduce","map","installation","badge","push","PushWorker","constructor","pushAdapter","subscriberConfig","AdaptableController","validateAdapter","PushAdapter","adapter","channel","PushQueue","defaultPushChannel","subscriber","ParseMessageQueue","createSubscriber","subscribe","on","messageStr","workItem","JSON","parse","run","body","query","pushStatus","applicationId","UTCOffset","config","Config","get","auth","where","utils","applyDeviceTokenExists","objectId","rest","find","then","results","length","sendToAdapter","locales","getLocalesFromPush","bodiesPerLocales","grouppedInstallations","groupByLocaleIdentifier","promises","Object","keys","locale","Promise","all","isPushIncrementing","logger","verbose","send","trackSent","badgeInstallationsMap","payload","data","parseInt"],mappings:"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",sourcesContent:["// @flow\n// @flow-disable-next\nimport deepcopy from 'deepcopy';\nimport AdaptableController from '../Controllers/AdaptableController';\nimport { master } from '../Auth';\nimport Config from '../Config';\nimport { PushAdapter } from '../Adapters/Push/PushAdapter';\nimport rest from '../rest';\nimport { pushStatusHandler } from '../StatusHandler';\nimport * as utils from './utils';\nimport { ParseMessageQueue } from '../ParseMessageQueue';\nimport { PushQueue } from './PushQueue';\nimport logger from '../logger';\n\nfunction groupByBadge(installations) {\n  return installations.reduce((map, installation) => {\n    const badge = installation.badge + '';\n    map[badge] = map[badge] || [];\n    map[badge].push(installation);\n    return map;\n  }, {});\n}\n\nexport class PushWorker {\n  subscriber: ?any;\n  adapter: any;\n  channel: string;\n\n  constructor(pushAdapter: PushAdapter, subscriberConfig: any = {}) {\n    AdaptableController.validateAdapter(pushAdapter, this, PushAdapter);\n    this.adapter = pushAdapter;\n\n    this.channel = subscriberConfig.channel || PushQueue.defaultPushChannel();\n    this.subscriber = ParseMessageQueue.createSubscriber(subscriberConfig);\n    if (this.subscriber) {\n      const subscriber = this.subscriber;\n      subscriber.subscribe(this.channel);\n      subscriber.on('message', (channel, messageStr) => {\n        const workItem = JSON.parse(messageStr);\n        this.run(workItem);\n      });\n    }\n  }\n\n  run({ body, query, pushStatus, applicationId, UTCOffset }: any): Promise<*> {\n    const config = Config.get(applicationId);\n    const auth = master(config);\n    const where = utils.applyDeviceTokenExists(query.where);\n    delete query.where;\n    pushStatus = pushStatusHandler(config, pushStatus.objectId);\n    return rest.find(config, auth, '_Installation', where, query).then(({ results }) => {\n      if (results.length == 0) {\n        return;\n      }\n      return this.sendToAdapter(body, results, pushStatus, config, UTCOffset);\n    });\n  }\n\n  sendToAdapter(\n    body: any,\n    installations: any[],\n    pushStatus: any,\n    config: Config,\n    UTCOffset: ?any\n  ): Promise<*> {\n    // Check if we have locales in the push body\n    const locales = utils.getLocalesFromPush(body);\n    if (locales.length > 0) {\n      // Get all tranformed bodies for each locale\n      const bodiesPerLocales = utils.bodiesPerLocales(body, locales);\n\n      // Group installations on the specified locales (en, fr, default etc...)\n      const grouppedInstallations = utils.groupByLocaleIdentifier(installations, locales);\n      const promises = Object.keys(grouppedInstallations).map(locale => {\n        const installations = grouppedInstallations[locale];\n        const body = bodiesPerLocales[locale];\n        return this.sendToAdapter(body, installations, pushStatus, config, UTCOffset);\n      });\n      return Promise.all(promises);\n    }\n\n    if (!utils.isPushIncrementing(body)) {\n      logger.verbose(`Sending push to ${installations.length}`);\n      return this.adapter.send(body, installations, pushStatus.objectId).then(results => {\n        return pushStatus.trackSent(results, UTCOffset).then(() => results);\n      });\n    }\n\n    // Collect the badges to reduce the # of calls\n    const badgeInstallationsMap = groupByBadge(installations);\n\n    // Map the on the badges count and return the send result\n    const promises = Object.keys(badgeInstallationsMap).map(badge => {\n      const payload = deepcopy(body);\n      payload.data.badge = parseInt(badge);\n      const installations = badgeInstallationsMap[badge];\n      return this.sendToAdapter(payload, installations, pushStatus, config, UTCOffset);\n    });\n    return Promise.all(promises);\n  }\n}\n\nexport default PushWorker;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8344266a22493ddc7d5f413da6afeda399de6e11"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_7xx9cqn77=function(){return actualCoverage;};}return actualCoverage;}cov_7xx9cqn77();cov_7xx9cqn77().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_7xx9cqn77().s[1]++;exports.default=exports.PushWorker=void 0;var _deepcopy=(cov_7xx9cqn77().s[2]++,_interopRequireDefault(require("deepcopy")));var _AdaptableController=(cov_7xx9cqn77().s[3]++,_interopRequireDefault(require("../Controllers/AdaptableController")));var _Auth=(cov_7xx9cqn77().s[4]++,require("../Auth"));var _Config=(cov_7xx9cqn77().s[5]++,_interopRequireDefault(require("../Config")));var _PushAdapter=(cov_7xx9cqn77().s[6]++,require("../Adapters/Push/PushAdapter"));var _rest=(cov_7xx9cqn77().s[7]++,_interopRequireDefault(require("../rest")));var _StatusHandler=(cov_7xx9cqn77().s[8]++,require("../StatusHandler"));var utils=(cov_7xx9cqn77().s[9]++,_interopRequireWildcard(require("./utils")));var _ParseMessageQueue=(cov_7xx9cqn77().s[10]++,require("../ParseMessageQueue"));var _PushQueue=(cov_7xx9cqn77().s[11]++,require("./PushQueue"));var _logger=(cov_7xx9cqn77().s[12]++,_interopRequireDefault(require("../logger")));function _getRequireWildcardCache(nodeInterop){cov_7xx9cqn77().f[0]++;cov_7xx9cqn77().s[13]++;if(typeof WeakMap!=="function"){cov_7xx9cqn77().b[0][0]++;cov_7xx9cqn77().s[14]++;return null;}else{cov_7xx9cqn77().b[0][1]++;}var cacheBabelInterop=(cov_7xx9cqn77().s[15]++,new WeakMap());var cacheNodeInterop=(cov_7xx9cqn77().s[16]++,new WeakMap());cov_7xx9cqn77().s[17]++;return(_getRequireWildcardCache=function(nodeInterop){cov_7xx9cqn77().f[1]++;cov_7xx9cqn77().s[18]++;return nodeInterop?(cov_7xx9cqn77().b[1][0]++,cacheNodeInterop):(cov_7xx9cqn77().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_7xx9cqn77().f[2]++;cov_7xx9cqn77().s[19]++;if((cov_7xx9cqn77().b[3][0]++,!nodeInterop)&&(cov_7xx9cqn77().b[3][1]++,obj)&&(cov_7xx9cqn77().b[3][2]++,obj.__esModule)){cov_7xx9cqn77().b[2][0]++;cov_7xx9cqn77().s[20]++;return obj;}else{cov_7xx9cqn77().b[2][1]++;}cov_7xx9cqn77().s[21]++;if((cov_7xx9cqn77().b[5][0]++,obj===null)||(cov_7xx9cqn77().b[5][1]++,typeof obj!=="object")&&(cov_7xx9cqn77().b[5][2]++,typeof obj!=="function")){cov_7xx9cqn77().b[4][0]++;cov_7xx9cqn77().s[22]++;return{default:obj};}else{cov_7xx9cqn77().b[4][1]++;}var cache=(cov_7xx9cqn77().s[23]++,_getRequireWildcardCache(nodeInterop));cov_7xx9cqn77().s[24]++;if((cov_7xx9cqn77().b[7][0]++,cache)&&(cov_7xx9cqn77().b[7][1]++,cache.has(obj))){cov_7xx9cqn77().b[6][0]++;cov_7xx9cqn77().s[25]++;return cache.get(obj);}else{cov_7xx9cqn77().b[6][1]++;}var newObj=(cov_7xx9cqn77().s[26]++,{});var hasPropertyDescriptor=(cov_7xx9cqn77().s[27]++,(cov_7xx9cqn77().b[8][0]++,Object.defineProperty)&&(cov_7xx9cqn77().b[8][1]++,Object.getOwnPropertyDescriptor));cov_7xx9cqn77().s[28]++;for(var key in obj){cov_7xx9cqn77().s[29]++;if((cov_7xx9cqn77().b[10][0]++,key!=="default")&&(cov_7xx9cqn77().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_7xx9cqn77().b[9][0]++;var desc=(cov_7xx9cqn77().s[30]++,hasPropertyDescriptor?(cov_7xx9cqn77().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_7xx9cqn77().b[11][1]++,null));cov_7xx9cqn77().s[31]++;if((cov_7xx9cqn77().b[13][0]++,desc)&&((cov_7xx9cqn77().b[13][1]++,desc.get)||(cov_7xx9cqn77().b[13][2]++,desc.set))){cov_7xx9cqn77().b[12][0]++;cov_7xx9cqn77().s[32]++;Object.defineProperty(newObj,key,desc);}else{cov_7xx9cqn77().b[12][1]++;cov_7xx9cqn77().s[33]++;newObj[key]=obj[key];}}else{cov_7xx9cqn77().b[9][1]++;}}cov_7xx9cqn77().s[34]++;newObj.default=obj;cov_7xx9cqn77().s[35]++;if(cache){cov_7xx9cqn77().b[14][0]++;cov_7xx9cqn77().s[36]++;cache.set(obj,newObj);}else{cov_7xx9cqn77().b[14][1]++;}cov_7xx9cqn77().s[37]++;return newObj;}function _interopRequireDefault(obj){cov_7xx9cqn77().f[3]++;cov_7xx9cqn77().s[38]++;return(cov_7xx9cqn77().b[16][0]++,obj)&&(cov_7xx9cqn77().b[16][1]++,obj.__esModule)?(cov_7xx9cqn77().b[15][0]++,obj):(cov_7xx9cqn77().b[15][1]++,{default:obj});}// -disable-next
function groupByBadge(installations){cov_7xx9cqn77().f[4]++;cov_7xx9cqn77().s[39]++;return installations.reduce((map,installation)=>{cov_7xx9cqn77().f[5]++;const badge=(cov_7xx9cqn77().s[40]++,installation.badge+'');cov_7xx9cqn77().s[41]++;map[badge]=(cov_7xx9cqn77().b[17][0]++,map[badge])||(cov_7xx9cqn77().b[17][1]++,[]);cov_7xx9cqn77().s[42]++;map[badge].push(installation);cov_7xx9cqn77().s[43]++;return map;},{});}class PushWorker{constructor(pushAdapter,subscriberConfig=(cov_7xx9cqn77().b[18][0]++,{})){cov_7xx9cqn77().f[6]++;cov_7xx9cqn77().s[44]++;_AdaptableController.default.validateAdapter(pushAdapter,this,_PushAdapter.PushAdapter);cov_7xx9cqn77().s[45]++;this.adapter=pushAdapter;cov_7xx9cqn77().s[46]++;this.channel=(cov_7xx9cqn77().b[19][0]++,subscriberConfig.channel)||(cov_7xx9cqn77().b[19][1]++,_PushQueue.PushQueue.defaultPushChannel());cov_7xx9cqn77().s[47]++;this.subscriber=_ParseMessageQueue.ParseMessageQueue.createSubscriber(subscriberConfig);cov_7xx9cqn77().s[48]++;if(this.subscriber){cov_7xx9cqn77().b[20][0]++;const subscriber=(cov_7xx9cqn77().s[49]++,this.subscriber);cov_7xx9cqn77().s[50]++;subscriber.subscribe(this.channel);cov_7xx9cqn77().s[51]++;subscriber.on('message',(channel,messageStr)=>{cov_7xx9cqn77().f[7]++;const workItem=(cov_7xx9cqn77().s[52]++,JSON.parse(messageStr));cov_7xx9cqn77().s[53]++;this.run(workItem);});}else{cov_7xx9cqn77().b[20][1]++;}}run({body,query,pushStatus,applicationId,UTCOffset}){cov_7xx9cqn77().f[8]++;const config=(cov_7xx9cqn77().s[54]++,_Config.default.get(applicationId));const auth=(cov_7xx9cqn77().s[55]++,(0,_Auth.master)(config));const where=(cov_7xx9cqn77().s[56]++,utils.applyDeviceTokenExists(query.where));cov_7xx9cqn77().s[57]++;delete query.where;cov_7xx9cqn77().s[58]++;pushStatus=(0,_StatusHandler.pushStatusHandler)(config,pushStatus.objectId);cov_7xx9cqn77().s[59]++;return _rest.default.find(config,auth,'_Installation',where,query).then(({results})=>{cov_7xx9cqn77().f[9]++;cov_7xx9cqn77().s[60]++;if(results.length==0){cov_7xx9cqn77().b[21][0]++;cov_7xx9cqn77().s[61]++;return;}else{cov_7xx9cqn77().b[21][1]++;}cov_7xx9cqn77().s[62]++;return this.sendToAdapter(body,results,pushStatus,config,UTCOffset);});}sendToAdapter(body,installations,pushStatus,config,UTCOffset){cov_7xx9cqn77().f[10]++;// Check if we have locales in the push body
const locales=(cov_7xx9cqn77().s[63]++,utils.getLocalesFromPush(body));cov_7xx9cqn77().s[64]++;if(locales.length>0){cov_7xx9cqn77().b[22][0]++;// Get all tranformed bodies for each locale
const bodiesPerLocales=(cov_7xx9cqn77().s[65]++,utils.bodiesPerLocales(body,locales));// Group installations on the specified locales (en, fr, default etc...)
const grouppedInstallations=(cov_7xx9cqn77().s[66]++,utils.groupByLocaleIdentifier(installations,locales));const promises=(cov_7xx9cqn77().s[67]++,Object.keys(grouppedInstallations).map(locale=>{cov_7xx9cqn77().f[11]++;const installations=(cov_7xx9cqn77().s[68]++,grouppedInstallations[locale]);const body=(cov_7xx9cqn77().s[69]++,bodiesPerLocales[locale]);cov_7xx9cqn77().s[70]++;return this.sendToAdapter(body,installations,pushStatus,config,UTCOffset);}));cov_7xx9cqn77().s[71]++;return Promise.all(promises);}else{cov_7xx9cqn77().b[22][1]++;}cov_7xx9cqn77().s[72]++;if(!utils.isPushIncrementing(body)){cov_7xx9cqn77().b[23][0]++;cov_7xx9cqn77().s[73]++;_logger.default.verbose(`Sending push to ${installations.length}`);cov_7xx9cqn77().s[74]++;return this.adapter.send(body,installations,pushStatus.objectId).then(results=>{cov_7xx9cqn77().f[12]++;cov_7xx9cqn77().s[75]++;return pushStatus.trackSent(results,UTCOffset).then(()=>{cov_7xx9cqn77().f[13]++;cov_7xx9cqn77().s[76]++;return results;});});}else{cov_7xx9cqn77().b[23][1]++;}// Collect the badges to reduce the # of calls
const badgeInstallationsMap=(cov_7xx9cqn77().s[77]++,groupByBadge(installations));// Map the on the badges count and return the send result
const promises=(cov_7xx9cqn77().s[78]++,Object.keys(badgeInstallationsMap).map(badge=>{cov_7xx9cqn77().f[14]++;const payload=(cov_7xx9cqn77().s[79]++,(0,_deepcopy.default)(body));cov_7xx9cqn77().s[80]++;payload.data.badge=parseInt(badge);const installations=(cov_7xx9cqn77().s[81]++,badgeInstallationsMap[badge]);cov_7xx9cqn77().s[82]++;return this.sendToAdapter(payload,installations,pushStatus,config,UTCOffset);}));cov_7xx9cqn77().s[83]++;return Promise.all(promises);}}cov_7xx9cqn77().s[84]++;exports.PushWorker=PushWorker;var _default=(cov_7xx9cqn77().s[85]++,PushWorker);cov_7xx9cqn77().s[86]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,