"use strict";function cov_2mghmeqoe3(){var path="/parse-server/lib/middlewares.js";var hash="4f62cd50b0d8160b90be9a5f8479537a488ff865";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/middlewares.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:48}},"2":{start:{line:7,column:0},end:{line:7,column:44}},"3":{start:{line:8,column:0},end:{line:8,column:50}},"4":{start:{line:9,column:0},end:{line:9,column:46}},"5":{start:{line:10,column:0},end:{line:10,column:56}},"6":{start:{line:11,column:0},end:{line:11,column:70}},"7":{start:{line:12,column:0},end:{line:12,column:60}},"8":{start:{line:13,column:0},end:{line:13,column:41}},"9":{start:{line:15,column:13},end:{line:15,column:55}},"10":{start:{line:17,column:12},end:{line:17,column:57}},"11":{start:{line:19,column:12},end:{line:19,column:53}},"12":{start:{line:21,column:14},end:{line:21,column:57}},"13":{start:{line:23,column:17},end:{line:23,column:63}},"14":{start:{line:25,column:14},end:{line:25,column:57}},"15":{start:{line:27,column:12},end:{line:27,column:53}},"16":{start:{line:29,column:27},end:{line:29,column:106}},"17":{start:{line:31,column:39},end:{line:31,column:93}},"18":{start:{line:33,column:32},end:{line:33,column:271}},"19":{start:{line:34,column:0},end:{line:34,column:58}},"20":{start:{line:36,column:27},end:{line:40,column:1}},"21":{start:{line:37,column:26},end:{line:37,column:65}},"22":{start:{line:38,column:20},end:{line:38,column:61}},"23":{start:{line:39,column:2},end:{line:39,column:60}},"24":{start:{line:49,column:14},end:{line:49,column:37}},"25":{start:{line:50,column:16},end:{line:50,column:18}},"26":{start:{line:52,column:2},end:{line:62,column:3}},"27":{start:{line:53,column:4},end:{line:61,column:5}},"28":{start:{line:54,column:6},end:{line:54,column:61}},"29":{start:{line:56,column:6},end:{line:58,column:7}},"30":{start:{line:57,column:8},end:{line:57,column:41}},"31":{start:{line:60,column:6},end:{line:60,column:40}},"32":{start:{line:64,column:13},end:{line:75,column:3}},"33":{start:{line:76,column:18},end:{line:76,column:31}},"34":{start:{line:78,column:2},end:{line:86,column:3}},"35":{start:{line:79,column:25},end:{line:79,column:40}},"36":{start:{line:81,column:4},end:{line:85,column:5}},"37":{start:{line:82,column:6},end:{line:82,column:34}},"38":{start:{line:83,column:6},end:{line:83,column:61}},"39":{start:{line:84,column:6},end:{line:84,column:73}},"40":{start:{line:88,column:2},end:{line:92,column:3}},"41":{start:{line:91,column:4},end:{line:91,column:28}},"42":{start:{line:94,column:20},end:{line:94,column:25}},"43":{start:{line:96,column:2},end:{line:169,column:3}},"44":{start:{line:98,column:4},end:{line:111,column:5}},"45":{start:{line:104,column:6},end:{line:108,column:7}},"46":{start:{line:105,column:8},end:{line:105,column:40}},"47":{start:{line:107,column:8},end:{line:107,column:40}},"48":{start:{line:110,column:6},end:{line:110,column:25}},"49":{start:{line:113,column:4},end:{line:115,column:5}},"50":{start:{line:114,column:6},end:{line:114,column:40}},"51":{start:{line:117,column:4},end:{line:168,column:5}},"52":{start:{line:118,column:6},end:{line:118,column:43}},"53":{start:{line:119,column:6},end:{line:119,column:57}},"54":{start:{line:120,column:6},end:{line:120,column:37}},"55":{start:{line:121,column:6},end:{line:121,column:37}},"56":{start:{line:124,column:6},end:{line:127,column:7}},"57":{start:{line:125,column:8},end:{line:125,column:53}},"58":{start:{line:126,column:8},end:{line:126,column:39}},"59":{start:{line:129,column:6},end:{line:132,column:7}},"60":{start:{line:130,column:8},end:{line:130,column:55}},"61":{start:{line:131,column:8},end:{line:131,column:40}},"62":{start:{line:134,column:6},end:{line:137,column:7}},"63":{start:{line:135,column:8},end:{line:135,column:51}},"64":{start:{line:136,column:8},end:{line:136,column:38}},"65":{start:{line:139,column:6},end:{line:142,column:7}},"66":{start:{line:140,column:8},end:{line:140,column:45}},"67":{start:{line:141,column:8},end:{line:141,column:35}},"68":{start:{line:144,column:6},end:{line:160,column:7}},"69":{start:{line:145,column:8},end:{line:157,column:9}},"70":{start:{line:146,column:10},end:{line:146,column:43}},"71":{start:{line:148,column:10},end:{line:156,column:11}},"72":{start:{line:149,column:12},end:{line:149,column:57}},"73":{start:{line:151,column:12},end:{line:153,column:13}},"74":{start:{line:152,column:14},end:{line:152,column:47}},"75":{start:{line:155,column:12},end:{line:155,column:46}},"76":{start:{line:159,column:8},end:{line:159,column:33}},"77":{start:{line:162,column:6},end:{line:165,column:7}},"78":{start:{line:163,column:8},end:{line:163,column:60}},"79":{start:{line:164,column:8},end:{line:164,column:37}},"80":{start:{line:167,column:6},end:{line:167,column:38}},"81":{start:{line:171,column:2},end:{line:173,column:3}},"82":{start:{line:172,column:4},end:{line:172,column:53}},"83":{start:{line:175,column:2},end:{line:177,column:3}},"84":{start:{line:176,column:4},end:{line:176,column:71}},"85":{start:{line:179,column:2},end:{line:184,column:3}},"86":{start:{line:180,column:4},end:{line:180,column:37}},"87":{start:{line:182,column:17},end:{line:182,column:32}},"88":{start:{line:183,column:4},end:{line:183,column:45}},"89":{start:{line:186,column:19},end:{line:186,column:35}},"90":{start:{line:187,column:2},end:{line:187,column:44}},"91":{start:{line:188,column:2},end:{line:188,column:54}},"92":{start:{line:189,column:2},end:{line:189,column:41}},"93":{start:{line:190,column:2},end:{line:190,column:27}},"94":{start:{line:191,column:2},end:{line:191,column:18}},"95":{start:{line:193,column:2},end:{line:195,column:3}},"96":{start:{line:194,column:4},end:{line:194,column:36}},"97":{start:{line:197,column:17},end:{line:197,column:56}},"98":{start:{line:199,column:2},end:{line:207,column:3}},"99":{start:{line:200,column:4},end:{line:204,column:7}},"100":{start:{line:205,column:4},end:{line:205,column:11}},"101":{start:{line:206,column:4},end:{line:206,column:11}},"102":{start:{line:209,column:25},end:{line:209,column:72}},"103":{start:{line:211,column:2},end:{line:220,column:3}},"104":{start:{line:212,column:4},end:{line:217,column:7}},"105":{start:{line:218,column:4},end:{line:218,column:11}},"106":{start:{line:219,column:4},end:{line:219,column:11}},"107":{start:{line:224,column:15},end:{line:224,column:72}},"108":{start:{line:225,column:27},end:{line:227,column:4}},"109":{start:{line:226,column:4},end:{line:226,column:41}},"110":{start:{line:228,column:24},end:{line:230,column:4}},"111":{start:{line:229,column:4},end:{line:229,column:74}},"112":{start:{line:232,column:2},end:{line:234,column:3}},"113":{start:{line:233,column:4},end:{line:233,column:36}},"114":{start:{line:236,column:2},end:{line:238,column:3}},"115":{start:{line:237,column:4},end:{line:237,column:29}},"116":{start:{line:240,column:2},end:{line:249,column:3}},"117":{start:{line:241,column:4},end:{line:246,column:7}},"118":{start:{line:247,column:4},end:{line:247,column:11}},"119":{start:{line:248,column:4},end:{line:248,column:11}},"120":{start:{line:251,column:2},end:{line:259,column:3}},"121":{start:{line:252,column:4},end:{line:256,column:7}},"122":{start:{line:257,column:4},end:{line:257,column:11}},"123":{start:{line:258,column:4},end:{line:258,column:11}},"124":{start:{line:261,column:2},end:{line:290,column:5}},"125":{start:{line:263,column:4},end:{line:275,column:5}},"126":{start:{line:264,column:6},end:{line:268,column:9}},"127":{start:{line:270,column:6},end:{line:274,column:9}},"128":{start:{line:277,column:4},end:{line:280,column:5}},"129":{start:{line:278,column:6},end:{line:278,column:22}},"130":{start:{line:279,column:6},end:{line:279,column:13}},"131":{start:{line:282,column:4},end:{line:289,column:5}},"132":{start:{line:283,column:6},end:{line:283,column:18}},"133":{start:{line:284,column:6},end:{line:284,column:13}},"134":{start:{line:287,column:6},end:{line:287,column:86}},"135":{start:{line:288,column:6},end:{line:288,column:78}},"136":{start:{line:294,column:2},end:{line:309,column:3}},"137":{start:{line:296,column:4},end:{line:296,column:56}},"138":{start:{line:297,column:9},end:{line:309,column:3}},"139":{start:{line:299,column:4},end:{line:299,column:40}},"140":{start:{line:300,column:9},end:{line:309,column:3}},"141":{start:{line:302,column:4},end:{line:302,column:36}},"142":{start:{line:303,column:9},end:{line:309,column:3}},"143":{start:{line:305,column:4},end:{line:305,column:47}},"144":{start:{line:308,column:4},end:{line:308,column:18}},"145":{start:{line:313,column:2},end:{line:313,column:54}},"146":{start:{line:313,column:47},end:{line:313,column:54}},"147":{start:{line:314,column:15},end:{line:314,column:53}},"148":{start:{line:317,column:19},end:{line:317,column:27}},"149":{start:{line:318,column:14},end:{line:318,column:54}},"150":{start:{line:320,column:2},end:{line:336,column:3}},"151":{start:{line:321,column:22},end:{line:321,column:72}},"152":{start:{line:322,column:22},end:{line:322,column:58}},"153":{start:{line:324,column:4},end:{line:335,column:5}},"154":{start:{line:325,column:6},end:{line:325,column:29}},"155":{start:{line:326,column:16},end:{line:326,column:30}},"156":{start:{line:327,column:24},end:{line:327,column:41}},"157":{start:{line:328,column:21},end:{line:328,column:45}},"158":{start:{line:330,column:6},end:{line:334,column:7}},"159":{start:{line:331,column:8},end:{line:331,column:70}},"160":{start:{line:333,column:8},end:{line:333,column:24}},"161":{start:{line:338,column:2},end:{line:342,column:4}},"162":{start:{line:346,column:2},end:{line:346,column:47}},"163":{start:{line:350,column:2},end:{line:370,column:4}},"164":{start:{line:351,column:19},end:{line:351,column:70}},"165":{start:{line:353,column:23},end:{line:353,column:46}},"166":{start:{line:355,column:4},end:{line:357,column:5}},"167":{start:{line:356,column:6},end:{line:356,column:60}},"168":{start:{line:359,column:24},end:{line:359,column:59}},"169":{start:{line:360,column:4},end:{line:360,column:59}},"170":{start:{line:361,column:4},end:{line:361,column:78}},"171":{start:{line:362,column:4},end:{line:362,column:61}},"172":{start:{line:363,column:4},end:{line:363,column:97}},"173":{start:{line:365,column:4},end:{line:369,column:5}},"174":{start:{line:366,column:6},end:{line:366,column:26}},"175":{start:{line:368,column:6},end:{line:368,column:13}},"176":{start:{line:374,column:2},end:{line:378,column:3}},"177":{start:{line:375,column:4},end:{line:375,column:36}},"178":{start:{line:376,column:4},end:{line:376,column:34}},"179":{start:{line:377,column:4},end:{line:377,column:28}},"180":{start:{line:380,column:2},end:{line:380,column:9}},"181":{start:{line:384,column:14},end:{line:384,column:74}},"182":{start:{line:386,column:2},end:{line:432,column:3}},"183":{start:{line:387,column:4},end:{line:389,column:5}},"184":{start:{line:388,column:6},end:{line:388,column:23}},"185":{start:{line:393,column:4},end:{line:404,column:5}},"186":{start:{line:395,column:8},end:{line:395,column:25}},"187":{start:{line:396,column:8},end:{line:396,column:14}},"188":{start:{line:399,column:8},end:{line:399,column:25}},"189":{start:{line:400,column:8},end:{line:400,column:14}},"190":{start:{line:403,column:8},end:{line:403,column:25}},"191":{start:{line:406,column:4},end:{line:406,column:27}},"192":{start:{line:407,column:4},end:{line:410,column:7}},"193":{start:{line:411,column:4},end:{line:411,column:36}},"194":{start:{line:412,column:9},end:{line:432,column:3}},"195":{start:{line:413,column:4},end:{line:413,column:27}},"196":{start:{line:414,column:4},end:{line:416,column:7}},"197":{start:{line:418,column:4},end:{line:420,column:5}},"198":{start:{line:419,column:6},end:{line:419,column:16}},"199":{start:{line:422,column:4},end:{line:422,column:65}},"200":{start:{line:423,column:4},end:{line:423,column:20}},"201":{start:{line:424,column:4},end:{line:427,column:7}},"202":{start:{line:429,column:4},end:{line:431,column:5}},"203":{start:{line:430,column:6},end:{line:430,column:16}},"204":{start:{line:436,column:2},end:{line:440,column:3}},"205":{start:{line:437,column:4},end:{line:437,column:20}},"206":{start:{line:438,column:4},end:{line:438,column:64}},"207":{start:{line:439,column:4},end:{line:439,column:11}},"208":{start:{line:442,column:2},end:{line:442,column:9}},"209":{start:{line:446,column:2},end:{line:451,column:3}},"210":{start:{line:447,column:18},end:{line:447,column:29}},"211":{start:{line:448,column:4},end:{line:448,column:23}},"212":{start:{line:449,column:4},end:{line:449,column:59}},"213":{start:{line:450,column:4},end:{line:450,column:16}},"214":{start:{line:453,column:2},end:{line:453,column:27}},"215":{start:{line:465,column:2},end:{line:467,column:3}},"216":{start:{line:466,column:4},end:{line:466,column:29}},"217":{start:{line:470,column:17},end:{line:470,column:27}},"218":{start:{line:471,column:20},end:{line:471,column:69}},"219":{start:{line:475,column:6},end:{line:475,column:31}},"220":{start:{line:477,column:2},end:{line:479,column:3}},"221":{start:{line:478,column:4},end:{line:478,column:29}},"222":{start:{line:483,column:18},end:{line:483,column:49}},"223":{start:{line:485,column:14},end:{line:485,column:19}},"224":{start:{line:487,column:2},end:{line:495,column:3}},"225":{start:{line:489,column:18},end:{line:489,column:72}},"226":{start:{line:491,column:4},end:{line:494,column:5}},"227":{start:{line:492,column:6},end:{line:492,column:19}},"228":{start:{line:493,column:6},end:{line:493,column:12}},"229":{start:{line:497,column:2},end:{line:499,column:3}},"230":{start:{line:498,column:4},end:{line:498,column:29}},"231":{start:{line:502,column:21},end:{line:502,column:83}},"232":{start:{line:503,column:2},end:{line:512,column:5}},"233":{start:{line:507,column:4},end:{line:509,column:5}},"234":{start:{line:508,column:6},end:{line:508,column:96}},"235":{start:{line:511,column:4},end:{line:511,column:12}},"236":{start:{line:516,column:2},end:{line:516,column:18}},"237":{start:{line:517,column:2},end:{line:517,column:38}},"238":{start:{line:521,column:2},end:{line:521,column:18}},"239":{start:{line:522,column:2},end:{line:525,column:5}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:31,column:9},end:{line:31,column:31}},loc:{start:{line:31,column:37},end:{line:31,column:95}},line:31},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:27},end:{line:36,column:28}},loc:{start:{line:36,column:42},end:{line:40,column:1}},line:36},"2":{name:"handleParseHeaders",decl:{start:{line:48,column:9},end:{line:48,column:27}},loc:{start:{line:48,column:44},end:{line:291,column:1}},line:48},"3":{name:"(anonymous_3)",decl:{start:{line:225,column:37},end:{line:225,column:38}},loc:{start:{line:225,column:52},end:{line:227,column:3}},line:225},"4":{name:"(anonymous_4)",decl:{start:{line:228,column:34},end:{line:228,column:35}},loc:{start:{line:228,column:49},end:{line:230,column:3}},line:228},"5":{name:"(anonymous_5)",decl:{start:{line:261,column:32},end:{line:261,column:33}},loc:{start:{line:261,column:38},end:{line:276,column:3}},line:261},"6":{name:"(anonymous_6)",decl:{start:{line:276,column:10},end:{line:276,column:11}},loc:{start:{line:276,column:18},end:{line:281,column:3}},line:276},"7":{name:"(anonymous_7)",decl:{start:{line:281,column:11},end:{line:281,column:12}},loc:{start:{line:281,column:20},end:{line:290,column:3}},line:281},"8":{name:"getClientIp",decl:{start:{line:293,column:9},end:{line:293,column:20}},loc:{start:{line:293,column:26},end:{line:310,column:1}},line:293},"9":{name:"httpAuth",decl:{start:{line:312,column:9},end:{line:312,column:17}},loc:{start:{line:312,column:23},end:{line:343,column:1}},line:312},"10":{name:"decodeBase64",decl:{start:{line:345,column:9},end:{line:345,column:21}},loc:{start:{line:345,column:27},end:{line:347,column:1}},line:345},"11":{name:"allowCrossDomain",decl:{start:{line:349,column:9},end:{line:349,column:25}},loc:{start:{line:349,column:33},end:{line:371,column:1}},line:349},"12":{name:"(anonymous_12)",decl:{start:{line:350,column:9},end:{line:350,column:10}},loc:{start:{line:350,column:29},end:{line:370,column:3}},line:350},"13":{name:"allowMethodOverride",decl:{start:{line:373,column:9},end:{line:373,column:28}},loc:{start:{line:373,column:45},end:{line:381,column:1}},line:373},"14":{name:"handleParseErrors",decl:{start:{line:383,column:9},end:{line:383,column:26}},loc:{start:{line:383,column:48},end:{line:433,column:1}},line:383},"15":{name:"enforceMasterKeyAccess",decl:{start:{line:435,column:9},end:{line:435,column:31}},loc:{start:{line:435,column:48},end:{line:443,column:1}},line:435},"16":{name:"promiseEnforceMasterKeyAccess",decl:{start:{line:445,column:9},end:{line:445,column:38}},loc:{start:{line:445,column:48},end:{line:454,column:1}},line:445},"17":{name:"promiseEnsureIdempotency",decl:{start:{line:463,column:9},end:{line:463,column:33}},loc:{start:{line:463,column:39},end:{line:513,column:1}},line:463},"18":{name:"(anonymous_18)",decl:{start:{line:506,column:11},end:{line:506,column:12}},loc:{start:{line:506,column:16},end:{line:512,column:3}},line:506},"19":{name:"invalidRequest",decl:{start:{line:515,column:9},end:{line:515,column:23}},loc:{start:{line:515,column:34},end:{line:518,column:1}},line:515},"20":{name:"malformedContext",decl:{start:{line:520,column:9},end:{line:520,column:25}},loc:{start:{line:520,column:36},end:{line:526,column:1}},line:520}},branchMap:{"0":{loc:{start:{line:31,column:46},end:{line:31,column:92}},type:"cond-expr",locations:[{start:{line:31,column:70},end:{line:31,column:73}},{start:{line:31,column:76},end:{line:31,column:92}}],line:31},"1":{loc:{start:{line:31,column:46},end:{line:31,column:67}},type:"binary-expr",locations:[{start:{line:31,column:46},end:{line:31,column:49}},{start:{line:31,column:53},end:{line:31,column:67}}],line:31},"2":{loc:{start:{line:52,column:2},end:{line:62,column:3}},type:"if",locations:[{start:{line:52,column:2},end:{line:62,column:3}},{start:{line:52,column:2},end:{line:62,column:3}}],line:52},"3":{loc:{start:{line:56,column:6},end:{line:58,column:7}},type:"if",locations:[{start:{line:56,column:6},end:{line:58,column:7}},{start:{line:56,column:6},end:{line:58,column:7}}],line:56},"4":{loc:{start:{line:78,column:2},end:{line:86,column:3}},type:"if",locations:[{start:{line:78,column:2},end:{line:86,column:3}},{start:{line:78,column:2},end:{line:86,column:3}}],line:78},"5":{loc:{start:{line:81,column:4},end:{line:85,column:5}},type:"if",locations:[{start:{line:81,column:4},end:{line:85,column:5}},{start:{line:81,column:4},end:{line:85,column:5}}],line:81},"6":{loc:{start:{line:83,column:23},end:{line:83,column:60}},type:"binary-expr",locations:[{start:{line:83,column:23},end:{line:83,column:42}},{start:{line:83,column:46},end:{line:83,column:60}}],line:83},"7":{loc:{start:{line:84,column:27},end:{line:84,column:72}},type:"binary-expr",locations:[{start:{line:84,column:27},end:{line:84,column:50}},{start:{line:84,column:54},end:{line:84,column:72}}],line:84},"8":{loc:{start:{line:88,column:2},end:{line:92,column:3}},type:"if",locations:[{start:{line:88,column:2},end:{line:92,column:3}},{start:{line:88,column:2},end:{line:92,column:3}}],line:88},"9":{loc:{start:{line:96,column:2},end:{line:169,column:3}},type:"if",locations:[{start:{line:96,column:2},end:{line:169,column:3}},{start:{line:96,column:2},end:{line:169,column:3}}],line:96},"10":{loc:{start:{line:96,column:6},end:{line:96,column:52}},type:"binary-expr",locations:[{start:{line:96,column:6},end:{line:96,column:17}},{start:{line:96,column:21},end:{line:96,column:52}}],line:96},"11":{loc:{start:{line:98,column:4},end:{line:111,column:5}},type:"if",locations:[{start:{line:98,column:4},end:{line:111,column:5}},{start:{line:98,column:4},end:{line:111,column:5}}],line:98},"12":{loc:{start:{line:113,column:4},end:{line:115,column:5}},type:"if",locations:[{start:{line:113,column:4},end:{line:115,column:5}},{start:{line:113,column:4},end:{line:115,column:5}}],line:113},"13":{loc:{start:{line:117,column:4},end:{line:168,column:5}},type:"if",locations:[{start:{line:117,column:4},end:{line:168,column:5}},{start:{line:117,column:4},end:{line:168,column:5}}],line:117},"14":{loc:{start:{line:117,column:8},end:{line:117,column:187}},type:"binary-expr",locations:[{start:{line:117,column:8},end:{line:117,column:16}},{start:{line:117,column:20},end:{line:117,column:43}},{start:{line:117,column:47},end:{line:117,column:90}},{start:{line:117,column:95},end:{line:117,column:110}},{start:{line:117,column:114},end:{line:117,column:186}}],line:117},"15":{loc:{start:{line:119,column:27},end:{line:119,column:56}},type:"binary-expr",locations:[{start:{line:119,column:27},end:{line:119,column:50}},{start:{line:119,column:54},end:{line:119,column:56}}],line:119},"16":{loc:{start:{line:124,column:6},end:{line:127,column:7}},type:"if",locations:[{start:{line:124,column:6},end:{line:127,column:7}},{start:{line:124,column:6},end:{line:127,column:7}}],line:124},"17":{loc:{start:{line:129,column:6},end:{line:132,column:7}},type:"if",locations:[{start:{line:129,column:6},end:{line:132,column:7}},{start:{line:129,column:6},end:{line:132,column:7}}],line:129},"18":{loc:{start:{line:134,column:6},end:{line:137,column:7}},type:"if",locations:[{start:{line:134,column:6},end:{line:137,column:7}},{start:{line:134,column:6},end:{line:137,column:7}}],line:134},"19":{loc:{start:{line:139,column:6},end:{line:142,column:7}},type:"if",locations:[{start:{line:139,column:6},end:{line:142,column:7}},{start:{line:139,column:6},end:{line:142,column:7}}],line:139},"20":{loc:{start:{line:144,column:6},end:{line:160,column:7}},type:"if",locations:[{start:{line:144,column:6},end:{line:160,column:7}},{start:{line:144,column:6},end:{line:160,column:7}}],line:144},"21":{loc:{start:{line:145,column:8},end:{line:157,column:9}},type:"if",locations:[{start:{line:145,column:8},end:{line:157,column:9}},{start:{line:145,column:8},end:{line:157,column:9}}],line:145},"22":{loc:{start:{line:151,column:12},end:{line:153,column:13}},type:"if",locations:[{start:{line:151,column:12},end:{line:153,column:13}},{start:{line:151,column:12},end:{line:153,column:13}}],line:151},"23":{loc:{start:{line:162,column:6},end:{line:165,column:7}},type:"if",locations:[{start:{line:162,column:6},end:{line:165,column:7}},{start:{line:162,column:6},end:{line:165,column:7}}],line:162},"24":{loc:{start:{line:171,column:2},end:{line:173,column:3}},type:"if",locations:[{start:{line:171,column:2},end:{line:173,column:3}},{start:{line:171,column:2},end:{line:173,column:3}}],line:171},"25":{loc:{start:{line:171,column:6},end:{line:171,column:64}},type:"binary-expr",locations:[{start:{line:171,column:6},end:{line:171,column:23}},{start:{line:171,column:27},end:{line:171,column:64}}],line:171},"26":{loc:{start:{line:175,column:2},end:{line:177,column:3}},type:"if",locations:[{start:{line:175,column:2},end:{line:177,column:3}},{start:{line:175,column:2},end:{line:177,column:3}}],line:175},"27":{loc:{start:{line:179,column:2},end:{line:184,column:3}},type:"if",locations:[{start:{line:179,column:2},end:{line:184,column:3}},{start:{line:179,column:2},end:{line:184,column:3}}],line:179},"28":{loc:{start:{line:189,column:23},end:{line:189,column:40}},type:"binary-expr",locations:[{start:{line:189,column:23},end:{line:189,column:34}},{start:{line:189,column:38},end:{line:189,column:40}}],line:189},"29":{loc:{start:{line:193,column:2},end:{line:195,column:3}},type:"if",locations:[{start:{line:193,column:2},end:{line:195,column:3}},{start:{line:193,column:2},end:{line:195,column:3}}],line:193},"30":{loc:{start:{line:193,column:6},end:{line:193,column:139}},type:"binary-expr",locations:[{start:{line:193,column:6},end:{line:193,column:20}},{start:{line:193,column:24},end:{line:193,column:47}},{start:{line:193,column:51},end:{line:193,column:87}},{start:{line:193,column:91},end:{line:193,column:139}}],line:193},"31":{loc:{start:{line:199,column:2},end:{line:207,column:3}},type:"if",locations:[{start:{line:199,column:2},end:{line:207,column:3}},{start:{line:199,column:2},end:{line:207,column:3}}],line:199},"32":{loc:{start:{line:211,column:2},end:{line:220,column:3}},type:"if",locations:[{start:{line:211,column:2},end:{line:220,column:3}},{start:{line:211,column:2},end:{line:220,column:3}}],line:211},"33":{loc:{start:{line:211,column:6},end:{line:211,column:108}},type:"binary-expr",locations:[{start:{line:211,column:6},end:{line:211,column:56}},{start:{line:211,column:60},end:{line:211,column:88}},{start:{line:211,column:92},end:{line:211,column:108}}],line:211},"34":{loc:{start:{line:229,column:11},end:{line:229,column:73}},type:"binary-expr",locations:[{start:{line:229,column:11},end:{line:229,column:40}},{start:{line:229,column:44},end:{line:229,column:73}}],line:229},"35":{loc:{start:{line:232,column:2},end:{line:234,column:3}},type:"if",locations:[{start:{line:232,column:2},end:{line:234,column:3}},{start:{line:232,column:2},end:{line:234,column:3}}],line:232},"36":{loc:{start:{line:232,column:6},end:{line:232,column:40}},type:"binary-expr",locations:[{start:{line:232,column:6},end:{line:232,column:22}},{start:{line:232,column:26},end:{line:232,column:40}}],line:232},"37":{loc:{start:{line:236,column:2},end:{line:238,column:3}},type:"if",locations:[{start:{line:236,column:2},end:{line:238,column:3}},{start:{line:236,column:2},end:{line:238,column:3}}],line:236},"38":{loc:{start:{line:240,column:2},end:{line:249,column:3}},type:"if",locations:[{start:{line:240,column:2},end:{line:249,column:3}},{start:{line:240,column:2},end:{line:249,column:3}}],line:240},"39":{loc:{start:{line:251,column:2},end:{line:259,column:3}},type:"if",locations:[{start:{line:251,column:2},end:{line:259,column:3}},{start:{line:251,column:2},end:{line:259,column:3}}],line:251},"40":{loc:{start:{line:263,column:4},end:{line:275,column:5}},type:"if",locations:[{start:{line:263,column:4},end:{line:275,column:5}},{start:{line:263,column:4},end:{line:275,column:5}}],line:263},"41":{loc:{start:{line:263,column:8},end:{line:263,column:109}},type:"binary-expr",locations:[{start:{line:263,column:8},end:{line:263,column:25}},{start:{line:263,column:29},end:{line:263,column:69}},{start:{line:263,column:73},end:{line:263,column:109}}],line:263},"42":{loc:{start:{line:277,column:4},end:{line:280,column:5}},type:"if",locations:[{start:{line:277,column:4},end:{line:280,column:5}},{start:{line:277,column:4},end:{line:280,column:5}}],line:277},"43":{loc:{start:{line:282,column:4},end:{line:289,column:5}},type:"if",locations:[{start:{line:282,column:4},end:{line:289,column:5}},{start:{line:282,column:4},end:{line:289,column:5}}],line:282},"44":{loc:{start:{line:294,column:2},end:{line:309,column:3}},type:"if",locations:[{start:{line:294,column:2},end:{line:309,column:3}},{start:{line:294,column:2},end:{line:309,column:3}}],line:294},"45":{loc:{start:{line:297,column:9},end:{line:309,column:3}},type:"if",locations:[{start:{line:297,column:9},end:{line:309,column:3}},{start:{line:297,column:9},end:{line:309,column:3}}],line:297},"46":{loc:{start:{line:297,column:13},end:{line:297,column:59}},type:"binary-expr",locations:[{start:{line:297,column:13},end:{line:297,column:27}},{start:{line:297,column:31},end:{line:297,column:59}}],line:297},"47":{loc:{start:{line:300,column:9},end:{line:309,column:3}},type:"if",locations:[{start:{line:300,column:9},end:{line:309,column:3}},{start:{line:300,column:9},end:{line:309,column:3}}],line:300},"48":{loc:{start:{line:303,column:9},end:{line:309,column:3}},type:"if",locations:[{start:{line:303,column:9},end:{line:309,column:3}},{start:{line:303,column:9},end:{line:309,column:3}}],line:303},"49":{loc:{start:{line:303,column:13},end:{line:303,column:52}},type:"binary-expr",locations:[{start:{line:303,column:13},end:{line:303,column:27}},{start:{line:303,column:31},end:{line:303,column:52}}],line:303},"50":{loc:{start:{line:313,column:2},end:{line:313,column:54}},type:"if",locations:[{start:{line:313,column:2},end:{line:313,column:54}},{start:{line:313,column:2},end:{line:313,column:54}}],line:313},"51":{loc:{start:{line:313,column:8},end:{line:313,column:22}},type:"binary-expr",locations:[{start:{line:313,column:8},end:{line:313,column:15}},{start:{line:313,column:19},end:{line:313,column:22}}],line:313},"52":{loc:{start:{line:314,column:16},end:{line:314,column:30}},type:"binary-expr",locations:[{start:{line:314,column:16},end:{line:314,column:23}},{start:{line:314,column:27},end:{line:314,column:30}}],line:314},"53":{loc:{start:{line:320,column:2},end:{line:336,column:3}},type:"if",locations:[{start:{line:320,column:2},end:{line:336,column:3}},{start:{line:320,column:2},end:{line:336,column:3}}],line:320},"54":{loc:{start:{line:324,column:4},end:{line:335,column:5}},type:"if",locations:[{start:{line:324,column:4},end:{line:335,column:5}},{start:{line:324,column:4},end:{line:335,column:5}}],line:324},"55":{loc:{start:{line:330,column:6},end:{line:334,column:7}},type:"if",locations:[{start:{line:330,column:6},end:{line:334,column:7}},{start:{line:330,column:6},end:{line:334,column:7}}],line:330},"56":{loc:{start:{line:355,column:4},end:{line:357,column:5}},type:"if",locations:[{start:{line:355,column:4},end:{line:357,column:5}},{start:{line:355,column:4},end:{line:357,column:5}}],line:355},"57":{loc:{start:{line:355,column:8},end:{line:355,column:37}},type:"binary-expr",locations:[{start:{line:355,column:8},end:{line:355,column:14}},{start:{line:355,column:18},end:{line:355,column:37}}],line:355},"58":{loc:{start:{line:359,column:24},end:{line:359,column:59}},type:"binary-expr",locations:[{start:{line:359,column:24},end:{line:359,column:30}},{start:{line:359,column:34},end:{line:359,column:52}},{start:{line:359,column:56},end:{line:359,column:59}}],line:359},"59":{loc:{start:{line:365,column:4},end:{line:369,column:5}},type:"if",locations:[{start:{line:365,column:4},end:{line:369,column:5}},{start:{line:365,column:4},end:{line:369,column:5}}],line:365},"60":{loc:{start:{line:374,column:2},end:{line:378,column:3}},type:"if",locations:[{start:{line:374,column:2},end:{line:378,column:3}},{start:{line:374,column:2},end:{line:378,column:3}}],line:374},"61":{loc:{start:{line:374,column:6},end:{line:374,column:47}},type:"binary-expr",locations:[{start:{line:374,column:6},end:{line:374,column:27}},{start:{line:374,column:31},end:{line:374,column:47}}],line:374},"62":{loc:{start:{line:384,column:14},end:{line:384,column:74}},type:"binary-expr",locations:[{start:{line:384,column:14},end:{line:384,column:24}},{start:{line:384,column:28},end:{line:384,column:55}},{start:{line:384,column:59},end:{line:384,column:74}}],line:384},"63":{loc:{start:{line:386,column:2},end:{line:432,column:3}},type:"if",locations:[{start:{line:386,column:2},end:{line:432,column:3}},{start:{line:386,column:2},end:{line:432,column:3}}],line:386},"64":{loc:{start:{line:387,column:4},end:{line:389,column:5}},type:"if",locations:[{start:{line:387,column:4},end:{line:389,column:5}},{start:{line:387,column:4},end:{line:389,column:5}}],line:387},"65":{loc:{start:{line:387,column:8},end:{line:387,column:58}},type:"binary-expr",locations:[{start:{line:387,column:8},end:{line:387,column:18}},{start:{line:387,column:22},end:{line:387,column:58}}],line:387},"66":{loc:{start:{line:393,column:4},end:{line:404,column:5}},type:"switch",locations:[{start:{line:394,column:6},end:{line:396,column:14}},{start:{line:398,column:6},end:{line:400,column:14}},{start:{line:402,column:6},end:{line:403,column:25}}],line:393},"67":{loc:{start:{line:412,column:9},end:{line:432,column:3}},type:"if",locations:[{start:{line:412,column:9},end:{line:432,column:3}},{start:{line:412,column:9},end:{line:432,column:3}}],line:412},"68":{loc:{start:{line:412,column:13},end:{line:412,column:38}},type:"binary-expr",locations:[{start:{line:412,column:13},end:{line:412,column:23}},{start:{line:412,column:27},end:{line:412,column:38}}],line:412},"69":{loc:{start:{line:418,column:4},end:{line:420,column:5}},type:"if",locations:[{start:{line:418,column:4},end:{line:420,column:5}},{start:{line:418,column:4},end:{line:420,column:5}}],line:418},"70":{loc:{start:{line:418,column:10},end:{line:418,column:40}},type:"binary-expr",locations:[{start:{line:418,column:10},end:{line:418,column:17}},{start:{line:418,column:21},end:{line:418,column:40}}],line:418},"71":{loc:{start:{line:429,column:4},end:{line:431,column:5}},type:"if",locations:[{start:{line:429,column:4},end:{line:431,column:5}},{start:{line:429,column:4},end:{line:431,column:5}}],line:429},"72":{loc:{start:{line:429,column:10},end:{line:429,column:40}},type:"binary-expr",locations:[{start:{line:429,column:10},end:{line:429,column:17}},{start:{line:429,column:21},end:{line:429,column:40}}],line:429},"73":{loc:{start:{line:436,column:2},end:{line:440,column:3}},type:"if",locations:[{start:{line:436,column:2},end:{line:440,column:3}},{start:{line:436,column:2},end:{line:440,column:3}}],line:436},"74":{loc:{start:{line:446,column:2},end:{line:451,column:3}},type:"if",locations:[{start:{line:446,column:2},end:{line:451,column:3}},{start:{line:446,column:2},end:{line:451,column:3}}],line:446},"75":{loc:{start:{line:465,column:2},end:{line:467,column:3}},type:"if",locations:[{start:{line:465,column:2},end:{line:467,column:3}},{start:{line:465,column:2},end:{line:467,column:3}}],line:465},"76":{loc:{start:{line:471,column:21},end:{line:471,column:46}},type:"binary-expr",locations:[{start:{line:471,column:21},end:{line:471,column:40}},{start:{line:471,column:44},end:{line:471,column:46}}],line:471},"77":{loc:{start:{line:471,column:22},end:{line:471,column:31}},type:"binary-expr",locations:[{start:{line:471,column:22},end:{line:471,column:25}},{start:{line:471,column:29},end:{line:471,column:31}}],line:471},"78":{loc:{start:{line:477,column:2},end:{line:479,column:3}},type:"if",locations:[{start:{line:477,column:2},end:{line:479,column:3}},{start:{line:477,column:2},end:{line:479,column:3}}],line:477},"79":{loc:{start:{line:477,column:6},end:{line:477,column:46}},type:"binary-expr",locations:[{start:{line:477,column:6},end:{line:477,column:16}},{start:{line:477,column:20},end:{line:477,column:46}}],line:477},"80":{loc:{start:{line:489,column:29},end:{line:489,column:71}},type:"cond-expr",locations:[{start:{line:489,column:54},end:{line:489,column:58}},{start:{line:489,column:61},end:{line:489,column:71}}],line:489},"81":{loc:{start:{line:491,column:4},end:{line:494,column:5}},type:"if",locations:[{start:{line:491,column:4},end:{line:494,column:5}},{start:{line:491,column:4},end:{line:494,column:5}}],line:491},"82":{loc:{start:{line:497,column:2},end:{line:499,column:3}},type:"if",locations:[{start:{line:497,column:2},end:{line:499,column:3}},{start:{line:497,column:2},end:{line:499,column:3}}],line:497},"83":{loc:{start:{line:507,column:4},end:{line:509,column:5}},type:"if",locations:[{start:{line:507,column:4},end:{line:509,column:5}},{start:{line:507,column:4},end:{line:509,column:5}}],line:507}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0]},inputSourceMap:{version:3,sources:["../src/middlewares.js"],names:["DEFAULT_ALLOWED_HEADERS","getMountForRequest","req","mountPathLength","originalUrl","length","url","mountPath","slice","protocol","get","handleParseHeaders","res","next","mount","context","JSON","parse","Object","prototype","toString","call","e","malformedContext","info","appId","sessionToken","masterKey","installationId","clientKey","javascriptKey","dotNetKey","restAPIKey","clientVersion","basicAuth","httpAuth","basicAuthAppId","AppCache","body","_noBody","fileViaJSON","Buffer","invalidRequest","_RevocableSession","_ApplicationId","_JavaScriptKey","_ClientVersion","_InstallationId","_SessionToken","_MasterKey","_context","_ContentType","headers","clientSDK","ClientSDK","fromString","fileData","base64","from","clientIp","getClientIp","app","config","Config","ip","masterKeyIps","indexOf","isMaster","auth","Auth","isReadOnlyMaster","readOnlyMasterKey","isReadOnly","keys","oneKeyConfigured","some","key","undefined","oneKeyMatches","userFromJWT","user","Promise","resolve","then","getAuthForLegacySessionToken","getAuthForSessionToken","catch","error","Parse","Error","loggerController","UNKNOWN_ERROR","split","connection","remoteAddress","socket","authorization","header","authPrefix","match","toLowerCase","encodedAuth","substring","credentials","decodeBase64","jsKeyPrefix","matchKey","str","allowCrossDomain","allowHeaders","join","allowOrigin","method","sendStatus","allowMethodOverride","_method","originalMethod","handleParseErrors","err","log","defaultLogger","enableExpressErrorHandler","httpStatus","code","INTERNAL_SERVER_ERROR","OBJECT_NOT_FOUND","status","json","message","process","env","TESTING","stack","enforceMasterKeyAccess","end","promiseEnforceMasterKeyAccess","request","promiseEnsureIdempotency","database","adapter","MongoStorageAdapter","requestId","paths","ttl","idempotencyOptions","reqPath","path","replace","regex","RegExp","charAt","expiryDate","Date","setSeconds","getSeconds","rest","create","master","reqId","expire","_encode","DUPLICATE_VALUE","DUPLICATE_REQUEST","INVALID_JSON"],mappings:"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",sourcesContent:["import AppCache from './cache';\nimport Parse from 'parse/node';\nimport auth from './Auth';\nimport Config from './Config';\nimport ClientSDK from './ClientSDK';\nimport defaultLogger from './logger';\nimport rest from './rest';\nimport MongoStorageAdapter from './Adapters/Storage/Mongo/MongoStorageAdapter';\n\nexport const DEFAULT_ALLOWED_HEADERS =\n  'X-Parse-Master-Key, X-Parse-REST-API-Key, X-Parse-Javascript-Key, X-Parse-Application-Id, X-Parse-Client-Version, X-Parse-Session-Token, X-Requested-With, X-Parse-Revocable-Session, X-Parse-Request-Id, Content-Type, Pragma, Cache-Control';\n\nconst getMountForRequest = function (req) {\n  const mountPathLength = req.originalUrl.length - req.url.length;\n  const mountPath = req.originalUrl.slice(0, mountPathLength);\n  return req.protocol + '://' + req.get('host') + mountPath;\n};\n\n// Checks that the request is authorized for this app and checks user\n// auth too.\n// The bodyparser should run before this middleware.\n// Adds info to the request:\n// req.config - the Config for this app\n// req.auth - the Auth for this request\nexport function handleParseHeaders(req, res, next) {\n  var mount = getMountForRequest(req);\n\n  let context = {};\n  if (req.get('X-Parse-Cloud-Context') != null) {\n    try {\n      context = JSON.parse(req.get('X-Parse-Cloud-Context'));\n      if (Object.prototype.toString.call(context) !== '[object Object]') {\n        throw 'Context is not an object';\n      }\n    } catch (e) {\n      return malformedContext(req, res);\n    }\n  }\n  var info = {\n    appId: req.get('X-Parse-Application-Id'),\n    sessionToken: req.get('X-Parse-Session-Token'),\n    masterKey: req.get('X-Parse-Master-Key'),\n    installationId: req.get('X-Parse-Installation-Id'),\n    clientKey: req.get('X-Parse-Client-Key'),\n    javascriptKey: req.get('X-Parse-Javascript-Key'),\n    dotNetKey: req.get('X-Parse-Windows-Key'),\n    restAPIKey: req.get('X-Parse-REST-API-Key'),\n    clientVersion: req.get('X-Parse-Client-Version'),\n    context: context,\n  };\n\n  var basicAuth = httpAuth(req);\n\n  if (basicAuth) {\n    var basicAuthAppId = basicAuth.appId;\n    if (AppCache.get(basicAuthAppId)) {\n      info.appId = basicAuthAppId;\n      info.masterKey = basicAuth.masterKey || info.masterKey;\n      info.javascriptKey = basicAuth.javascriptKey || info.javascriptKey;\n    }\n  }\n\n  if (req.body) {\n    // Unity SDK sends a _noBody key which needs to be removed.\n    // Unclear at this point if action needs to be taken.\n    delete req.body._noBody;\n  }\n\n  var fileViaJSON = false;\n\n  if (!info.appId || !AppCache.get(info.appId)) {\n    // See if we can find the app id on the body.\n    if (req.body instanceof Buffer) {\n      // The only chance to find the app id is if this is a file\n      // upload that actually is a JSON body. So try to parse it.\n      // https://github.com/parse-community/parse-server/issues/6589\n      // It is also possible that the client is trying to upload a file but forgot\n      // to provide x-parse-app-id in header and parse a binary file will fail\n      try {\n        req.body = JSON.parse(req.body);\n      } catch (e) {\n        return invalidRequest(req, res);\n      }\n      fileViaJSON = true;\n    }\n\n    if (req.body) {\n      delete req.body._RevocableSession;\n    }\n\n    if (\n      req.body &&\n      req.body._ApplicationId &&\n      AppCache.get(req.body._ApplicationId) &&\n      (!info.masterKey || AppCache.get(req.body._ApplicationId).masterKey === info.masterKey)\n    ) {\n      info.appId = req.body._ApplicationId;\n      info.javascriptKey = req.body._JavaScriptKey || '';\n      delete req.body._ApplicationId;\n      delete req.body._JavaScriptKey;\n      // TODO: test that the REST API formats generated by the other\n      // SDKs are handled ok\n      if (req.body._ClientVersion) {\n        info.clientVersion = req.body._ClientVersion;\n        delete req.body._ClientVersion;\n      }\n      if (req.body._InstallationId) {\n        info.installationId = req.body._InstallationId;\n        delete req.body._InstallationId;\n      }\n      if (req.body._SessionToken) {\n        info.sessionToken = req.body._SessionToken;\n        delete req.body._SessionToken;\n      }\n      if (req.body._MasterKey) {\n        info.masterKey = req.body._MasterKey;\n        delete req.body._MasterKey;\n      }\n      if (req.body._context) {\n        if (req.body._context instanceof Object) {\n          info.context = req.body._context;\n        } else {\n          try {\n            info.context = JSON.parse(req.body._context);\n            if (Object.prototype.toString.call(info.context) !== '[object Object]') {\n              throw 'Context is not an object';\n            }\n          } catch (e) {\n            return malformedContext(req, res);\n          }\n        }\n        delete req.body._context;\n      }\n      if (req.body._ContentType) {\n        req.headers['content-type'] = req.body._ContentType;\n        delete req.body._ContentType;\n      }\n    } else {\n      return invalidRequest(req, res);\n    }\n  }\n\n  if (info.sessionToken && typeof info.sessionToken !== 'string') {\n    info.sessionToken = info.sessionToken.toString();\n  }\n\n  if (info.clientVersion) {\n    info.clientSDK = ClientSDK.fromString(info.clientVersion);\n  }\n\n  if (fileViaJSON) {\n    req.fileData = req.body.fileData;\n    // We need to repopulate req.body with a buffer\n    var base64 = req.body.base64;\n    req.body = Buffer.from(base64, 'base64');\n  }\n\n  const clientIp = getClientIp(req);\n\n  info.app = AppCache.get(info.appId);\n  req.config = Config.get(info.appId, mount);\n  req.config.headers = req.headers || {};\n  req.config.ip = clientIp;\n  req.info = info;\n\n  if (\n    info.masterKey &&\n    req.config.masterKeyIps &&\n    req.config.masterKeyIps.length !== 0 &&\n    req.config.masterKeyIps.indexOf(clientIp) === -1\n  ) {\n    return invalidRequest(req, res);\n  }\n\n  var isMaster = info.masterKey === req.config.masterKey;\n\n  if (isMaster) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: true,\n    });\n    next();\n    return;\n  }\n\n  var isReadOnlyMaster = info.masterKey === req.config.readOnlyMasterKey;\n  if (\n    typeof req.config.readOnlyMasterKey != 'undefined' &&\n    req.config.readOnlyMasterKey &&\n    isReadOnlyMaster\n  ) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: true,\n      isReadOnly: true,\n    });\n    next();\n    return;\n  }\n\n  // Client keys are not required in parse-server, but if any have been configured in the server, validate them\n  //  to preserve original behavior.\n  const keys = ['clientKey', 'javascriptKey', 'dotNetKey', 'restAPIKey'];\n  const oneKeyConfigured = keys.some(function (key) {\n    return req.config[key] !== undefined;\n  });\n  const oneKeyMatches = keys.some(function (key) {\n    return req.config[key] !== undefined && info[key] === req.config[key];\n  });\n\n  if (oneKeyConfigured && !oneKeyMatches) {\n    return invalidRequest(req, res);\n  }\n\n  if (req.url == '/login') {\n    delete info.sessionToken;\n  }\n\n  if (req.userFromJWT) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: false,\n      user: req.userFromJWT,\n    });\n    next();\n    return;\n  }\n\n  if (!info.sessionToken) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: false,\n    });\n    next();\n    return;\n  }\n\n  return Promise.resolve()\n    .then(() => {\n      // handle the upgradeToRevocableSession path on it's own\n      if (\n        info.sessionToken &&\n        req.url === '/upgradeToRevocableSession' &&\n        info.sessionToken.indexOf('r:') != 0\n      ) {\n        return auth.getAuthForLegacySessionToken({\n          config: req.config,\n          installationId: info.installationId,\n          sessionToken: info.sessionToken,\n        });\n      } else {\n        return auth.getAuthForSessionToken({\n          config: req.config,\n          installationId: info.installationId,\n          sessionToken: info.sessionToken,\n        });\n      }\n    })\n    .then(auth => {\n      if (auth) {\n        req.auth = auth;\n        next();\n      }\n    })\n    .catch(error => {\n      if (error instanceof Parse.Error) {\n        next(error);\n        return;\n      } else {\n        // TODO: Determine the correct error scenario.\n        req.config.loggerController.error('error getting auth for sessionToken', error);\n        throw new Parse.Error(Parse.Error.UNKNOWN_ERROR, error);\n      }\n    });\n}\n\nfunction getClientIp(req) {\n  if (req.headers['x-forwarded-for']) {\n    // try to get from x-forwared-for if it set (behind reverse proxy)\n    return req.headers['x-forwarded-for'].split(',')[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    // no proxy, try getting from connection.remoteAddress\n    return req.connection.remoteAddress;\n  } else if (req.socket) {\n    // try to get it from req.socket\n    return req.socket.remoteAddress;\n  } else if (req.connection && req.connection.socket) {\n    // try to get it form the connection.socket\n    return req.connection.socket.remoteAddress;\n  } else {\n    // if non above, fallback.\n    return req.ip;\n  }\n}\n\nfunction httpAuth(req) {\n  if (!(req.req || req).headers.authorization) return;\n\n  var header = (req.req || req).headers.authorization;\n  var appId, masterKey, javascriptKey;\n\n  // parse header\n  var authPrefix = 'basic ';\n\n  var match = header.toLowerCase().indexOf(authPrefix);\n\n  if (match == 0) {\n    var encodedAuth = header.substring(authPrefix.length, header.length);\n    var credentials = decodeBase64(encodedAuth).split(':');\n\n    if (credentials.length == 2) {\n      appId = credentials[0];\n      var key = credentials[1];\n\n      var jsKeyPrefix = 'javascript-key=';\n\n      var matchKey = key.indexOf(jsKeyPrefix);\n      if (matchKey == 0) {\n        javascriptKey = key.substring(jsKeyPrefix.length, key.length);\n      } else {\n        masterKey = key;\n      }\n    }\n  }\n\n  return { appId: appId, masterKey: masterKey, javascriptKey: javascriptKey };\n}\n\nfunction decodeBase64(str) {\n  return Buffer.from(str, 'base64').toString();\n}\n\nexport function allowCrossDomain(appId) {\n  return (req, res, next) => {\n    const config = Config.get(appId, getMountForRequest(req));\n    let allowHeaders = DEFAULT_ALLOWED_HEADERS;\n    if (config && config.allowHeaders) {\n      allowHeaders += `, ${config.allowHeaders.join(', ')}`;\n    }\n    const allowOrigin = (config && config.allowOrigin) || '*';\n    res.header('Access-Control-Allow-Origin', allowOrigin);\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n    res.header('Access-Control-Allow-Headers', allowHeaders);\n    res.header('Access-Control-Expose-Headers', 'X-Parse-Job-Status-Id, X-Parse-Push-Status-Id');\n    // intercept OPTIONS method\n    if ('OPTIONS' == req.method) {\n      res.sendStatus(200);\n    } else {\n      next();\n    }\n  };\n}\n\nexport function allowMethodOverride(req, res, next) {\n  if (req.method === 'POST' && req.body._method) {\n    req.originalMethod = req.method;\n    req.method = req.body._method;\n    delete req.body._method;\n  }\n  next();\n}\n\nexport function handleParseErrors(err, req, res, next) {\n  const log = (req.config && req.config.loggerController) || defaultLogger;\n  if (err instanceof Parse.Error) {\n    if (req.config && req.config.enableExpressErrorHandler) {\n      return next(err);\n    }\n    let httpStatus;\n    // TODO: fill out this mapping\n    switch (err.code) {\n      case Parse.Error.INTERNAL_SERVER_ERROR:\n        httpStatus = 500;\n        break;\n      case Parse.Error.OBJECT_NOT_FOUND:\n        httpStatus = 404;\n        break;\n      default:\n        httpStatus = 400;\n    }\n    res.status(httpStatus);\n    res.json({ code: err.code, error: err.message });\n    log.error('Parse error: ', err);\n  } else if (err.status && err.message) {\n    res.status(err.status);\n    res.json({ error: err.message });\n    if (!(process && process.env.TESTING)) {\n      next(err);\n    }\n  } else {\n    log.error('Uncaught internal server error.', err, err.stack);\n    res.status(500);\n    res.json({\n      code: Parse.Error.INTERNAL_SERVER_ERROR,\n      message: 'Internal server error.',\n    });\n    if (!(process && process.env.TESTING)) {\n      next(err);\n    }\n  }\n}\n\nexport function enforceMasterKeyAccess(req, res, next) {\n  if (!req.auth.isMaster) {\n    res.status(403);\n    res.end('{\"error\":\"unauthorized: master key is required\"}');\n    return;\n  }\n  next();\n}\n\nexport function promiseEnforceMasterKeyAccess(request) {\n  if (!request.auth.isMaster) {\n    const error = new Error();\n    error.status = 403;\n    error.message = 'unauthorized: master key is required';\n    throw error;\n  }\n  return Promise.resolve();\n}\n\n/**\n * Deduplicates a request to ensure idempotency. Duplicates are determined by the request ID\n * in the request header. If a request has no request ID, it is executed anyway.\n * @param {*} req The request to evaluate.\n * @returns Promise<{}>\n */\nexport function promiseEnsureIdempotency(req) {\n  // Enable feature only for MongoDB\n  if (!(req.config.database.adapter instanceof MongoStorageAdapter)) {\n    return Promise.resolve();\n  }\n  // Get parameters\n  const config = req.config;\n  const requestId = ((req || {}).headers || {})['x-parse-request-id'];\n  const { paths, ttl } = config.idempotencyOptions;\n  if (!requestId || !config.idempotencyOptions) {\n    return Promise.resolve();\n  }\n  // Request path may contain trailing slashes, depending on the original request, so remove\n  // leading and trailing slashes to make it easier to specify paths in the configuration\n  const reqPath = req.path.replace(/^\\/|\\/$/, '');\n  // Determine whether idempotency is enabled for current request path\n  let match = false;\n  for (const path of paths) {\n    // Assume one wants a path to always match from the beginning to prevent any mistakes\n    const regex = new RegExp(path.charAt(0) === '^' ? path : '^' + path);\n    if (reqPath.match(regex)) {\n      match = true;\n      break;\n    }\n  }\n  if (!match) {\n    return Promise.resolve();\n  }\n  // Try to store request\n  const expiryDate = new Date(new Date().setSeconds(new Date().getSeconds() + ttl));\n  return rest\n    .create(config, auth.master(config), '_Idempotency', {\n      reqId: requestId,\n      expire: Parse._encode(expiryDate),\n    })\n    .catch(e => {\n      if (e.code == Parse.Error.DUPLICATE_VALUE) {\n        throw new Parse.Error(Parse.Error.DUPLICATE_REQUEST, 'Duplicate request');\n      }\n      throw e;\n    });\n}\n\nfunction invalidRequest(req, res) {\n  res.status(403);\n  res.end('{\"error\":\"unauthorized\"}');\n}\n\nfunction malformedContext(req, res) {\n  res.status(400);\n  res.json({ code: Parse.Error.INVALID_JSON, error: 'Invalid object for context.' });\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4f62cd50b0d8160b90be9a5f8479537a488ff865"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mghmeqoe3=function(){return actualCoverage;};}return actualCoverage;}cov_2mghmeqoe3();cov_2mghmeqoe3().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2mghmeqoe3().s[1]++;exports.handleParseHeaders=handleParseHeaders;cov_2mghmeqoe3().s[2]++;exports.allowCrossDomain=allowCrossDomain;cov_2mghmeqoe3().s[3]++;exports.allowMethodOverride=allowMethodOverride;cov_2mghmeqoe3().s[4]++;exports.handleParseErrors=handleParseErrors;cov_2mghmeqoe3().s[5]++;exports.enforceMasterKeyAccess=enforceMasterKeyAccess;cov_2mghmeqoe3().s[6]++;exports.promiseEnforceMasterKeyAccess=promiseEnforceMasterKeyAccess;cov_2mghmeqoe3().s[7]++;exports.promiseEnsureIdempotency=promiseEnsureIdempotency;cov_2mghmeqoe3().s[8]++;exports.DEFAULT_ALLOWED_HEADERS=void 0;var _cache=(cov_2mghmeqoe3().s[9]++,_interopRequireDefault(require("./cache")));var _node=(cov_2mghmeqoe3().s[10]++,_interopRequireDefault(require("parse/node")));var _Auth=(cov_2mghmeqoe3().s[11]++,_interopRequireDefault(require("./Auth")));var _Config=(cov_2mghmeqoe3().s[12]++,_interopRequireDefault(require("./Config")));var _ClientSDK=(cov_2mghmeqoe3().s[13]++,_interopRequireDefault(require("./ClientSDK")));var _logger=(cov_2mghmeqoe3().s[14]++,_interopRequireDefault(require("./logger")));var _rest=(cov_2mghmeqoe3().s[15]++,_interopRequireDefault(require("./rest")));var _MongoStorageAdapter=(cov_2mghmeqoe3().s[16]++,_interopRequireDefault(require("./Adapters/Storage/Mongo/MongoStorageAdapter")));function _interopRequireDefault(obj){cov_2mghmeqoe3().f[0]++;cov_2mghmeqoe3().s[17]++;return(cov_2mghmeqoe3().b[1][0]++,obj)&&(cov_2mghmeqoe3().b[1][1]++,obj.__esModule)?(cov_2mghmeqoe3().b[0][0]++,obj):(cov_2mghmeqoe3().b[0][1]++,{default:obj});}const DEFAULT_ALLOWED_HEADERS=(cov_2mghmeqoe3().s[18]++,'X-Parse-Master-Key, X-Parse-REST-API-Key, X-Parse-Javascript-Key, X-Parse-Application-Id, X-Parse-Client-Version, X-Parse-Session-Token, X-Requested-With, X-Parse-Revocable-Session, X-Parse-Request-Id, Content-Type, Pragma, Cache-Control');cov_2mghmeqoe3().s[19]++;exports.DEFAULT_ALLOWED_HEADERS=DEFAULT_ALLOWED_HEADERS;cov_2mghmeqoe3().s[20]++;const getMountForRequest=function(req){cov_2mghmeqoe3().f[1]++;const mountPathLength=(cov_2mghmeqoe3().s[21]++,req.originalUrl.length-req.url.length);const mountPath=(cov_2mghmeqoe3().s[22]++,req.originalUrl.slice(0,mountPathLength));cov_2mghmeqoe3().s[23]++;return req.protocol+'://'+req.get('host')+mountPath;};// Checks that the request is authorized for this app and checks user
// auth too.
// The bodyparser should run before this middleware.
// Adds info to the request:
// req.config - the Config for this app
// req.auth - the Auth for this request
function handleParseHeaders(req,res,next){cov_2mghmeqoe3().f[2]++;var mount=(cov_2mghmeqoe3().s[24]++,getMountForRequest(req));let context=(cov_2mghmeqoe3().s[25]++,{});cov_2mghmeqoe3().s[26]++;if(req.get('X-Parse-Cloud-Context')!=null){cov_2mghmeqoe3().b[2][0]++;cov_2mghmeqoe3().s[27]++;try{cov_2mghmeqoe3().s[28]++;context=JSON.parse(req.get('X-Parse-Cloud-Context'));cov_2mghmeqoe3().s[29]++;if(Object.prototype.toString.call(context)!=='[object Object]'){cov_2mghmeqoe3().b[3][0]++;cov_2mghmeqoe3().s[30]++;throw'Context is not an object';}else{cov_2mghmeqoe3().b[3][1]++;}}catch(e){cov_2mghmeqoe3().s[31]++;return malformedContext(req,res);}}else{cov_2mghmeqoe3().b[2][1]++;}var info=(cov_2mghmeqoe3().s[32]++,{appId:req.get('X-Parse-Application-Id'),sessionToken:req.get('X-Parse-Session-Token'),masterKey:req.get('X-Parse-Master-Key'),installationId:req.get('X-Parse-Installation-Id'),clientKey:req.get('X-Parse-Client-Key'),javascriptKey:req.get('X-Parse-Javascript-Key'),dotNetKey:req.get('X-Parse-Windows-Key'),restAPIKey:req.get('X-Parse-REST-API-Key'),clientVersion:req.get('X-Parse-Client-Version'),context:context});var basicAuth=(cov_2mghmeqoe3().s[33]++,httpAuth(req));cov_2mghmeqoe3().s[34]++;if(basicAuth){cov_2mghmeqoe3().b[4][0]++;var basicAuthAppId=(cov_2mghmeqoe3().s[35]++,basicAuth.appId);cov_2mghmeqoe3().s[36]++;if(_cache.default.get(basicAuthAppId)){cov_2mghmeqoe3().b[5][0]++;cov_2mghmeqoe3().s[37]++;info.appId=basicAuthAppId;cov_2mghmeqoe3().s[38]++;info.masterKey=(cov_2mghmeqoe3().b[6][0]++,basicAuth.masterKey)||(cov_2mghmeqoe3().b[6][1]++,info.masterKey);cov_2mghmeqoe3().s[39]++;info.javascriptKey=(cov_2mghmeqoe3().b[7][0]++,basicAuth.javascriptKey)||(cov_2mghmeqoe3().b[7][1]++,info.javascriptKey);}else{cov_2mghmeqoe3().b[5][1]++;}}else{cov_2mghmeqoe3().b[4][1]++;}cov_2mghmeqoe3().s[40]++;if(req.body){cov_2mghmeqoe3().b[8][0]++;cov_2mghmeqoe3().s[41]++;// Unity SDK sends a _noBody key which needs to be removed.
// Unclear at this point if action needs to be taken.
delete req.body._noBody;}else{cov_2mghmeqoe3().b[8][1]++;}var fileViaJSON=(cov_2mghmeqoe3().s[42]++,false);cov_2mghmeqoe3().s[43]++;if((cov_2mghmeqoe3().b[10][0]++,!info.appId)||(cov_2mghmeqoe3().b[10][1]++,!_cache.default.get(info.appId))){cov_2mghmeqoe3().b[9][0]++;cov_2mghmeqoe3().s[44]++;// See if we can find the app id on the body.
if(req.body instanceof Buffer){cov_2mghmeqoe3().b[11][0]++;cov_2mghmeqoe3().s[45]++;// The only chance to find the app id is if this is a file
// upload that actually is a JSON body. So try to parse it.
// https://github.com/parse-community/parse-server/issues/6589
// It is also possible that the client is trying to upload a file but forgot
// to provide x-parse-app-id in header and parse a binary file will fail
try{cov_2mghmeqoe3().s[46]++;req.body=JSON.parse(req.body);}catch(e){cov_2mghmeqoe3().s[47]++;return invalidRequest(req,res);}cov_2mghmeqoe3().s[48]++;fileViaJSON=true;}else{cov_2mghmeqoe3().b[11][1]++;}cov_2mghmeqoe3().s[49]++;if(req.body){cov_2mghmeqoe3().b[12][0]++;cov_2mghmeqoe3().s[50]++;delete req.body._RevocableSession;}else{cov_2mghmeqoe3().b[12][1]++;}cov_2mghmeqoe3().s[51]++;if((cov_2mghmeqoe3().b[14][0]++,req.body)&&(cov_2mghmeqoe3().b[14][1]++,req.body._ApplicationId)&&(cov_2mghmeqoe3().b[14][2]++,_cache.default.get(req.body._ApplicationId))&&((cov_2mghmeqoe3().b[14][3]++,!info.masterKey)||(cov_2mghmeqoe3().b[14][4]++,_cache.default.get(req.body._ApplicationId).masterKey===info.masterKey))){cov_2mghmeqoe3().b[13][0]++;cov_2mghmeqoe3().s[52]++;info.appId=req.body._ApplicationId;cov_2mghmeqoe3().s[53]++;info.javascriptKey=(cov_2mghmeqoe3().b[15][0]++,req.body._JavaScriptKey)||(cov_2mghmeqoe3().b[15][1]++,'');cov_2mghmeqoe3().s[54]++;delete req.body._ApplicationId;cov_2mghmeqoe3().s[55]++;delete req.body._JavaScriptKey;// TODO: test that the REST API formats generated by the other
// SDKs are handled ok
cov_2mghmeqoe3().s[56]++;if(req.body._ClientVersion){cov_2mghmeqoe3().b[16][0]++;cov_2mghmeqoe3().s[57]++;info.clientVersion=req.body._ClientVersion;cov_2mghmeqoe3().s[58]++;delete req.body._ClientVersion;}else{cov_2mghmeqoe3().b[16][1]++;}cov_2mghmeqoe3().s[59]++;if(req.body._InstallationId){cov_2mghmeqoe3().b[17][0]++;cov_2mghmeqoe3().s[60]++;info.installationId=req.body._InstallationId;cov_2mghmeqoe3().s[61]++;delete req.body._InstallationId;}else{cov_2mghmeqoe3().b[17][1]++;}cov_2mghmeqoe3().s[62]++;if(req.body._SessionToken){cov_2mghmeqoe3().b[18][0]++;cov_2mghmeqoe3().s[63]++;info.sessionToken=req.body._SessionToken;cov_2mghmeqoe3().s[64]++;delete req.body._SessionToken;}else{cov_2mghmeqoe3().b[18][1]++;}cov_2mghmeqoe3().s[65]++;if(req.body._MasterKey){cov_2mghmeqoe3().b[19][0]++;cov_2mghmeqoe3().s[66]++;info.masterKey=req.body._MasterKey;cov_2mghmeqoe3().s[67]++;delete req.body._MasterKey;}else{cov_2mghmeqoe3().b[19][1]++;}cov_2mghmeqoe3().s[68]++;if(req.body._context){cov_2mghmeqoe3().b[20][0]++;cov_2mghmeqoe3().s[69]++;if(req.body._context instanceof Object){cov_2mghmeqoe3().b[21][0]++;cov_2mghmeqoe3().s[70]++;info.context=req.body._context;}else{cov_2mghmeqoe3().b[21][1]++;cov_2mghmeqoe3().s[71]++;try{cov_2mghmeqoe3().s[72]++;info.context=JSON.parse(req.body._context);cov_2mghmeqoe3().s[73]++;if(Object.prototype.toString.call(info.context)!=='[object Object]'){cov_2mghmeqoe3().b[22][0]++;cov_2mghmeqoe3().s[74]++;throw'Context is not an object';}else{cov_2mghmeqoe3().b[22][1]++;}}catch(e){cov_2mghmeqoe3().s[75]++;return malformedContext(req,res);}}cov_2mghmeqoe3().s[76]++;delete req.body._context;}else{cov_2mghmeqoe3().b[20][1]++;}cov_2mghmeqoe3().s[77]++;if(req.body._ContentType){cov_2mghmeqoe3().b[23][0]++;cov_2mghmeqoe3().s[78]++;req.headers['content-type']=req.body._ContentType;cov_2mghmeqoe3().s[79]++;delete req.body._ContentType;}else{cov_2mghmeqoe3().b[23][1]++;}}else{cov_2mghmeqoe3().b[13][1]++;cov_2mghmeqoe3().s[80]++;return invalidRequest(req,res);}}else{cov_2mghmeqoe3().b[9][1]++;}cov_2mghmeqoe3().s[81]++;if((cov_2mghmeqoe3().b[25][0]++,info.sessionToken)&&(cov_2mghmeqoe3().b[25][1]++,typeof info.sessionToken!=='string')){cov_2mghmeqoe3().b[24][0]++;cov_2mghmeqoe3().s[82]++;info.sessionToken=info.sessionToken.toString();}else{cov_2mghmeqoe3().b[24][1]++;}cov_2mghmeqoe3().s[83]++;if(info.clientVersion){cov_2mghmeqoe3().b[26][0]++;cov_2mghmeqoe3().s[84]++;info.clientSDK=_ClientSDK.default.fromString(info.clientVersion);}else{cov_2mghmeqoe3().b[26][1]++;}cov_2mghmeqoe3().s[85]++;if(fileViaJSON){cov_2mghmeqoe3().b[27][0]++;cov_2mghmeqoe3().s[86]++;req.fileData=req.body.fileData;// We need to repopulate req.body with a buffer
var base64=(cov_2mghmeqoe3().s[87]++,req.body.base64);cov_2mghmeqoe3().s[88]++;req.body=Buffer.from(base64,'base64');}else{cov_2mghmeqoe3().b[27][1]++;}const clientIp=(cov_2mghmeqoe3().s[89]++,getClientIp(req));cov_2mghmeqoe3().s[90]++;info.app=_cache.default.get(info.appId);cov_2mghmeqoe3().s[91]++;req.config=_Config.default.get(info.appId,mount);cov_2mghmeqoe3().s[92]++;req.config.headers=(cov_2mghmeqoe3().b[28][0]++,req.headers)||(cov_2mghmeqoe3().b[28][1]++,{});cov_2mghmeqoe3().s[93]++;req.config.ip=clientIp;cov_2mghmeqoe3().s[94]++;req.info=info;cov_2mghmeqoe3().s[95]++;if((cov_2mghmeqoe3().b[30][0]++,info.masterKey)&&(cov_2mghmeqoe3().b[30][1]++,req.config.masterKeyIps)&&(cov_2mghmeqoe3().b[30][2]++,req.config.masterKeyIps.length!==0)&&(cov_2mghmeqoe3().b[30][3]++,req.config.masterKeyIps.indexOf(clientIp)===-1)){cov_2mghmeqoe3().b[29][0]++;cov_2mghmeqoe3().s[96]++;return invalidRequest(req,res);}else{cov_2mghmeqoe3().b[29][1]++;}var isMaster=(cov_2mghmeqoe3().s[97]++,info.masterKey===req.config.masterKey);cov_2mghmeqoe3().s[98]++;if(isMaster){cov_2mghmeqoe3().b[31][0]++;cov_2mghmeqoe3().s[99]++;req.auth=new _Auth.default.Auth({config:req.config,installationId:info.installationId,isMaster:true});cov_2mghmeqoe3().s[100]++;next();cov_2mghmeqoe3().s[101]++;return;}else{cov_2mghmeqoe3().b[31][1]++;}var isReadOnlyMaster=(cov_2mghmeqoe3().s[102]++,info.masterKey===req.config.readOnlyMasterKey);cov_2mghmeqoe3().s[103]++;if((cov_2mghmeqoe3().b[33][0]++,typeof req.config.readOnlyMasterKey!='undefined')&&(cov_2mghmeqoe3().b[33][1]++,req.config.readOnlyMasterKey)&&(cov_2mghmeqoe3().b[33][2]++,isReadOnlyMaster)){cov_2mghmeqoe3().b[32][0]++;cov_2mghmeqoe3().s[104]++;req.auth=new _Auth.default.Auth({config:req.config,installationId:info.installationId,isMaster:true,isReadOnly:true});cov_2mghmeqoe3().s[105]++;next();cov_2mghmeqoe3().s[106]++;return;}else{cov_2mghmeqoe3().b[32][1]++;}// Client keys are not required in parse-server, but if any have been configured in the server, validate them
//  to preserve original behavior.
const keys=(cov_2mghmeqoe3().s[107]++,['clientKey','javascriptKey','dotNetKey','restAPIKey']);const oneKeyConfigured=(cov_2mghmeqoe3().s[108]++,keys.some(function(key){cov_2mghmeqoe3().f[3]++;cov_2mghmeqoe3().s[109]++;return req.config[key]!==undefined;}));const oneKeyMatches=(cov_2mghmeqoe3().s[110]++,keys.some(function(key){cov_2mghmeqoe3().f[4]++;cov_2mghmeqoe3().s[111]++;return(cov_2mghmeqoe3().b[34][0]++,req.config[key]!==undefined)&&(cov_2mghmeqoe3().b[34][1]++,info[key]===req.config[key]);}));cov_2mghmeqoe3().s[112]++;if((cov_2mghmeqoe3().b[36][0]++,oneKeyConfigured)&&(cov_2mghmeqoe3().b[36][1]++,!oneKeyMatches)){cov_2mghmeqoe3().b[35][0]++;cov_2mghmeqoe3().s[113]++;return invalidRequest(req,res);}else{cov_2mghmeqoe3().b[35][1]++;}cov_2mghmeqoe3().s[114]++;if(req.url=='/login'){cov_2mghmeqoe3().b[37][0]++;cov_2mghmeqoe3().s[115]++;delete info.sessionToken;}else{cov_2mghmeqoe3().b[37][1]++;}cov_2mghmeqoe3().s[116]++;if(req.userFromJWT){cov_2mghmeqoe3().b[38][0]++;cov_2mghmeqoe3().s[117]++;req.auth=new _Auth.default.Auth({config:req.config,installationId:info.installationId,isMaster:false,user:req.userFromJWT});cov_2mghmeqoe3().s[118]++;next();cov_2mghmeqoe3().s[119]++;return;}else{cov_2mghmeqoe3().b[38][1]++;}cov_2mghmeqoe3().s[120]++;if(!info.sessionToken){cov_2mghmeqoe3().b[39][0]++;cov_2mghmeqoe3().s[121]++;req.auth=new _Auth.default.Auth({config:req.config,installationId:info.installationId,isMaster:false});cov_2mghmeqoe3().s[122]++;next();cov_2mghmeqoe3().s[123]++;return;}else{cov_2mghmeqoe3().b[39][1]++;}cov_2mghmeqoe3().s[124]++;return Promise.resolve().then(()=>{cov_2mghmeqoe3().f[5]++;cov_2mghmeqoe3().s[125]++;// handle the upgradeToRevocableSession path on it's own
if((cov_2mghmeqoe3().b[41][0]++,info.sessionToken)&&(cov_2mghmeqoe3().b[41][1]++,req.url==='/upgradeToRevocableSession')&&(cov_2mghmeqoe3().b[41][2]++,info.sessionToken.indexOf('r:')!=0)){cov_2mghmeqoe3().b[40][0]++;cov_2mghmeqoe3().s[126]++;return _Auth.default.getAuthForLegacySessionToken({config:req.config,installationId:info.installationId,sessionToken:info.sessionToken});}else{cov_2mghmeqoe3().b[40][1]++;cov_2mghmeqoe3().s[127]++;return _Auth.default.getAuthForSessionToken({config:req.config,installationId:info.installationId,sessionToken:info.sessionToken});}}).then(auth=>{cov_2mghmeqoe3().f[6]++;cov_2mghmeqoe3().s[128]++;if(auth){cov_2mghmeqoe3().b[42][0]++;cov_2mghmeqoe3().s[129]++;req.auth=auth;cov_2mghmeqoe3().s[130]++;next();}else{cov_2mghmeqoe3().b[42][1]++;}}).catch(error=>{cov_2mghmeqoe3().f[7]++;cov_2mghmeqoe3().s[131]++;if(error instanceof _node.default.Error){cov_2mghmeqoe3().b[43][0]++;cov_2mghmeqoe3().s[132]++;next(error);cov_2mghmeqoe3().s[133]++;return;}else{cov_2mghmeqoe3().b[43][1]++;cov_2mghmeqoe3().s[134]++;// TODO: Determine the correct error scenario.
req.config.loggerController.error('error getting auth for sessionToken',error);cov_2mghmeqoe3().s[135]++;throw new _node.default.Error(_node.default.Error.UNKNOWN_ERROR,error);}});}function getClientIp(req){cov_2mghmeqoe3().f[8]++;cov_2mghmeqoe3().s[136]++;if(req.headers['x-forwarded-for']){cov_2mghmeqoe3().b[44][0]++;cov_2mghmeqoe3().s[137]++;// try to get from x-forwared-for if it set (behind reverse proxy)
return req.headers['x-forwarded-for'].split(',')[0];}else{cov_2mghmeqoe3().b[44][1]++;cov_2mghmeqoe3().s[138]++;if((cov_2mghmeqoe3().b[46][0]++,req.connection)&&(cov_2mghmeqoe3().b[46][1]++,req.connection.remoteAddress)){cov_2mghmeqoe3().b[45][0]++;cov_2mghmeqoe3().s[139]++;// no proxy, try getting from connection.remoteAddress
return req.connection.remoteAddress;}else{cov_2mghmeqoe3().b[45][1]++;cov_2mghmeqoe3().s[140]++;if(req.socket){cov_2mghmeqoe3().b[47][0]++;cov_2mghmeqoe3().s[141]++;// try to get it from req.socket
return req.socket.remoteAddress;}else{cov_2mghmeqoe3().b[47][1]++;cov_2mghmeqoe3().s[142]++;if((cov_2mghmeqoe3().b[49][0]++,req.connection)&&(cov_2mghmeqoe3().b[49][1]++,req.connection.socket)){cov_2mghmeqoe3().b[48][0]++;cov_2mghmeqoe3().s[143]++;// try to get it form the connection.socket
return req.connection.socket.remoteAddress;}else{cov_2mghmeqoe3().b[48][1]++;cov_2mghmeqoe3().s[144]++;// if non above, fallback.
return req.ip;}}}}}function httpAuth(req){cov_2mghmeqoe3().f[9]++;cov_2mghmeqoe3().s[145]++;if(!((cov_2mghmeqoe3().b[51][0]++,req.req)||(cov_2mghmeqoe3().b[51][1]++,req)).headers.authorization){cov_2mghmeqoe3().b[50][0]++;cov_2mghmeqoe3().s[146]++;return;}else{cov_2mghmeqoe3().b[50][1]++;}var header=(cov_2mghmeqoe3().s[147]++,((cov_2mghmeqoe3().b[52][0]++,req.req)||(cov_2mghmeqoe3().b[52][1]++,req)).headers.authorization);var appId,masterKey,javascriptKey;// parse header
var authPrefix=(cov_2mghmeqoe3().s[148]++,'basic ');var match=(cov_2mghmeqoe3().s[149]++,header.toLowerCase().indexOf(authPrefix));cov_2mghmeqoe3().s[150]++;if(match==0){cov_2mghmeqoe3().b[53][0]++;var encodedAuth=(cov_2mghmeqoe3().s[151]++,header.substring(authPrefix.length,header.length));var credentials=(cov_2mghmeqoe3().s[152]++,decodeBase64(encodedAuth).split(':'));cov_2mghmeqoe3().s[153]++;if(credentials.length==2){cov_2mghmeqoe3().b[54][0]++;cov_2mghmeqoe3().s[154]++;appId=credentials[0];var key=(cov_2mghmeqoe3().s[155]++,credentials[1]);var jsKeyPrefix=(cov_2mghmeqoe3().s[156]++,'javascript-key=');var matchKey=(cov_2mghmeqoe3().s[157]++,key.indexOf(jsKeyPrefix));cov_2mghmeqoe3().s[158]++;if(matchKey==0){cov_2mghmeqoe3().b[55][0]++;cov_2mghmeqoe3().s[159]++;javascriptKey=key.substring(jsKeyPrefix.length,key.length);}else{cov_2mghmeqoe3().b[55][1]++;cov_2mghmeqoe3().s[160]++;masterKey=key;}}else{cov_2mghmeqoe3().b[54][1]++;}}else{cov_2mghmeqoe3().b[53][1]++;}cov_2mghmeqoe3().s[161]++;return{appId:appId,masterKey:masterKey,javascriptKey:javascriptKey};}function decodeBase64(str){cov_2mghmeqoe3().f[10]++;cov_2mghmeqoe3().s[162]++;return Buffer.from(str,'base64').toString();}function allowCrossDomain(appId){cov_2mghmeqoe3().f[11]++;cov_2mghmeqoe3().s[163]++;return(req,res,next)=>{cov_2mghmeqoe3().f[12]++;const config=(cov_2mghmeqoe3().s[164]++,_Config.default.get(appId,getMountForRequest(req)));let allowHeaders=(cov_2mghmeqoe3().s[165]++,DEFAULT_ALLOWED_HEADERS);cov_2mghmeqoe3().s[166]++;if((cov_2mghmeqoe3().b[57][0]++,config)&&(cov_2mghmeqoe3().b[57][1]++,config.allowHeaders)){cov_2mghmeqoe3().b[56][0]++;cov_2mghmeqoe3().s[167]++;allowHeaders+=`, ${config.allowHeaders.join(', ')}`;}else{cov_2mghmeqoe3().b[56][1]++;}const allowOrigin=(cov_2mghmeqoe3().s[168]++,(cov_2mghmeqoe3().b[58][0]++,config)&&(cov_2mghmeqoe3().b[58][1]++,config.allowOrigin)||(cov_2mghmeqoe3().b[58][2]++,'*'));cov_2mghmeqoe3().s[169]++;res.header('Access-Control-Allow-Origin',allowOrigin);cov_2mghmeqoe3().s[170]++;res.header('Access-Control-Allow-Methods','GET,PUT,POST,DELETE,OPTIONS');cov_2mghmeqoe3().s[171]++;res.header('Access-Control-Allow-Headers',allowHeaders);cov_2mghmeqoe3().s[172]++;res.header('Access-Control-Expose-Headers','X-Parse-Job-Status-Id, X-Parse-Push-Status-Id');// intercept OPTIONS method
cov_2mghmeqoe3().s[173]++;if('OPTIONS'==req.method){cov_2mghmeqoe3().b[59][0]++;cov_2mghmeqoe3().s[174]++;res.sendStatus(200);}else{cov_2mghmeqoe3().b[59][1]++;cov_2mghmeqoe3().s[175]++;next();}};}function allowMethodOverride(req,res,next){cov_2mghmeqoe3().f[13]++;cov_2mghmeqoe3().s[176]++;if((cov_2mghmeqoe3().b[61][0]++,req.method==='POST')&&(cov_2mghmeqoe3().b[61][1]++,req.body._method)){cov_2mghmeqoe3().b[60][0]++;cov_2mghmeqoe3().s[177]++;req.originalMethod=req.method;cov_2mghmeqoe3().s[178]++;req.method=req.body._method;cov_2mghmeqoe3().s[179]++;delete req.body._method;}else{cov_2mghmeqoe3().b[60][1]++;}cov_2mghmeqoe3().s[180]++;next();}function handleParseErrors(err,req,res,next){cov_2mghmeqoe3().f[14]++;const log=(cov_2mghmeqoe3().s[181]++,(cov_2mghmeqoe3().b[62][0]++,req.config)&&(cov_2mghmeqoe3().b[62][1]++,req.config.loggerController)||(cov_2mghmeqoe3().b[62][2]++,_logger.default));cov_2mghmeqoe3().s[182]++;if(err instanceof _node.default.Error){cov_2mghmeqoe3().b[63][0]++;cov_2mghmeqoe3().s[183]++;if((cov_2mghmeqoe3().b[65][0]++,req.config)&&(cov_2mghmeqoe3().b[65][1]++,req.config.enableExpressErrorHandler)){cov_2mghmeqoe3().b[64][0]++;cov_2mghmeqoe3().s[184]++;return next(err);}else{cov_2mghmeqoe3().b[64][1]++;}let httpStatus;// TODO: fill out this mapping
cov_2mghmeqoe3().s[185]++;switch(err.code){case _node.default.Error.INTERNAL_SERVER_ERROR:cov_2mghmeqoe3().b[66][0]++;cov_2mghmeqoe3().s[186]++;httpStatus=500;cov_2mghmeqoe3().s[187]++;break;case _node.default.Error.OBJECT_NOT_FOUND:cov_2mghmeqoe3().b[66][1]++;cov_2mghmeqoe3().s[188]++;httpStatus=404;cov_2mghmeqoe3().s[189]++;break;default:cov_2mghmeqoe3().b[66][2]++;cov_2mghmeqoe3().s[190]++;httpStatus=400;}cov_2mghmeqoe3().s[191]++;res.status(httpStatus);cov_2mghmeqoe3().s[192]++;res.json({code:err.code,error:err.message});cov_2mghmeqoe3().s[193]++;log.error('Parse error: ',err);}else{cov_2mghmeqoe3().b[63][1]++;cov_2mghmeqoe3().s[194]++;if((cov_2mghmeqoe3().b[68][0]++,err.status)&&(cov_2mghmeqoe3().b[68][1]++,err.message)){cov_2mghmeqoe3().b[67][0]++;cov_2mghmeqoe3().s[195]++;res.status(err.status);cov_2mghmeqoe3().s[196]++;res.json({error:err.message});cov_2mghmeqoe3().s[197]++;if(!((cov_2mghmeqoe3().b[70][0]++,process)&&(cov_2mghmeqoe3().b[70][1]++,process.env.TESTING))){cov_2mghmeqoe3().b[69][0]++;cov_2mghmeqoe3().s[198]++;next(err);}else{cov_2mghmeqoe3().b[69][1]++;}}else{cov_2mghmeqoe3().b[67][1]++;cov_2mghmeqoe3().s[199]++;log.error('Uncaught internal server error.',err,err.stack);cov_2mghmeqoe3().s[200]++;res.status(500);cov_2mghmeqoe3().s[201]++;res.json({code:_node.default.Error.INTERNAL_SERVER_ERROR,message:'Internal server error.'});cov_2mghmeqoe3().s[202]++;if(!((cov_2mghmeqoe3().b[72][0]++,process)&&(cov_2mghmeqoe3().b[72][1]++,process.env.TESTING))){cov_2mghmeqoe3().b[71][0]++;cov_2mghmeqoe3().s[203]++;next(err);}else{cov_2mghmeqoe3().b[71][1]++;}}}}function enforceMasterKeyAccess(req,res,next){cov_2mghmeqoe3().f[15]++;cov_2mghmeqoe3().s[204]++;if(!req.auth.isMaster){cov_2mghmeqoe3().b[73][0]++;cov_2mghmeqoe3().s[205]++;res.status(403);cov_2mghmeqoe3().s[206]++;res.end('{"error":"unauthorized: master key is required"}');cov_2mghmeqoe3().s[207]++;return;}else{cov_2mghmeqoe3().b[73][1]++;}cov_2mghmeqoe3().s[208]++;next();}function promiseEnforceMasterKeyAccess(request){cov_2mghmeqoe3().f[16]++;cov_2mghmeqoe3().s[209]++;if(!request.auth.isMaster){cov_2mghmeqoe3().b[74][0]++;const error=(cov_2mghmeqoe3().s[210]++,new Error());cov_2mghmeqoe3().s[211]++;error.status=403;cov_2mghmeqoe3().s[212]++;error.message='unauthorized: master key is required';cov_2mghmeqoe3().s[213]++;throw error;}else{cov_2mghmeqoe3().b[74][1]++;}cov_2mghmeqoe3().s[214]++;return Promise.resolve();}/**
 * Deduplicates a request to ensure idempotency. Duplicates are determined by the request ID
 * in the request header. If a request has no request ID, it is executed anyway.
 * @param {*} req The request to evaluate.
 * @returns Promise<{}>
 */function promiseEnsureIdempotency(req){cov_2mghmeqoe3().f[17]++;cov_2mghmeqoe3().s[215]++;// Enable feature only for MongoDB
if(!(req.config.database.adapter instanceof _MongoStorageAdapter.default)){cov_2mghmeqoe3().b[75][0]++;cov_2mghmeqoe3().s[216]++;return Promise.resolve();}else{cov_2mghmeqoe3().b[75][1]++;}// Get parameters
const config=(cov_2mghmeqoe3().s[217]++,req.config);const requestId=(cov_2mghmeqoe3().s[218]++,((cov_2mghmeqoe3().b[76][0]++,((cov_2mghmeqoe3().b[77][0]++,req)||(cov_2mghmeqoe3().b[77][1]++,{})).headers)||(cov_2mghmeqoe3().b[76][1]++,{}))['x-parse-request-id']);const{paths,ttl}=(cov_2mghmeqoe3().s[219]++,config.idempotencyOptions);cov_2mghmeqoe3().s[220]++;if((cov_2mghmeqoe3().b[79][0]++,!requestId)||(cov_2mghmeqoe3().b[79][1]++,!config.idempotencyOptions)){cov_2mghmeqoe3().b[78][0]++;cov_2mghmeqoe3().s[221]++;return Promise.resolve();}else{cov_2mghmeqoe3().b[78][1]++;}// Request path may contain trailing slashes, depending on the original request, so remove
// leading and trailing slashes to make it easier to specify paths in the configuration
const reqPath=(cov_2mghmeqoe3().s[222]++,req.path.replace(/^\/|\/$/,''));// Determine whether idempotency is enabled for current request path
let match=(cov_2mghmeqoe3().s[223]++,false);cov_2mghmeqoe3().s[224]++;for(const path of paths){// Assume one wants a path to always match from the beginning to prevent any mistakes
const regex=(cov_2mghmeqoe3().s[225]++,new RegExp(path.charAt(0)==='^'?(cov_2mghmeqoe3().b[80][0]++,path):(cov_2mghmeqoe3().b[80][1]++,'^'+path)));cov_2mghmeqoe3().s[226]++;if(reqPath.match(regex)){cov_2mghmeqoe3().b[81][0]++;cov_2mghmeqoe3().s[227]++;match=true;cov_2mghmeqoe3().s[228]++;break;}else{cov_2mghmeqoe3().b[81][1]++;}}cov_2mghmeqoe3().s[229]++;if(!match){cov_2mghmeqoe3().b[82][0]++;cov_2mghmeqoe3().s[230]++;return Promise.resolve();}else{cov_2mghmeqoe3().b[82][1]++;}// Try to store request
const expiryDate=(cov_2mghmeqoe3().s[231]++,new Date(new Date().setSeconds(new Date().getSeconds()+ttl)));cov_2mghmeqoe3().s[232]++;return _rest.default.create(config,_Auth.default.master(config),'_Idempotency',{reqId:requestId,expire:_node.default._encode(expiryDate)}).catch(e=>{cov_2mghmeqoe3().f[18]++;cov_2mghmeqoe3().s[233]++;if(e.code==_node.default.Error.DUPLICATE_VALUE){cov_2mghmeqoe3().b[83][0]++;cov_2mghmeqoe3().s[234]++;throw new _node.default.Error(_node.default.Error.DUPLICATE_REQUEST,'Duplicate request');}else{cov_2mghmeqoe3().b[83][1]++;}cov_2mghmeqoe3().s[235]++;throw e;});}function invalidRequest(req,res){cov_2mghmeqoe3().f[19]++;cov_2mghmeqoe3().s[236]++;res.status(403);cov_2mghmeqoe3().s[237]++;res.end('{"error":"unauthorized"}');}function malformedContext(req,res){cov_2mghmeqoe3().f[20]++;cov_2mghmeqoe3().s[238]++;res.status(400);cov_2mghmeqoe3().s[239]++;res.json({code:_node.default.Error.INVALID_JSON,error:'Invalid object for context.'});}//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,