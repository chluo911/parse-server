"use strict";function cov_2dix0tuktf(){var path="/parse-server/lib/StatusHandler.js";var hash="ec07dbbf38d82ade263ba7880a7fc76964cec9e6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/StatusHandler.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:26}},"2":{start:{line:7,column:0},end:{line:7,column:44}},"3":{start:{line:8,column:0},end:{line:8,column:46}},"4":{start:{line:10,column:19},end:{line:10,column:43}},"5":{start:{line:12,column:23},end:{line:12,column:51}},"6":{start:{line:14,column:14},end:{line:14,column:33}},"7":{start:{line:16,column:12},end:{line:16,column:53}},"8":{start:{line:18,column:12},end:{line:18,column:53}},"9":{start:{line:20,column:39},end:{line:20,column:93}},"10":{start:{line:22,column:54},end:{line:22,column:73}},"11":{start:{line:22,column:75},end:{line:22,column:330}},"12":{start:{line:22,column:125},end:{line:22,column:161}},"13":{start:{line:22,column:163},end:{line:22,column:296}},"14":{start:{line:22,column:185},end:{line:22,column:294}},"15":{start:{line:22,column:227},end:{line:22,column:290}},"16":{start:{line:22,column:297},end:{line:22,column:328}},"17":{start:{line:22,column:331},end:{line:22,column:343}},"18":{start:{line:24,column:33},end:{line:24,column:517}},"19":{start:{line:24,column:46},end:{line:24,column:47}},"20":{start:{line:24,column:91},end:{line:24,column:131}},"21":{start:{line:24,column:133},end:{line:24,column:515}},"22":{start:{line:24,column:146},end:{line:24,column:247}},"23":{start:{line:24,column:201},end:{line:24,column:243}},"24":{start:{line:24,column:255},end:{line:24,column:515}},"25":{start:{line:24,column:295},end:{line:24,column:369}},"26":{start:{line:24,column:379},end:{line:24,column:513}},"27":{start:{line:24,column:428},end:{line:24,column:509}},"28":{start:{line:24,column:518},end:{line:24,column:532}},"29":{start:{line:26,column:44},end:{line:26,column:195}},"30":{start:{line:26,column:62},end:{line:26,column:166}},"31":{start:{line:26,column:176},end:{line:26,column:193}},"32":{start:{line:26,column:196},end:{line:26,column:207}},"33":{start:{line:28,column:31},end:{line:28,column:44}},"34":{start:{line:29,column:30},end:{line:29,column:42}},"35":{start:{line:30,column:25},end:{line:30,column:63}},"36":{start:{line:31,column:24},end:{line:31,column:62}},"37":{start:{line:33,column:20},end:{line:44,column:1}},"38":{start:{line:34,column:2},end:{line:41,column:3}},"39":{start:{line:35,column:4},end:{line:38,column:6}},"40":{start:{line:40,column:4},end:{line:40,column:33}},"41":{start:{line:43,column:2},end:{line:43,column:21}},"42":{start:{line:47,column:18},end:{line:47,column:20}},"43":{start:{line:49,column:2},end:{line:55,column:3}},"44":{start:{line:49,column:15},end:{line:49,column:16}},"45":{start:{line:50,column:4},end:{line:54,column:5}},"46":{start:{line:51,column:6},end:{line:51,column:54}},"47":{start:{line:53,column:6},end:{line:53,column:31}},"48":{start:{line:57,column:2},end:{line:57,column:19}},"49":{start:{line:62,column:4},end:{line:64,column:7}},"50":{start:{line:63,column:6},end:{line:63,column:37}},"51":{start:{line:68,column:4},end:{line:68,column:100}},"52":{start:{line:68,column:57},end:{line:68,column:98}},"53":{start:{line:71,column:2},end:{line:74,column:5}},"54":{start:{line:78,column:15},end:{line:78,column:43}},"55":{start:{line:81,column:4},end:{line:85,column:7}},"56":{start:{line:84,column:6},end:{line:84,column:64}},"57":{start:{line:89,column:4},end:{line:95,column:8}},"58":{start:{line:89,column:58},end:{line:95,column:6}},"59":{start:{line:94,column:6},end:{line:94,column:64}},"60":{start:{line:98,column:2},end:{line:101,column:5}},"61":{start:{line:106,column:19},end:{line:106,column:69}},"62":{start:{line:107,column:19},end:{line:107,column:34}},"63":{start:{line:108,column:18},end:{line:108,column:64}},"64":{start:{line:110,column:21},end:{line:123,column:3}},"65":{start:{line:111,column:16},end:{line:111,column:26}},"66":{start:{line:112,column:4},end:{line:121,column:6}},"67":{start:{line:122,column:4},end:{line:122,column:37}},"68":{start:{line:125,column:21},end:{line:135,column:3}},"69":{start:{line:126,column:4},end:{line:128,column:5}},"70":{start:{line:127,column:6},end:{line:127,column:31}},"71":{start:{line:130,column:4},end:{line:134,column:7}},"72":{start:{line:137,column:23},end:{line:139,column:3}},"73":{start:{line:138,column:4},end:{line:138,column:48}},"74":{start:{line:141,column:20},end:{line:143,column:3}},"75":{start:{line:142,column:4},end:{line:142,column:45}},"76":{start:{line:145,column:25},end:{line:163,column:3}},"77":{start:{line:146,column:23},end:{line:146,column:33}},"78":{start:{line:147,column:19},end:{line:150,column:5}},"79":{start:{line:152,column:4},end:{line:154,column:5}},"80":{start:{line:153,column:6},end:{line:153,column:31}},"81":{start:{line:156,column:4},end:{line:158,column:5}},"82":{start:{line:157,column:6},end:{line:157,column:39}},"83":{start:{line:160,column:4},end:{line:162,column:15}},"84":{start:{line:165,column:2},end:{line:170,column:5}},"85":{start:{line:175,column:19},end:{line:175,column:34}},"86":{start:{line:176,column:18},end:{line:176,column:67}},"87":{start:{line:177,column:17},end:{line:177,column:33}},"88":{start:{line:179,column:21},end:{line:230,column:3}},"89":{start:{line:182,column:16},end:{line:182,column:26}},"90":{start:{line:183,column:19},end:{line:183,column:36}},"91":{start:{line:184,column:17},end:{line:184,column:26}},"92":{start:{line:186,column:4},end:{line:195,column:5}},"93":{start:{line:187,column:6},end:{line:194,column:7}},"94":{start:{line:188,column:8},end:{line:188,column:34}},"95":{start:{line:189,column:8},end:{line:189,column:29}},"96":{start:{line:191,column:8},end:{line:191,column:89}},"97":{start:{line:193,column:8},end:{line:193,column:61}},"98":{start:{line:197,column:17},end:{line:197,column:32}},"99":{start:{line:198,column:26},end:{line:198,column:46}},"100":{start:{line:201,column:4},end:{line:207,column:5}},"101":{start:{line:202,column:6},end:{line:202,column:55}},"102":{start:{line:203,column:11},end:{line:207,column:5}},"103":{start:{line:204,column:6},end:{line:204,column:71}},"104":{start:{line:206,column:6},end:{line:206,column:52}},"105":{start:{line:209,column:19},end:{line:222,column:5}},"106":{start:{line:223,column:4},end:{line:229,column:7}},"107":{start:{line:224,column:6},end:{line:224,column:33}},"108":{start:{line:225,column:6},end:{line:227,column:8}},"109":{start:{line:228,column:6},end:{line:228,column:41}},"110":{start:{line:232,column:21},end:{line:242,column:3}},"111":{start:{line:233,column:4},end:{line:233,column:110}},"112":{start:{line:235,column:4},end:{line:241,column:7}},"113":{start:{line:244,column:20},end:{line:335,column:3}},"114":{start:{line:245,column:19},end:{line:248,column:5}},"115":{start:{line:249,column:28},end:{line:249,column:30}},"116":{start:{line:251,column:4},end:{line:290,column:5}},"117":{start:{line:252,column:6},end:{line:252,column:33}},"118":{start:{line:253,column:6},end:{line:289,column:17}},"119":{start:{line:255,column:8},end:{line:257,column:9}},"120":{start:{line:256,column:10},end:{line:256,column:22}},"121":{start:{line:259,column:27},end:{line:259,column:51}},"122":{start:{line:260,column:20},end:{line:260,column:100}},"123":{start:{line:261,column:8},end:{line:261,column:43}},"124":{start:{line:263,column:8},end:{line:266,column:9}},"125":{start:{line:264,column:28},end:{line:264,column:116}},"126":{start:{line:265,column:10},end:{line:265,column:57}},"127":{start:{line:268,column:8},end:{line:286,column:9}},"128":{start:{line:269,column:10},end:{line:269,column:25}},"129":{start:{line:271,column:10},end:{line:283,column:11}},"130":{start:{line:272,column:26},end:{line:272,column:51}},"131":{start:{line:273,column:26},end:{line:273,column:47}},"132":{start:{line:275,column:12},end:{line:277,column:13}},"133":{start:{line:276,column:14},end:{line:276,column:42}},"134":{start:{line:280,column:12},end:{line:282,column:13}},"135":{start:{line:281,column:14},end:{line:281,column:42}},"136":{start:{line:285,column:10},end:{line:285,column:27}},"137":{start:{line:288,column:8},end:{line:288,column:20}},"138":{start:{line:292,column:4},end:{line:292,column:124}},"139":{start:{line:294,column:4},end:{line:296,column:7}},"140":{start:{line:298,column:4},end:{line:307,column:7}},"141":{start:{line:299,column:6},end:{line:306,column:7}},"142":{start:{line:300,column:8},end:{line:303,column:10}},"143":{start:{line:305,column:8},end:{line:305,column:27}},"144":{start:{line:309,column:4},end:{line:324,column:5}},"145":{start:{line:310,column:6},end:{line:310,column:96}},"146":{start:{line:312,column:6},end:{line:323,column:9}},"147":{start:{line:326,column:4},end:{line:326,column:37}},"148":{start:{line:327,column:4},end:{line:327,column:30}},"149":{start:{line:328,column:4},end:{line:334,column:7}},"150":{start:{line:331,column:6},end:{line:333,column:7}},"151":{start:{line:332,column:8},end:{line:332,column:31}},"152":{start:{line:337,column:19},end:{line:346,column:3}},"153":{start:{line:338,column:4},end:{line:345,column:7}},"154":{start:{line:348,column:15},end:{line:362,column:3}},"155":{start:{line:349,column:4},end:{line:353,column:5}},"156":{start:{line:350,column:6},end:{line:352,column:8}},"157":{start:{line:355,column:19},end:{line:358,column:5}},"158":{start:{line:359,column:4},end:{line:361,column:15}},"159":{start:{line:364,column:15},end:{line:370,column:3}},"160":{start:{line:372,column:2},end:{line:374,column:5}},"161":{start:{line:373,column:15},end:{line:373,column:23}},"162":{start:{line:375,column:2},end:{line:375,column:29}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:20,column:9},end:{line:20,column:31}},loc:{start:{line:20,column:37},end:{line:20,column:95}},line:20},"1":{name:"ownKeys",decl:{start:{line:22,column:9},end:{line:22,column:16}},loc:{start:{line:22,column:41},end:{line:22,column:345}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:210},end:{line:22,column:211}},loc:{start:{line:22,column:225},end:{line:22,column:292}},line:22},"3":{name:"_objectSpread",decl:{start:{line:24,column:9},end:{line:24,column:22}},loc:{start:{line:24,column:31},end:{line:24,column:534}},line:24},"4":{name:"(anonymous_4)",decl:{start:{line:24,column:184},end:{line:24,column:185}},loc:{start:{line:24,column:199},end:{line:24,column:245}},line:24},"5":{name:"(anonymous_5)",decl:{start:{line:24,column:411},end:{line:24,column:412}},loc:{start:{line:24,column:426},end:{line:24,column:511}},line:24},"6":{name:"_defineProperty",decl:{start:{line:26,column:9},end:{line:26,column:24}},loc:{start:{line:26,column:42},end:{line:26,column:209}},line:26},"7":{name:"(anonymous_7)",decl:{start:{line:33,column:20},end:{line:33,column:21}},loc:{start:{line:33,column:60},end:{line:44,column:1}},line:33},"8":{name:"flatten",decl:{start:{line:46,column:9},end:{line:46,column:16}},loc:{start:{line:46,column:24},end:{line:58,column:1}},line:46},"9":{name:"statusHandler",decl:{start:{line:60,column:9},end:{line:60,column:22}},loc:{start:{line:60,column:44},end:{line:75,column:1}},line:60},"10":{name:"create",decl:{start:{line:61,column:11},end:{line:61,column:17}},loc:{start:{line:61,column:26},end:{line:65,column:3}},line:61},"11":{name:"(anonymous_11)",decl:{start:{line:62,column:51},end:{line:62,column:52}},loc:{start:{line:62,column:57},end:{line:64,column:5}},line:62},"12":{name:"update",decl:{start:{line:67,column:11},end:{line:67,column:17}},loc:{start:{line:67,column:33},end:{line:69,column:3}},line:67},"13":{name:"(anonymous_13)",decl:{start:{line:68,column:51},end:{line:68,column:52}},loc:{start:{line:68,column:57},end:{line:68,column:98}},line:68},"14":{name:"restStatusHandler",decl:{start:{line:77,column:9},end:{line:77,column:26}},loc:{start:{line:77,column:46},end:{line:102,column:1}},line:77},"15":{name:"create",decl:{start:{line:80,column:11},end:{line:80,column:17}},loc:{start:{line:80,column:26},end:{line:86,column:3}},line:80},"16":{name:"(anonymous_16)",decl:{start:{line:81,column:70},end:{line:81,column:71}},loc:{start:{line:83,column:10},end:{line:85,column:5}},line:83},"17":{name:"update",decl:{start:{line:88,column:11},end:{line:88,column:17}},loc:{start:{line:88,column:33},end:{line:96,column:3}},line:88},"18":{name:"(anonymous_18)",decl:{start:{line:89,column:52},end:{line:89,column:53}},loc:{start:{line:89,column:58},end:{line:95,column:6}},line:89},"19":{name:"(anonymous_19)",decl:{start:{line:91,column:20},end:{line:91,column:21}},loc:{start:{line:93,column:10},end:{line:95,column:5}},line:93},"20":{name:"jobStatusHandler",decl:{start:{line:104,column:9},end:{line:104,column:25}},loc:{start:{line:104,column:34},end:{line:171,column:1}},line:104},"21":{name:"(anonymous_21)",decl:{start:{line:110,column:21},end:{line:110,column:22}},loc:{start:{line:110,column:48},end:{line:123,column:3}},line:110},"22":{name:"(anonymous_22)",decl:{start:{line:125,column:21},end:{line:125,column:22}},loc:{start:{line:125,column:40},end:{line:135,column:3}},line:125},"23":{name:"(anonymous_23)",decl:{start:{line:137,column:23},end:{line:137,column:24}},loc:{start:{line:137,column:42},end:{line:139,column:3}},line:137},"24":{name:"(anonymous_24)",decl:{start:{line:141,column:20},end:{line:141,column:21}},loc:{start:{line:141,column:39},end:{line:143,column:3}},line:141},"25":{name:"(anonymous_25)",decl:{start:{line:145,column:25},end:{line:145,column:26}},loc:{start:{line:145,column:64},end:{line:163,column:3}},line:145},"26":{name:"pushStatusHandler",decl:{start:{line:173,column:9},end:{line:173,column:26}},loc:{start:{line:173,column:53},end:{line:376,column:1}},line:173},"27":{name:"(anonymous_27)",decl:{start:{line:179,column:21},end:{line:179,column:22}},loc:{start:{line:181,column:5},end:{line:230,column:3}},line:181},"28":{name:"(anonymous_28)",decl:{start:{line:223,column:39},end:{line:223,column:40}},loc:{start:{line:223,column:49},end:{line:229,column:5}},line:223},"29":{name:"(anonymous_29)",decl:{start:{line:232,column:21},end:{line:232,column:22}},loc:{start:{line:232,column:40},end:{line:242,column:3}},line:232},"30":{name:"(anonymous_30)",decl:{start:{line:244,column:20},end:{line:244,column:21}},loc:{start:{line:244,column:129},end:{line:335,column:3}},line:244},"31":{name:"(anonymous_31)",decl:{start:{line:253,column:21},end:{line:253,column:22}},loc:{start:{line:253,column:39},end:{line:289,column:7}},line:253},"32":{name:"(anonymous_32)",decl:{start:{line:298,column:37},end:{line:298,column:38}},loc:{start:{line:298,column:44},end:{line:307,column:5}},line:298},"33":{name:"(anonymous_33)",decl:{start:{line:330,column:20},end:{line:330,column:21}},loc:{start:{line:330,column:27},end:{line:334,column:5}},line:330},"34":{name:"(anonymous_34)",decl:{start:{line:337,column:19},end:{line:337,column:20}},loc:{start:{line:337,column:31},end:{line:346,column:3}},line:337},"35":{name:"(anonymous_35)",decl:{start:{line:348,column:15},end:{line:348,column:16}},loc:{start:{line:348,column:30},end:{line:362,column:3}},line:348},"36":{name:"(anonymous_36)",decl:{start:{line:373,column:9},end:{line:373,column:10}},loc:{start:{line:373,column:15},end:{line:373,column:23}},line:373}},branchMap:{"0":{loc:{start:{line:20,column:46},end:{line:20,column:92}},type:"cond-expr",locations:[{start:{line:20,column:70},end:{line:20,column:73}},{start:{line:20,column:76},end:{line:20,column:92}}],line:20},"1":{loc:{start:{line:20,column:46},end:{line:20,column:67}},type:"binary-expr",locations:[{start:{line:20,column:46},end:{line:20,column:49}},{start:{line:20,column:53},end:{line:20,column:67}}],line:20},"2":{loc:{start:{line:22,column:75},end:{line:22,column:330}},type:"if",locations:[{start:{line:22,column:75},end:{line:22,column:330}},{start:{line:22,column:75},end:{line:22,column:330}}],line:22},"3":{loc:{start:{line:22,column:163},end:{line:22,column:296}},type:"if",locations:[{start:{line:22,column:163},end:{line:22,column:296}},{start:{line:22,column:163},end:{line:22,column:296}}],line:22},"4":{loc:{start:{line:24,column:91},end:{line:24,column:131}},type:"cond-expr",locations:[{start:{line:24,column:114},end:{line:24,column:126}},{start:{line:24,column:129},end:{line:24,column:131}}],line:24},"5":{loc:{start:{line:24,column:133},end:{line:24,column:515}},type:"if",locations:[{start:{line:24,column:133},end:{line:24,column:515}},{start:{line:24,column:133},end:{line:24,column:515}}],line:24},"6":{loc:{start:{line:24,column:255},end:{line:24,column:515}},type:"if",locations:[{start:{line:24,column:255},end:{line:24,column:515}},{start:{line:24,column:255},end:{line:24,column:515}}],line:24},"7":{loc:{start:{line:26,column:44},end:{line:26,column:195}},type:"if",locations:[{start:{line:26,column:44},end:{line:26,column:195}},{start:{line:26,column:44},end:{line:26,column:195}}],line:26},"8":{loc:{start:{line:33,column:30},end:{line:33,column:41}},type:"default-arg",locations:[{start:{line:33,column:39},end:{line:33,column:41}}],line:33},"9":{loc:{start:{line:33,column:48},end:{line:33,column:58}},type:"default-arg",locations:[{start:{line:33,column:57},end:{line:33,column:58}}],line:33},"10":{loc:{start:{line:34,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:34,column:2},end:{line:41,column:3}},{start:{line:34,column:2},end:{line:41,column:3}}],line:34},"11":{loc:{start:{line:50,column:4},end:{line:54,column:5}},type:"if",locations:[{start:{line:50,column:4},end:{line:54,column:5}},{start:{line:50,column:4},end:{line:54,column:5}}],line:50},"12":{loc:{start:{line:126,column:4},end:{line:128,column:5}},type:"if",locations:[{start:{line:126,column:4},end:{line:128,column:5}},{start:{line:126,column:4},end:{line:128,column:5}}],line:126},"13":{loc:{start:{line:126,column:8},end:{line:126,column:47}},type:"binary-expr",locations:[{start:{line:126,column:8},end:{line:126,column:16}},{start:{line:126,column:20},end:{line:126,column:47}}],line:126},"14":{loc:{start:{line:145,column:43},end:{line:145,column:62}},type:"default-arg",locations:[{start:{line:145,column:53},end:{line:145,column:62}}],line:145},"15":{loc:{start:{line:152,column:4},end:{line:154,column:5}},type:"if",locations:[{start:{line:152,column:4},end:{line:154,column:5}},{start:{line:152,column:4},end:{line:154,column:5}}],line:152},"16":{loc:{start:{line:152,column:8},end:{line:152,column:46}},type:"binary-expr",locations:[{start:{line:152,column:8},end:{line:152,column:15}},{start:{line:152,column:19},end:{line:152,column:46}}],line:152},"17":{loc:{start:{line:156,column:4},end:{line:158,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:158,column:5}},{start:{line:156,column:4},end:{line:158,column:5}}],line:156},"18":{loc:{start:{line:156,column:8},end:{line:156,column:71}},type:"binary-expr",locations:[{start:{line:156,column:8},end:{line:156,column:32}},{start:{line:156,column:36},end:{line:156,column:71}}],line:156},"19":{loc:{start:{line:179,column:31},end:{line:179,column:40}},type:"default-arg",locations:[{start:{line:179,column:38},end:{line:179,column:40}}],line:179},"20":{loc:{start:{line:179,column:49},end:{line:181,column:3}},type:"default-arg",locations:[{start:{line:179,column:59},end:{line:181,column:3}}],line:179},"21":{loc:{start:{line:186,column:4},end:{line:195,column:5}},type:"if",locations:[{start:{line:186,column:4},end:{line:195,column:5}},{start:{line:186,column:4},end:{line:195,column:5}}],line:186},"22":{loc:{start:{line:187,column:6},end:{line:194,column:7}},type:"if",locations:[{start:{line:187,column:6},end:{line:194,column:7}},{start:{line:187,column:6},end:{line:194,column:7}}],line:187},"23":{loc:{start:{line:197,column:17},end:{line:197,column:32}},type:"binary-expr",locations:[{start:{line:197,column:17},end:{line:197,column:26}},{start:{line:197,column:30},end:{line:197,column:32}}],line:197},"24":{loc:{start:{line:201,column:4},end:{line:207,column:5}},type:"if",locations:[{start:{line:201,column:4},end:{line:207,column:5}},{start:{line:201,column:4},end:{line:207,column:5}}],line:201},"25":{loc:{start:{line:203,column:11},end:{line:207,column:5}},type:"if",locations:[{start:{line:203,column:11},end:{line:207,column:5}},{start:{line:203,column:11},end:{line:207,column:5}}],line:203},"26":{loc:{start:{line:244,column:50},end:{line:244,column:127}},type:"default-arg",locations:[{start:{line:244,column:73},end:{line:244,column:127}}],line:244},"27":{loc:{start:{line:251,column:4},end:{line:290,column:5}},type:"if",locations:[{start:{line:251,column:4},end:{line:290,column:5}},{start:{line:251,column:4},end:{line:290,column:5}}],line:251},"28":{loc:{start:{line:255,column:8},end:{line:257,column:9}},type:"if",locations:[{start:{line:255,column:8},end:{line:257,column:9}},{start:{line:255,column:8},end:{line:257,column:9}}],line:255},"29":{loc:{start:{line:255,column:12},end:{line:255,column:66}},type:"binary-expr",locations:[{start:{line:255,column:12},end:{line:255,column:19}},{start:{line:255,column:23},end:{line:255,column:37}},{start:{line:255,column:41},end:{line:255,column:66}}],line:255},"30":{loc:{start:{line:260,column:20},end:{line:260,column:100}},type:"cond-expr",locations:[{start:{line:260,column:41},end:{line:260,column:68}},{start:{line:260,column:71},end:{line:260,column:100}}],line:260},"31":{loc:{start:{line:263,column:8},end:{line:266,column:9}},type:"if",locations:[{start:{line:263,column:8},end:{line:266,column:9}},{start:{line:263,column:8},end:{line:266,column:9}}],line:263},"32":{loc:{start:{line:264,column:28},end:{line:264,column:116}},type:"cond-expr",locations:[{start:{line:264,column:49},end:{line:264,column:80}},{start:{line:264,column:83},end:{line:264,column:116}}],line:264},"33":{loc:{start:{line:268,column:8},end:{line:286,column:9}},type:"if",locations:[{start:{line:268,column:8},end:{line:286,column:9}},{start:{line:268,column:8},end:{line:286,column:9}}],line:268},"34":{loc:{start:{line:271,column:10},end:{line:283,column:11}},type:"if",locations:[{start:{line:271,column:10},end:{line:283,column:11}},{start:{line:271,column:10},end:{line:283,column:11}}],line:271},"35":{loc:{start:{line:271,column:14},end:{line:271,column:110}},type:"binary-expr",locations:[{start:{line:271,column:14},end:{line:271,column:20}},{start:{line:271,column:24},end:{line:271,column:39}},{start:{line:271,column:43},end:{line:271,column:64}},{start:{line:271,column:68},end:{line:271,column:81}},{start:{line:271,column:85},end:{line:271,column:110}}],line:271},"36":{loc:{start:{line:275,column:12},end:{line:277,column:13}},type:"if",locations:[{start:{line:275,column:12},end:{line:277,column:13}},{start:{line:275,column:12},end:{line:277,column:13}}],line:275},"37":{loc:{start:{line:275,column:16},end:{line:275,column:76}},type:"binary-expr",locations:[{start:{line:275,column:16},end:{line:275,column:41}},{start:{line:275,column:45},end:{line:275,column:76}}],line:275},"38":{loc:{start:{line:280,column:12},end:{line:282,column:13}},type:"if",locations:[{start:{line:280,column:12},end:{line:282,column:13}},{start:{line:280,column:12},end:{line:282,column:13}}],line:280},"39":{loc:{start:{line:280,column:16},end:{line:280,column:70}},type:"binary-expr",locations:[{start:{line:280,column:16},end:{line:280,column:40}},{start:{line:280,column:44},end:{line:280,column:70}}],line:280},"40":{loc:{start:{line:299,column:6},end:{line:306,column:7}},type:"if",locations:[{start:{line:299,column:6},end:{line:306,column:7}},{start:{line:299,column:6},end:{line:306,column:7}}],line:299},"41":{loc:{start:{line:309,column:4},end:{line:324,column:5}},type:"if",locations:[{start:{line:309,column:4},end:{line:324,column:5}},{start:{line:309,column:4},end:{line:324,column:5}}],line:309},"42":{loc:{start:{line:309,column:8},end:{line:309,column:58}},type:"binary-expr",locations:[{start:{line:309,column:8},end:{line:309,column:34}},{start:{line:309,column:38},end:{line:309,column:58}}],line:309},"43":{loc:{start:{line:331,column:6},end:{line:333,column:7}},type:"if",locations:[{start:{line:331,column:6},end:{line:333,column:7}},{start:{line:331,column:6},end:{line:333,column:7}}],line:331},"44":{loc:{start:{line:331,column:10},end:{line:331,column:32}},type:"binary-expr",locations:[{start:{line:331,column:10},end:{line:331,column:13}},{start:{line:331,column:17},end:{line:331,column:32}}],line:331},"45":{loc:{start:{line:349,column:4},end:{line:353,column:5}},type:"if",locations:[{start:{line:349,column:4},end:{line:353,column:5}},{start:{line:349,column:4},end:{line:353,column:5}}],line:349}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0],"9":[0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0],"20":[0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},inputSourceMap:{version:3,sources:["../src/StatusHandler.js"],names:["PUSH_STATUS_COLLECTION","JOB_STATUS_COLLECTION","pushPromiseQueue","KeyPromiseQueue","jobPromiseQueue","incrementOp","object","key","amount","__op","flatten","array","flattened","i","length","Array","isArray","concat","push","statusHandler","className","database","create","then","Promise","resolve","update","where","enqueue","objectId","Object","freeze","restStatusHandler","config","auth","Auth","master","rest","response","jobStatusHandler","jobStatus","objectIdSize","handler","setRunning","jobName","params","now","Date","status","source","createdAt","ACL","setMessage","message","setSucceeded","setFinalStatus","setFailed","undefined","finishedAt","Error","pushStatusHandler","existingObjectId","pushStatus","setInitial","body","options","pushTime","toISOString","prototype","hasOwnProperty","call","hasPushScheduledSupport","push_time","logger","warn","data","payloadString","JSON","stringify","pushHash","alert","query","payload","title","expiry","expiration_time","expiration_interval","numSent","result","batches","verbose","count","trackSent","results","UTCOffset","cleanupInstallations","process","env","PARSE_SERVER_CLEANUP_INVALID_INSTALLATIONS","numFailed","devicesToRemove","reduce","memo","device","deviceType","transmitted","offsetKey","error","deviceToken","token","forEach","info","$in","acl","many","res","complete","fail","err","errorMessage","rval","defineProperty","get"],mappings:"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",sourcesContent:["import { md5Hash, newObjectId } from './cryptoUtils';\nimport { KeyPromiseQueue } from './KeyPromiseQueue';\nimport { logger } from './logger';\nimport rest from './rest';\nimport Auth from './Auth';\n\nconst PUSH_STATUS_COLLECTION = '_PushStatus';\nconst JOB_STATUS_COLLECTION = '_JobStatus';\n\nconst pushPromiseQueue = new KeyPromiseQueue();\nconst jobPromiseQueue = new KeyPromiseQueue();\n\nconst incrementOp = function (object = {}, key, amount = 1) {\n  if (!object[key]) {\n    object[key] = { __op: 'Increment', amount: amount };\n  } else {\n    object[key].amount += amount;\n  }\n  return object[key];\n};\n\nexport function flatten(array) {\n  var flattened = [];\n  for (var i = 0; i < array.length; i++) {\n    if (Array.isArray(array[i])) {\n      flattened = flattened.concat(flatten(array[i]));\n    } else {\n      flattened.push(array[i]);\n    }\n  }\n  return flattened;\n}\n\nfunction statusHandler(className, database) {\n  function create(object) {\n    return database.create(className, object).then(() => {\n      return Promise.resolve(object);\n    });\n  }\n\n  function update(where, object) {\n    return jobPromiseQueue.enqueue(where.objectId, () => database.update(className, where, object));\n  }\n\n  return Object.freeze({\n    create,\n    update,\n  });\n}\n\nfunction restStatusHandler(className, config) {\n  const auth = Auth.master(config);\n  function create(object) {\n    return rest.create(config, auth, className, object).then(({ response }) => {\n      return { ...object, ...response };\n    });\n  }\n\n  function update(where, object) {\n    return pushPromiseQueue.enqueue(where.objectId, () =>\n      rest\n        .update(config, auth, className, { objectId: where.objectId }, object)\n        .then(({ response }) => {\n          return { ...object, ...response };\n        })\n    );\n  }\n\n  return Object.freeze({\n    create,\n    update,\n  });\n}\n\nexport function jobStatusHandler(config) {\n  let jobStatus;\n  const objectId = newObjectId(config.objectIdSize);\n  const database = config.database;\n  const handler = statusHandler(JOB_STATUS_COLLECTION, database);\n  const setRunning = function (jobName, params) {\n    const now = new Date();\n    jobStatus = {\n      objectId,\n      jobName,\n      params,\n      status: 'running',\n      source: 'api',\n      createdAt: now,\n      // lockdown!\n      ACL: {},\n    };\n\n    return handler.create(jobStatus);\n  };\n\n  const setMessage = function (message) {\n    if (!message || typeof message !== 'string') {\n      return Promise.resolve();\n    }\n    return handler.update({ objectId }, { message });\n  };\n\n  const setSucceeded = function (message) {\n    return setFinalStatus('succeeded', message);\n  };\n\n  const setFailed = function (message) {\n    return setFinalStatus('failed', message);\n  };\n\n  const setFinalStatus = function (status, message = undefined) {\n    const finishedAt = new Date();\n    const update = { status, finishedAt };\n    if (message && typeof message === 'string') {\n      update.message = message;\n    }\n    if (message instanceof Error && typeof message.message === 'string') {\n      update.message = message.message;\n    }\n    return handler.update({ objectId }, update);\n  };\n\n  return Object.freeze({\n    setRunning,\n    setSucceeded,\n    setMessage,\n    setFailed,\n  });\n}\n\nexport function pushStatusHandler(config, existingObjectId) {\n  let pushStatus;\n  const database = config.database;\n  const handler = restStatusHandler(PUSH_STATUS_COLLECTION, config);\n  let objectId = existingObjectId;\n  const setInitial = function (body = {}, where, options = { source: 'rest' }) {\n    const now = new Date();\n    let pushTime = now.toISOString();\n    let status = 'pending';\n    if (Object.prototype.hasOwnProperty.call(body, 'push_time')) {\n      if (config.hasPushScheduledSupport) {\n        pushTime = body.push_time;\n        status = 'scheduled';\n      } else {\n        logger.warn('Trying to schedule a push while server is not configured.');\n        logger.warn('Push will be sent immediately');\n      }\n    }\n\n    const data = body.data || {};\n    const payloadString = JSON.stringify(data);\n    let pushHash;\n    if (typeof data.alert === 'string') {\n      pushHash = md5Hash(data.alert);\n    } else if (typeof data.alert === 'object') {\n      pushHash = md5Hash(JSON.stringify(data.alert));\n    } else {\n      pushHash = 'd41d8cd98f00b204e9800998ecf8427e';\n    }\n    const object = {\n      pushTime,\n      query: JSON.stringify(where),\n      payload: payloadString,\n      source: options.source,\n      title: options.title,\n      expiry: body.expiration_time,\n      expiration_interval: body.expiration_interval,\n      status: status,\n      numSent: 0,\n      pushHash,\n      // lockdown!\n      ACL: {},\n    };\n    return handler.create(object).then(result => {\n      objectId = result.objectId;\n      pushStatus = {\n        objectId,\n      };\n      return Promise.resolve(pushStatus);\n    });\n  };\n\n  const setRunning = function (batches) {\n    logger.verbose(\n      `_PushStatus ${objectId}: sending push to installations with %d batches`,\n      batches\n    );\n    return handler.update(\n      {\n        status: 'pending',\n        objectId: objectId,\n      },\n      {\n        status: 'running',\n        count: batches,\n      }\n    );\n  };\n\n  const trackSent = function (\n    results,\n    UTCOffset,\n    cleanupInstallations = process.env.PARSE_SERVER_CLEANUP_INVALID_INSTALLATIONS\n  ) {\n    const update = {\n      numSent: 0,\n      numFailed: 0,\n    };\n    const devicesToRemove = [];\n    if (Array.isArray(results)) {\n      results = flatten(results);\n      results.reduce((memo, result) => {\n        // Cannot handle that\n        if (!result || !result.device || !result.device.deviceType) {\n          return memo;\n        }\n        const deviceType = result.device.deviceType;\n        const key = result.transmitted\n          ? `sentPerType.${deviceType}`\n          : `failedPerType.${deviceType}`;\n        memo[key] = incrementOp(memo, key);\n        if (typeof UTCOffset !== 'undefined') {\n          const offsetKey = result.transmitted\n            ? `sentPerUTCOffset.${UTCOffset}`\n            : `failedPerUTCOffset.${UTCOffset}`;\n          memo[offsetKey] = incrementOp(memo, offsetKey);\n        }\n        if (result.transmitted) {\n          memo.numSent++;\n        } else {\n          if (\n            result &&\n            result.response &&\n            result.response.error &&\n            result.device &&\n            result.device.deviceToken\n          ) {\n            const token = result.device.deviceToken;\n            const error = result.response.error;\n            // GCM errors\n            if (error === 'NotRegistered' || error === 'InvalidRegistration') {\n              devicesToRemove.push(token);\n            }\n            // APNS errors\n            if (error === 'Unregistered' || error === 'BadDeviceToken') {\n              devicesToRemove.push(token);\n            }\n          }\n          memo.numFailed++;\n        }\n        return memo;\n      }, update);\n    }\n\n    logger.verbose(\n      `_PushStatus ${objectId}: sent push! %d success, %d failures`,\n      update.numSent,\n      update.numFailed\n    );\n    logger.verbose(`_PushStatus ${objectId}: needs cleanup`, {\n      devicesToRemove,\n    });\n    ['numSent', 'numFailed'].forEach(key => {\n      if (update[key] > 0) {\n        update[key] = {\n          __op: 'Increment',\n          amount: update[key],\n        };\n      } else {\n        delete update[key];\n      }\n    });\n\n    if (devicesToRemove.length > 0 && cleanupInstallations) {\n      logger.info(`Removing device tokens on ${devicesToRemove.length} _Installations`);\n      database.update(\n        '_Installation',\n        { deviceToken: { $in: devicesToRemove } },\n        { deviceToken: { __op: 'Delete' } },\n        {\n          acl: undefined,\n          many: true,\n        }\n      );\n    }\n    incrementOp(update, 'count', -1);\n    update.status = 'running';\n\n    return handler.update({ objectId }, update).then(res => {\n      if (res && res.count === 0) {\n        return this.complete();\n      }\n    });\n  };\n\n  const complete = function () {\n    return handler.update(\n      { objectId },\n      {\n        status: 'succeeded',\n        count: { __op: 'Delete' },\n      }\n    );\n  };\n\n  const fail = function (err) {\n    if (typeof err === 'string') {\n      err = { message: err };\n    }\n    const update = {\n      errorMessage: err,\n      status: 'failed',\n    };\n    return handler.update({ objectId }, update);\n  };\n\n  const rval = {\n    setInitial,\n    setRunning,\n    trackSent,\n    complete,\n    fail,\n  };\n\n  // define objectId to be dynamic\n  Object.defineProperty(rval, 'objectId', {\n    get: () => objectId,\n  });\n\n  return Object.freeze(rval);\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ec07dbbf38d82ade263ba7880a7fc76964cec9e6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2dix0tuktf=function(){return actualCoverage;};}return actualCoverage;}cov_2dix0tuktf();cov_2dix0tuktf().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2dix0tuktf().s[1]++;exports.flatten=flatten;cov_2dix0tuktf().s[2]++;exports.jobStatusHandler=jobStatusHandler;cov_2dix0tuktf().s[3]++;exports.pushStatusHandler=pushStatusHandler;var _cryptoUtils=(cov_2dix0tuktf().s[4]++,require("./cryptoUtils"));var _KeyPromiseQueue=(cov_2dix0tuktf().s[5]++,require("./KeyPromiseQueue"));var _logger=(cov_2dix0tuktf().s[6]++,require("./logger"));var _rest=(cov_2dix0tuktf().s[7]++,_interopRequireDefault(require("./rest")));var _Auth=(cov_2dix0tuktf().s[8]++,_interopRequireDefault(require("./Auth")));function _interopRequireDefault(obj){cov_2dix0tuktf().f[0]++;cov_2dix0tuktf().s[9]++;return(cov_2dix0tuktf().b[1][0]++,obj)&&(cov_2dix0tuktf().b[1][1]++,obj.__esModule)?(cov_2dix0tuktf().b[0][0]++,obj):(cov_2dix0tuktf().b[0][1]++,{default:obj});}function ownKeys(object,enumerableOnly){cov_2dix0tuktf().f[1]++;var keys=(cov_2dix0tuktf().s[10]++,Object.keys(object));cov_2dix0tuktf().s[11]++;if(Object.getOwnPropertySymbols){cov_2dix0tuktf().b[2][0]++;var symbols=(cov_2dix0tuktf().s[12]++,Object.getOwnPropertySymbols(object));cov_2dix0tuktf().s[13]++;if(enumerableOnly){cov_2dix0tuktf().b[3][0]++;cov_2dix0tuktf().s[14]++;symbols=symbols.filter(function(sym){cov_2dix0tuktf().f[2]++;cov_2dix0tuktf().s[15]++;return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}else{cov_2dix0tuktf().b[3][1]++;}cov_2dix0tuktf().s[16]++;keys.push.apply(keys,symbols);}else{cov_2dix0tuktf().b[2][1]++;}cov_2dix0tuktf().s[17]++;return keys;}function _objectSpread(target){cov_2dix0tuktf().f[3]++;cov_2dix0tuktf().s[18]++;for(var i=(cov_2dix0tuktf().s[19]++,1);i<arguments.length;i++){var source=(cov_2dix0tuktf().s[20]++,arguments[i]!=null?(cov_2dix0tuktf().b[4][0]++,arguments[i]):(cov_2dix0tuktf().b[4][1]++,{}));cov_2dix0tuktf().s[21]++;if(i%2){cov_2dix0tuktf().b[5][0]++;cov_2dix0tuktf().s[22]++;ownKeys(Object(source),true).forEach(function(key){cov_2dix0tuktf().f[4]++;cov_2dix0tuktf().s[23]++;_defineProperty(target,key,source[key]);});}else{cov_2dix0tuktf().b[5][1]++;cov_2dix0tuktf().s[24]++;if(Object.getOwnPropertyDescriptors){cov_2dix0tuktf().b[6][0]++;cov_2dix0tuktf().s[25]++;Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{cov_2dix0tuktf().b[6][1]++;cov_2dix0tuktf().s[26]++;ownKeys(Object(source)).forEach(function(key){cov_2dix0tuktf().f[5]++;cov_2dix0tuktf().s[27]++;Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}}cov_2dix0tuktf().s[28]++;return target;}function _defineProperty(obj,key,value){cov_2dix0tuktf().f[6]++;cov_2dix0tuktf().s[29]++;if(key in obj){cov_2dix0tuktf().b[7][0]++;cov_2dix0tuktf().s[30]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_2dix0tuktf().b[7][1]++;cov_2dix0tuktf().s[31]++;obj[key]=value;}cov_2dix0tuktf().s[32]++;return obj;}const PUSH_STATUS_COLLECTION=(cov_2dix0tuktf().s[33]++,'_PushStatus');const JOB_STATUS_COLLECTION=(cov_2dix0tuktf().s[34]++,'_JobStatus');const pushPromiseQueue=(cov_2dix0tuktf().s[35]++,new _KeyPromiseQueue.KeyPromiseQueue());const jobPromiseQueue=(cov_2dix0tuktf().s[36]++,new _KeyPromiseQueue.KeyPromiseQueue());cov_2dix0tuktf().s[37]++;const incrementOp=function(object=(cov_2dix0tuktf().b[8][0]++,{}),key,amount=(cov_2dix0tuktf().b[9][0]++,1)){cov_2dix0tuktf().f[7]++;cov_2dix0tuktf().s[38]++;if(!object[key]){cov_2dix0tuktf().b[10][0]++;cov_2dix0tuktf().s[39]++;object[key]={__op:'Increment',amount:amount};}else{cov_2dix0tuktf().b[10][1]++;cov_2dix0tuktf().s[40]++;object[key].amount+=amount;}cov_2dix0tuktf().s[41]++;return object[key];};function flatten(array){cov_2dix0tuktf().f[8]++;var flattened=(cov_2dix0tuktf().s[42]++,[]);cov_2dix0tuktf().s[43]++;for(var i=(cov_2dix0tuktf().s[44]++,0);i<array.length;i++){cov_2dix0tuktf().s[45]++;if(Array.isArray(array[i])){cov_2dix0tuktf().b[11][0]++;cov_2dix0tuktf().s[46]++;flattened=flattened.concat(flatten(array[i]));}else{cov_2dix0tuktf().b[11][1]++;cov_2dix0tuktf().s[47]++;flattened.push(array[i]);}}cov_2dix0tuktf().s[48]++;return flattened;}function statusHandler(className,database){cov_2dix0tuktf().f[9]++;function create(object){cov_2dix0tuktf().f[10]++;cov_2dix0tuktf().s[49]++;return database.create(className,object).then(()=>{cov_2dix0tuktf().f[11]++;cov_2dix0tuktf().s[50]++;return Promise.resolve(object);});}function update(where,object){cov_2dix0tuktf().f[12]++;cov_2dix0tuktf().s[51]++;return jobPromiseQueue.enqueue(where.objectId,()=>{cov_2dix0tuktf().f[13]++;cov_2dix0tuktf().s[52]++;return database.update(className,where,object);});}cov_2dix0tuktf().s[53]++;return Object.freeze({create,update});}function restStatusHandler(className,config){cov_2dix0tuktf().f[14]++;const auth=(cov_2dix0tuktf().s[54]++,_Auth.default.master(config));function create(object){cov_2dix0tuktf().f[15]++;cov_2dix0tuktf().s[55]++;return _rest.default.create(config,auth,className,object).then(({response})=>{cov_2dix0tuktf().f[16]++;cov_2dix0tuktf().s[56]++;return _objectSpread(_objectSpread({},object),response);});}function update(where,object){cov_2dix0tuktf().f[17]++;cov_2dix0tuktf().s[57]++;return pushPromiseQueue.enqueue(where.objectId,()=>{cov_2dix0tuktf().f[18]++;cov_2dix0tuktf().s[58]++;return _rest.default.update(config,auth,className,{objectId:where.objectId},object).then(({response})=>{cov_2dix0tuktf().f[19]++;cov_2dix0tuktf().s[59]++;return _objectSpread(_objectSpread({},object),response);});});}cov_2dix0tuktf().s[60]++;return Object.freeze({create,update});}function jobStatusHandler(config){cov_2dix0tuktf().f[20]++;let jobStatus;const objectId=(cov_2dix0tuktf().s[61]++,(0,_cryptoUtils.newObjectId)(config.objectIdSize));const database=(cov_2dix0tuktf().s[62]++,config.database);const handler=(cov_2dix0tuktf().s[63]++,statusHandler(JOB_STATUS_COLLECTION,database));cov_2dix0tuktf().s[64]++;const setRunning=function(jobName,params){cov_2dix0tuktf().f[21]++;const now=(cov_2dix0tuktf().s[65]++,new Date());cov_2dix0tuktf().s[66]++;jobStatus={objectId,jobName,params,status:'running',source:'api',createdAt:now,// lockdown!
ACL:{}};cov_2dix0tuktf().s[67]++;return handler.create(jobStatus);};cov_2dix0tuktf().s[68]++;const setMessage=function(message){cov_2dix0tuktf().f[22]++;cov_2dix0tuktf().s[69]++;if((cov_2dix0tuktf().b[13][0]++,!message)||(cov_2dix0tuktf().b[13][1]++,typeof message!=='string')){cov_2dix0tuktf().b[12][0]++;cov_2dix0tuktf().s[70]++;return Promise.resolve();}else{cov_2dix0tuktf().b[12][1]++;}cov_2dix0tuktf().s[71]++;return handler.update({objectId},{message});};cov_2dix0tuktf().s[72]++;const setSucceeded=function(message){cov_2dix0tuktf().f[23]++;cov_2dix0tuktf().s[73]++;return setFinalStatus('succeeded',message);};cov_2dix0tuktf().s[74]++;const setFailed=function(message){cov_2dix0tuktf().f[24]++;cov_2dix0tuktf().s[75]++;return setFinalStatus('failed',message);};cov_2dix0tuktf().s[76]++;const setFinalStatus=function(status,message=(cov_2dix0tuktf().b[14][0]++,undefined)){cov_2dix0tuktf().f[25]++;const finishedAt=(cov_2dix0tuktf().s[77]++,new Date());const update=(cov_2dix0tuktf().s[78]++,{status,finishedAt});cov_2dix0tuktf().s[79]++;if((cov_2dix0tuktf().b[16][0]++,message)&&(cov_2dix0tuktf().b[16][1]++,typeof message==='string')){cov_2dix0tuktf().b[15][0]++;cov_2dix0tuktf().s[80]++;update.message=message;}else{cov_2dix0tuktf().b[15][1]++;}cov_2dix0tuktf().s[81]++;if((cov_2dix0tuktf().b[18][0]++,message instanceof Error)&&(cov_2dix0tuktf().b[18][1]++,typeof message.message==='string')){cov_2dix0tuktf().b[17][0]++;cov_2dix0tuktf().s[82]++;update.message=message.message;}else{cov_2dix0tuktf().b[17][1]++;}cov_2dix0tuktf().s[83]++;return handler.update({objectId},update);};cov_2dix0tuktf().s[84]++;return Object.freeze({setRunning,setSucceeded,setMessage,setFailed});}function pushStatusHandler(config,existingObjectId){cov_2dix0tuktf().f[26]++;let pushStatus;const database=(cov_2dix0tuktf().s[85]++,config.database);const handler=(cov_2dix0tuktf().s[86]++,restStatusHandler(PUSH_STATUS_COLLECTION,config));let objectId=(cov_2dix0tuktf().s[87]++,existingObjectId);cov_2dix0tuktf().s[88]++;const setInitial=function(body=(cov_2dix0tuktf().b[19][0]++,{}),where,options=(cov_2dix0tuktf().b[20][0]++,{source:'rest'})){cov_2dix0tuktf().f[27]++;const now=(cov_2dix0tuktf().s[89]++,new Date());let pushTime=(cov_2dix0tuktf().s[90]++,now.toISOString());let status=(cov_2dix0tuktf().s[91]++,'pending');cov_2dix0tuktf().s[92]++;if(Object.prototype.hasOwnProperty.call(body,'push_time')){cov_2dix0tuktf().b[21][0]++;cov_2dix0tuktf().s[93]++;if(config.hasPushScheduledSupport){cov_2dix0tuktf().b[22][0]++;cov_2dix0tuktf().s[94]++;pushTime=body.push_time;cov_2dix0tuktf().s[95]++;status='scheduled';}else{cov_2dix0tuktf().b[22][1]++;cov_2dix0tuktf().s[96]++;_logger.logger.warn('Trying to schedule a push while server is not configured.');cov_2dix0tuktf().s[97]++;_logger.logger.warn('Push will be sent immediately');}}else{cov_2dix0tuktf().b[21][1]++;}const data=(cov_2dix0tuktf().s[98]++,(cov_2dix0tuktf().b[23][0]++,body.data)||(cov_2dix0tuktf().b[23][1]++,{}));const payloadString=(cov_2dix0tuktf().s[99]++,JSON.stringify(data));let pushHash;cov_2dix0tuktf().s[100]++;if(typeof data.alert==='string'){cov_2dix0tuktf().b[24][0]++;cov_2dix0tuktf().s[101]++;pushHash=(0,_cryptoUtils.md5Hash)(data.alert);}else{cov_2dix0tuktf().b[24][1]++;cov_2dix0tuktf().s[102]++;if(typeof data.alert==='object'){cov_2dix0tuktf().b[25][0]++;cov_2dix0tuktf().s[103]++;pushHash=(0,_cryptoUtils.md5Hash)(JSON.stringify(data.alert));}else{cov_2dix0tuktf().b[25][1]++;cov_2dix0tuktf().s[104]++;pushHash='d41d8cd98f00b204e9800998ecf8427e';}}const object=(cov_2dix0tuktf().s[105]++,{pushTime,query:JSON.stringify(where),payload:payloadString,source:options.source,title:options.title,expiry:body.expiration_time,expiration_interval:body.expiration_interval,status:status,numSent:0,pushHash,// lockdown!
ACL:{}});cov_2dix0tuktf().s[106]++;return handler.create(object).then(result=>{cov_2dix0tuktf().f[28]++;cov_2dix0tuktf().s[107]++;objectId=result.objectId;cov_2dix0tuktf().s[108]++;pushStatus={objectId};cov_2dix0tuktf().s[109]++;return Promise.resolve(pushStatus);});};cov_2dix0tuktf().s[110]++;const setRunning=function(batches){cov_2dix0tuktf().f[29]++;cov_2dix0tuktf().s[111]++;_logger.logger.verbose(`_PushStatus ${objectId}: sending push to installations with %d batches`,batches);cov_2dix0tuktf().s[112]++;return handler.update({status:'pending',objectId:objectId},{status:'running',count:batches});};cov_2dix0tuktf().s[113]++;const trackSent=function(results,UTCOffset,cleanupInstallations=(cov_2dix0tuktf().b[26][0]++,process.env.PARSE_SERVER_CLEANUP_INVALID_INSTALLATIONS)){cov_2dix0tuktf().f[30]++;const update=(cov_2dix0tuktf().s[114]++,{numSent:0,numFailed:0});const devicesToRemove=(cov_2dix0tuktf().s[115]++,[]);cov_2dix0tuktf().s[116]++;if(Array.isArray(results)){cov_2dix0tuktf().b[27][0]++;cov_2dix0tuktf().s[117]++;results=flatten(results);cov_2dix0tuktf().s[118]++;results.reduce((memo,result)=>{cov_2dix0tuktf().f[31]++;cov_2dix0tuktf().s[119]++;// Cannot handle that
if((cov_2dix0tuktf().b[29][0]++,!result)||(cov_2dix0tuktf().b[29][1]++,!result.device)||(cov_2dix0tuktf().b[29][2]++,!result.device.deviceType)){cov_2dix0tuktf().b[28][0]++;cov_2dix0tuktf().s[120]++;return memo;}else{cov_2dix0tuktf().b[28][1]++;}const deviceType=(cov_2dix0tuktf().s[121]++,result.device.deviceType);const key=(cov_2dix0tuktf().s[122]++,result.transmitted?(cov_2dix0tuktf().b[30][0]++,`sentPerType.${deviceType}`):(cov_2dix0tuktf().b[30][1]++,`failedPerType.${deviceType}`));cov_2dix0tuktf().s[123]++;memo[key]=incrementOp(memo,key);cov_2dix0tuktf().s[124]++;if(typeof UTCOffset!=='undefined'){cov_2dix0tuktf().b[31][0]++;const offsetKey=(cov_2dix0tuktf().s[125]++,result.transmitted?(cov_2dix0tuktf().b[32][0]++,`sentPerUTCOffset.${UTCOffset}`):(cov_2dix0tuktf().b[32][1]++,`failedPerUTCOffset.${UTCOffset}`));cov_2dix0tuktf().s[126]++;memo[offsetKey]=incrementOp(memo,offsetKey);}else{cov_2dix0tuktf().b[31][1]++;}cov_2dix0tuktf().s[127]++;if(result.transmitted){cov_2dix0tuktf().b[33][0]++;cov_2dix0tuktf().s[128]++;memo.numSent++;}else{cov_2dix0tuktf().b[33][1]++;cov_2dix0tuktf().s[129]++;if((cov_2dix0tuktf().b[35][0]++,result)&&(cov_2dix0tuktf().b[35][1]++,result.response)&&(cov_2dix0tuktf().b[35][2]++,result.response.error)&&(cov_2dix0tuktf().b[35][3]++,result.device)&&(cov_2dix0tuktf().b[35][4]++,result.device.deviceToken)){cov_2dix0tuktf().b[34][0]++;const token=(cov_2dix0tuktf().s[130]++,result.device.deviceToken);const error=(cov_2dix0tuktf().s[131]++,result.response.error);// GCM errors
cov_2dix0tuktf().s[132]++;if((cov_2dix0tuktf().b[37][0]++,error==='NotRegistered')||(cov_2dix0tuktf().b[37][1]++,error==='InvalidRegistration')){cov_2dix0tuktf().b[36][0]++;cov_2dix0tuktf().s[133]++;devicesToRemove.push(token);}else{cov_2dix0tuktf().b[36][1]++;}// APNS errors
cov_2dix0tuktf().s[134]++;if((cov_2dix0tuktf().b[39][0]++,error==='Unregistered')||(cov_2dix0tuktf().b[39][1]++,error==='BadDeviceToken')){cov_2dix0tuktf().b[38][0]++;cov_2dix0tuktf().s[135]++;devicesToRemove.push(token);}else{cov_2dix0tuktf().b[38][1]++;}}else{cov_2dix0tuktf().b[34][1]++;}cov_2dix0tuktf().s[136]++;memo.numFailed++;}cov_2dix0tuktf().s[137]++;return memo;},update);}else{cov_2dix0tuktf().b[27][1]++;}cov_2dix0tuktf().s[138]++;_logger.logger.verbose(`_PushStatus ${objectId}: sent push! %d success, %d failures`,update.numSent,update.numFailed);cov_2dix0tuktf().s[139]++;_logger.logger.verbose(`_PushStatus ${objectId}: needs cleanup`,{devicesToRemove});cov_2dix0tuktf().s[140]++;['numSent','numFailed'].forEach(key=>{cov_2dix0tuktf().f[32]++;cov_2dix0tuktf().s[141]++;if(update[key]>0){cov_2dix0tuktf().b[40][0]++;cov_2dix0tuktf().s[142]++;update[key]={__op:'Increment',amount:update[key]};}else{cov_2dix0tuktf().b[40][1]++;cov_2dix0tuktf().s[143]++;delete update[key];}});cov_2dix0tuktf().s[144]++;if((cov_2dix0tuktf().b[42][0]++,devicesToRemove.length>0)&&(cov_2dix0tuktf().b[42][1]++,cleanupInstallations)){cov_2dix0tuktf().b[41][0]++;cov_2dix0tuktf().s[145]++;_logger.logger.info(`Removing device tokens on ${devicesToRemove.length} _Installations`);cov_2dix0tuktf().s[146]++;database.update('_Installation',{deviceToken:{$in:devicesToRemove}},{deviceToken:{__op:'Delete'}},{acl:undefined,many:true});}else{cov_2dix0tuktf().b[41][1]++;}cov_2dix0tuktf().s[147]++;incrementOp(update,'count',-1);cov_2dix0tuktf().s[148]++;update.status='running';cov_2dix0tuktf().s[149]++;return handler.update({objectId},update).then(res=>{cov_2dix0tuktf().f[33]++;cov_2dix0tuktf().s[150]++;if((cov_2dix0tuktf().b[44][0]++,res)&&(cov_2dix0tuktf().b[44][1]++,res.count===0)){cov_2dix0tuktf().b[43][0]++;cov_2dix0tuktf().s[151]++;return this.complete();}else{cov_2dix0tuktf().b[43][1]++;}});};cov_2dix0tuktf().s[152]++;const complete=function(){cov_2dix0tuktf().f[34]++;cov_2dix0tuktf().s[153]++;return handler.update({objectId},{status:'succeeded',count:{__op:'Delete'}});};cov_2dix0tuktf().s[154]++;const fail=function(err){cov_2dix0tuktf().f[35]++;cov_2dix0tuktf().s[155]++;if(typeof err==='string'){cov_2dix0tuktf().b[45][0]++;cov_2dix0tuktf().s[156]++;err={message:err};}else{cov_2dix0tuktf().b[45][1]++;}const update=(cov_2dix0tuktf().s[157]++,{errorMessage:err,status:'failed'});cov_2dix0tuktf().s[158]++;return handler.update({objectId},update);};const rval=(cov_2dix0tuktf().s[159]++,{setInitial,setRunning,trackSent,complete,fail});// define objectId to be dynamic
cov_2dix0tuktf().s[160]++;Object.defineProperty(rval,'objectId',{get:()=>{cov_2dix0tuktf().f[36]++;cov_2dix0tuktf().s[161]++;return objectId;}});cov_2dix0tuktf().s[162]++;return Object.freeze(rval);}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TdGF0dXNIYW5kbGVyLmpzIl0sIm5hbWVzIjpbIlBVU0hfU1RBVFVTX0NPTExFQ1RJT04iLCJKT0JfU1RBVFVTX0NPTExFQ1RJT04iLCJwdXNoUHJvbWlzZVF1ZXVlIiwiS2V5UHJvbWlzZVF1ZXVlIiwiam9iUHJvbWlzZVF1ZXVlIiwiaW5jcmVtZW50T3AiLCJvYmplY3QiLCJrZXkiLCJhbW91bnQiLCJfX29wIiwiZmxhdHRlbiIsImFycmF5IiwiZmxhdHRlbmVkIiwiaSIsImxlbmd0aCIsIkFycmF5IiwiaXNBcnJheSIsImNvbmNhdCIsInB1c2giLCJzdGF0dXNIYW5kbGVyIiwiY2xhc3NOYW1lIiwiZGF0YWJhc2UiLCJjcmVhdGUiLCJ0aGVuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ1cGRhdGUiLCJ3aGVyZSIsImVucXVldWUiLCJvYmplY3RJZCIsIk9iamVjdCIsImZyZWV6ZSIsInJlc3RTdGF0dXNIYW5kbGVyIiwiY29uZmlnIiwiYXV0aCIsIkF1dGgiLCJtYXN0ZXIiLCJyZXN0IiwicmVzcG9uc2UiLCJqb2JTdGF0dXNIYW5kbGVyIiwiam9iU3RhdHVzIiwib2JqZWN0SWRTaXplIiwiaGFuZGxlciIsInNldFJ1bm5pbmciLCJqb2JOYW1lIiwicGFyYW1zIiwibm93IiwiRGF0ZSIsInN0YXR1cyIsInNvdXJjZSIsImNyZWF0ZWRBdCIsIkFDTCIsInNldE1lc3NhZ2UiLCJtZXNzYWdlIiwic2V0U3VjY2VlZGVkIiwic2V0RmluYWxTdGF0dXMiLCJzZXRGYWlsZWQiLCJ1bmRlZmluZWQiLCJmaW5pc2hlZEF0IiwiRXJyb3IiLCJwdXNoU3RhdHVzSGFuZGxlciIsImV4aXN0aW5nT2JqZWN0SWQiLCJwdXNoU3RhdHVzIiwic2V0SW5pdGlhbCIsImJvZHkiLCJvcHRpb25zIiwicHVzaFRpbWUiLCJ0b0lTT1N0cmluZyIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImhhc1B1c2hTY2hlZHVsZWRTdXBwb3J0IiwicHVzaF90aW1lIiwibG9nZ2VyIiwid2FybiIsImRhdGEiLCJwYXlsb2FkU3RyaW5nIiwiSlNPTiIsInN0cmluZ2lmeSIsInB1c2hIYXNoIiwiYWxlcnQiLCJxdWVyeSIsInBheWxvYWQiLCJ0aXRsZSIsImV4cGlyeSIsImV4cGlyYXRpb25fdGltZSIsImV4cGlyYXRpb25faW50ZXJ2YWwiLCJudW1TZW50IiwicmVzdWx0IiwiYmF0Y2hlcyIsInZlcmJvc2UiLCJjb3VudCIsInRyYWNrU2VudCIsInJlc3VsdHMiLCJVVENPZmZzZXQiLCJjbGVhbnVwSW5zdGFsbGF0aW9ucyIsInByb2Nlc3MiLCJlbnYiLCJQQVJTRV9TRVJWRVJfQ0xFQU5VUF9JTlZBTElEX0lOU1RBTExBVElPTlMiLCJudW1GYWlsZWQiLCJkZXZpY2VzVG9SZW1vdmUiLCJyZWR1Y2UiLCJtZW1vIiwiZGV2aWNlIiwiZGV2aWNlVHlwZSIsInRyYW5zbWl0dGVkIiwib2Zmc2V0S2V5IiwiZXJyb3IiLCJkZXZpY2VUb2tlbiIsInRva2VuIiwiZm9yRWFjaCIsImluZm8iLCIkaW4iLCJhY2wiLCJtYW55IiwicmVzIiwiY29tcGxldGUiLCJmYWlsIiwiZXJyIiwiZXJyb3JNZXNzYWdlIiwicnZhbCIsImRlZmluZVByb3BlcnR5IiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLE1BQU1BLHNCQUFzQixHQUFHLGFBQS9CO0FBQ0EsTUFBTUMscUJBQXFCLEdBQUcsWUFBOUI7QUFFQSxNQUFNQyxnQkFBZ0IsR0FBRyxJQUFJQyxnQ0FBSixFQUF6QjtBQUNBLE1BQU1DLGVBQWUsR0FBRyxJQUFJRCxnQ0FBSixFQUF4Qjs7QUFFQSxNQUFNRSxXQUFXLEdBQUcsVUFBVUMsTUFBTSxHQUFHLEVBQW5CLEVBQXVCQyxHQUF2QixFQUE0QkMsTUFBTSxHQUFHLENBQXJDLEVBQXdDO0FBQzFELE1BQUksQ0FBQ0YsTUFBTSxDQUFDQyxHQUFELENBQVgsRUFBa0I7QUFDaEJELElBQUFBLE1B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cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWQ1SGFzaCwgbmV3T2JqZWN0SWQgfSBmcm9tICcuL2NyeXB0b1V0aWxzJztcbmltcG9ydCB7IEtleVByb21pc2VRdWV1ZSB9IGZyb20gJy4vS2V5UHJvbWlzZVF1ZXVlJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCByZXN0IGZyb20gJy4vcmVzdCc7XG5pbXBvcnQgQXV0aCBmcm9tICcuL0F1dGgnO1xuXG5jb25zdCBQVVNIX1NUQVRVU19DT0xMRUNUSU9OID0gJ19QdXNoU3RhdHVzJztcbmNvbnN0IEpPQl9TVEFUVVNfQ09MTEVDVElPTiA9ICdfSm9iU3RhdHVzJztcblxuY29uc3QgcHVzaFByb21pc2VRdWV1ZSA9IG5ldyBLZXlQcm9taXNlUXVldWUoKTtcbmNvbnN0IGpvYlByb21pc2VRdWV1ZSA9IG5ldyBLZXlQcm9taXNlUXVldWUoKTtcblxuY29uc3QgaW5jcmVtZW50T3AgPSBmdW5jdGlvbiAob2JqZWN0ID0ge30sIGtleSwgYW1vdW50ID0gMSkge1xuICBpZiAoIW9iamVjdFtrZXldKSB7XG4gICAgb2JqZWN0W2tleV0gPSB7IF9fb3A6ICdJbmNyZW1lbnQnLCBhbW91bnQ6IGFtb3VudCB9O1xuICB9IGVsc2Uge1xuICAgIG9iamVjdFtrZXldLmFtb3VudCArPSBhbW91bnQ7XG4gIH1cbiAgcmV0dXJuIG9iamVjdFtrZXldO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpIHtcbiAgdmFyIGZsYXR0ZW5lZCA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyYXlbaV0pKSB7XG4gICAgICBmbGF0dGVuZWQgPSBmbGF0dGVuZWQuY29uY2F0KGZsYXR0ZW4oYXJyYXlbaV0pKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmxhdHRlbmVkLnB1c2goYXJyYXlbaV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmxhdHRlbmVkO1xufVxuXG5mdW5jdGlvbiBzdGF0dXNIYW5kbGVyKGNsYXNzTmFtZSwgZGF0YWJhc2UpIHtcbiAgZnVuY3Rpb24gY3JlYXRlKG9iamVjdCkge1xuICAgIHJldHVybiBkYXRhYmFzZS5jcmVhdGUoY2xhc3NOYW1lLCBvYmplY3QpLnRoZW4oKCkgPT4ge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShvYmplY3QpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlKHdoZXJlLCBvYmplY3QpIHtcbiAgICByZXR1cm4gam9iUHJvbWlzZVF1ZXVlLmVucXVldWUod2hlcmUub2JqZWN0SWQsICgpID0+IGRhdGFiYXNlLnVwZGF0ZShjbGFzc05hbWUsIHdoZXJlLCBvYmplY3QpKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICBjcmVhdGUsXG4gICAgdXBkYXRlLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVzdFN0YXR1c0hhbmRsZXIoY2xhc3NOYW1lLCBjb25maWcpIHtcbiAgY29uc3QgYXV0aCA9IEF1dGgubWFzdGVyKGNvbmZpZyk7XG4gIGZ1bmN0aW9uIGNyZWF0ZShvYmplY3QpIHtcbiAgICByZXR1cm4gcmVzdC5jcmVhdGUoY29uZmlnLCBhdXRoLCBjbGFzc05hbWUsIG9iamVjdCkudGhlbigoeyByZXNwb25zZSB9KSA9PiB7XG4gICAgICByZXR1cm4geyAuLi5vYmplY3QsIC4uLnJlc3BvbnNlIH07XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGUod2hlcmUsIG9iamVjdCkge1xuICAgIHJldHVybiBwdXNoUHJvbWlzZVF1ZXVlLmVucXVldWUod2hlcmUub2JqZWN0SWQsICgpID0+XG4gICAgICByZXN0XG4gICAgICAgIC51cGRhdGUoY29uZmlnLCBhdXRoLCBjbGFzc05hbWUsIHsgb2JqZWN0SWQ6IHdoZXJlLm9iamVjdElkIH0sIG9iamVjdClcbiAgICAgICAgLnRoZW4oKHsgcmVzcG9uc2UgfSkgPT4ge1xuICAgICAgICAgIHJldHVybiB7IC4uLm9iamVjdCwgLi4ucmVzcG9uc2UgfTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoe1xuICAgIGNyZWF0ZSxcbiAgICB1cGRhdGUsXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gam9iU3RhdHVzSGFuZGxlcihjb25maWcpIHtcbiAgbGV0IGpvYlN0YXR1cztcbiAgY29uc3Qgb2JqZWN0SWQgPSBuZXdPYmplY3RJZChjb25maWcub2JqZWN0SWRTaXplKTtcbiAgY29uc3QgZGF0YWJhc2UgPSBjb25maWcuZGF0YWJhc2U7XG4gIGNvbnN0IGhhbmRsZXIgPSBzdGF0dXNIYW5kbGVyKEpPQl9TVEFUVVNfQ09MTEVDVElPTiwgZGF0YWJhc2UpO1xuICBjb25zdCBzZXRSdW5uaW5nID0gZnVuY3Rpb24gKGpvYk5hbWUsIHBhcmFtcykge1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgam9iU3RhdHVzID0ge1xuICAgICAgb2JqZWN0SWQsXG4gICAgICBqb2JOYW1lLFxuICAgICAgcGFyYW1zLFxuICAgICAgc3RhdHVzOiAncnVubmluZycsXG4gICAgICBzb3VyY2U6ICdhcGknLFxuICAgICAgY3JlYXRlZEF0OiBub3csXG4gICAgICAvLyBsb2NrZG93biFcbiAgICAgIEFDTDoge30sXG4gICAgfTtcblxuICAgIHJldHVybiBoYW5kbGVyLmNyZWF0ZShqb2JTdGF0dXMpO1xuICB9O1xuXG4gIGNvbnN0IHNldE1lc3NhZ2UgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgIGlmICghbWVzc2FnZSB8fCB0eXBlb2YgbWVzc2FnZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgcmV0dXJuIGhhbmRsZXIudXBkYXRlKHsgb2JqZWN0SWQgfSwgeyBtZXNzYWdlIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNldFN1Y2NlZWRlZCA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHNldEZpbmFsU3RhdHVzKCdzdWNjZWVkZWQnLCBtZXNzYWdlKTtcbiAgfTtcblxuICBjb25zdCBzZXRGYWlsZWQgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgIHJldHVybiBzZXRGaW5hbFN0YXR1cygnZmFpbGVkJywgbWVzc2FnZSk7XG4gIH07XG5cbiAgY29uc3Qgc2V0RmluYWxTdGF0dXMgPSBmdW5jdGlvbiAoc3RhdHVzLCBtZXNzYWdlID0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgZmluaXNoZWRBdCA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgdXBkYXRlID0geyBzdGF0dXMsIGZpbmlzaGVkQXQgfTtcbiAgICBpZiAobWVzc2FnZSAmJiB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHVwZGF0ZS5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9XG4gICAgaWYgKG1lc3NhZ2UgaW5zdGFuY2VvZiBFcnJvciAmJiB0eXBlb2YgbWVzc2FnZS5tZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgdXBkYXRlLm1lc3NhZ2UgPSBtZXNzYWdlLm1lc3NhZ2U7XG4gICAgfVxuICAgIHJldHVybiBoYW5kbGVyLnVwZGF0ZSh7IG9iamVjdElkIH0sIHVwZGF0ZSk7XG4gIH07XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoe1xuICAgIHNldFJ1bm5pbmcsXG4gICAgc2V0U3VjY2VlZGVkLFxuICAgIHNldE1lc3NhZ2UsXG4gICAgc2V0RmFpbGVkLFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1c2hTdGF0dXNIYW5kbGVyKGNvbmZpZywgZXhpc3RpbmdPYmplY3RJZCkge1xuICBsZXQgcHVzaFN0YXR1cztcbiAgY29uc3QgZGF0YWJhc2UgPSBjb25maWcuZGF0YWJhc2U7XG4gIGNvbnN0IGhhbmRsZXIgPSByZXN0U3RhdHVzSGFuZGxlcihQVVNIX1NUQVRVU19DT0xMRUNUSU9OLCBjb25maWcpO1xuICBsZXQgb2JqZWN0SWQgPSBleGlzdGluZ09iamVjdElkO1xuICBjb25zdCBzZXRJbml0aWFsID0gZnVuY3Rpb24gKGJvZHkgPSB7fSwgd2hlcmUsIG9wdGlvbnMgPSB7IHNvdXJjZTogJ3Jlc3QnIH0pIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGxldCBwdXNoVGltZSA9IG5vdy50b0lTT1N0cmluZygpO1xuICAgIGxldCBzdGF0dXMgPSAncGVuZGluZyc7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChib2R5LCAncHVzaF90aW1lJykpIHtcbiAgICAgIGlmIChjb25maWcuaGFzUHVzaFNjaGVkdWxlZFN1cHBvcnQpIHtcbiAgICAgICAgcHVzaFRpbWUgPSBib2R5LnB1c2hfdGltZTtcbiAgICAgICAgc3RhdHVzID0gJ3NjaGVkdWxlZCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dnZXIud2FybignVHJ5aW5nIHRvIHNjaGVkdWxlIGEgcHVzaCB3aGlsZSBzZXJ2ZXIgaXMgbm90IGNvbmZpZ3VyZWQuJyk7XG4gICAgICAgIGxvZ2dlci53YXJuKCdQdXNoIHdpbGwgYmUgc2VudCBpbW1lZGlhdGVseScpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBib2R5LmRhdGEgfHwge307XG4gICAgY29uc3QgcGF5bG9hZFN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIGxldCBwdXNoSGFzaDtcbiAgICBpZiAodHlwZW9mIGRhdGEuYWxlcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBwdXNoSGFzaCA9IG1kNUhhc2goZGF0YS5hbGVydCk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YS5hbGVydCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHB1c2hIYXNoID0gbWQ1SGFzaChKU09OLnN0cmluZ2lmeShkYXRhLmFsZXJ0KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHB1c2hIYXNoID0gJ2Q0MWQ4Y2Q5OGYwMGIyMDRlOTgwMDk5OGVjZjg0MjdlJztcbiAgICB9XG4gICAgY29uc3Qgb2JqZWN0ID0ge1xuICAgICAgcHVzaFRpbWUsXG4gICAgICBxdWVyeTogSlNPTi5zdHJpbmdpZnkod2hlcmUpLFxuICAgICAgcGF5bG9hZDogcGF5bG9hZFN0cmluZyxcbiAgICAgIHNvdXJjZTogb3B0aW9ucy5zb3VyY2UsXG4gICAgICB0aXRsZTogb3B0aW9ucy50aXRsZSxcbiAgICAgIGV4cGlyeTogYm9keS5leHBpcmF0aW9uX3RpbWUsXG4gICAgICBleHBpcmF0aW9uX2ludGVydmFsOiBib2R5LmV4cGlyYXRpb25faW50ZXJ2YWwsXG4gICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgIG51bVNlbnQ6IDAsXG4gICAgICBwdXNoSGFzaCxcbiAgICAgIC8vIGxvY2tkb3duIVxuICAgICAgQUNMOiB7fSxcbiAgICB9O1xuICAgIHJldHVybiBoYW5kbGVyLmNyZWF0ZShvYmplY3QpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgIG9iamVjdElkID0gcmVzdWx0Lm9iamVjdElkO1xuICAgICAgcHVzaFN0YXR1cyA9IHtcbiAgICAgICAgb2JqZWN0SWQsXG4gICAgICB9O1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShwdXNoU3RhdHVzKTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBzZXRSdW5uaW5nID0gZnVuY3Rpb24gKGJhdGNoZXMpIHtcbiAgICBsb2dnZXIudmVyYm9zZShcbiAgICAgIGBfUHVzaFN0YXR1cyAke29iamVjdElkfTogc2VuZGluZyBwdXNoIHRvIGluc3RhbGxhdGlvbnMgd2l0aCAlZCBiYXRjaGVzYCxcbiAgICAgIGJhdGNoZXNcbiAgICApO1xuICAgIHJldHVybiBoYW5kbGVyLnVwZGF0ZShcbiAgICAgIHtcbiAgICAgICAgc3RhdHVzOiAncGVuZGluZycsXG4gICAgICAgIG9iamVjdElkOiBvYmplY3RJZCxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHN0YXR1czogJ3J1bm5pbmcnLFxuICAgICAgICBjb3VudDogYmF0Y2hlcyxcbiAgICAgIH1cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IHRyYWNrU2VudCA9IGZ1bmN0aW9uIChcbiAgICByZXN1bHRzLFxuICAgIFVUQ09mZnNldCxcbiAgICBjbGVhbnVwSW5zdGFsbGF0aW9ucyA9IHByb2Nlc3MuZW52LlBBUlNFX1NFUlZFUl9DTEVBTlVQX0lOVkFMSURfSU5TVEFMTEFUSU9OU1xuICApIHtcbiAgICBjb25zdCB1cGRhdGUgPSB7XG4gICAgICBudW1TZW50OiAwLFxuICAgICAgbnVtRmFpbGVkOiAwLFxuICAgIH07XG4gICAgY29uc3QgZGV2aWNlc1RvUmVtb3ZlID0gW107XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0cykpIHtcbiAgICAgIHJlc3VsdHMgPSBmbGF0dGVuKHJlc3VsdHMpO1xuICAgICAgcmVzdWx0cy5yZWR1Y2UoKG1lbW8sIHJlc3VsdCkgPT4ge1xuICAgICAgICAvLyBDYW5ub3QgaGFuZGxlIHRoYXRcbiAgICAgICAgaWYgKCFyZXN1bHQgfHwgIXJlc3VsdC5kZXZpY2UgfHwgIXJlc3VsdC5kZXZpY2UuZGV2aWNlVHlwZSkge1xuICAgICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRldmljZVR5cGUgPSByZXN1bHQuZGV2aWNlLmRldmljZVR5cGU7XG4gICAgICAgIGNvbnN0IGtleSA9IHJlc3VsdC50cmFuc21pdHRlZFxuICAgICAgICAgID8gYHNlbnRQZXJUeXBlLiR7ZGV2aWNlVHlwZX1gXG4gICAgICAgICAgOiBgZmFpbGVkUGVyVHlwZS4ke2RldmljZVR5cGV9YDtcbiAgICAgICAgbWVtb1trZXldID0gaW5jcmVtZW50T3AobWVtbywga2V5KTtcbiAgICAgICAgaWYgKHR5cGVvZiBVVENPZmZzZXQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgY29uc3Qgb2Zmc2V0S2V5ID0gcmVzdWx0LnRyYW5zbWl0dGVkXG4gICAgICAgICAgICA/IGBzZW50UGVyVVRDT2Zmc2V0LiR7VVRDT2Zmc2V0fWBcbiAgICAgICAgICAgIDogYGZhaWxlZFBlclVUQ09mZnNldC4ke1VUQ09mZnNldH1gO1xuICAgICAgICAgIG1lbW9bb2Zmc2V0S2V5XSA9IGluY3JlbWVudE9wKG1lbW8sIG9mZnNldEtleSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC50cmFuc21pdHRlZCkge1xuICAgICAgICAgIG1lbW8ubnVtU2VudCsrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlc3VsdCAmJlxuICAgICAgICAgICAgcmVzdWx0LnJlc3BvbnNlICYmXG4gICAgICAgICAgICByZXN1bHQucmVzcG9uc2UuZXJyb3IgJiZcbiAgICAgICAgICAgIHJlc3VsdC5kZXZpY2UgJiZcbiAgICAgICAgICAgIHJlc3VsdC5kZXZpY2UuZGV2aWNlVG9rZW5cbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gcmVzdWx0LmRldmljZS5kZXZpY2VUb2tlbjtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gcmVzdWx0LnJlc3BvbnNlLmVycm9yO1xuICAgICAgICAgICAgLy8gR0NNIGVycm9yc1xuICAgICAgICAgICAgaWYgKGVycm9yID09PSAnTm90UmVnaXN0ZXJlZCcgfHwgZXJyb3IgPT09ICdJbnZhbGlkUmVnaXN0cmF0aW9uJykge1xuICAgICAgICAgICAgICBkZXZpY2VzVG9SZW1vdmUucHVzaCh0b2tlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBBUE5TIGVycm9yc1xuICAgICAgICAgICAgaWYgKGVycm9yID09PSAnVW5yZWdpc3RlcmVkJyB8fCBlcnJvciA9PT0gJ0JhZERldmljZVRva2VuJykge1xuICAgICAgICAgICAgICBkZXZpY2VzVG9SZW1vdmUucHVzaCh0b2tlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIG1lbW8ubnVtRmFpbGVkKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB1cGRhdGUpO1xuICAgIH1cblxuICAgIGxvZ2dlci52ZXJib3NlKFxuICAgICAgYF9QdXNoU3RhdHVzICR7b2JqZWN0SWR9OiBzZW50IHB1c2ghICVkIHN1Y2Nlc3MsICVkIGZhaWx1cmVzYCxcbiAgICAgIHVwZGF0ZS5udW1TZW50LFxuICAgICAgdXBkYXRlLm51bUZhaWxlZFxuICAgICk7XG4gICAgbG9nZ2VyLnZlcmJvc2UoYF9QdXNoU3RhdHVzICR7b2JqZWN0SWR9OiBuZWVkcyBjbGVhbnVwYCwge1xuICAgICAgZGV2aWNlc1RvUmVtb3ZlLFxuICAgIH0pO1xuICAgIFsnbnVtU2VudCcsICdudW1GYWlsZWQnXS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICBpZiAodXBkYXRlW2tleV0gPiAwKSB7XG4gICAgICAgIHVwZGF0ZVtrZXldID0ge1xuICAgICAgICAgIF9fb3A6ICdJbmNyZW1lbnQnLFxuICAgICAgICAgIGFtb3VudDogdXBkYXRlW2tleV0sXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWxldGUgdXBkYXRlW2tleV07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoZGV2aWNlc1RvUmVtb3ZlLmxlbmd0aCA+IDAgJiYgY2xlYW51cEluc3RhbGxhdGlvbnMpIHtcbiAgICAgIGxvZ2dlci5pbmZvKGBSZW1vdmluZyBkZXZpY2UgdG9rZW5zIG9uICR7ZGV2aWNlc1RvUmVtb3ZlLmxlbmd0aH0gX0luc3RhbGxhdGlvbnNgKTtcbiAgICAgIGRhdGFiYXNlLnVwZGF0ZShcbiAgICAgICAgJ19JbnN0YWxsYXRpb24nLFxuICAgICAgICB7IGRldmljZVRva2VuOiB7ICRpbjogZGV2aWNlc1RvUmVtb3ZlIH0gfSxcbiAgICAgICAgeyBkZXZpY2VUb2tlbjogeyBfX29wOiAnRGVsZXRlJyB9IH0sXG4gICAgICAgIHtcbiAgICAgICAgICBhY2w6IHVuZGVmaW5lZCxcbiAgICAgICAgICBtYW55OiB0cnVlLFxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgICBpbmNyZW1lbnRPcCh1cGRhdGUsICdjb3VudCcsIC0xKTtcbiAgICB1cGRhdGUuc3RhdHVzID0gJ3J1bm5pbmcnO1xuXG4gICAgcmV0dXJuIGhhbmRsZXIudXBkYXRlKHsgb2JqZWN0SWQgfSwgdXBkYXRlKS50aGVuKHJlcyA9PiB7XG4gICAgICBpZiAocmVzICYmIHJlcy5jb3VudCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBoYW5kbGVyLnVwZGF0ZShcbiAgICAgIHsgb2JqZWN0SWQgfSxcbiAgICAgIHtcbiAgICAgICAgc3RhdHVzOiAnc3VjY2VlZGVkJyxcbiAgICAgICAgY291bnQ6IHsgX19vcDogJ0RlbGV0ZScgfSxcbiAgICAgIH1cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGZhaWwgPSBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnIgPSB7IG1lc3NhZ2U6IGVyciB9O1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGUgPSB7XG4gICAgICBlcnJvck1lc3NhZ2U6IGVycixcbiAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgfTtcbiAgICByZXR1cm4gaGFuZGxlci51cGRhdGUoeyBvYmplY3RJZCB9LCB1cGRhdGUpO1xuICB9O1xuXG4gIGNvbnN0IHJ2YWwgPSB7XG4gICAgc2V0SW5pdGlhbCxcbiAgICBzZXRSdW5uaW5nLFxuICAgIHRyYWNrU2VudCxcbiAgICBjb21wbGV0ZSxcbiAgICBmYWlsLFxuICB9O1xuXG4gIC8vIGRlZmluZSBvYmplY3RJZCB0byBiZSBkeW5hbWljXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShydmFsLCAnb2JqZWN0SWQnLCB7XG4gICAgZ2V0OiAoKSA9PiBvYmplY3RJZCxcbiAgfSk7XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUocnZhbCk7XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,