"use strict";function cov_2m95g8la24(){var path="/parse-server/lib/Adapters/Auth/OAuth1Client.js";var hash="dc61f06c0b371a2318932914b362be796aa8ae7b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/OAuth1Client.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:28}},"1":{start:{line:4,column:13},end:{line:4,column:30}},"2":{start:{line:6,column:12},end:{line:6,column:39}},"3":{start:{line:8,column:12},end:{line:19,column:1}},"4":{start:{line:9,column:2},end:{line:11,column:3}},"5":{start:{line:10,column:4},end:{line:10,column:91}},"6":{start:{line:13,column:2},end:{line:13,column:43}},"7":{start:{line:14,column:2},end:{line:14,column:49}},"8":{start:{line:15,column:2},end:{line:15,column:39}},"9":{start:{line:16,column:2},end:{line:16,column:53}},"10":{start:{line:17,column:2},end:{line:17,column:27}},"11":{start:{line:18,column:2},end:{line:18,column:49}},"12":{start:{line:21,column:0},end:{line:44,column:2}},"13":{start:{line:22,column:16},end:{line:22,column:61}},"14":{start:{line:24,column:2},end:{line:43,column:5}},"15":{start:{line:25,column:22},end:{line:36,column:6}},"16":{start:{line:26,column:17},end:{line:26,column:19}},"17":{start:{line:27,column:6},end:{line:29,column:9}},"18":{start:{line:28,column:8},end:{line:28,column:22}},"19":{start:{line:30,column:6},end:{line:33,column:9}},"20":{start:{line:31,column:8},end:{line:31,column:32}},"21":{start:{line:32,column:8},end:{line:32,column:22}},"22":{start:{line:35,column:6},end:{line:35,column:48}},"23":{start:{line:38,column:4},end:{line:40,column:5}},"24":{start:{line:39,column:6},end:{line:39,column:38}},"25":{start:{line:42,column:4},end:{line:42,column:22}},"26":{start:{line:46,column:0},end:{line:74,column:2}},"27":{start:{line:47,column:2},end:{line:49,column:3}},"28":{start:{line:48,column:4},end:{line:48,column:22}},"29":{start:{line:51,column:2},end:{line:53,column:3}},"30":{start:{line:52,column:4},end:{line:52,column:53}},"31":{start:{line:55,column:16},end:{line:59,column:3}},"32":{start:{line:60,column:21},end:{line:60,column:44}},"33":{start:{line:61,column:2},end:{line:61,column:54}},"34":{start:{line:63,column:2},end:{line:65,column:3}},"35":{start:{line:64,column:4},end:{line:64,column:50}},"36":{start:{line:67,column:2},end:{line:67,column:99}},"37":{start:{line:69,column:2},end:{line:71,column:3}},"38":{start:{line:70,column:4},end:{line:70,column:52}},"39":{start:{line:73,column:2},end:{line:73,column:17}},"40":{start:{line:76,column:0},end:{line:78,column:2}},"41":{start:{line:77,column:2},end:{line:77,column:40}},"42":{start:{line:80,column:0},end:{line:82,column:2}},"43":{start:{line:81,column:2},end:{line:81,column:47}},"44":{start:{line:88,column:0},end:{line:113,column:2}},"45":{start:{line:109,column:2},end:{line:109,column:30}},"46":{start:{line:112,column:2},end:{line:112,column:141}},"47":{start:{line:115,column:0},end:{line:115,column:36}},"48":{start:{line:116,column:0},end:{line:116,column:22}},"49":{start:{line:121,column:0},end:{line:128,column:2}},"50":{start:{line:122,column:13},end:{line:122,column:15}},"51":{start:{line:123,column:17},end:{line:123,column:81}},"52":{start:{line:125,column:2},end:{line:125,column:100}},"53":{start:{line:125,column:15},end:{line:125,column:16}},"54":{start:{line:125,column:31},end:{line:125,column:100}},"55":{start:{line:127,column:2},end:{line:127,column:14}},"56":{start:{line:130,column:0},end:{line:141,column:2}},"57":{start:{line:132,column:2},end:{line:138,column:3}},"58":{start:{line:133,column:15},end:{line:133,column:38}},"59":{start:{line:135,column:4},end:{line:137,column:17}},"60":{start:{line:136,column:6},end:{line:136,column:48}},"61":{start:{line:140,column:2},end:{line:140,column:12}},"62":{start:{line:147,column:0},end:{line:149,column:2}},"63":{start:{line:148,column:2},end:{line:148,column:87}},"64":{start:{line:155,column:0},end:{line:158,column:2}},"65":{start:{line:156,column:2},end:{line:156,column:29}},"66":{start:{line:157,column:2},end:{line:157,column:84}},"67":{start:{line:160,column:0},end:{line:224,column:2}},"68":{start:{line:161,column:2},end:{line:161,column:44}},"69":{start:{line:163,column:2},end:{line:165,column:3}},"70":{start:{line:164,column:4},end:{line:164,column:49}},"71":{start:{line:167,column:2},end:{line:169,column:3}},"72":{start:{line:168,column:4},end:{line:168,column:79}},"73":{start:{line:171,column:2},end:{line:173,column:3}},"74":{start:{line:172,column:4},end:{line:172,column:68}},"75":{start:{line:175,column:2},end:{line:177,column:3}},"76":{start:{line:176,column:4},end:{line:176,column:51}},"77":{start:{line:179,column:2},end:{line:181,column:3}},"78":{start:{line:180,column:4},end:{line:180,column:27}},"79":{start:{line:184,column:2},end:{line:186,column:3}},"80":{start:{line:185,column:4},end:{line:185,column:27}},"81":{start:{line:189,column:24},end:{line:189,column:26}},"82":{start:{line:190,column:26},end:{line:190,column:74}},"83":{start:{line:192,column:2},end:{line:198,column:3}},"84":{start:{line:193,column:21},end:{line:193,column:41}},"85":{start:{line:195,column:4},end:{line:197,column:5}},"86":{start:{line:196,column:6},end:{line:196,column:41}},"87":{start:{line:201,column:24},end:{line:201,column:67}},"88":{start:{line:203,column:12},end:{line:203,column:57}},"89":{start:{line:204,column:24},end:{line:204,column:88}},"90":{start:{line:206,column:21},end:{line:206,column:95}},"91":{start:{line:207,column:18},end:{line:207,column:64}},"92":{start:{line:209,column:2},end:{line:209,column:47}},"93":{start:{line:211,column:2},end:{line:213,column:3}},"94":{start:{line:212,column:4},end:{line:212,column:25}},"95":{start:{line:216,column:19},end:{line:219,column:15}},"96":{start:{line:217,column:16},end:{line:217,column:37}},"97":{start:{line:218,column:4},end:{line:218,column:36}},"98":{start:{line:220,column:2},end:{line:220,column:56}},"99":{start:{line:222,column:2},end:{line:222,column:72}},"100":{start:{line:223,column:2},end:{line:223,column:17}},"101":{start:{line:226,column:0},end:{line:226,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:12},end:{line:8,column:13}},loc:{start:{line:8,column:31},end:{line:19,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:23},end:{line:21,column:24}},loc:{start:{line:21,column:61},end:{line:44,column:1}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:24,column:21},end:{line:24,column:22}},loc:{start:{line:24,column:48},end:{line:43,column:3}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:45},end:{line:25,column:46}},loc:{start:{line:25,column:60},end:{line:34,column:5}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:27,column:21},end:{line:27,column:22}},loc:{start:{line:27,column:38},end:{line:29,column:7}},line:27},"5":{name:"(anonymous_5)",decl:{start:{line:30,column:20},end:{line:30,column:21}},loc:{start:{line:30,column:32},end:{line:33,column:7}},line:30},"6":{name:"(anonymous_6)",decl:{start:{line:34,column:19},end:{line:34,column:20}},loc:{start:{line:34,column:31},end:{line:36,column:5}},line:34},"7":{name:"(anonymous_7)",decl:{start:{line:46,column:31},end:{line:46,column:32}},loc:{start:{line:46,column:69},end:{line:74,column:1}},line:46},"8":{name:"(anonymous_8)",decl:{start:{line:76,column:22},end:{line:76,column:23}},loc:{start:{line:76,column:46},end:{line:78,column:1}},line:76},"9":{name:"(anonymous_9)",decl:{start:{line:80,column:23},end:{line:80,column:24}},loc:{start:{line:80,column:53},end:{line:82,column:1}},line:80},"10":{name:"(anonymous_10)",decl:{start:{line:88,column:15},end:{line:88,column:16}},loc:{start:{line:88,column:30},end:{line:113,column:1}},line:88},"11":{name:"(anonymous_11)",decl:{start:{line:121,column:14},end:{line:121,column:15}},loc:{start:{line:121,column:26},end:{line:128,column:1}},line:121},"12":{name:"(anonymous_12)",decl:{start:{line:130,column:29},end:{line:130,column:30}},loc:{start:{line:130,column:44},end:{line:141,column:1}},line:130},"13":{name:"(anonymous_13)",decl:{start:{line:135,column:20},end:{line:135,column:21}},loc:{start:{line:135,column:35},end:{line:137,column:5}},line:135},"14":{name:"(anonymous_14)",decl:{start:{line:147,column:29},end:{line:147,column:30}},loc:{start:{line:147,column:64},end:{line:149,column:1}},line:147},"15":{name:"(anonymous_15)",decl:{start:{line:155,column:18},end:{line:155,column:19}},loc:{start:{line:155,column:39},end:{line:158,column:1}},line:155},"16":{name:"(anonymous_16)",decl:{start:{line:160,column:20},end:{line:160,column:21}},loc:{start:{line:160,column:93},end:{line:224,column:1}},line:160},"17":{name:"(anonymous_17)",decl:{start:{line:216,column:60},end:{line:216,column:61}},loc:{start:{line:216,column:75},end:{line:219,column:3}},line:216}},branchMap:{"0":{loc:{start:{line:9,column:2},end:{line:11,column:3}},type:"if",locations:[{start:{line:9,column:2},end:{line:11,column:3}},{start:{line:9,column:2},end:{line:11,column:3}}],line:9},"1":{loc:{start:{line:18,column:22},end:{line:18,column:48}},type:"binary-expr",locations:[{start:{line:18,column:22},end:{line:18,column:42}},{start:{line:18,column:46},end:{line:18,column:48}}],line:18},"2":{loc:{start:{line:38,column:4},end:{line:40,column:5}},type:"if",locations:[{start:{line:38,column:4},end:{line:40,column:5}},{start:{line:38,column:4},end:{line:40,column:5}}],line:38},"3":{loc:{start:{line:47,column:2},end:{line:49,column:3}},type:"if",locations:[{start:{line:47,column:2},end:{line:49,column:3}},{start:{line:47,column:2},end:{line:49,column:3}}],line:47},"4":{loc:{start:{line:51,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:51,column:2},end:{line:53,column:3}},{start:{line:51,column:2},end:{line:53,column:3}}],line:51},"5":{loc:{start:{line:51,column:6},end:{line:51,column:46}},type:"binary-expr",locations:[{start:{line:51,column:6},end:{line:51,column:12}},{start:{line:51,column:16},end:{line:51,column:46}}],line:51},"6":{loc:{start:{line:60,column:21},end:{line:60,column:44}},type:"binary-expr",locations:[{start:{line:60,column:21},end:{line:60,column:38}},{start:{line:60,column:42},end:{line:60,column:44}}],line:60},"7":{loc:{start:{line:63,column:2},end:{line:65,column:3}},type:"if",locations:[{start:{line:63,column:2},end:{line:65,column:3}},{start:{line:63,column:2},end:{line:65,column:3}}],line:63},"8":{loc:{start:{line:69,column:2},end:{line:71,column:3}},type:"if",locations:[{start:{line:69,column:2},end:{line:71,column:3}},{start:{line:69,column:2},end:{line:71,column:3}}],line:69},"9":{loc:{start:{line:69,column:6},end:{line:69,column:42}},type:"binary-expr",locations:[{start:{line:69,column:6},end:{line:69,column:10}},{start:{line:69,column:14},end:{line:69,column:42}}],line:69},"10":{loc:{start:{line:132,column:2},end:{line:138,column:3}},type:"if",locations:[{start:{line:132,column:2},end:{line:138,column:3}},{start:{line:132,column:2},end:{line:138,column:3}}],line:132},"11":{loc:{start:{line:161,column:21},end:{line:161,column:43}},type:"binary-expr",locations:[{start:{line:161,column:21},end:{line:161,column:37}},{start:{line:161,column:41},end:{line:161,column:43}}],line:161},"12":{loc:{start:{line:163,column:2},end:{line:165,column:3}},type:"if",locations:[{start:{line:163,column:2},end:{line:165,column:3}},{start:{line:163,column:2},end:{line:165,column:3}}],line:163},"13":{loc:{start:{line:167,column:2},end:{line:169,column:3}},type:"if",locations:[{start:{line:167,column:2},end:{line:169,column:3}},{start:{line:167,column:2},end:{line:169,column:3}}],line:167},"14":{loc:{start:{line:171,column:2},end:{line:173,column:3}},type:"if",locations:[{start:{line:171,column:2},end:{line:173,column:3}},{start:{line:171,column:2},end:{line:173,column:3}}],line:171},"15":{loc:{start:{line:175,column:2},end:{line:177,column:3}},type:"if",locations:[{start:{line:175,column:2},end:{line:177,column:3}},{start:{line:175,column:2},end:{line:177,column:3}}],line:175},"16":{loc:{start:{line:179,column:2},end:{line:181,column:3}},type:"if",locations:[{start:{line:179,column:2},end:{line:181,column:3}},{start:{line:179,column:2},end:{line:181,column:3}}],line:179},"17":{loc:{start:{line:184,column:2},end:{line:186,column:3}},type:"if",locations:[{start:{line:184,column:2},end:{line:186,column:3}},{start:{line:184,column:2},end:{line:186,column:3}}],line:184},"18":{loc:{start:{line:211,column:2},end:{line:213,column:3}},type:"if",locations:[{start:{line:211,column:2},end:{line:213,column:3}},{start:{line:211,column:2},end:{line:213,column:3}}],line:211}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/OAuth1Client.js"],names:["https","require","crypto","Parse","OAuth","options","Error","INTERNAL_SERVER_ERROR","consumer_key","consumer_secret","auth_token","auth_token_secret","host","oauth_params","prototype","send","method","path","params","body","request","buildRequest","Promise","resolve","reject","httpRequest","res","data","on","chunk","JSON","parse","write","end","indexOf","Object","keys","length","buildParameterString","toUpperCase","oauth_consumer_key","signRequest","get","post","encode","str","toString","encodeURIComponent","replace","signatureMethod","version","nonce","text","possible","i","charAt","Math","floor","random","obj","sort","map","key","join","buildSignatureString","url","parameters","signature","createHmac","update","digest","oauth_parameters","oauth_nonce","oauth_timestamp","Date","getTime","oauth_signature_method","oauth_version","signatureParams","parametersToMerge","k","parameterString","signatureString","signatureKey","oauth_signature","headers","authHeader","value","Authorization","module","exports"],mappings:"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",sourcesContent:["var https = require('https'),\n  crypto = require('crypto');\nvar Parse = require('parse/node').Parse;\n\nvar OAuth = function (options) {\n  if (!options) {\n    throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'No options passed to OAuth');\n  }\n  this.consumer_key = options.consumer_key;\n  this.consumer_secret = options.consumer_secret;\n  this.auth_token = options.auth_token;\n  this.auth_token_secret = options.auth_token_secret;\n  this.host = options.host;\n  this.oauth_params = options.oauth_params || {};\n};\n\nOAuth.prototype.send = function (method, path, params, body) {\n  var request = this.buildRequest(method, path, params, body);\n  // Encode the body properly, the current Parse Implementation don't do it properly\n  return new Promise(function (resolve, reject) {\n    var httpRequest = https\n      .request(request, function (res) {\n        var data = '';\n        res.on('data', function (chunk) {\n          data += chunk;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          resolve(data);\n        });\n      })\n      .on('error', function () {\n        reject('Failed to make an OAuth request');\n      });\n    if (request.body) {\n      httpRequest.write(request.body);\n    }\n    httpRequest.end();\n  });\n};\n\nOAuth.prototype.buildRequest = function (method, path, params, body) {\n  if (path.indexOf('/') != 0) {\n    path = '/' + path;\n  }\n  if (params && Object.keys(params).length > 0) {\n    path += '?' + OAuth.buildParameterString(params);\n  }\n\n  var request = {\n    host: this.host,\n    path: path,\n    method: method.toUpperCase(),\n  };\n\n  var oauth_params = this.oauth_params || {};\n  oauth_params.oauth_consumer_key = this.consumer_key;\n  if (this.auth_token) {\n    oauth_params['oauth_token'] = this.auth_token;\n  }\n\n  request = OAuth.signRequest(request, oauth_params, this.consumer_secret, this.auth_token_secret);\n\n  if (body && Object.keys(body).length > 0) {\n    request.body = OAuth.buildParameterString(body);\n  }\n  return request;\n};\n\nOAuth.prototype.get = function (path, params) {\n  return this.send('GET', path, params);\n};\n\nOAuth.prototype.post = function (path, params, body) {\n  return this.send('POST', path, params, body);\n};\n\n/*\n\tProper string %escape encoding\n*/\nOAuth.encode = function (str) {\n  //       discuss at: http://phpjs.org/functions/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //             note: This reflects PHP 5.3/6.0+ behavior\n  //             note: Please be aware that this function expects to encode into UTF-8 encoded strings, as found on\n  //             note: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!');\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kevin.vanzonneveld.net/');\n  //        returns 2: 'http%3A%2F%2Fkevin.vanzonneveld.net%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=php.js&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a');\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3Dphp.js%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a'\n\n  str = (str + '').toString();\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below), but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A');\n};\n\nOAuth.signatureMethod = 'HMAC-SHA1';\nOAuth.version = '1.0';\n\n/*\n\tGenerate a nonce\n*/\nOAuth.nonce = function () {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < 30; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n};\n\nOAuth.buildParameterString = function (obj) {\n  // Sort keys and encode values\n  if (obj) {\n    var keys = Object.keys(obj).sort();\n\n    // Map key=value, join them by &\n    return keys\n      .map(function (key) {\n        return key + '=' + OAuth.encode(obj[key]);\n      })\n      .join('&');\n  }\n\n  return '';\n};\n\n/*\n\tBuild the signature string from the object\n*/\n\nOAuth.buildSignatureString = function (method, url, parameters) {\n  return [method.toUpperCase(), OAuth.encode(url), OAuth.encode(parameters)].join('&');\n};\n\n/*\n\tRetuns encoded HMAC-SHA1 from key and text\n*/\nOAuth.signature = function (text, key) {\n  crypto = require('crypto');\n  return OAuth.encode(crypto.createHmac('sha1', key).update(text).digest('base64'));\n};\n\nOAuth.signRequest = function (request, oauth_parameters, consumer_secret, auth_token_secret) {\n  oauth_parameters = oauth_parameters || {};\n\n  // Set default values\n  if (!oauth_parameters.oauth_nonce) {\n    oauth_parameters.oauth_nonce = OAuth.nonce();\n  }\n  if (!oauth_parameters.oauth_timestamp) {\n    oauth_parameters.oauth_timestamp = Math.floor(new Date().getTime() / 1000);\n  }\n  if (!oauth_parameters.oauth_signature_method) {\n    oauth_parameters.oauth_signature_method = OAuth.signatureMethod;\n  }\n  if (!oauth_parameters.oauth_version) {\n    oauth_parameters.oauth_version = OAuth.version;\n  }\n\n  if (!auth_token_secret) {\n    auth_token_secret = '';\n  }\n  // Force GET method if unset\n  if (!request.method) {\n    request.method = 'GET';\n  }\n\n  // Collect  all the parameters in one signatureParameters object\n  var signatureParams = {};\n  var parametersToMerge = [request.params, request.body, oauth_parameters];\n  for (var i in parametersToMerge) {\n    var parameters = parametersToMerge[i];\n    for (var k in parameters) {\n      signatureParams[k] = parameters[k];\n    }\n  }\n\n  // Create a string based on the parameters\n  var parameterString = OAuth.buildParameterString(signatureParams);\n\n  // Build the signature string\n  var url = 'https://' + request.host + '' + request.path;\n\n  var signatureString = OAuth.buildSignatureString(request.method, url, parameterString);\n  // Hash the signature string\n  var signatureKey = [OAuth.encode(consumer_secret), OAuth.encode(auth_token_secret)].join('&');\n\n  var signature = OAuth.signature(signatureString, signatureKey);\n\n  // Set the signature in the params\n  oauth_parameters.oauth_signature = signature;\n  if (!request.headers) {\n    request.headers = {};\n  }\n\n  // Set the authorization header\n  var authHeader = Object.keys(oauth_parameters)\n    .sort()\n    .map(function (key) {\n      var value = oauth_parameters[key];\n      return key + '=\"' + value + '\"';\n    })\n    .join(', ');\n\n  request.headers.Authorization = 'OAuth ' + authHeader;\n\n  // Set the content type header\n  request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  return request;\n};\n\nmodule.exports = OAuth;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dc61f06c0b371a2318932914b362be796aa8ae7b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2m95g8la24=function(){return actualCoverage;};}return actualCoverage;}cov_2m95g8la24();var https=(cov_2m95g8la24().s[0]++,require('https')),crypto=(cov_2m95g8la24().s[1]++,require('crypto'));var Parse=(cov_2m95g8la24().s[2]++,require('parse/node').Parse);cov_2m95g8la24().s[3]++;var OAuth=function(options){cov_2m95g8la24().f[0]++;cov_2m95g8la24().s[4]++;if(!options){cov_2m95g8la24().b[0][0]++;cov_2m95g8la24().s[5]++;throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR,'No options passed to OAuth');}else{cov_2m95g8la24().b[0][1]++;}cov_2m95g8la24().s[6]++;this.consumer_key=options.consumer_key;cov_2m95g8la24().s[7]++;this.consumer_secret=options.consumer_secret;cov_2m95g8la24().s[8]++;this.auth_token=options.auth_token;cov_2m95g8la24().s[9]++;this.auth_token_secret=options.auth_token_secret;cov_2m95g8la24().s[10]++;this.host=options.host;cov_2m95g8la24().s[11]++;this.oauth_params=(cov_2m95g8la24().b[1][0]++,options.oauth_params)||(cov_2m95g8la24().b[1][1]++,{});};cov_2m95g8la24().s[12]++;OAuth.prototype.send=function(method,path,params,body){cov_2m95g8la24().f[1]++;var request=(cov_2m95g8la24().s[13]++,this.buildRequest(method,path,params,body));// Encode the body properly, the current Parse Implementation don't do it properly
cov_2m95g8la24().s[14]++;return new Promise(function(resolve,reject){cov_2m95g8la24().f[2]++;var httpRequest=(cov_2m95g8la24().s[15]++,https.request(request,function(res){cov_2m95g8la24().f[3]++;var data=(cov_2m95g8la24().s[16]++,'');cov_2m95g8la24().s[17]++;res.on('data',function(chunk){cov_2m95g8la24().f[4]++;cov_2m95g8la24().s[18]++;data+=chunk;});cov_2m95g8la24().s[19]++;res.on('end',function(){cov_2m95g8la24().f[5]++;cov_2m95g8la24().s[20]++;data=JSON.parse(data);cov_2m95g8la24().s[21]++;resolve(data);});}).on('error',function(){cov_2m95g8la24().f[6]++;cov_2m95g8la24().s[22]++;reject('Failed to make an OAuth request');}));cov_2m95g8la24().s[23]++;if(request.body){cov_2m95g8la24().b[2][0]++;cov_2m95g8la24().s[24]++;httpRequest.write(request.body);}else{cov_2m95g8la24().b[2][1]++;}cov_2m95g8la24().s[25]++;httpRequest.end();});};cov_2m95g8la24().s[26]++;OAuth.prototype.buildRequest=function(method,path,params,body){cov_2m95g8la24().f[7]++;cov_2m95g8la24().s[27]++;if(path.indexOf('/')!=0){cov_2m95g8la24().b[3][0]++;cov_2m95g8la24().s[28]++;path='/'+path;}else{cov_2m95g8la24().b[3][1]++;}cov_2m95g8la24().s[29]++;if((cov_2m95g8la24().b[5][0]++,params)&&(cov_2m95g8la24().b[5][1]++,Object.keys(params).length>0)){cov_2m95g8la24().b[4][0]++;cov_2m95g8la24().s[30]++;path+='?'+OAuth.buildParameterString(params);}else{cov_2m95g8la24().b[4][1]++;}var request=(cov_2m95g8la24().s[31]++,{host:this.host,path:path,method:method.toUpperCase()});var oauth_params=(cov_2m95g8la24().s[32]++,(cov_2m95g8la24().b[6][0]++,this.oauth_params)||(cov_2m95g8la24().b[6][1]++,{}));cov_2m95g8la24().s[33]++;oauth_params.oauth_consumer_key=this.consumer_key;cov_2m95g8la24().s[34]++;if(this.auth_token){cov_2m95g8la24().b[7][0]++;cov_2m95g8la24().s[35]++;oauth_params['oauth_token']=this.auth_token;}else{cov_2m95g8la24().b[7][1]++;}cov_2m95g8la24().s[36]++;request=OAuth.signRequest(request,oauth_params,this.consumer_secret,this.auth_token_secret);cov_2m95g8la24().s[37]++;if((cov_2m95g8la24().b[9][0]++,body)&&(cov_2m95g8la24().b[9][1]++,Object.keys(body).length>0)){cov_2m95g8la24().b[8][0]++;cov_2m95g8la24().s[38]++;request.body=OAuth.buildParameterString(body);}else{cov_2m95g8la24().b[8][1]++;}cov_2m95g8la24().s[39]++;return request;};cov_2m95g8la24().s[40]++;OAuth.prototype.get=function(path,params){cov_2m95g8la24().f[8]++;cov_2m95g8la24().s[41]++;return this.send('GET',path,params);};cov_2m95g8la24().s[42]++;OAuth.prototype.post=function(path,params,body){cov_2m95g8la24().f[9]++;cov_2m95g8la24().s[43]++;return this.send('POST',path,params,body);};/*
	Proper string %escape encoding
*/cov_2m95g8la24().s[44]++;OAuth.encode=function(str){cov_2m95g8la24().f[10]++;cov_2m95g8la24().s[45]++;//       discuss at: http://phpjs.org/functions/rawurlencode/
//      original by: Brett Zamir (http://brett-zamir.me)
//         input by: travc
//         input by: Brett Zamir (http://brett-zamir.me)
//         input by: Michael Grier
//         input by: Ratheous
//      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
//      bugfixed by: Brett Zamir (http://brett-zamir.me)
//      bugfixed by: Joris
// reimplemented by: Brett Zamir (http://brett-zamir.me)
// reimplemented by: Brett Zamir (http://brett-zamir.me)
//             note: This reflects PHP 5.3/6.0+ behavior
//             note: Please be aware that this function expects to encode into UTF-8 encoded strings, as found on
//             note: pages served as UTF-8
//        example 1: rawurlencode('Kevin van Zonneveld!');
//        returns 1: 'Kevin%20van%20Zonneveld%21'
//        example 2: rawurlencode('http://kevin.vanzonneveld.net/');
//        returns 2: 'http%3A%2F%2Fkevin.vanzonneveld.net%2F'
//        example 3: rawurlencode('http://www.google.nl/search?q=php.js&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a');
//        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3Dphp.js%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a'
str=(str+'').toString();// Tilde should be allowed unescaped in future versions of PHP (as reflected below), but if you want to reflect current
// PHP behavior, you would need to add ".replace(/~/g, '%7E');" to the following.
cov_2m95g8la24().s[46]++;return encodeURIComponent(str).replace(/!/g,'%21').replace(/'/g,'%27').replace(/\(/g,'%28').replace(/\)/g,'%29').replace(/\*/g,'%2A');};cov_2m95g8la24().s[47]++;OAuth.signatureMethod='HMAC-SHA1';cov_2m95g8la24().s[48]++;OAuth.version='1.0';/*
	Generate a nonce
*/cov_2m95g8la24().s[49]++;OAuth.nonce=function(){cov_2m95g8la24().f[11]++;var text=(cov_2m95g8la24().s[50]++,'');var possible=(cov_2m95g8la24().s[51]++,'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');cov_2m95g8la24().s[52]++;for(var i=(cov_2m95g8la24().s[53]++,0);i<30;i++){cov_2m95g8la24().s[54]++;text+=possible.charAt(Math.floor(Math.random()*possible.length));}cov_2m95g8la24().s[55]++;return text;};cov_2m95g8la24().s[56]++;OAuth.buildParameterString=function(obj){cov_2m95g8la24().f[12]++;cov_2m95g8la24().s[57]++;// Sort keys and encode values
if(obj){cov_2m95g8la24().b[10][0]++;var keys=(cov_2m95g8la24().s[58]++,Object.keys(obj).sort());// Map key=value, join them by &
cov_2m95g8la24().s[59]++;return keys.map(function(key){cov_2m95g8la24().f[13]++;cov_2m95g8la24().s[60]++;return key+'='+OAuth.encode(obj[key]);}).join('&');}else{cov_2m95g8la24().b[10][1]++;}cov_2m95g8la24().s[61]++;return'';};/*
	Build the signature string from the object
*/cov_2m95g8la24().s[62]++;OAuth.buildSignatureString=function(method,url,parameters){cov_2m95g8la24().f[14]++;cov_2m95g8la24().s[63]++;return[method.toUpperCase(),OAuth.encode(url),OAuth.encode(parameters)].join('&');};/*
	Retuns encoded HMAC-SHA1 from key and text
*/cov_2m95g8la24().s[64]++;OAuth.signature=function(text,key){cov_2m95g8la24().f[15]++;cov_2m95g8la24().s[65]++;crypto=require('crypto');cov_2m95g8la24().s[66]++;return OAuth.encode(crypto.createHmac('sha1',key).update(text).digest('base64'));};cov_2m95g8la24().s[67]++;OAuth.signRequest=function(request,oauth_parameters,consumer_secret,auth_token_secret){cov_2m95g8la24().f[16]++;cov_2m95g8la24().s[68]++;oauth_parameters=(cov_2m95g8la24().b[11][0]++,oauth_parameters)||(cov_2m95g8la24().b[11][1]++,{});// Set default values
cov_2m95g8la24().s[69]++;if(!oauth_parameters.oauth_nonce){cov_2m95g8la24().b[12][0]++;cov_2m95g8la24().s[70]++;oauth_parameters.oauth_nonce=OAuth.nonce();}else{cov_2m95g8la24().b[12][1]++;}cov_2m95g8la24().s[71]++;if(!oauth_parameters.oauth_timestamp){cov_2m95g8la24().b[13][0]++;cov_2m95g8la24().s[72]++;oauth_parameters.oauth_timestamp=Math.floor(new Date().getTime()/1000);}else{cov_2m95g8la24().b[13][1]++;}cov_2m95g8la24().s[73]++;if(!oauth_parameters.oauth_signature_method){cov_2m95g8la24().b[14][0]++;cov_2m95g8la24().s[74]++;oauth_parameters.oauth_signature_method=OAuth.signatureMethod;}else{cov_2m95g8la24().b[14][1]++;}cov_2m95g8la24().s[75]++;if(!oauth_parameters.oauth_version){cov_2m95g8la24().b[15][0]++;cov_2m95g8la24().s[76]++;oauth_parameters.oauth_version=OAuth.version;}else{cov_2m95g8la24().b[15][1]++;}cov_2m95g8la24().s[77]++;if(!auth_token_secret){cov_2m95g8la24().b[16][0]++;cov_2m95g8la24().s[78]++;auth_token_secret='';}else{cov_2m95g8la24().b[16][1]++;}// Force GET method if unset
cov_2m95g8la24().s[79]++;if(!request.method){cov_2m95g8la24().b[17][0]++;cov_2m95g8la24().s[80]++;request.method='GET';}else{cov_2m95g8la24().b[17][1]++;}// Collect  all the parameters in one signatureParameters object
var signatureParams=(cov_2m95g8la24().s[81]++,{});var parametersToMerge=(cov_2m95g8la24().s[82]++,[request.params,request.body,oauth_parameters]);cov_2m95g8la24().s[83]++;for(var i in parametersToMerge){var parameters=(cov_2m95g8la24().s[84]++,parametersToMerge[i]);cov_2m95g8la24().s[85]++;for(var k in parameters){cov_2m95g8la24().s[86]++;signatureParams[k]=parameters[k];}}// Create a string based on the parameters
var parameterString=(cov_2m95g8la24().s[87]++,OAuth.buildParameterString(signatureParams));// Build the signature string
var url=(cov_2m95g8la24().s[88]++,'https://'+request.host+''+request.path);var signatureString=(cov_2m95g8la24().s[89]++,OAuth.buildSignatureString(request.method,url,parameterString));// Hash the signature string
var signatureKey=(cov_2m95g8la24().s[90]++,[OAuth.encode(consumer_secret),OAuth.encode(auth_token_secret)].join('&'));var signature=(cov_2m95g8la24().s[91]++,OAuth.signature(signatureString,signatureKey));// Set the signature in the params
cov_2m95g8la24().s[92]++;oauth_parameters.oauth_signature=signature;cov_2m95g8la24().s[93]++;if(!request.headers){cov_2m95g8la24().b[18][0]++;cov_2m95g8la24().s[94]++;request.headers={};}else{cov_2m95g8la24().b[18][1]++;}// Set the authorization header
var authHeader=(cov_2m95g8la24().s[95]++,Object.keys(oauth_parameters).sort().map(function(key){cov_2m95g8la24().f[17]++;var value=(cov_2m95g8la24().s[96]++,oauth_parameters[key]);cov_2m95g8la24().s[97]++;return key+'="'+value+'"';}).join(', '));cov_2m95g8la24().s[98]++;request.headers.Authorization='OAuth '+authHeader;// Set the content type header
cov_2m95g8la24().s[99]++;request.headers['Content-Type']='application/x-www-form-urlencoded';cov_2m95g8la24().s[100]++;return request;};cov_2m95g8la24().s[101]++;module.exports=OAuth;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,