"use strict";function cov_1ov4a37dcv(){var path="/parse-server/lib/Push/PushQueue.js";var hash="4d45a93e0ab2cdbc20d4fb64a5d7e9afe715f9f1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Push/PushQueue.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:27}},"2":{start:{line:8,column:25},end:{line:8,column:56}},"3":{start:{line:10,column:12},end:{line:10,column:54}},"4":{start:{line:12,column:13},end:{line:12,column:31}},"5":{start:{line:14,column:12},end:{line:14,column:57}},"6":{start:{line:16,column:39},end:{line:16,column:93}},"7":{start:{line:18,column:21},end:{line:18,column:40}},"8":{start:{line:19,column:27},end:{line:19,column:30}},"9":{start:{line:25,column:4},end:{line:25,column:68}},"10":{start:{line:26,column:4},end:{line:26,column:60}},"11":{start:{line:27,column:4},end:{line:27,column:87}},"12":{start:{line:31,column:4},end:{line:31,column:60}},"13":{start:{line:35,column:18},end:{line:35,column:32}},"14":{start:{line:36,column:4},end:{line:36,column:54}},"15":{start:{line:38,column:18},end:{line:38,column:28}},"16":{start:{line:39,column:4},end:{line:73,column:7}},"17":{start:{line:40,column:6},end:{line:43,column:9}},"18":{start:{line:48,column:6},end:{line:50,column:7}},"19":{start:{line:49,column:8},end:{line:49,column:37}},"20":{start:{line:52,column:6},end:{line:52,column:54}},"21":{start:{line:53,column:17},end:{line:53,column:18}},"22":{start:{line:55,column:6},end:{line:72,column:7}},"23":{start:{line:56,column:22},end:{line:61,column:9}},"24":{start:{line:62,column:29},end:{line:69,column:9}},"25":{start:{line:70,column:8},end:{line:70,column:80}},"26":{start:{line:71,column:8},end:{line:71,column:22}},"27":{start:{line:78,column:0},end:{line:78,column:30}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:16,column:9},end:{line:16,column:31}},loc:{start:{line:16,column:37},end:{line:16,column:95}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:24,column:2},end:{line:24,column:3}},loc:{start:{line:24,column:27},end:{line:28,column:3}},line:24},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:2},end:{line:30,column:3}},loc:{start:{line:30,column:30},end:{line:32,column:3}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:49},end:{line:74,column:3}},line:34},"4":{name:"(anonymous_4)",decl:{start:{line:39,column:34},end:{line:39,column:35}},loc:{start:{line:39,column:40},end:{line:44,column:5}},line:39},"5":{name:"(anonymous_5)",decl:{start:{line:44,column:12},end:{line:44,column:13}},loc:{start:{line:47,column:10},end:{line:73,column:5}},line:47}},branchMap:{"0":{loc:{start:{line:16,column:46},end:{line:16,column:92}},type:"cond-expr",locations:[{start:{line:16,column:70},end:{line:16,column:73}},{start:{line:16,column:76},end:{line:16,column:92}}],line:16},"1":{loc:{start:{line:16,column:46},end:{line:16,column:67}},type:"binary-expr",locations:[{start:{line:16,column:46},end:{line:16,column:49}},{start:{line:16,column:53},end:{line:16,column:67}}],line:16},"2":{loc:{start:{line:24,column:14},end:{line:24,column:25}},type:"default-arg",locations:[{start:{line:24,column:23},end:{line:24,column:25}}],line:24},"3":{loc:{start:{line:25,column:19},end:{line:25,column:67}},type:"binary-expr",locations:[{start:{line:25,column:19},end:{line:25,column:33}},{start:{line:25,column:37},end:{line:25,column:67}}],line:25},"4":{loc:{start:{line:26,column:21},end:{line:26,column:59}},type:"binary-expr",locations:[{start:{line:26,column:21},end:{line:26,column:37}},{start:{line:26,column:41},end:{line:26,column:59}}],line:26},"5":{loc:{start:{line:48,column:6},end:{line:50,column:7}},type:"if",locations:[{start:{line:48,column:6},end:{line:50,column:7}},{start:{line:48,column:6},end:{line:50,column:7}}],line:48},"6":{loc:{start:{line:48,column:10},end:{line:48,column:32}},type:"binary-expr",locations:[{start:{line:48,column:10},end:{line:48,column:18}},{start:{line:48,column:22},end:{line:48,column:32}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},inputSourceMap:{version:3,sources:["../../src/Push/PushQueue.js"],names:["PUSH_CHANNEL","DEFAULT_BATCH_SIZE","PushQueue","constructor","config","channel","defaultPushChannel","batchSize","parsePublisher","ParseMessageQueue","createPublisher","Parse","applicationId","enqueue","body","where","auth","pushStatus","limit","order","Promise","resolve","then","rest","find","count","results","complete","setRunning","Math","ceil","skip","query","pushWorkItem","objectId","publish","JSON","stringify"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAG,mBAArB;AACA,MAAMC,kBAAkB,GAAG,GAA3B;;AAEO,MAAMC,SAAN,CAAgB;AAKrB;AACA;AACAC,EAAAA,WAAW,CAACC,MAAW,GAAG,EAAf,EAAmB;AAC5B,SAAKC,OAAL,GAAeD,MAAM,CAACC,OAAP,IAAkBH,SAAS,CAACI,kBAAV,EAAjC;AACA,SAAKC,SAAL,GAAiBH,MAAM,CAACG,SAAP,IAAoBN,kBAArC;AACA,SAAKO,cAAL,GAAsBC,qCAAkBC,eAAlB,CAAkCN,MAAlC,CAAtB;AACD;;AAEwB,SAAlBE,kBAAkB,GAAG;AAC1B,WAAQ,GAAEK,cAAMC,aAAc,IAAGZ,YAAa,EAA9C;AACD;;AAEDa,EAAAA,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAcX,MAAd,EAAsBY,IAAtB,EAA4BC,UAA5B,EAAwC;AAC7C,UAAMC,KAAK,GAAG,KAAKX,SAAnB;AAEAQ,IAAAA,KAAK,GAAG,mCAAuBA,KAAvB,CAAR,CAH6C,CAK7C;;AACA,UAAMI,KAAK,GAAG,UAAd;AACA,WAAOC,OAAO,CAACC,OAAR,GACJC,IADI,CACC,MAAM;AACV,aAAOC,cAAKC,IAAL,CAAUpB,MAAV,EAAkBY,IAAlB,EAAwB,eAAxB,EAAyCD,KAAzC,EAAgD;AACrDG,QAAAA,KAAK,EAAE,CAD8C;AAErDO,QAAAA,KAAK,EAAE;AAF8C,OAAhD,CAAP;AAID,KANI,EAOJH,IAPI,CAOC,CAAC;AAAEI,MAAAA,OAAF;AAAWD,MAAAA;AAAX,KAAD,KAAwB;AAC5B,UAAI,CAACC,OAAD,IAAYD,KAAK,IAAI,CAAzB,EAA4B;AAC1B,eAAOR,UAAU,CAACU,QAAX,EAAP;AACD;;AACDV,MAAAA,UAAU,CAACW,UAAX,CAAsBC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,KAAlB,CAAtB;AACA,UAAIa,IAAI,GAAG,CAAX;;AACA,aAAOA,IAAI,GAAGN,KAAd,EAAqB;AACnB,cAAMO,KAAK,GAAG;AACZjB,UAAAA,KADY;AAEZG,UAAAA,KAFY;AAGZa,UAAAA,IAHY;AAIZZ,UAAAA;AAJY,SAAd;AAOA,cAAMc,YAAY,GAAG;AACnBnB,UAAAA,IADmB;AAEnBkB,UAAAA,KAFmB;AAGnBf,UAAAA,UAAU,EAAE;AAAEiB,YAAAA,QAAQ,EAAEjB,UAAU,CAACiB;AAAvB,WAHO;AAInBtB,UAAAA,aAAa,EAAER,MAAM,CAACQ;AAJH,SAArB;AAMA,aAAKJ,cAAL,CAAoB2B,OAApB,CAA4B,KAAK9B,OAAjC,EAA0C+B,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAA1C;AACAF,QAAAA,IAAI,IAAIb,KAAR;AACD;AACF,KA9BI,CAAP;AA+BD;;AAvDoB",sourcesContent:["import { ParseMessageQueue } from '../ParseMessageQueue';\nimport rest from '../rest';\nimport { applyDeviceTokenExists } from './utils';\nimport Parse from 'parse/node';\n\nconst PUSH_CHANNEL = 'parse-server-push';\nconst DEFAULT_BATCH_SIZE = 100;\n\nexport class PushQueue {\n  parsePublisher: Object;\n  channel: String;\n  batchSize: Number;\n\n  // config object of the publisher, right now it only contains the redisURL,\n  // but we may extend it later.\n  constructor(config: any = {}) {\n    this.channel = config.channel || PushQueue.defaultPushChannel();\n    this.batchSize = config.batchSize || DEFAULT_BATCH_SIZE;\n    this.parsePublisher = ParseMessageQueue.createPublisher(config);\n  }\n\n  static defaultPushChannel() {\n    return `${Parse.applicationId}-${PUSH_CHANNEL}`;\n  }\n\n  enqueue(body, where, config, auth, pushStatus) {\n    const limit = this.batchSize;\n\n    where = applyDeviceTokenExists(where);\n\n    // Order by objectId so no impact on the DB\n    const order = 'objectId';\n    return Promise.resolve()\n      .then(() => {\n        return rest.find(config, auth, '_Installation', where, {\n          limit: 0,\n          count: true,\n        });\n      })\n      .then(({ results, count }) => {\n        if (!results || count == 0) {\n          return pushStatus.complete();\n        }\n        pushStatus.setRunning(Math.ceil(count / limit));\n        let skip = 0;\n        while (skip < count) {\n          const query = {\n            where,\n            limit,\n            skip,\n            order,\n          };\n\n          const pushWorkItem = {\n            body,\n            query,\n            pushStatus: { objectId: pushStatus.objectId },\n            applicationId: config.applicationId,\n          };\n          this.parsePublisher.publish(this.channel, JSON.stringify(pushWorkItem));\n          skip += limit;\n        }\n      });\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4d45a93e0ab2cdbc20d4fb64a5d7e9afe715f9f1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ov4a37dcv=function(){return actualCoverage;};}return actualCoverage;}cov_1ov4a37dcv();cov_1ov4a37dcv().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1ov4a37dcv().s[1]++;exports.PushQueue=void 0;var _ParseMessageQueue=(cov_1ov4a37dcv().s[2]++,require("../ParseMessageQueue"));var _rest=(cov_1ov4a37dcv().s[3]++,_interopRequireDefault(require("../rest")));var _utils=(cov_1ov4a37dcv().s[4]++,require("./utils"));var _node=(cov_1ov4a37dcv().s[5]++,_interopRequireDefault(require("parse/node")));function _interopRequireDefault(obj){cov_1ov4a37dcv().f[0]++;cov_1ov4a37dcv().s[6]++;return(cov_1ov4a37dcv().b[1][0]++,obj)&&(cov_1ov4a37dcv().b[1][1]++,obj.__esModule)?(cov_1ov4a37dcv().b[0][0]++,obj):(cov_1ov4a37dcv().b[0][1]++,{default:obj});}const PUSH_CHANNEL=(cov_1ov4a37dcv().s[7]++,'parse-server-push');const DEFAULT_BATCH_SIZE=(cov_1ov4a37dcv().s[8]++,100);class PushQueue{// config object of the publisher, right now it only contains the redisURL,
// but we may extend it later.
constructor(config=(cov_1ov4a37dcv().b[2][0]++,{})){cov_1ov4a37dcv().f[1]++;cov_1ov4a37dcv().s[9]++;this.channel=(cov_1ov4a37dcv().b[3][0]++,config.channel)||(cov_1ov4a37dcv().b[3][1]++,PushQueue.defaultPushChannel());cov_1ov4a37dcv().s[10]++;this.batchSize=(cov_1ov4a37dcv().b[4][0]++,config.batchSize)||(cov_1ov4a37dcv().b[4][1]++,DEFAULT_BATCH_SIZE);cov_1ov4a37dcv().s[11]++;this.parsePublisher=_ParseMessageQueue.ParseMessageQueue.createPublisher(config);}static defaultPushChannel(){cov_1ov4a37dcv().f[2]++;cov_1ov4a37dcv().s[12]++;return`${_node.default.applicationId}-${PUSH_CHANNEL}`;}enqueue(body,where,config,auth,pushStatus){cov_1ov4a37dcv().f[3]++;const limit=(cov_1ov4a37dcv().s[13]++,this.batchSize);cov_1ov4a37dcv().s[14]++;where=(0,_utils.applyDeviceTokenExists)(where);// Order by objectId so no impact on the DB
const order=(cov_1ov4a37dcv().s[15]++,'objectId');cov_1ov4a37dcv().s[16]++;return Promise.resolve().then(()=>{cov_1ov4a37dcv().f[4]++;cov_1ov4a37dcv().s[17]++;return _rest.default.find(config,auth,'_Installation',where,{limit:0,count:true});}).then(({results,count})=>{cov_1ov4a37dcv().f[5]++;cov_1ov4a37dcv().s[18]++;if((cov_1ov4a37dcv().b[6][0]++,!results)||(cov_1ov4a37dcv().b[6][1]++,count==0)){cov_1ov4a37dcv().b[5][0]++;cov_1ov4a37dcv().s[19]++;return pushStatus.complete();}else{cov_1ov4a37dcv().b[5][1]++;}cov_1ov4a37dcv().s[20]++;pushStatus.setRunning(Math.ceil(count/limit));let skip=(cov_1ov4a37dcv().s[21]++,0);cov_1ov4a37dcv().s[22]++;while(skip<count){const query=(cov_1ov4a37dcv().s[23]++,{where,limit,skip,order});const pushWorkItem=(cov_1ov4a37dcv().s[24]++,{body,query,pushStatus:{objectId:pushStatus.objectId},applicationId:config.applicationId});cov_1ov4a37dcv().s[25]++;this.parsePublisher.publish(this.channel,JSON.stringify(pushWorkItem));cov_1ov4a37dcv().s[26]++;skip+=limit;}});}}cov_1ov4a37dcv().s[27]++;exports.PushQueue=PushQueue;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9QdXNoL1B1c2hRdWV1ZS5qcyJdLCJuYW1lcyI6WyJQVVNIX0NIQU5ORUwiLCJERUZBVUxUX0JBVENIX1NJWkUiLCJQdXNoUXVldWUiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsImNoYW5uZWwiLCJkZWZhdWx0UHVzaENoYW5uZWwiLCJiYXRjaFNpemUiLCJwYXJzZVB1Ymxpc2hlciIsIlBhcnNlTWVzc2FnZVF1ZXVlIiwiY3JlYXRlUHVibGlzaGVyIiwiUGFyc2UiLCJhcHBsaWNhdGlvbklkIiwiZW5xdWV1ZSIsImJvZHkiLCJ3aGVyZSIsImF1dGgiLCJwdXNoU3RhdHVzIiwibGltaXQiLCJvcmRlciIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsInJlc3QiLCJmaW5kIiwiY291bnQiLCJyZXN1bHRzIiwiY29tcGxldGUiLCJzZXRSdW5uaW5nIiwiTWF0aCIsImNlaWwiLCJza2lwIiwicXVlcnkiLCJwdXNoV29ya0l0ZW0iLCJvYmplY3RJZCIsInB1Ymxpc2giLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxZQUFZLEdBQUcsbUJBQXJCO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUcsR0FBM0I7O0FBRU8sTUFBTUMsU0FBTixDQUFnQjtBQUtyQjtBQUNBO0FBQ0FDLEVBQUFBLFdBQVcsQ0FBQ0MsTUFBVyxHQUFHLEVBQWYsRUFBbUI7QUFDNUIsU0FBS0MsT0FBTCxHQUFlRCxNQUFNLENBQUNDLE9BQVAsSUFBa0JILFNBQVMsQ0FBQ0ksa0JBQVYsRUFBakM7QUFDQSxTQUFLQyxTQUFMLEdBQWlCSCxNQUFNLENBQUNHLFNBQVAsSUFBb0JOLGtCQUFyQztBQUNBLFNBQUtPLGNBQUwsR0FBc0JDLHFDQUFrQkMsZUFBbEIsQ0FBa0NOLE1BQWxDLENBQXRCO0FBQ0Q7O0FBRXdCLFNBQWxCRSxrQkFBa0IsR0FBRztBQUMxQixXQUFRLEdBQUVLLGNBQU1DLGFBQWMsSUFBR1osWUFBYSxFQUE5QztBQUNEOztBQUVEYSxFQUFBQSxPQUFPLENBQUNDLElBQUQsRUFBT0MsS0FBUCxFQUFjWCxNQUFkLEVBQXNCWSxJQUF0QixFQUE0QkMsVUFBNUIsRUFBd0M7QUFDN0MsVUFBTUMsS0FBSyxHQUFHLEtBQUtYLFNBQW5CO0FBRUFRLElBQUFBLEtBQUssR0FBRyxtQ0FBdUJBLEtBQXZCLENBQVIsQ0FINkMsQ0FLN0M7O0FBQ0EsVUFBTUksS0FBSyxHQUFHLFVBQWQ7QUFDQSxXQUFPQyxPQUFPLENBQUNDLE9BQVIsR0FDSkMsSUFESSxDQUNDLE1BQU07QUFDVixhQUFPQyxjQUFLQyxJQUFMLENBQVVwQixNQUFWLEVBQWtCWSxJQUFsQixFQUF3QixlQUF4QixFQUF5Q0QsS0FBekMsRUFBZ0Q7QUFDckRHLFFBQUFBLEtBQUssRUFBRSxDQUQ4QztBQUVyRE8sUUFBQUEsS0FBSyxFQUFFO0FBRjhDLE9BQWhELENBQVA7QUFJRCxLQU5JLEVBT0pILElBUEksQ0FPQyxDQUFDO0FBQUVJLE1BQUFBLE9BQUY7QUFBV0QsTUFBQUE7QUFBWCxLQUFELEtBQXdCO0FBQzVCLFVBQUksQ0FBQ0MsT0FBRCxJQUFZRCxLQUFLLElBQUksQ0FBekIsRUFBNEI7QUFDMUIsZUFBT1IsVUFBVSxDQUFDVSxRQUFYLEVBQVA7QUFDRDs7QUFDRFYsTUFBQUEsVUFBVSxDQUFDVyxVQUFYLENBQXNCQyxJQUFJLENBQUNDLElBQUwsQ0FBVUwsS0FBSyxHQUFHUCxLQUFsQixDQUF0QjtBQUNBLFVBQUlhLElBQUksR0FBRyxDQUFYOztBQUNBLGFBQU9BLElBQUksR0FBR04sS0FBZCxFQUFxQjtBQUNuQixjQUFNTyxLQUFLLEdBQUc7QUFDWmpCLFVBQUFBLEtBRFk7QUFFWkcsVUFBQUEsS0FGWTtBQUdaYSxVQUFBQSxJQUhZO0FBSVpaLFVBQUFBO0FBSlksU0FBZDtBQU9BLGNBQU1jLFlBQVksR0FBRztBQUNuQm5CLFVBQUFBLElBRG1CO0FBRW5Ca0IsVUFBQUEsS0FGbUI7QUFHbkJmLFVBQUFBLFVBQVUsRUFBRTtBQUFFaUIsWUFBQUEsUUFBUSxFQUFFakIsVUFBVSxDQUFDaUI7QUFBdkIsV0FITztBQUluQnRCLFVBQUFBLGFBQWEsRUFBRVIsTUFBTSxDQUFDUTtBQUpILFNBQXJCO0FBTUEsYUFBS0osY0FBTCxDQUFvQjJCLE9BQXBCLENBQTRCLEtBQUs5QixPQUFqQyxFQUEwQytCLElBQUksQ0FBQ0MsU0FBTCxDQUFlSixZQUFmLENBQTFDO0FBQ0FGLFFBQUFBLElBQUksSUFBSWIsS0FBUjtBQUNEO0FBQ0YsS0E5QkksQ0FBUDtBQStCRDs7QUF2RG9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VNZXNzYWdlUXVldWUgfSBmcm9tICcuLi9QYXJzZU1lc3NhZ2VRdWV1ZSc7XG5pbXBvcnQgcmVzdCBmcm9tICcuLi9yZXN0JztcbmltcG9ydCB7IGFwcGx5RGV2aWNlVG9rZW5FeGlzdHMgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBQYXJzZSBmcm9tICdwYXJzZS9ub2RlJztcblxuY29uc3QgUFVTSF9DSEFOTkVMID0gJ3BhcnNlLXNlcnZlci1wdXNoJztcbmNvbnN0IERFRkFVTFRfQkFUQ0hfU0laRSA9IDEwMDtcblxuZXhwb3J0IGNsYXNzIFB1c2hRdWV1ZSB7XG4gIHBhcnNlUHVibGlzaGVyOiBPYmplY3Q7XG4gIGNoYW5uZWw6IFN0cmluZztcbiAgYmF0Y2hTaXplOiBOdW1iZXI7XG5cbiAgLy8gY29uZmlnIG9iamVjdCBvZiB0aGUgcHVibGlzaGVyLCByaWdodCBub3cgaXQgb25seSBjb250YWlucyB0aGUgcmVkaXNVUkwsXG4gIC8vIGJ1dCB3ZSBtYXkgZXh0ZW5kIGl0IGxhdGVyLlxuICBjb25zdHJ1Y3Rvcihjb25maWc6IGFueSA9IHt9KSB7XG4gICAgdGhpcy5jaGFubmVsID0gY29uZmlnLmNoYW5uZWwgfHwgUHVzaFF1ZXVlLmRlZmF1bHRQdXNoQ2hhbm5lbCgpO1xuICAgIHRoaXMuYmF0Y2hTaXplID0gY29uZmlnLmJhdGNoU2l6ZSB8fCBERUZBVUxUX0JBVENIX1NJWkU7XG4gICAgdGhpcy5wYXJzZVB1Ymxpc2hlciA9IFBhcnNlTWVzc2FnZVF1ZXVlLmNyZWF0ZVB1Ymxpc2hlcihjb25maWcpO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQdXNoQ2hhbm5lbCgpIHtcbiAgICByZXR1cm4gYCR7UGFyc2UuYXBwbGljYXRpb25JZH0tJHtQVVNIX0NIQU5ORUx9YDtcbiAgfVxuXG4gIGVucXVldWUoYm9keSwgd2hlcmUsIGNvbmZpZywgYXV0aCwgcHVzaFN0YXR1cykge1xuICAgIGNvbnN0IGxpbWl0ID0gdGhpcy5iYXRjaFNpemU7XG5cbiAgICB3aGVyZSA9IGFwcGx5RGV2aWNlVG9rZW5FeGlzdHMod2hlcmUpO1xuXG4gICAgLy8gT3JkZXIgYnkgb2JqZWN0SWQgc28gbm8gaW1wYWN0IG9uIHRoZSBEQlxuICAgIGNvbnN0IG9yZGVyID0gJ29iamVjdElkJztcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlc3QuZmluZChjb25maWcsIGF1dGgsICdfSW5zdGFsbGF0aW9uJywgd2hlcmUsIHtcbiAgICAgICAgICBsaW1pdDogMCxcbiAgICAgICAgICBjb3VudDogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oKHsgcmVzdWx0cywgY291bnQgfSkgPT4ge1xuICAgICAgICBpZiAoIXJlc3VsdHMgfHwgY291bnQgPT0gMCkge1xuICAgICAgICAgIHJldHVybiBwdXNoU3RhdHVzLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcHVzaFN0YXR1cy5zZXRSdW5uaW5nKE1hdGguY2VpbChjb3VudCAvIGxpbWl0KSk7XG4gICAgICAgIGxldCBza2lwID0gMDtcbiAgICAgICAgd2hpbGUgKHNraXAgPCBjb3VudCkge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0ge1xuICAgICAgICAgICAgd2hlcmUsXG4gICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICAgIHNraXAsXG4gICAgICAgICAgICBvcmRlcixcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgY29uc3QgcHVzaFdvcmtJdGVtID0ge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgcHVzaFN0YXR1czogeyBvYmplY3RJZDogcHVzaFN0YXR1cy5vYmplY3RJZCB9LFxuICAgICAgICAgICAgYXBwbGljYXRpb25JZDogY29uZmlnLmFwcGxpY2F0aW9uSWQsXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLnBhcnNlUHVibGlzaGVyLnB1Ymxpc2godGhpcy5jaGFubmVsLCBKU09OLnN0cmluZ2lmeShwdXNoV29ya0l0ZW0pKTtcbiAgICAgICAgICBza2lwICs9IGxpbWl0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9QdXNoL1B1c2hRdWV1ZS5qcyJdLCJuYW1lcyI6WyJQVVNIX0NIQU5ORUwiLCJERUZBVUxUX0JBVENIX1NJWkUiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsIlB1c2hRdWV1ZSIsIlBhcnNlTWVzc2FnZVF1ZXVlIiwiZGVmYXVsdFB1c2hDaGFubmVsIiwiUGFyc2UiLCJhcHBsaWNhdGlvbklkIiwiZW5xdWV1ZSIsImxpbWl0Iiwid2hlcmUiLCJvcmRlciIsImNvdW50IiwicHVzaFN0YXR1cyIsIk1hdGgiLCJza2lwIiwicXVlcnkiLCJwdXNoV29ya0l0ZW0iLCJvYmplY3RJZCIsIkpTT04iXSwibWFwcGluZ3MiOiI7Nk5BQUEsR0FBQSxDQUFBLGtCQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsS0FBQSwwQkFBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLE1BQUEsMEJBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLEtBQUEsMEJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsQ0FBQSxDLHNQQUVBLEtBQU1BLENBQUFBLFlBQVksMEJBQWxCLG1CQUFrQixDQUFsQixDQUNBLEtBQU1DLENBQUFBLGtCQUFrQiwwQkFBeEIsR0FBd0IsQ0FBeEIsQ0FFTyxLQUFBLENBQUEsU0FBZ0IsQ0FLckI7QUFDQTtBQUNBQyxXQUFXLENBQUNDLE1BQVcsNkJBQVosRUFBWSxDQUFaLENBQW1CLGlEQUM1QixLQUFBLE9BQUEsQ0FBZUEsNEJBQUFBLE1BQU0sQ0FBTkEsT0FBQUEsK0JBQWtCQyxTQUFTLENBQTFDLGtCQUFpQ0EsRUFBbEJELENBQWYsQ0FENEIseUJBRTVCLEtBQUEsU0FBQSxDQUFpQkEsNEJBQUFBLE1BQU0sQ0FBTkEsU0FBQUEsK0JBQWpCLGtCQUFpQkEsQ0FBakIsQ0FGNEIseUJBRzVCLEtBQUEsY0FBQSxDQUFzQkUsa0JBQUFBLENBQUFBLGlCQUFBQSxDQUFBQSxlQUFBQSxDQUF0QixNQUFzQkEsQ0FBdEIsQ0FDRCxDQUV3QixNQUFsQkMsQ0FBQUEsa0JBQWtCLEVBQUcsa0RBQzFCLE1BQVEsR0FBRUMsS0FBQUEsQ0FBQUEsT0FBQUEsQ0FBTUMsYUFBYyxJQUFHUixZQUFqQyxFQUFBLENBQ0QsQ0FFRFMsT0FBTyxDQUFBLElBQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxVQUFBLENBQXdDLHlCQUM3QyxLQUFNQyxDQUFBQSxLQUFLLDJCQUFHLEtBQWQsU0FBVyxDQUFYLENBRDZDLHlCQUc3Q0MsS0FBSyxDQUFHLENBQUEsRUFBQSxNQUFBLENBQUEsc0JBQUEsRUFIcUMsS0FHckMsQ0FBUkEsQ0FFQTtBQUNBLEtBQU1DLENBQUFBLEtBQUssMkJBQVgsVUFBVyxDQUFYLENBTjZDLHlCQU83QyxNQUFPLENBQUEsT0FBTyxDQUFQLE9BQUEsR0FBQSxJQUFBLENBQ0MsSUFBTSxrREFDVixNQUFPLENBQUEsS0FBQSxDQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxlQUFBLENBQUEsS0FBQSxDQUFnRCxDQUNyREYsS0FBSyxDQURnRCxDQUFBLENBRXJERyxLQUFLLENBQUUsSUFGOEMsQ0FBaEQsQ0FBUCxDQUZHLENBQUEsRUFBQSxJQUFBLENBT0MsQ0FBQyxDQUFBLE9BQUEsQ0FBV0EsS0FBWCxDQUFELEdBQXdCLGtEQUM1QixHQUFJLDZCQUFBLE9BQUEsK0JBQVlBLEtBQUssRUFBckIsQ0FBSSxDQUFKLENBQTRCLHFEQUMxQixNQUFPQyxDQUFBQSxVQUFVLENBQWpCLFFBQU9BLEVBQVAsQ0FDRCxDQUZELGlDQUQ0Qix5QkFJNUJBLFVBQVUsQ0FBVkEsVUFBQUEsQ0FBc0JDLElBQUksQ0FBSkEsSUFBQUEsQ0FBVUYsS0FBSyxDQUFyQ0MsS0FBc0JDLENBQXRCRCxFQUNBLEdBQUlFLENBQUFBLElBQUksMkJBQVIsQ0FBUSxDQUFSLENBTDRCLHlCQU01QixNQUFPQSxJQUFJLENBQVgsS0FBQSxDQUFxQixDQUNuQixLQUFNQyxDQUFBQSxLQUFLLDJCQUFHLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxJQUFBLENBSVpMLEtBSlksQ0FBSCxDQUFYLENBT0EsS0FBTU0sQ0FBQUEsWUFBWSwyQkFBRyxDQUFBLElBQUEsQ0FBQSxLQUFBLENBR25CSixVQUFVLENBQUUsQ0FBRUssUUFBUSxDQUFFTCxVQUFVLENBQUNLLFFBQXZCLENBSE8sQ0FJbkJYLGFBQWEsQ0FBRUwsTUFBTSxDQUFDSyxhQUpILENBQUgsQ0FBbEIsQ0FSbUIseUJBY25CLEtBQUEsY0FBQSxDQUFBLE9BQUEsQ0FBNEIsS0FBNUIsT0FBQSxDQUEwQ1ksSUFBSSxDQUFKQSxTQUFBQSxDQUExQyxZQUEwQ0EsQ0FBMUMsRUFkbUIseUJBZW5CSixJQUFJLEVBQUpBLEtBQUFBLENBQ0QsQ0E3QkwsQ0FBTyxDQUFQLENBK0JELENBdkRvQixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VNZXNzYWdlUXVldWUgfSBmcm9tICcuLi9QYXJzZU1lc3NhZ2VRdWV1ZSc7XG5pbXBvcnQgcmVzdCBmcm9tICcuLi9yZXN0JztcbmltcG9ydCB7IGFwcGx5RGV2aWNlVG9rZW5FeGlzdHMgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBQYXJzZSBmcm9tICdwYXJzZS9ub2RlJztcblxuY29uc3QgUFVTSF9DSEFOTkVMID0gJ3BhcnNlLXNlcnZlci1wdXNoJztcbmNvbnN0IERFRkFVTFRfQkFUQ0hfU0laRSA9IDEwMDtcblxuZXhwb3J0IGNsYXNzIFB1c2hRdWV1ZSB7XG4gIHBhcnNlUHVibGlzaGVyOiBPYmplY3Q7XG4gIGNoYW5uZWw6IFN0cmluZztcbiAgYmF0Y2hTaXplOiBOdW1iZXI7XG5cbiAgLy8gY29uZmlnIG9iamVjdCBvZiB0aGUgcHVibGlzaGVyLCByaWdodCBub3cgaXQgb25seSBjb250YWlucyB0aGUgcmVkaXNVUkwsXG4gIC8vIGJ1dCB3ZSBtYXkgZXh0ZW5kIGl0IGxhdGVyLlxuICBjb25zdHJ1Y3Rvcihjb25maWc6IGFueSA9IHt9KSB7XG4gICAgdGhpcy5jaGFubmVsID0gY29uZmlnLmNoYW5uZWwgfHwgUHVzaFF1ZXVlLmRlZmF1bHRQdXNoQ2hhbm5lbCgpO1xuICAgIHRoaXMuYmF0Y2hTaXplID0gY29uZmlnLmJhdGNoU2l6ZSB8fCBERUZBVUxUX0JBVENIX1NJWkU7XG4gICAgdGhpcy5wYXJzZVB1Ymxpc2hlciA9IFBhcnNlTWVzc2FnZVF1ZXVlLmNyZWF0ZVB1Ymxpc2hlcihjb25maWcpO1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQdXNoQ2hhbm5lbCgpIHtcbiAgICByZXR1cm4gYCR7UGFyc2UuYXBwbGljYXRpb25JZH0tJHtQVVNIX0NIQU5ORUx9YDtcbiAgfVxuXG4gIGVucXVldWUoYm9keSwgd2hlcmUsIGNvbmZpZywgYXV0aCwgcHVzaFN0YXR1cykge1xuICAgIGNvbnN0IGxpbWl0ID0gdGhpcy5iYXRjaFNpemU7XG5cbiAgICB3aGVyZSA9IGFwcGx5RGV2aWNlVG9rZW5FeGlzdHMod2hlcmUpO1xuXG4gICAgLy8gT3JkZXIgYnkgb2JqZWN0SWQgc28gbm8gaW1wYWN0IG9uIHRoZSBEQlxuICAgIGNvbnN0IG9yZGVyID0gJ29iamVjdElkJztcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlc3QuZmluZChjb25maWcsIGF1dGgsICdfSW5zdGFsbGF0aW9uJywgd2hlcmUsIHtcbiAgICAgICAgICBsaW1pdDogMCxcbiAgICAgICAgICBjb3VudDogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oKHsgcmVzdWx0cywgY291bnQgfSkgPT4ge1xuICAgICAgICBpZiAoIXJlc3VsdHMgfHwgY291bnQgPT0gMCkge1xuICAgICAgICAgIHJldHVybiBwdXNoU3RhdHVzLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcHVzaFN0YXR1cy5zZXRSdW5uaW5nKE1hdGguY2VpbChjb3VudCAvIGxpbWl0KSk7XG4gICAgICAgIGxldCBza2lwID0gMDtcbiAgICAgICAgd2hpbGUgKHNraXAgPCBjb3VudCkge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0ge1xuICAgICAgICAgICAgd2hlcmUsXG4gICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICAgIHNraXAsXG4gICAgICAgICAgICBvcmRlcixcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgY29uc3QgcHVzaFdvcmtJdGVtID0ge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgcHVzaFN0YXR1czogeyBvYmplY3RJZDogcHVzaFN0YXR1cy5vYmplY3RJZCB9LFxuICAgICAgICAgICAgYXBwbGljYXRpb25JZDogY29uZmlnLmFwcGxpY2F0aW9uSWQsXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLnBhcnNlUHVibGlzaGVyLnB1Ymxpc2godGhpcy5jaGFubmVsLCBKU09OLnN0cmluZ2lmeShwdXNoV29ya0l0ZW0pKTtcbiAgICAgICAgICBza2lwICs9IGxpbWl0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufVxuIl19