"use strict";function cov_1jkwkf0tcv(){var path="/parse-server/lib/LiveQuery/ParseCloudCodePublisher.js";var hash="42a441d87a542129aec4337890512af9813ed5f4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/LiveQuery/ParseCloudCodePublisher.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:41}},"2":{start:{line:8,column:19},end:{line:8,column:43}},"3":{start:{line:10,column:12},end:{line:10,column:57}},"4":{start:{line:12,column:14},end:{line:12,column:58}},"5":{start:{line:14,column:39},end:{line:14,column:93}},"6":{start:{line:20,column:4},end:{line:20,column:75}},"7":{start:{line:24,column:4},end:{line:24,column:81}},"8":{start:{line:28,column:4},end:{line:28,column:83}},"9":{start:{line:33,column:4},end:{line:33,column:122}},"10":{start:{line:36,column:20},end:{line:38,column:5}},"11":{start:{line:40,column:4},end:{line:42,column:5}},"12":{start:{line:41,column:6},end:{line:41,column:67}},"13":{start:{line:44,column:4},end:{line:44,column:63}},"14":{start:{line:49,column:0},end:{line:49,column:58}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:14,column:9},end:{line:14,column:31}},loc:{start:{line:14,column:37},end:{line:14,column:95}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:2},end:{line:19,column:3}},loc:{start:{line:19,column:27},end:{line:21,column:3}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:32},end:{line:25,column:3}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:2},end:{line:27,column:3}},loc:{start:{line:27,column:34},end:{line:29,column:3}},line:27},"4":{name:"(anonymous_4)",decl:{start:{line:32,column:2},end:{line:32,column:3}},loc:{start:{line:32,column:37},end:{line:45,column:3}},line:32}},branchMap:{"0":{loc:{start:{line:14,column:46},end:{line:14,column:92}},type:"cond-expr",locations:[{start:{line:14,column:70},end:{line:14,column:73}},{start:{line:14,column:76},end:{line:14,column:92}}],line:14},"1":{loc:{start:{line:14,column:46},end:{line:14,column:67}},type:"binary-expr",locations:[{start:{line:14,column:46},end:{line:14,column:49}},{start:{line:14,column:53},end:{line:14,column:67}}],line:14},"2":{loc:{start:{line:19,column:14},end:{line:19,column:25}},type:"default-arg",locations:[{start:{line:19,column:23},end:{line:19,column:25}}],line:19},"3":{loc:{start:{line:40,column:4},end:{line:42,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:42,column:5}},{start:{line:40,column:4},end:{line:42,column:5}}],line:40}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0]},inputSourceMap:{version:3,sources:["../../src/LiveQuery/ParseCloudCodePublisher.js"],names:["ParseCloudCodePublisher","constructor","config","parsePublisher","ParsePubSub","createPublisher","onCloudCodeAfterSave","request","_onCloudCodeMessage","Parse","applicationId","onCloudCodeAfterDelete","type","logger","verbose","object","original","message","currentParseObject","_toFullJSON","originalParseObject","publish","JSON","stringify"],mappings:";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,uBAAN,CAA8B;AAG5B;AACA;AACAC,EAAAA,WAAW,CAACC,MAAW,GAAG,EAAf,EAAmB;AAC5B,SAAKC,cAAL,GAAsBC,yBAAYC,eAAZ,CAA4BH,MAA5B,CAAtB;AACD;;AAEDI,EAAAA,oBAAoB,CAACC,OAAD,EAAqB;AACvC,SAAKC,mBAAL,CAAyBC,cAAMC,aAAN,GAAsB,WAA/C,EAA4DH,OAA5D;AACD;;AAEDI,EAAAA,sBAAsB,CAACJ,OAAD,EAAqB;AACzC,SAAKC,mBAAL,CAAyBC,cAAMC,aAAN,GAAsB,aAA/C,EAA8DH,OAA9D;AACD,GAf2B,CAiB5B;;;AACAC,EAAAA,mBAAmB,CAACI,IAAD,EAAeL,OAAf,EAAmC;AACpDM,oBAAOC,OAAP,CACE,0DADF,EAEEP,OAAO,CAACQ,MAFV,EAGER,OAAO,CAACS,QAHV,EADoD,CAMpD;;;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,kBAAkB,EAAEX,OAAO,CAACQ,MAAR,CAAeI,WAAf;AADN,KAAhB;;AAGA,QAAIZ,OAAO,CAACS,QAAZ,EAAsB;AACpBC,MAAAA,OAAO,CAACG,mBAAR,GAA8Bb,OAAO,CAACS,QAAR,CAAiBG,WAAjB,EAA9B;AACD;;AACD,SAAKhB,cAAL,CAAoBkB,OAApB,CAA4BT,IAA5B,EAAkCU,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAlC;AACD;;AAhC2B",sourcesContent:["import { ParsePubSub } from './ParsePubSub';\nimport Parse from 'parse/node';\nimport logger from '../logger';\n\nclass ParseCloudCodePublisher {\n  parsePublisher: Object;\n\n  // config object of the publisher, right now it only contains the redisURL,\n  // but we may extend it later.\n  constructor(config: any = {}) {\n    this.parsePublisher = ParsePubSub.createPublisher(config);\n  }\n\n  onCloudCodeAfterSave(request: any): void {\n    this._onCloudCodeMessage(Parse.applicationId + 'afterSave', request);\n  }\n\n  onCloudCodeAfterDelete(request: any): void {\n    this._onCloudCodeMessage(Parse.applicationId + 'afterDelete', request);\n  }\n\n  // Request is the request object from cloud code functions. request.object is a ParseObject.\n  _onCloudCodeMessage(type: string, request: any): void {\n    logger.verbose(\n      'Raw request from cloud code current : %j | original : %j',\n      request.object,\n      request.original\n    );\n    // We need the full JSON which includes className\n    const message = {\n      currentParseObject: request.object._toFullJSON(),\n    };\n    if (request.original) {\n      message.originalParseObject = request.original._toFullJSON();\n    }\n    this.parsePublisher.publish(type, JSON.stringify(message));\n  }\n}\n\nexport { ParseCloudCodePublisher };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"42a441d87a542129aec4337890512af9813ed5f4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jkwkf0tcv=function(){return actualCoverage;};}return actualCoverage;}cov_1jkwkf0tcv();cov_1jkwkf0tcv().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1jkwkf0tcv().s[1]++;exports.ParseCloudCodePublisher=void 0;var _ParsePubSub=(cov_1jkwkf0tcv().s[2]++,require("./ParsePubSub"));var _node=(cov_1jkwkf0tcv().s[3]++,_interopRequireDefault(require("parse/node")));var _logger=(cov_1jkwkf0tcv().s[4]++,_interopRequireDefault(require("../logger")));function _interopRequireDefault(obj){cov_1jkwkf0tcv().f[0]++;cov_1jkwkf0tcv().s[5]++;return(cov_1jkwkf0tcv().b[1][0]++,obj)&&(cov_1jkwkf0tcv().b[1][1]++,obj.__esModule)?(cov_1jkwkf0tcv().b[0][0]++,obj):(cov_1jkwkf0tcv().b[0][1]++,{default:obj});}class ParseCloudCodePublisher{// config object of the publisher, right now it only contains the redisURL,
// but we may extend it later.
constructor(config=(cov_1jkwkf0tcv().b[2][0]++,{})){cov_1jkwkf0tcv().f[1]++;cov_1jkwkf0tcv().s[6]++;this.parsePublisher=_ParsePubSub.ParsePubSub.createPublisher(config);}onCloudCodeAfterSave(request){cov_1jkwkf0tcv().f[2]++;cov_1jkwkf0tcv().s[7]++;this._onCloudCodeMessage(_node.default.applicationId+'afterSave',request);}onCloudCodeAfterDelete(request){cov_1jkwkf0tcv().f[3]++;cov_1jkwkf0tcv().s[8]++;this._onCloudCodeMessage(_node.default.applicationId+'afterDelete',request);}// Request is the request object from cloud code functions. request.object is a ParseObject.
_onCloudCodeMessage(type,request){cov_1jkwkf0tcv().f[4]++;cov_1jkwkf0tcv().s[9]++;_logger.default.verbose('Raw request from cloud code current : %j | original : %j',request.object,request.original);// We need the full JSON which includes className
const message=(cov_1jkwkf0tcv().s[10]++,{currentParseObject:request.object._toFullJSON()});cov_1jkwkf0tcv().s[11]++;if(request.original){cov_1jkwkf0tcv().b[3][0]++;cov_1jkwkf0tcv().s[12]++;message.originalParseObject=request.original._toFullJSON();}else{cov_1jkwkf0tcv().b[3][1]++;}cov_1jkwkf0tcv().s[13]++;this.parsePublisher.publish(type,JSON.stringify(message));}}cov_1jkwkf0tcv().s[14]++;exports.ParseCloudCodePublisher=ParseCloudCodePublisher;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MaXZlUXVlcnkvUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIuanMiXSwibmFtZXMiOlsiUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsInBhcnNlUHVibGlzaGVyIiwiUGFyc2VQdWJTdWIiLCJjcmVhdGVQdWJsaXNoZXIiLCJvbkNsb3VkQ29kZUFmdGVyU2F2ZSIsInJlcXVlc3QiLCJfb25DbG91ZENvZGVNZXNzYWdlIiwiUGFyc2UiLCJhcHBsaWNhdGlvbklkIiwib25DbG91ZENvZGVBZnRlckRlbGV0ZSIsInR5cGUiLCJsb2dnZXIiLCJ2ZXJib3NlIiwib2JqZWN0Iiwib3JpZ2luYWwiLCJtZXNzYWdlIiwiY3VycmVudFBhcnNlT2JqZWN0IiwiX3RvRnVsbEpTT04iLCJvcmlnaW5hbFBhcnNlT2JqZWN0IiwicHVibGlzaCIsIkpTT04iLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLHVCQUFOLENBQThCO0FBRzVCO0FBQ0E7QUFDQUMsRUFBQUEsV0FBVyxDQUFDQyxNQUFXLEdBQUcsRUFBZixFQUFtQjtBQUM1QixTQUFLQyxjQUFMLEdBQXNCQyx5QkFBWUMsZUFBWixDQUE0QkgsTUFBNUIsQ0FBdEI7QUFDRDs7QUFFREksRUFBQUEsb0JBQW9CLENBQUNDLE9BQUQsRUFBcUI7QUFDdkMsU0FBS0MsbUJBQUwsQ0FBeUJDLGNBQU1DLGFBQU4sR0FBc0IsV0FBL0MsRUFBNERILE9BQTVEO0FBQ0Q7O0FBRURJLEVBQUFBLHNCQUFzQixDQUFDSixPQUFELEVBQXFCO0FBQ3pDLFNBQUtDLG1CQUFMLENBQXlCQyxjQUFNQyxhQUFOLEdBQXNCLGFBQS9DLEVBQThESCxPQUE5RDtBQUNELEdBZjJCLENBaUI1Qjs7O0FBQ0FDLEVBQUFBLG1CQUFtQixDQUFDSSxJQUFELEVBQWVMLE9BQWYsRUFBbUM7QUFDcERNLG9CQUFPQyxPQUFQLENBQ0UsMERBREYsRUFFRVAsT0FBTyxDQUFDUSxNQUZWLEVBR0VSLE9BQU8sQ0FBQ1MsUUFIVixFQURvRCxDQU1wRDs7O0FBQ0EsVUFBTUMsT0FBTyxHQUFHO0FBQ2RDLE1BQUFBLGtCQUFrQixFQUFFWCxPQUFPLENBQUNRLE1BQVIsQ0FBZUksV0FBZjtBQUROLEtBQWhCOztBQUdBLFFBQUlaLE9BQU8sQ0FBQ1MsUUFBWixFQUFzQjtBQUNwQkMsTUFBQUEsT0FBTyxDQUFDRyxtQkFBUixHQUE4QmIsT0FBTyxDQUFDUyxRQUFSLENBQWlCRyxXQUFqQixFQUE5QjtBQUNEOztBQUNELFNBQUtoQixjQUFMLENBQW9Ca0IsT0FBcEIsQ0FBNEJULElBQTVCLEVBQWtDVSxJQUFJLENBQUNDLFNBQUwsQ0FBZU4sT0FBZixDQUFsQztBQUNEOztBQWhDMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJzZVB1YlN1YiB9IGZyb20gJy4vUGFyc2VQdWJTdWInO1xuaW1wb3J0IFBhcnNlIGZyb20gJ3BhcnNlL25vZGUnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9sb2dnZXInO1xuXG5jbGFzcyBQYXJzZUNsb3VkQ29kZVB1Ymxpc2hlciB7XG4gIHBhcnNlUHVibGlzaGVyOiBPYmplY3Q7XG5cbiAgLy8gY29uZmlnIG9iamVjdCBvZiB0aGUgcHVibGlzaGVyLCByaWdodCBub3cgaXQgb25seSBjb250YWlucyB0aGUgcmVkaXNVUkwsXG4gIC8vIGJ1dCB3ZSBtYXkgZXh0ZW5kIGl0IGxhdGVyLlxuICBjb25zdHJ1Y3Rvcihjb25maWc6IGFueSA9IHt9KSB7XG4gICAgdGhpcy5wYXJzZVB1Ymxpc2hlciA9IFBhcnNlUHViU3ViLmNyZWF0ZVB1Ymxpc2hlcihjb25maWcpO1xuICB9XG5cbiAgb25DbG91ZENvZGVBZnRlclNhdmUocmVxdWVzdDogYW55KTogdm9pZCB7XG4gICAgdGhpcy5fb25DbG91ZENvZGVNZXNzYWdlKFBhcnNlLmFwcGxpY2F0aW9uSWQgKyAnYWZ0ZXJTYXZlJywgcmVxdWVzdCk7XG4gIH1cblxuICBvbkNsb3VkQ29kZUFmdGVyRGVsZXRlKHJlcXVlc3Q6IGFueSk6IHZvaWQge1xuICAgIHRoaXMuX29uQ2xvdWRDb2RlTWVzc2FnZShQYXJzZS5hcHBsaWNhdGlvbklkICsgJ2FmdGVyRGVsZXRlJywgcmVxdWVzdCk7XG4gIH1cblxuICAvLyBSZXF1ZXN0IGlzIHRoZSByZXF1ZXN0IG9iamVjdCBmcm9tIGNsb3VkIGNvZGUgZnVuY3Rpb25zLiByZXF1ZXN0Lm9iamVjdCBpcyBhIFBhcnNlT2JqZWN0LlxuICBfb25DbG91ZENvZGVNZXNzYWdlKHR5cGU6IHN0cmluZywgcmVxdWVzdDogYW55KTogdm9pZCB7XG4gICAgbG9nZ2VyLnZlcmJvc2UoXG4gICAgICAnUmF3IHJlcXVlc3QgZnJvbSBjbG91ZCBjb2RlIGN1cnJlbnQgOiAlaiB8IG9yaWdpbmFsIDogJWonLFxuICAgICAgcmVxdWVzdC5vYmplY3QsXG4gICAgICByZXF1ZXN0Lm9yaWdpbmFsXG4gICAgKTtcbiAgICAvLyBXZSBuZWVkIHRoZSBmdWxsIEpTT04gd2hpY2ggaW5jbHVkZXMgY2xhc3NOYW1lXG4gICAgY29uc3QgbWVzc2FnZSA9IHtcbiAgICAgIGN1cnJlbnRQYXJzZU9iamVjdDogcmVxdWVzdC5vYmplY3QuX3RvRnVsbEpTT04oKSxcbiAgICB9O1xuICAgIGlmIChyZXF1ZXN0Lm9yaWdpbmFsKSB7XG4gICAgICBtZXNzYWdlLm9yaWdpbmFsUGFyc2VPYmplY3QgPSByZXF1ZXN0Lm9yaWdpbmFsLl90b0Z1bGxKU09OKCk7XG4gICAgfVxuICAgIHRoaXMucGFyc2VQdWJsaXNoZXIucHVibGlzaCh0eXBlLCBKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIgfTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MaXZlUXVlcnkvUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIuanMiXSwibmFtZXMiOlsiUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsIlBhcnNlUHViU3ViIiwib25DbG91ZENvZGVBZnRlclNhdmUiLCJQYXJzZSIsIm9uQ2xvdWRDb2RlQWZ0ZXJEZWxldGUiLCJfb25DbG91ZENvZGVNZXNzYWdlIiwibG9nZ2VyIiwicmVxdWVzdCIsIm1lc3NhZ2UiLCJjdXJyZW50UGFyc2VPYmplY3QiLCJKU09OIl0sIm1hcHBpbmdzIjoib2pMQUlBOzJPQUpBLEdBQUEsQ0FBQSxZQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQSxLQUFBLDBCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsT0FBQSwwQkFBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQSxDQUFBLEMsc1BBRUEsS0FBTUEsQ0FBQUEsdUJBQXdCLENBRzVCO0FBQ0E7QUFDQUMsV0FBVyxDQUFDQyxNQUFXLDZCQUFaLEVBQVksQ0FBWixDQUFtQixpREFDNUIsS0FBQSxjQUFBLENBQXNCQyxZQUFBQSxDQUFBQSxXQUFBQSxDQUFBQSxlQUFBQSxDQUF0QixNQUFzQkEsQ0FBdEIsQ0FDRCxDQUVEQyxvQkFBb0IsQ0FBQSxPQUFBLENBQXFCLGlEQUN2QyxLQUFBLG1CQUFBLENBQXlCQyxLQUFBQSxDQUFBQSxPQUFBQSxDQUFBQSxhQUFBQSxDQUF6QixXQUFBLENBQUEsT0FBQSxFQUNELENBRURDLHNCQUFzQixDQUFBLE9BQUEsQ0FBcUIsaURBQ3pDLEtBQUEsbUJBQUEsQ0FBeUJELEtBQUFBLENBQUFBLE9BQUFBLENBQUFBLGFBQUFBLENBQXpCLGFBQUEsQ0FBQSxPQUFBLEVBZDBCLENBaUI1QjtBQUNBRSxtQkFBbUIsQ0FBQSxJQUFBLENBQUEsT0FBQSxDQUFtQyxpREFDcERDLE9BQUFBLENBQUFBLE9BQUFBLENBQUFBLE9BQUFBLENBQUFBLDBEQUFBQSxDQUVFQyxPQUFPLENBRlRELE1BQUFBLENBR0VDLE9BQU8sQ0FKMkMsUUFDcERELEVBS0E7QUFDQSxLQUFNRSxDQUFBQSxPQUFPLDJCQUFHLENBQ2RDLGtCQUFrQixDQUFFRixPQUFPLENBQVBBLE1BQUFBLENBQUFBLFdBQUFBLEVBRE4sQ0FBSCxDQUFiLENBUG9ELHlCQVVwRCxHQUFJQSxPQUFPLENBQVgsUUFBQSxDQUFzQixxREFDcEJDLE9BQU8sQ0FBUEEsbUJBQUFBLENBQThCRCxPQUFPLENBQVBBLFFBQUFBLENBQTlCQyxXQUE4QkQsRUFBOUJDLENBQ0QsQ0FGRCxpQ0FWb0QseUJBYXBELEtBQUEsY0FBQSxDQUFBLE9BQUEsQ0FBQSxJQUFBLENBQWtDRSxJQUFJLENBQUpBLFNBQUFBLENBQWxDLE9BQWtDQSxDQUFsQyxFQUNELENBaEMyQixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VQdWJTdWIgfSBmcm9tICcuL1BhcnNlUHViU3ViJztcbmltcG9ydCBQYXJzZSBmcm9tICdwYXJzZS9ub2RlJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcblxuY2xhc3MgUGFyc2VDbG91ZENvZGVQdWJsaXNoZXIge1xuICBwYXJzZVB1Ymxpc2hlcjogT2JqZWN0O1xuXG4gIC8vIGNvbmZpZyBvYmplY3Qgb2YgdGhlIHB1Ymxpc2hlciwgcmlnaHQgbm93IGl0IG9ubHkgY29udGFpbnMgdGhlIHJlZGlzVVJMLFxuICAvLyBidXQgd2UgbWF5IGV4dGVuZCBpdCBsYXRlci5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBhbnkgPSB7fSkge1xuICAgIHRoaXMucGFyc2VQdWJsaXNoZXIgPSBQYXJzZVB1YlN1Yi5jcmVhdGVQdWJsaXNoZXIoY29uZmlnKTtcbiAgfVxuXG4gIG9uQ2xvdWRDb2RlQWZ0ZXJTYXZlKHJlcXVlc3Q6IGFueSk6IHZvaWQge1xuICAgIHRoaXMuX29uQ2xvdWRDb2RlTWVzc2FnZShQYXJzZS5hcHBsaWNhdGlvbklkICsgJ2FmdGVyU2F2ZScsIHJlcXVlc3QpO1xuICB9XG5cbiAgb25DbG91ZENvZGVBZnRlckRlbGV0ZShyZXF1ZXN0OiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLl9vbkNsb3VkQ29kZU1lc3NhZ2UoUGFyc2UuYXBwbGljYXRpb25JZCArICdhZnRlckRlbGV0ZScsIHJlcXVlc3QpO1xuICB9XG5cbiAgLy8gUmVxdWVzdCBpcyB0aGUgcmVxdWVzdCBvYmplY3QgZnJvbSBjbG91ZCBjb2RlIGZ1bmN0aW9ucy4gcmVxdWVzdC5vYmplY3QgaXMgYSBQYXJzZU9iamVjdC5cbiAgX29uQ2xvdWRDb2RlTWVzc2FnZSh0eXBlOiBzdHJpbmcsIHJlcXVlc3Q6IGFueSk6IHZvaWQge1xuICAgIGxvZ2dlci52ZXJib3NlKFxuICAgICAgJ1JhdyByZXF1ZXN0IGZyb20gY2xvdWQgY29kZSBjdXJyZW50IDogJWogfCBvcmlnaW5hbCA6ICVqJyxcbiAgICAgIHJlcXVlc3Qub2JqZWN0LFxuICAgICAgcmVxdWVzdC5vcmlnaW5hbFxuICAgICk7XG4gICAgLy8gV2UgbmVlZCB0aGUgZnVsbCBKU09OIHdoaWNoIGluY2x1ZGVzIGNsYXNzTmFtZVxuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICBjdXJyZW50UGFyc2VPYmplY3Q6IHJlcXVlc3Qub2JqZWN0Ll90b0Z1bGxKU09OKCksXG4gICAgfTtcbiAgICBpZiAocmVxdWVzdC5vcmlnaW5hbCkge1xuICAgICAgbWVzc2FnZS5vcmlnaW5hbFBhcnNlT2JqZWN0ID0gcmVxdWVzdC5vcmlnaW5hbC5fdG9GdWxsSlNPTigpO1xuICAgIH1cbiAgICB0aGlzLnBhcnNlUHVibGlzaGVyLnB1Ymxpc2godHlwZSwgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkpO1xuICB9XG59XG5cbmV4cG9ydCB7IFBhcnNlQ2xvdWRDb2RlUHVibGlzaGVyIH07XG4iXX0=