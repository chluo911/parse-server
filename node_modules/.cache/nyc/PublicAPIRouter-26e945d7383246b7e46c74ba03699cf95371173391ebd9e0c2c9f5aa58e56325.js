"use strict";function cov_1jst8d4y1(){var path="/parse-server/lib/Routers/PublicAPIRouter.js";var hash="df8649934c0b901971ce6f63cf3a1491f7e56b73";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/PublicAPIRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:51}},"2":{start:{line:8,column:21},end:{line:8,column:72}},"3":{start:{line:10,column:14},end:{line:10,column:58}},"4":{start:{line:12,column:15},end:{line:12,column:57}},"5":{start:{line:14,column:12},end:{line:14,column:51}},"6":{start:{line:16,column:10},end:{line:16,column:47}},"7":{start:{line:18,column:19},end:{line:18,column:65}},"8":{start:{line:20,column:12},end:{line:20,column:33}},"9":{start:{line:22,column:39},end:{line:22,column:93}},"10":{start:{line:24,column:20},end:{line:24,column:73}},"11":{start:{line:26,column:14},end:{line:26,column:61}},"12":{start:{line:33,column:8},end:{line:33,column:17}},"13":{start:{line:34,column:18},end:{line:34,column:91}},"14":{start:{line:35,column:18},end:{line:35,column:34}},"15":{start:{line:37,column:19},end:{line:37,column:45}},"16":{start:{line:39,column:4},end:{line:41,column:5}},"17":{start:{line:40,column:6},end:{line:40,column:28}},"18":{start:{line:43,column:4},end:{line:45,column:5}},"19":{start:{line:44,column:6},end:{line:44,column:43}},"20":{start:{line:47,column:4},end:{line:49,column:5}},"21":{start:{line:48,column:6},end:{line:48,column:35}},"22":{start:{line:51,column:27},end:{line:51,column:48}},"23":{start:{line:52,column:4},end:{line:63,column:7}},"24":{start:{line:53,column:21},end:{line:55,column:8}},"25":{start:{line:57,column:6},end:{line:60,column:9}},"26":{start:{line:62,column:6},end:{line:62,column:47}},"27":{start:{line:67,column:21},end:{line:67,column:38}},"28":{start:{line:68,column:18},end:{line:68,column:34}},"29":{start:{line:70,column:19},end:{line:70,column:45}},"30":{start:{line:72,column:4},end:{line:74,column:5}},"31":{start:{line:73,column:6},end:{line:73,column:28}},"32":{start:{line:76,column:4},end:{line:78,column:5}},"33":{start:{line:77,column:6},end:{line:77,column:43}},"34":{start:{line:80,column:4},end:{line:82,column:5}},"35":{start:{line:81,column:6},end:{line:81,column:35}},"36":{start:{line:84,column:27},end:{line:84,column:48}},"37":{start:{line:85,column:4},end:{line:95,column:7}},"38":{start:{line:86,column:6},end:{line:89,column:9}},"39":{start:{line:91,column:6},end:{line:94,column:9}},"40":{start:{line:99,column:4},end:{line:124,column:7}},"41":{start:{line:100,column:21},end:{line:100,column:54}},"42":{start:{line:102,column:6},end:{line:104,column:7}},"43":{start:{line:103,column:8},end:{line:103,column:30}},"44":{start:{line:106,column:6},end:{line:111,column:7}},"45":{start:{line:107,column:8},end:{line:110,column:11}},"46":{start:{line:114,column:6},end:{line:123,column:9}},"47":{start:{line:115,column:8},end:{line:117,column:9}},"48":{start:{line:116,column:10},end:{line:116,column:29}},"49":{start:{line:119,column:8},end:{line:119,column:79}},"50":{start:{line:120,column:8},end:{line:122,column:11}},"51":{start:{line:128,column:19},end:{line:128,column:29}},"52":{start:{line:130,column:4},end:{line:132,column:5}},"53":{start:{line:131,column:6},end:{line:131,column:28}},"54":{start:{line:134,column:4},end:{line:136,column:5}},"55":{start:{line:135,column:6},end:{line:135,column:43}},"56":{start:{line:141,column:8},end:{line:141,column:17}},"57":{start:{line:142,column:18},end:{line:142,column:91}},"58":{start:{line:144,column:4},end:{line:146,column:5}},"59":{start:{line:145,column:6},end:{line:145,column:35}},"60":{start:{line:148,column:4},end:{line:162,column:7}},"61":{start:{line:149,column:21},end:{line:154,column:8}},"62":{start:{line:156,column:6},end:{line:159,column:9}},"63":{start:{line:161,column:6},end:{line:161,column:35}},"64":{start:{line:166,column:19},end:{line:166,column:29}},"65":{start:{line:168,column:4},end:{line:170,column:5}},"66":{start:{line:169,column:6},end:{line:169,column:28}},"67":{start:{line:172,column:4},end:{line:174,column:5}},"68":{start:{line:173,column:6},end:{line:173,column:43}},"69":{start:{line:180,column:8},end:{line:180,column:16}},"70":{start:{line:181,column:18},end:{line:181,column:91}},"71":{start:{line:183,column:4},end:{line:185,column:5}},"72":{start:{line:184,column:6},end:{line:184,column:35}},"73":{start:{line:187,column:4},end:{line:189,column:5}},"74":{start:{line:188,column:6},end:{line:188,column:90}},"75":{start:{line:191,column:4},end:{line:193,column:5}},"76":{start:{line:192,column:6},end:{line:192,column:82}},"77":{start:{line:195,column:4},end:{line:197,column:5}},"78":{start:{line:196,column:6},end:{line:196,column:90}},"79":{start:{line:199,column:4},end:{line:236,column:7}},"80":{start:{line:200,column:6},end:{line:202,column:9}},"81":{start:{line:204,column:6},end:{line:207,column:9}},"82":{start:{line:209,column:21},end:{line:215,column:8}},"83":{start:{line:217,column:6},end:{line:228,column:7}},"84":{start:{line:218,column:8},end:{line:223,column:9}},"85":{start:{line:219,column:10},end:{line:222,column:13}},"86":{start:{line:225,column:8},end:{line:227,column:9}},"87":{start:{line:226,column:10},end:{line:226,column:86}},"88":{start:{line:230,column:30},end:{line:230,column:58}},"89":{start:{line:231,column:23},end:{line:231,column:145}},"90":{start:{line:232,column:6},end:{line:235,column:9}},"91":{start:{line:240,column:4},end:{line:243,column:7}},"92":{start:{line:247,column:19},end:{line:247,column:29}},"93":{start:{line:249,column:4},end:{line:261,column:5}},"94":{start:{line:250,column:21},end:{line:253,column:8}},"95":{start:{line:255,column:6},end:{line:258,column:9}},"96":{start:{line:260,column:6},end:{line:260,column:35}},"97":{start:{line:265,column:4},end:{line:268,column:7}},"98":{start:{line:272,column:18},end:{line:272,column:29}},"99":{start:{line:273,column:4},end:{line:273,column:23}},"100":{start:{line:274,column:4},end:{line:274,column:35}},"101":{start:{line:275,column:4},end:{line:275,column:16}},"102":{start:{line:279,column:4},end:{line:279,column:55}},"103":{start:{line:280,column:4},end:{line:280,column:29}},"104":{start:{line:284,column:4},end:{line:288,column:7}},"105":{start:{line:285,column:6},end:{line:285,column:26}},"106":{start:{line:287,column:6},end:{line:287,column:35}},"107":{start:{line:289,column:4},end:{line:293,column:7}},"108":{start:{line:290,column:6},end:{line:290,column:26}},"109":{start:{line:292,column:6},end:{line:292,column:47}},"110":{start:{line:294,column:4},end:{line:296,column:7}},"111":{start:{line:295,column:6},end:{line:295,column:38}},"112":{start:{line:297,column:4},end:{line:301,column:7}},"113":{start:{line:298,column:6},end:{line:298,column:26}},"114":{start:{line:300,column:6},end:{line:300,column:37}},"115":{start:{line:302,column:4},end:{line:306,column:7}},"116":{start:{line:303,column:6},end:{line:303,column:26}},"117":{start:{line:305,column:6},end:{line:305,column:44}},"118":{start:{line:310,column:19},end:{line:310,column:44}},"119":{start:{line:312,column:4},end:{line:312,column:62}},"120":{start:{line:313,column:4},end:{line:313,column:43}},"121":{start:{line:314,column:4},end:{line:314,column:18}},"122":{start:{line:319,column:0},end:{line:319,column:42}},"123":{start:{line:320,column:15},end:{line:320,column:30}},"124":{start:{line:321,column:0},end:{line:321,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:22,column:9},end:{line:22,column:31}},loc:{start:{line:22,column:37},end:{line:22,column:95}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:2},end:{line:29,column:3}},loc:{start:{line:29,column:19},end:{line:64,column:3}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:52,column:60},end:{line:52,column:61}},loc:{start:{line:52,column:66},end:{line:61,column:5}},line:52},"3":{name:"(anonymous_3)",decl:{start:{line:61,column:7},end:{line:61,column:8}},loc:{start:{line:61,column:13},end:{line:63,column:5}},line:61},"4":{name:"(anonymous_4)",decl:{start:{line:66,column:2},end:{line:66,column:3}},loc:{start:{line:66,column:31},end:{line:96,column:3}},line:66},"5":{name:"(anonymous_5)",decl:{start:{line:85,column:65},end:{line:85,column:66}},loc:{start:{line:85,column:71},end:{line:90,column:5}},line:85},"6":{name:"(anonymous_6)",decl:{start:{line:90,column:7},end:{line:90,column:8}},loc:{start:{line:90,column:13},end:{line:95,column:5}},line:90},"7":{name:"(anonymous_7)",decl:{start:{line:98,column:2},end:{line:98,column:3}},loc:{start:{line:98,column:22},end:{line:125,column:3}},line:98},"8":{name:"(anonymous_8)",decl:{start:{line:99,column:23},end:{line:99,column:24}},loc:{start:{line:99,column:44},end:{line:124,column:5}},line:99},"9":{name:"(anonymous_9)",decl:{start:{line:114,column:85},end:{line:114,column:86}},loc:{start:{line:114,column:100},end:{line:123,column:7}},line:114},"10":{name:"(anonymous_10)",decl:{start:{line:127,column:2},end:{line:127,column:3}},loc:{start:{line:127,column:28},end:{line:163,column:3}},line:127},"11":{name:"(anonymous_11)",decl:{start:{line:148,column:79},end:{line:148,column:80}},loc:{start:{line:148,column:85},end:{line:160,column:5}},line:148},"12":{name:"(anonymous_12)",decl:{start:{line:160,column:7},end:{line:160,column:8}},loc:{start:{line:160,column:13},end:{line:162,column:5}},line:160},"13":{name:"(anonymous_13)",decl:{start:{line:165,column:2},end:{line:165,column:3}},loc:{start:{line:165,column:21},end:{line:237,column:3}},line:165},"14":{name:"(anonymous_14)",decl:{start:{line:199,column:84},end:{line:199,column:85}},loc:{start:{line:199,column:90},end:{line:203,column:5}},line:199},"15":{name:"(anonymous_15)",decl:{start:{line:203,column:7},end:{line:203,column:8}},loc:{start:{line:203,column:14},end:{line:208,column:5}},line:203},"16":{name:"(anonymous_16)",decl:{start:{line:208,column:12},end:{line:208,column:13}},loc:{start:{line:208,column:22},end:{line:236,column:5}},line:208},"17":{name:"(anonymous_17)",decl:{start:{line:239,column:2},end:{line:239,column:3}},loc:{start:{line:239,column:19},end:{line:244,column:3}},line:239},"18":{name:"(anonymous_18)",decl:{start:{line:246,column:2},end:{line:246,column:3}},loc:{start:{line:246,column:31},end:{line:262,column:3}},line:246},"19":{name:"(anonymous_19)",decl:{start:{line:264,column:2},end:{line:264,column:3}},loc:{start:{line:264,column:27},end:{line:269,column:3}},line:264},"20":{name:"(anonymous_20)",decl:{start:{line:271,column:2},end:{line:271,column:3}},loc:{start:{line:271,column:19},end:{line:276,column:3}},line:271},"21":{name:"(anonymous_21)",decl:{start:{line:278,column:2},end:{line:278,column:3}},loc:{start:{line:278,column:17},end:{line:281,column:3}},line:278},"22":{name:"(anonymous_22)",decl:{start:{line:283,column:2},end:{line:283,column:3}},loc:{start:{line:283,column:16},end:{line:307,column:3}},line:283},"23":{name:"(anonymous_23)",decl:{start:{line:284,column:51},end:{line:284,column:52}},loc:{start:{line:284,column:58},end:{line:286,column:5}},line:284},"24":{name:"(anonymous_24)",decl:{start:{line:286,column:7},end:{line:286,column:8}},loc:{start:{line:286,column:14},end:{line:288,column:5}},line:286},"25":{name:"(anonymous_25)",decl:{start:{line:289,column:65},end:{line:289,column:66}},loc:{start:{line:289,column:72},end:{line:291,column:5}},line:289},"26":{name:"(anonymous_26)",decl:{start:{line:291,column:7},end:{line:291,column:8}},loc:{start:{line:291,column:14},end:{line:293,column:5}},line:291},"27":{name:"(anonymous_27)",decl:{start:{line:294,column:47},end:{line:294,column:48}},loc:{start:{line:294,column:54},end:{line:296,column:5}},line:294},"28":{name:"(anonymous_28)",decl:{start:{line:297,column:62},end:{line:297,column:63}},loc:{start:{line:297,column:69},end:{line:299,column:5}},line:297},"29":{name:"(anonymous_29)",decl:{start:{line:299,column:7},end:{line:299,column:8}},loc:{start:{line:299,column:14},end:{line:301,column:5}},line:299},"30":{name:"(anonymous_30)",decl:{start:{line:302,column:61},end:{line:302,column:62}},loc:{start:{line:302,column:68},end:{line:304,column:5}},line:302},"31":{name:"(anonymous_31)",decl:{start:{line:304,column:7},end:{line:304,column:8}},loc:{start:{line:304,column:14},end:{line:306,column:5}},line:304},"32":{name:"(anonymous_32)",decl:{start:{line:309,column:2},end:{line:309,column:3}},loc:{start:{line:309,column:18},end:{line:315,column:3}},line:309}},branchMap:{"0":{loc:{start:{line:22,column:46},end:{line:22,column:92}},type:"cond-expr",locations:[{start:{line:22,column:70},end:{line:22,column:73}},{start:{line:22,column:76},end:{line:22,column:92}}],line:22},"1":{loc:{start:{line:22,column:46},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:46},end:{line:22,column:49}},{start:{line:22,column:53},end:{line:22,column:67}}],line:22},"2":{loc:{start:{line:34,column:18},end:{line:34,column:91}},type:"cond-expr",locations:[{start:{line:34,column:61},end:{line:34,column:80}},{start:{line:34,column:83},end:{line:34,column:91}}],line:34},"3":{loc:{start:{line:34,column:18},end:{line:34,column:58}},type:"binary-expr",locations:[{start:{line:34,column:18},end:{line:34,column:26}},{start:{line:34,column:30},end:{line:34,column:58}}],line:34},"4":{loc:{start:{line:39,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:39,column:4},end:{line:41,column:5}},{start:{line:39,column:4},end:{line:41,column:5}}],line:39},"5":{loc:{start:{line:43,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:43,column:4},end:{line:45,column:5}},{start:{line:43,column:4},end:{line:45,column:5}}],line:43},"6":{loc:{start:{line:47,column:4},end:{line:49,column:5}},type:"if",locations:[{start:{line:47,column:4},end:{line:49,column:5}},{start:{line:47,column:4},end:{line:49,column:5}}],line:47},"7":{loc:{start:{line:47,column:8},end:{line:47,column:27}},type:"binary-expr",locations:[{start:{line:47,column:8},end:{line:47,column:14}},{start:{line:47,column:18},end:{line:47,column:27}}],line:47},"8":{loc:{start:{line:72,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:72,column:4},end:{line:74,column:5}},{start:{line:72,column:4},end:{line:74,column:5}}],line:72},"9":{loc:{start:{line:76,column:4},end:{line:78,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:78,column:5}},{start:{line:76,column:4},end:{line:78,column:5}}],line:76},"10":{loc:{start:{line:80,column:4},end:{line:82,column:5}},type:"if",locations:[{start:{line:80,column:4},end:{line:82,column:5}},{start:{line:80,column:4},end:{line:82,column:5}}],line:80},"11":{loc:{start:{line:102,column:6},end:{line:104,column:7}},type:"if",locations:[{start:{line:102,column:6},end:{line:104,column:7}},{start:{line:102,column:6},end:{line:104,column:7}}],line:102},"12":{loc:{start:{line:106,column:6},end:{line:111,column:7}},type:"if",locations:[{start:{line:106,column:6},end:{line:111,column:7}},{start:{line:106,column:6},end:{line:111,column:7}}],line:106},"13":{loc:{start:{line:115,column:8},end:{line:117,column:9}},type:"if",locations:[{start:{line:115,column:8},end:{line:117,column:9}},{start:{line:115,column:8},end:{line:117,column:9}}],line:115},"14":{loc:{start:{line:130,column:4},end:{line:132,column:5}},type:"if",locations:[{start:{line:130,column:4},end:{line:132,column:5}},{start:{line:130,column:4},end:{line:132,column:5}}],line:130},"15":{loc:{start:{line:134,column:4},end:{line:136,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:136,column:5}},{start:{line:134,column:4},end:{line:136,column:5}}],line:134},"16":{loc:{start:{line:142,column:18},end:{line:142,column:91}},type:"cond-expr",locations:[{start:{line:142,column:61},end:{line:142,column:80}},{start:{line:142,column:83},end:{line:142,column:91}}],line:142},"17":{loc:{start:{line:142,column:18},end:{line:142,column:58}},type:"binary-expr",locations:[{start:{line:142,column:18},end:{line:142,column:26}},{start:{line:142,column:30},end:{line:142,column:58}}],line:142},"18":{loc:{start:{line:144,column:4},end:{line:146,column:5}},type:"if",locations:[{start:{line:144,column:4},end:{line:146,column:5}},{start:{line:144,column:4},end:{line:146,column:5}}],line:144},"19":{loc:{start:{line:144,column:8},end:{line:144,column:27}},type:"binary-expr",locations:[{start:{line:144,column:8},end:{line:144,column:17}},{start:{line:144,column:21},end:{line:144,column:27}}],line:144},"20":{loc:{start:{line:168,column:4},end:{line:170,column:5}},type:"if",locations:[{start:{line:168,column:4},end:{line:170,column:5}},{start:{line:168,column:4},end:{line:170,column:5}}],line:168},"21":{loc:{start:{line:172,column:4},end:{line:174,column:5}},type:"if",locations:[{start:{line:172,column:4},end:{line:174,column:5}},{start:{line:172,column:4},end:{line:174,column:5}}],line:172},"22":{loc:{start:{line:181,column:18},end:{line:181,column:91}},type:"cond-expr",locations:[{start:{line:181,column:61},end:{line:181,column:80}},{start:{line:181,column:83},end:{line:181,column:91}}],line:181},"23":{loc:{start:{line:181,column:18},end:{line:181,column:58}},type:"binary-expr",locations:[{start:{line:181,column:18},end:{line:181,column:26}},{start:{line:181,column:30},end:{line:181,column:58}}],line:181},"24":{loc:{start:{line:183,column:4},end:{line:185,column:5}},type:"if",locations:[{start:{line:183,column:4},end:{line:185,column:5}},{start:{line:183,column:4},end:{line:185,column:5}}],line:183},"25":{loc:{start:{line:183,column:8},end:{line:183,column:67}},type:"binary-expr",locations:[{start:{line:183,column:9},end:{line:183,column:18}},{start:{line:183,column:22},end:{line:183,column:28}},{start:{line:183,column:32},end:{line:183,column:45}},{start:{line:183,column:50},end:{line:183,column:67}}],line:183},"26":{loc:{start:{line:187,column:4},end:{line:189,column:5}},type:"if",locations:[{start:{line:187,column:4},end:{line:189,column:5}},{start:{line:187,column:4},end:{line:189,column:5}}],line:187},"27":{loc:{start:{line:191,column:4},end:{line:193,column:5}},type:"if",locations:[{start:{line:191,column:4},end:{line:193,column:5}},{start:{line:191,column:4},end:{line:193,column:5}}],line:191},"28":{loc:{start:{line:195,column:4},end:{line:197,column:5}},type:"if",locations:[{start:{line:195,column:4},end:{line:197,column:5}},{start:{line:195,column:4},end:{line:197,column:5}}],line:195},"29":{loc:{start:{line:217,column:6},end:{line:228,column:7}},type:"if",locations:[{start:{line:217,column:6},end:{line:228,column:7}},{start:{line:217,column:6},end:{line:228,column:7}}],line:217},"30":{loc:{start:{line:218,column:8},end:{line:223,column:9}},type:"if",locations:[{start:{line:218,column:8},end:{line:223,column:9}},{start:{line:218,column:8},end:{line:223,column:9}}],line:218},"31":{loc:{start:{line:225,column:8},end:{line:227,column:9}},type:"if",locations:[{start:{line:225,column:8},end:{line:227,column:9}},{start:{line:225,column:8},end:{line:227,column:9}}],line:225},"32":{loc:{start:{line:231,column:23},end:{line:231,column:145}},type:"cond-expr",locations:[{start:{line:231,column:40},end:{line:231,column:103}},{start:{line:231,column:106},end:{line:231,column:145}}],line:231},"33":{loc:{start:{line:249,column:4},end:{line:261,column:5}},type:"if",locations:[{start:{line:249,column:4},end:{line:261,column:5}},{start:{line:249,column:4},end:{line:261,column:5}}],line:249},"34":{loc:{start:{line:249,column:8},end:{line:249,column:46}},type:"binary-expr",locations:[{start:{line:249,column:8},end:{line:249,column:26}},{start:{line:249,column:30},end:{line:249,column:46}}],line:249}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/PublicAPIRouter.js"],names:["public_html","path","resolve","__dirname","views","PublicAPIRouter","PromiseRouter","verifyEmail","req","username","token","rawToken","query","toString","appId","params","config","Config","get","invalidRequest","publicServerURL","missingPublicServerURL","invalidLink","userController","then","qs","stringify","Promise","status","location","verifyEmailSuccessURL","invalidVerificationLink","resendVerificationEmail","body","linkSendSuccessURL","linkSendFailURL","changePassword","reject","id","text","fs","readFile","err","data","replace","requestResetPassword","checkResetTokenValidity","applicationId","app","appName","choosePasswordURL","resetPassword","new_password","xhr","Parse","Error","USERNAME_MISSING","OTHER_CAUSE","PASSWORD_MISSING","updatePassword","success","result","error","response","encodedUsername","encodeURIComponent","passwordResetSuccessURL","invalidLinkURL","invalidVerificationLinkURL","message","setConfig","mountRoutes","route","expressRouter","router","express","Router","use","static"],mappings:"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",sourcesContent:["import PromiseRouter from '../PromiseRouter';\nimport Config from '../Config';\nimport express from 'express';\nimport path from 'path';\nimport fs from 'fs';\nimport qs from 'querystring';\nimport { Parse } from 'parse/node';\n\nconst public_html = path.resolve(__dirname, '../../public_html');\nconst views = path.resolve(__dirname, '../../views');\n\nexport class PublicAPIRouter extends PromiseRouter {\n  verifyEmail(req) {\n    const { username, token: rawToken } = req.query;\n    const token = rawToken && typeof rawToken !== 'string' ? rawToken.toString() : rawToken;\n\n    const appId = req.params.appId;\n    const config = Config.get(appId);\n\n    if (!config) {\n      this.invalidRequest();\n    }\n\n    if (!config.publicServerURL) {\n      return this.missingPublicServerURL();\n    }\n\n    if (!token || !username) {\n      return this.invalidLink(req);\n    }\n\n    const userController = config.userController;\n    return userController.verifyEmail(username, token).then(\n      () => {\n        const params = qs.stringify({ username });\n        return Promise.resolve({\n          status: 302,\n          location: `${config.verifyEmailSuccessURL}?${params}`,\n        });\n      },\n      () => {\n        return this.invalidVerificationLink(req);\n      }\n    );\n  }\n\n  resendVerificationEmail(req) {\n    const username = req.body.username;\n    const appId = req.params.appId;\n    const config = Config.get(appId);\n\n    if (!config) {\n      this.invalidRequest();\n    }\n\n    if (!config.publicServerURL) {\n      return this.missingPublicServerURL();\n    }\n\n    if (!username) {\n      return this.invalidLink(req);\n    }\n\n    const userController = config.userController;\n\n    return userController.resendVerificationEmail(username).then(\n      () => {\n        return Promise.resolve({\n          status: 302,\n          location: `${config.linkSendSuccessURL}`,\n        });\n      },\n      () => {\n        return Promise.resolve({\n          status: 302,\n          location: `${config.linkSendFailURL}`,\n        });\n      }\n    );\n  }\n\n  changePassword(req) {\n    return new Promise((resolve, reject) => {\n      const config = Config.get(req.query.id);\n\n      if (!config) {\n        this.invalidRequest();\n      }\n\n      if (!config.publicServerURL) {\n        return resolve({\n          status: 404,\n          text: 'Not found.',\n        });\n      }\n      // Should we keep the file in memory or leave like that?\n      fs.readFile(path.resolve(views, 'choose_password'), 'utf-8', (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        data = data.replace('PARSE_SERVER_URL', `'${config.publicServerURL}'`);\n        resolve({\n          text: data,\n        });\n      });\n    });\n  }\n\n  requestResetPassword(req) {\n    const config = req.config;\n\n    if (!config) {\n      this.invalidRequest();\n    }\n\n    if (!config.publicServerURL) {\n      return this.missingPublicServerURL();\n    }\n\n    const { username, token: rawToken } = req.query;\n    const token = rawToken && typeof rawToken !== 'string' ? rawToken.toString() : rawToken;\n\n    if (!username || !token) {\n      return this.invalidLink(req);\n    }\n\n    return config.userController.checkResetTokenValidity(username, token).then(\n      () => {\n        const params = qs.stringify({\n          token,\n          id: config.applicationId,\n          username,\n          app: config.appName,\n        });\n        return Promise.resolve({\n          status: 302,\n          location: `${config.choosePasswordURL}?${params}`,\n        });\n      },\n      () => {\n        return this.invalidLink(req);\n      }\n    );\n  }\n\n  resetPassword(req) {\n    const config = req.config;\n\n    if (!config) {\n      this.invalidRequest();\n    }\n\n    if (!config.publicServerURL) {\n      return this.missingPublicServerURL();\n    }\n\n    const { username, new_password, token: rawToken } = req.body;\n    const token = rawToken && typeof rawToken !== 'string' ? rawToken.toString() : rawToken;\n\n    if ((!username || !token || !new_password) && req.xhr === false) {\n      return this.invalidLink(req);\n    }\n\n    if (!username) {\n      throw new Parse.Error(Parse.Error.USERNAME_MISSING, 'Missing username');\n    }\n\n    if (!token) {\n      throw new Parse.Error(Parse.Error.OTHER_CAUSE, 'Missing token');\n    }\n\n    if (!new_password) {\n      throw new Parse.Error(Parse.Error.PASSWORD_MISSING, 'Missing password');\n    }\n\n    return config.userController\n      .updatePassword(username, token, new_password)\n      .then(\n        () => {\n          return Promise.resolve({\n            success: true,\n          });\n        },\n        err => {\n          return Promise.resolve({\n            success: false,\n            err,\n          });\n        }\n      )\n      .then(result => {\n        const params = qs.stringify({\n          username: username,\n          token: token,\n          id: config.applicationId,\n          error: result.err,\n          app: config.appName,\n        });\n\n        if (req.xhr) {\n          if (result.success) {\n            return Promise.resolve({\n              status: 200,\n              response: 'Password successfully reset',\n            });\n          }\n          if (result.err) {\n            throw new Parse.Error(Parse.Error.OTHER_CAUSE, `${result.err}`);\n          }\n        }\n\n        const encodedUsername = encodeURIComponent(username);\n        const location = result.success\n          ? `${config.passwordResetSuccessURL}?username=${encodedUsername}`\n          : `${config.choosePasswordURL}?${params}`;\n\n        return Promise.resolve({\n          status: 302,\n          location,\n        });\n      });\n  }\n\n  invalidLink(req) {\n    return Promise.resolve({\n      status: 302,\n      location: req.config.invalidLinkURL,\n    });\n  }\n\n  invalidVerificationLink(req) {\n    const config = req.config;\n    if (req.query.username && req.params.appId) {\n      const params = qs.stringify({\n        username: req.query.username,\n        appId: req.params.appId,\n      });\n      return Promise.resolve({\n        status: 302,\n        location: `${config.invalidVerificationLinkURL}?${params}`,\n      });\n    } else {\n      return this.invalidLink(req);\n    }\n  }\n\n  missingPublicServerURL() {\n    return Promise.resolve({\n      text: 'Not found.',\n      status: 404,\n    });\n  }\n\n  invalidRequest() {\n    const error = new Error();\n    error.status = 403;\n    error.message = 'unauthorized';\n    throw error;\n  }\n\n  setConfig(req) {\n    req.config = Config.get(req.params.appId);\n    return Promise.resolve();\n  }\n\n  mountRoutes() {\n    this.route(\n      'GET',\n      '/apps/:appId/verify_email',\n      req => {\n        this.setConfig(req);\n      },\n      req => {\n        return this.verifyEmail(req);\n      }\n    );\n\n    this.route(\n      'POST',\n      '/apps/:appId/resend_verification_email',\n      req => {\n        this.setConfig(req);\n      },\n      req => {\n        return this.resendVerificationEmail(req);\n      }\n    );\n\n    this.route('GET', '/apps/choose_password', req => {\n      return this.changePassword(req);\n    });\n\n    this.route(\n      'POST',\n      '/apps/:appId/request_password_reset',\n      req => {\n        this.setConfig(req);\n      },\n      req => {\n        return this.resetPassword(req);\n      }\n    );\n\n    this.route(\n      'GET',\n      '/apps/:appId/request_password_reset',\n      req => {\n        this.setConfig(req);\n      },\n      req => {\n        return this.requestResetPassword(req);\n      }\n    );\n  }\n\n  expressRouter() {\n    const router = express.Router();\n    router.use('/apps', express.static(public_html));\n    router.use('/', super.expressRouter());\n    return router;\n  }\n}\n\nexport default PublicAPIRouter;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"df8649934c0b901971ce6f63cf3a1491f7e56b73"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jst8d4y1=function(){return actualCoverage;};}return actualCoverage;}cov_1jst8d4y1();cov_1jst8d4y1().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1jst8d4y1().s[1]++;exports.default=exports.PublicAPIRouter=void 0;var _PromiseRouter=(cov_1jst8d4y1().s[2]++,_interopRequireDefault(require("../PromiseRouter")));var _Config=(cov_1jst8d4y1().s[3]++,_interopRequireDefault(require("../Config")));var _express=(cov_1jst8d4y1().s[4]++,_interopRequireDefault(require("express")));var _path=(cov_1jst8d4y1().s[5]++,_interopRequireDefault(require("path")));var _fs=(cov_1jst8d4y1().s[6]++,_interopRequireDefault(require("fs")));var _querystring=(cov_1jst8d4y1().s[7]++,_interopRequireDefault(require("querystring")));var _node=(cov_1jst8d4y1().s[8]++,require("parse/node"));function _interopRequireDefault(obj){cov_1jst8d4y1().f[0]++;cov_1jst8d4y1().s[9]++;return(cov_1jst8d4y1().b[1][0]++,obj)&&(cov_1jst8d4y1().b[1][1]++,obj.__esModule)?(cov_1jst8d4y1().b[0][0]++,obj):(cov_1jst8d4y1().b[0][1]++,{default:obj});}const public_html=(cov_1jst8d4y1().s[10]++,_path.default.resolve(__dirname,'../../public_html'));const views=(cov_1jst8d4y1().s[11]++,_path.default.resolve(__dirname,'../../views'));class PublicAPIRouter extends(_PromiseRouter.default){verifyEmail(req){cov_1jst8d4y1().f[1]++;const{username,token:rawToken}=(cov_1jst8d4y1().s[12]++,req.query);const token=(cov_1jst8d4y1().s[13]++,(cov_1jst8d4y1().b[3][0]++,rawToken)&&(cov_1jst8d4y1().b[3][1]++,typeof rawToken!=='string')?(cov_1jst8d4y1().b[2][0]++,rawToken.toString()):(cov_1jst8d4y1().b[2][1]++,rawToken));const appId=(cov_1jst8d4y1().s[14]++,req.params.appId);const config=(cov_1jst8d4y1().s[15]++,_Config.default.get(appId));cov_1jst8d4y1().s[16]++;if(!config){cov_1jst8d4y1().b[4][0]++;cov_1jst8d4y1().s[17]++;this.invalidRequest();}else{cov_1jst8d4y1().b[4][1]++;}cov_1jst8d4y1().s[18]++;if(!config.publicServerURL){cov_1jst8d4y1().b[5][0]++;cov_1jst8d4y1().s[19]++;return this.missingPublicServerURL();}else{cov_1jst8d4y1().b[5][1]++;}cov_1jst8d4y1().s[20]++;if((cov_1jst8d4y1().b[7][0]++,!token)||(cov_1jst8d4y1().b[7][1]++,!username)){cov_1jst8d4y1().b[6][0]++;cov_1jst8d4y1().s[21]++;return this.invalidLink(req);}else{cov_1jst8d4y1().b[6][1]++;}const userController=(cov_1jst8d4y1().s[22]++,config.userController);cov_1jst8d4y1().s[23]++;return userController.verifyEmail(username,token).then(()=>{cov_1jst8d4y1().f[2]++;const params=(cov_1jst8d4y1().s[24]++,_querystring.default.stringify({username}));cov_1jst8d4y1().s[25]++;return Promise.resolve({status:302,location:`${config.verifyEmailSuccessURL}?${params}`});},()=>{cov_1jst8d4y1().f[3]++;cov_1jst8d4y1().s[26]++;return this.invalidVerificationLink(req);});}resendVerificationEmail(req){cov_1jst8d4y1().f[4]++;const username=(cov_1jst8d4y1().s[27]++,req.body.username);const appId=(cov_1jst8d4y1().s[28]++,req.params.appId);const config=(cov_1jst8d4y1().s[29]++,_Config.default.get(appId));cov_1jst8d4y1().s[30]++;if(!config){cov_1jst8d4y1().b[8][0]++;cov_1jst8d4y1().s[31]++;this.invalidRequest();}else{cov_1jst8d4y1().b[8][1]++;}cov_1jst8d4y1().s[32]++;if(!config.publicServerURL){cov_1jst8d4y1().b[9][0]++;cov_1jst8d4y1().s[33]++;return this.missingPublicServerURL();}else{cov_1jst8d4y1().b[9][1]++;}cov_1jst8d4y1().s[34]++;if(!username){cov_1jst8d4y1().b[10][0]++;cov_1jst8d4y1().s[35]++;return this.invalidLink(req);}else{cov_1jst8d4y1().b[10][1]++;}const userController=(cov_1jst8d4y1().s[36]++,config.userController);cov_1jst8d4y1().s[37]++;return userController.resendVerificationEmail(username).then(()=>{cov_1jst8d4y1().f[5]++;cov_1jst8d4y1().s[38]++;return Promise.resolve({status:302,location:`${config.linkSendSuccessURL}`});},()=>{cov_1jst8d4y1().f[6]++;cov_1jst8d4y1().s[39]++;return Promise.resolve({status:302,location:`${config.linkSendFailURL}`});});}changePassword(req){cov_1jst8d4y1().f[7]++;cov_1jst8d4y1().s[40]++;return new Promise((resolve,reject)=>{cov_1jst8d4y1().f[8]++;const config=(cov_1jst8d4y1().s[41]++,_Config.default.get(req.query.id));cov_1jst8d4y1().s[42]++;if(!config){cov_1jst8d4y1().b[11][0]++;cov_1jst8d4y1().s[43]++;this.invalidRequest();}else{cov_1jst8d4y1().b[11][1]++;}cov_1jst8d4y1().s[44]++;if(!config.publicServerURL){cov_1jst8d4y1().b[12][0]++;cov_1jst8d4y1().s[45]++;return resolve({status:404,text:'Not found.'});}else{cov_1jst8d4y1().b[12][1]++;}// Should we keep the file in memory or leave like that?
cov_1jst8d4y1().s[46]++;_fs.default.readFile(_path.default.resolve(views,'choose_password'),'utf-8',(err,data)=>{cov_1jst8d4y1().f[9]++;cov_1jst8d4y1().s[47]++;if(err){cov_1jst8d4y1().b[13][0]++;cov_1jst8d4y1().s[48]++;return reject(err);}else{cov_1jst8d4y1().b[13][1]++;}cov_1jst8d4y1().s[49]++;data=data.replace('PARSE_SERVER_URL',`'${config.publicServerURL}'`);cov_1jst8d4y1().s[50]++;resolve({text:data});});});}requestResetPassword(req){cov_1jst8d4y1().f[10]++;const config=(cov_1jst8d4y1().s[51]++,req.config);cov_1jst8d4y1().s[52]++;if(!config){cov_1jst8d4y1().b[14][0]++;cov_1jst8d4y1().s[53]++;this.invalidRequest();}else{cov_1jst8d4y1().b[14][1]++;}cov_1jst8d4y1().s[54]++;if(!config.publicServerURL){cov_1jst8d4y1().b[15][0]++;cov_1jst8d4y1().s[55]++;return this.missingPublicServerURL();}else{cov_1jst8d4y1().b[15][1]++;}const{username,token:rawToken}=(cov_1jst8d4y1().s[56]++,req.query);const token=(cov_1jst8d4y1().s[57]++,(cov_1jst8d4y1().b[17][0]++,rawToken)&&(cov_1jst8d4y1().b[17][1]++,typeof rawToken!=='string')?(cov_1jst8d4y1().b[16][0]++,rawToken.toString()):(cov_1jst8d4y1().b[16][1]++,rawToken));cov_1jst8d4y1().s[58]++;if((cov_1jst8d4y1().b[19][0]++,!username)||(cov_1jst8d4y1().b[19][1]++,!token)){cov_1jst8d4y1().b[18][0]++;cov_1jst8d4y1().s[59]++;return this.invalidLink(req);}else{cov_1jst8d4y1().b[18][1]++;}cov_1jst8d4y1().s[60]++;return config.userController.checkResetTokenValidity(username,token).then(()=>{cov_1jst8d4y1().f[11]++;const params=(cov_1jst8d4y1().s[61]++,_querystring.default.stringify({token,id:config.applicationId,username,app:config.appName}));cov_1jst8d4y1().s[62]++;return Promise.resolve({status:302,location:`${config.choosePasswordURL}?${params}`});},()=>{cov_1jst8d4y1().f[12]++;cov_1jst8d4y1().s[63]++;return this.invalidLink(req);});}resetPassword(req){cov_1jst8d4y1().f[13]++;const config=(cov_1jst8d4y1().s[64]++,req.config);cov_1jst8d4y1().s[65]++;if(!config){cov_1jst8d4y1().b[20][0]++;cov_1jst8d4y1().s[66]++;this.invalidRequest();}else{cov_1jst8d4y1().b[20][1]++;}cov_1jst8d4y1().s[67]++;if(!config.publicServerURL){cov_1jst8d4y1().b[21][0]++;cov_1jst8d4y1().s[68]++;return this.missingPublicServerURL();}else{cov_1jst8d4y1().b[21][1]++;}const{username,new_password,token:rawToken}=(cov_1jst8d4y1().s[69]++,req.body);const token=(cov_1jst8d4y1().s[70]++,(cov_1jst8d4y1().b[23][0]++,rawToken)&&(cov_1jst8d4y1().b[23][1]++,typeof rawToken!=='string')?(cov_1jst8d4y1().b[22][0]++,rawToken.toString()):(cov_1jst8d4y1().b[22][1]++,rawToken));cov_1jst8d4y1().s[71]++;if(((cov_1jst8d4y1().b[25][0]++,!username)||(cov_1jst8d4y1().b[25][1]++,!token)||(cov_1jst8d4y1().b[25][2]++,!new_password))&&(cov_1jst8d4y1().b[25][3]++,req.xhr===false)){cov_1jst8d4y1().b[24][0]++;cov_1jst8d4y1().s[72]++;return this.invalidLink(req);}else{cov_1jst8d4y1().b[24][1]++;}cov_1jst8d4y1().s[73]++;if(!username){cov_1jst8d4y1().b[26][0]++;cov_1jst8d4y1().s[74]++;throw new _node.Parse.Error(_node.Parse.Error.USERNAME_MISSING,'Missing username');}else{cov_1jst8d4y1().b[26][1]++;}cov_1jst8d4y1().s[75]++;if(!token){cov_1jst8d4y1().b[27][0]++;cov_1jst8d4y1().s[76]++;throw new _node.Parse.Error(_node.Parse.Error.OTHER_CAUSE,'Missing token');}else{cov_1jst8d4y1().b[27][1]++;}cov_1jst8d4y1().s[77]++;if(!new_password){cov_1jst8d4y1().b[28][0]++;cov_1jst8d4y1().s[78]++;throw new _node.Parse.Error(_node.Parse.Error.PASSWORD_MISSING,'Missing password');}else{cov_1jst8d4y1().b[28][1]++;}cov_1jst8d4y1().s[79]++;return config.userController.updatePassword(username,token,new_password).then(()=>{cov_1jst8d4y1().f[14]++;cov_1jst8d4y1().s[80]++;return Promise.resolve({success:true});},err=>{cov_1jst8d4y1().f[15]++;cov_1jst8d4y1().s[81]++;return Promise.resolve({success:false,err});}).then(result=>{cov_1jst8d4y1().f[16]++;const params=(cov_1jst8d4y1().s[82]++,_querystring.default.stringify({username:username,token:token,id:config.applicationId,error:result.err,app:config.appName}));cov_1jst8d4y1().s[83]++;if(req.xhr){cov_1jst8d4y1().b[29][0]++;cov_1jst8d4y1().s[84]++;if(result.success){cov_1jst8d4y1().b[30][0]++;cov_1jst8d4y1().s[85]++;return Promise.resolve({status:200,response:'Password successfully reset'});}else{cov_1jst8d4y1().b[30][1]++;}cov_1jst8d4y1().s[86]++;if(result.err){cov_1jst8d4y1().b[31][0]++;cov_1jst8d4y1().s[87]++;throw new _node.Parse.Error(_node.Parse.Error.OTHER_CAUSE,`${result.err}`);}else{cov_1jst8d4y1().b[31][1]++;}}else{cov_1jst8d4y1().b[29][1]++;}const encodedUsername=(cov_1jst8d4y1().s[88]++,encodeURIComponent(username));const location=(cov_1jst8d4y1().s[89]++,result.success?(cov_1jst8d4y1().b[32][0]++,`${config.passwordResetSuccessURL}?username=${encodedUsername}`):(cov_1jst8d4y1().b[32][1]++,`${config.choosePasswordURL}?${params}`));cov_1jst8d4y1().s[90]++;return Promise.resolve({status:302,location});});}invalidLink(req){cov_1jst8d4y1().f[17]++;cov_1jst8d4y1().s[91]++;return Promise.resolve({status:302,location:req.config.invalidLinkURL});}invalidVerificationLink(req){cov_1jst8d4y1().f[18]++;const config=(cov_1jst8d4y1().s[92]++,req.config);cov_1jst8d4y1().s[93]++;if((cov_1jst8d4y1().b[34][0]++,req.query.username)&&(cov_1jst8d4y1().b[34][1]++,req.params.appId)){cov_1jst8d4y1().b[33][0]++;const params=(cov_1jst8d4y1().s[94]++,_querystring.default.stringify({username:req.query.username,appId:req.params.appId}));cov_1jst8d4y1().s[95]++;return Promise.resolve({status:302,location:`${config.invalidVerificationLinkURL}?${params}`});}else{cov_1jst8d4y1().b[33][1]++;cov_1jst8d4y1().s[96]++;return this.invalidLink(req);}}missingPublicServerURL(){cov_1jst8d4y1().f[19]++;cov_1jst8d4y1().s[97]++;return Promise.resolve({text:'Not found.',status:404});}invalidRequest(){cov_1jst8d4y1().f[20]++;const error=(cov_1jst8d4y1().s[98]++,new Error());cov_1jst8d4y1().s[99]++;error.status=403;cov_1jst8d4y1().s[100]++;error.message='unauthorized';cov_1jst8d4y1().s[101]++;throw error;}setConfig(req){cov_1jst8d4y1().f[21]++;cov_1jst8d4y1().s[102]++;req.config=_Config.default.get(req.params.appId);cov_1jst8d4y1().s[103]++;return Promise.resolve();}mountRoutes(){cov_1jst8d4y1().f[22]++;cov_1jst8d4y1().s[104]++;this.route('GET','/apps/:appId/verify_email',req=>{cov_1jst8d4y1().f[23]++;cov_1jst8d4y1().s[105]++;this.setConfig(req);},req=>{cov_1jst8d4y1().f[24]++;cov_1jst8d4y1().s[106]++;return this.verifyEmail(req);});cov_1jst8d4y1().s[107]++;this.route('POST','/apps/:appId/resend_verification_email',req=>{cov_1jst8d4y1().f[25]++;cov_1jst8d4y1().s[108]++;this.setConfig(req);},req=>{cov_1jst8d4y1().f[26]++;cov_1jst8d4y1().s[109]++;return this.resendVerificationEmail(req);});cov_1jst8d4y1().s[110]++;this.route('GET','/apps/choose_password',req=>{cov_1jst8d4y1().f[27]++;cov_1jst8d4y1().s[111]++;return this.changePassword(req);});cov_1jst8d4y1().s[112]++;this.route('POST','/apps/:appId/request_password_reset',req=>{cov_1jst8d4y1().f[28]++;cov_1jst8d4y1().s[113]++;this.setConfig(req);},req=>{cov_1jst8d4y1().f[29]++;cov_1jst8d4y1().s[114]++;return this.resetPassword(req);});cov_1jst8d4y1().s[115]++;this.route('GET','/apps/:appId/request_password_reset',req=>{cov_1jst8d4y1().f[30]++;cov_1jst8d4y1().s[116]++;this.setConfig(req);},req=>{cov_1jst8d4y1().f[31]++;cov_1jst8d4y1().s[117]++;return this.requestResetPassword(req);});}expressRouter(){cov_1jst8d4y1().f[32]++;const router=(cov_1jst8d4y1().s[118]++,_express.default.Router());cov_1jst8d4y1().s[119]++;router.use('/apps',_express.default.static(public_html));cov_1jst8d4y1().s[120]++;router.use('/',super.expressRouter());cov_1jst8d4y1().s[121]++;return router;}}cov_1jst8d4y1().s[122]++;exports.PublicAPIRouter=PublicAPIRouter;var _default=(cov_1jst8d4y1().s[123]++,PublicAPIRouter);cov_1jst8d4y1().s[124]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,