"use strict";// Helper functions for accessing the Facebook Graph API.
function cov_2rmrvufug5(){var path="/parse-server/lib/Adapters/Auth/facebook.js";var hash="17f5c15b98de741bae44fdc0b817f49588ba50b4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/facebook.js",statementMap:{"0":{start:{line:4,column:14},end:{line:4,column:41}},"1":{start:{line:6,column:15},end:{line:6,column:32}},"2":{start:{line:8,column:19},end:{line:8,column:38}},"3":{start:{line:10,column:13},end:{line:10,column:28}},"4":{start:{line:12,column:12},end:{line:12,column:35}},"5":{start:{line:14,column:21},end:{line:14,column:46}},"6":{start:{line:16,column:21},end:{line:16,column:43}},"7":{start:{line:19,column:20},end:{line:19,column:37}},"8":{start:{line:21,column:2},end:{line:23,column:3}},"9":{start:{line:22,column:4},end:{line:22,column:14}},"10":{start:{line:25,column:26},end:{line:25,column:108}},"11":{start:{line:26,column:2},end:{line:26,column:47}},"12":{start:{line:30,column:2},end:{line:36,column:5}},"13":{start:{line:31,column:4},end:{line:33,column:5}},"14":{start:{line:32,column:6},end:{line:32,column:13}},"15":{start:{line:35,column:4},end:{line:35,column:99}},"16":{start:{line:40,column:21},end:{line:40,column:42}},"17":{start:{line:42,column:2},end:{line:44,column:3}},"18":{start:{line:43,column:4},end:{line:43,column:29}},"19":{start:{line:46,column:2},end:{line:48,column:3}},"20":{start:{line:47,column:4},end:{line:47,column:92}},"21":{start:{line:50,column:2},end:{line:56,column:5}},"22":{start:{line:51,column:4},end:{line:53,column:5}},"23":{start:{line:52,column:6},end:{line:52,column:13}},"24":{start:{line:55,column:4},end:{line:55,column:99}},"25":{start:{line:59,column:30},end:{line:76,column:1}},"26":{start:{line:60,column:17},end:{line:65,column:4}},"27":{start:{line:66,column:37},end:{line:66,column:73}},"28":{start:{line:69,column:2},end:{line:73,column:3}},"29":{start:{line:70,column:4},end:{line:70,column:50}},"30":{start:{line:72,column:4},end:{line:72,column:108}},"31":{start:{line:75,column:2},end:{line:75,column:13}},"32":{start:{line:78,column:27},end:{line:88,column:1}},"33":{start:{line:79,column:23},end:{line:81,column:4}},"34":{start:{line:83,column:2},end:{line:85,column:3}},"35":{start:{line:84,column:4},end:{line:84,column:97}},"36":{start:{line:87,column:2},end:{line:87,column:29}},"37":{start:{line:90,column:22},end:{line:133,column:1}},"38":{start:{line:98,column:2},end:{line:100,column:3}},"39":{start:{line:99,column:4},end:{line:99,column:94}},"40":{start:{line:105,column:6},end:{line:105,column:31}},"41":{start:{line:106,column:25},end:{line:106,column:32}},"42":{start:{line:108,column:2},end:{line:108,column:46}},"43":{start:{line:109,column:2},end:{line:109,column:41}},"44":{start:{line:110,column:22},end:{line:110,column:86}},"45":{start:{line:111,column:21},end:{line:111,column:70}},"46":{start:{line:113,column:2},end:{line:122,column:3}},"47":{start:{line:114,column:4},end:{line:118,column:7}},"48":{start:{line:120,column:20},end:{line:120,column:37}},"49":{start:{line:121,column:4},end:{line:121,column:70}},"50":{start:{line:124,column:2},end:{line:126,column:3}},"51":{start:{line:125,column:4},end:{line:125,column:159}},"52":{start:{line:128,column:2},end:{line:130,column:3}},"53":{start:{line:129,column:4},end:{line:129,column:95}},"54":{start:{line:132,column:2},end:{line:132,column:19}},"55":{start:{line:137,column:2},end:{line:141,column:3}},"56":{start:{line:138,column:4},end:{line:138,column:44}},"57":{start:{line:140,column:4},end:{line:140,column:49}},"58":{start:{line:146,column:2},end:{line:150,column:3}},"59":{start:{line:147,column:4},end:{line:147,column:29}},"60":{start:{line:149,column:4},end:{line:149,column:57}},"61":{start:{line:155,column:2},end:{line:155,column:64}},"62":{start:{line:158,column:0},end:{line:161,column:2}}},fnMap:{"0":{name:"getAppSecretPath",decl:{start:{line:18,column:9},end:{line:18,column:25}},loc:{start:{line:18,column:50},end:{line:27,column:1}},line:18},"1":{name:"validateGraphToken",decl:{start:{line:29,column:9},end:{line:29,column:27}},loc:{start:{line:29,column:47},end:{line:37,column:1}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:119},end:{line:30,column:120}},loc:{start:{line:30,column:127},end:{line:36,column:3}},line:30},"3":{name:"validateGraphAppId",decl:{start:{line:39,column:9},end:{line:39,column:27}},loc:{start:{line:39,column:55},end:{line:57,column:1}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:101},end:{line:50,column:102}},loc:{start:{line:50,column:109},end:{line:56,column:3}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:30},end:{line:59,column:31}},loc:{start:{line:59,column:77},end:{line:76,column:1}},line:59},"6":{name:"(anonymous_6)",decl:{start:{line:78,column:27},end:{line:78,column:28}},loc:{start:{line:78,column:36},end:{line:88,column:1}},line:78},"7":{name:"(anonymous_7)",decl:{start:{line:90,column:22},end:{line:90,column:23}},loc:{start:{line:97,column:6},end:{line:133,column:1}},line:97},"8":{name:"validateAuthData",decl:{start:{line:136,column:9},end:{line:136,column:25}},loc:{start:{line:136,column:45},end:{line:142,column:1}},line:136},"9":{name:"validateAppId",decl:{start:{line:145,column:9},end:{line:145,column:22}},loc:{start:{line:145,column:50},end:{line:151,column:1}},line:145},"10":{name:"graphRequest",decl:{start:{line:154,column:9},end:{line:154,column:21}},loc:{start:{line:154,column:28},end:{line:156,column:1}},line:154}},branchMap:{"0":{loc:{start:{line:18,column:36},end:{line:18,column:48}},type:"default-arg",locations:[{start:{line:18,column:46},end:{line:18,column:48}}],line:18},"1":{loc:{start:{line:21,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:23,column:3}},{start:{line:21,column:2},end:{line:23,column:3}}],line:21},"2":{loc:{start:{line:31,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:31,column:4},end:{line:33,column:5}},{start:{line:31,column:4},end:{line:33,column:5}}],line:31},"3":{loc:{start:{line:31,column:8},end:{line:31,column:87}},type:"binary-expr",locations:[{start:{line:31,column:8},end:{line:31,column:12}},{start:{line:31,column:16},end:{line:31,column:38}},{start:{line:31,column:42},end:{line:31,column:61}},{start:{line:31,column:65},end:{line:31,column:87}}],line:31},"4":{loc:{start:{line:42,column:2},end:{line:44,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:44,column:3}},{start:{line:42,column:2},end:{line:44,column:3}}],line:42},"5":{loc:{start:{line:42,column:6},end:{line:42,column:52}},type:"binary-expr",locations:[{start:{line:42,column:6},end:{line:42,column:25}},{start:{line:42,column:29},end:{line:42,column:52}}],line:42},"6":{loc:{start:{line:46,column:2},end:{line:48,column:3}},type:"if",locations:[{start:{line:46,column:2},end:{line:48,column:3}},{start:{line:46,column:2},end:{line:48,column:3}}],line:46},"7":{loc:{start:{line:51,column:4},end:{line:53,column:5}},type:"if",locations:[{start:{line:51,column:4},end:{line:53,column:5}},{start:{line:51,column:4},end:{line:53,column:5}}],line:51},"8":{loc:{start:{line:51,column:8},end:{line:51,column:45}},type:"binary-expr",locations:[{start:{line:51,column:8},end:{line:51,column:12}},{start:{line:51,column:16},end:{line:51,column:45}}],line:51},"9":{loc:{start:{line:83,column:2},end:{line:85,column:3}},type:"if",locations:[{start:{line:83,column:2},end:{line:85,column:3}},{start:{line:83,column:2},end:{line:85,column:3}}],line:83},"10":{loc:{start:{line:98,column:2},end:{line:100,column:3}},type:"if",locations:[{start:{line:98,column:2},end:{line:100,column:3}},{start:{line:98,column:2},end:{line:100,column:3}}],line:98},"11":{loc:{start:{line:108,column:16},end:{line:108,column:45}},type:"binary-expr",locations:[{start:{line:108,column:16},end:{line:108,column:27}},{start:{line:108,column:31},end:{line:108,column:45}}],line:108},"12":{loc:{start:{line:109,column:20},end:{line:109,column:40}},type:"binary-expr",locations:[{start:{line:109,column:20},end:{line:109,column:35}},{start:{line:109,column:39},end:{line:109,column:40}}],line:109},"13":{loc:{start:{line:111,column:21},end:{line:111,column:70}},type:"binary-expr",locations:[{start:{line:111,column:21},end:{line:111,column:42}},{start:{line:111,column:46},end:{line:111,column:70}}],line:111},"14":{loc:{start:{line:124,column:2},end:{line:126,column:3}},type:"if",locations:[{start:{line:124,column:2},end:{line:126,column:3}},{start:{line:124,column:2},end:{line:126,column:3}}],line:124},"15":{loc:{start:{line:128,column:2},end:{line:130,column:3}},type:"if",locations:[{start:{line:128,column:2},end:{line:130,column:3}},{start:{line:128,column:2},end:{line:130,column:3}}],line:128},"16":{loc:{start:{line:137,column:2},end:{line:141,column:3}},type:"if",locations:[{start:{line:137,column:2},end:{line:141,column:3}},{start:{line:137,column:2},end:{line:141,column:3}}],line:137},"17":{loc:{start:{line:146,column:2},end:{line:150,column:3}},type:"if",locations:[{start:{line:146,column:2},end:{line:150,column:3}},{start:{line:146,column:2},end:{line:150,column:3}}],line:146}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/facebook.js"],names:["Parse","require","crypto","jwksClient","util","jwt","httpsRequest","TOKEN_ISSUER","getAppSecretPath","authData","options","appSecret","appsecret_proof","createHmac","update","access_token","digest","validateGraphToken","graphRequest","then","data","id","process","env","TESTING","Error","OBJECT_NOT_FOUND","validateGraphAppId","appIds","Promise","resolve","length","indexOf","getFacebookKeyByKeyId","keyId","cacheMaxEntries","cacheMaxAge","client","jwksUri","cache","asyncGetSigningKeyFunction","promisify","getSigningKey","key","error","getHeaderFromToken","token","decodedToken","decode","complete","header","verifyIdToken","clientId","kid","alg","algorithm","ONE_HOUR_IN_MS","jwtClaims","facebookKey","signingKey","publicKey","rsaPublicKey","verify","algorithms","audience","exception","message","iss","sub","validateAuthData","validateAppId","path","get","module","exports"],mappings:"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",sourcesContent:["// Helper functions for accessing the Facebook Graph API.\nconst Parse = require('parse/node').Parse;\nconst crypto = require('crypto');\nconst jwksClient = require('jwks-rsa');\nconst util = require('util');\nconst jwt = require('jsonwebtoken');\nconst httpsRequest = require('./httpsRequest');\n\nconst TOKEN_ISSUER = 'https://facebook.com';\n\nfunction getAppSecretPath(authData, options = {}) {\n  const appSecret = options.appSecret;\n  if (!appSecret) {\n    return '';\n  }\n  const appsecret_proof = crypto\n    .createHmac('sha256', appSecret)\n    .update(authData.access_token)\n    .digest('hex');\n\n  return `&appsecret_proof=${appsecret_proof}`;\n}\n\nfunction validateGraphToken(authData, options) {\n  return graphRequest(\n    'me?fields=id&access_token=' + authData.access_token + getAppSecretPath(authData, options)\n  ).then(data => {\n    if ((data && data.id == authData.id) || (process.env.TESTING && authData.id === 'test')) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is invalid for this user.');\n  });\n}\n\nfunction validateGraphAppId(appIds, authData, options) {\n  var access_token = authData.access_token;\n  if (process.env.TESTING && access_token === 'test') {\n    return Promise.resolve();\n  }\n  if (!appIds.length) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is not configured.');\n  }\n  return graphRequest(\n    'app?access_token=' + access_token + getAppSecretPath(authData, options)\n  ).then(data => {\n    if (data && appIds.indexOf(data.id) != -1) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is invalid for this user.');\n  });\n}\n\nconst getFacebookKeyByKeyId = async (keyId, cacheMaxEntries, cacheMaxAge) => {\n  const client = jwksClient({\n    jwksUri: `${TOKEN_ISSUER}/.well-known/oauth/openid/jwks/`,\n    cache: true,\n    cacheMaxEntries,\n    cacheMaxAge,\n  });\n\n  const asyncGetSigningKeyFunction = util.promisify(client.getSigningKey);\n\n  let key;\n  try {\n    key = await asyncGetSigningKeyFunction(keyId);\n  } catch (error) {\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      `Unable to find matching key for Key ID: ${keyId}`\n    );\n  }\n  return key;\n};\n\nconst getHeaderFromToken = token => {\n  const decodedToken = jwt.decode(token, { complete: true });\n  if (!decodedToken) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'provided token does not decode as JWT');\n  }\n\n  return decodedToken.header;\n};\n\nconst verifyIdToken = async ({ token, id }, { clientId, cacheMaxEntries, cacheMaxAge }) => {\n  if (!token) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'id token is invalid for this user.');\n  }\n\n  const { kid: keyId, alg: algorithm } = getHeaderFromToken(token);\n  const ONE_HOUR_IN_MS = 3600000;\n  let jwtClaims;\n\n  cacheMaxAge = cacheMaxAge || ONE_HOUR_IN_MS;\n  cacheMaxEntries = cacheMaxEntries || 5;\n\n  const facebookKey = await getFacebookKeyByKeyId(keyId, cacheMaxEntries, cacheMaxAge);\n  const signingKey = facebookKey.publicKey || facebookKey.rsaPublicKey;\n\n  try {\n    jwtClaims = jwt.verify(token, signingKey, {\n      algorithms: algorithm,\n      // the audience can be checked against a string, a regular expression or a list of strings and/or regular expressions.\n      audience: clientId,\n    });\n  } catch (exception) {\n    const message = exception.message;\n\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `${message}`);\n  }\n\n  if (jwtClaims.iss !== TOKEN_ISSUER) {\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      `id token not issued by correct OpenID provider - expected: ${TOKEN_ISSUER} | from: ${jwtClaims.iss}`\n    );\n  }\n\n  if (jwtClaims.sub !== id) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'auth data is invalid for this user.');\n  }\n  return jwtClaims;\n};\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData, options) {\n  if (authData.token) {\n    return verifyIdToken(authData, options);\n  } else {\n    return validateGraphToken(authData, options);\n  }\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId(appIds, authData, options) {\n  if (authData.token) {\n    return Promise.resolve();\n  } else {\n    return validateGraphAppId(appIds, authData, options);\n  }\n}\n\n// A promisey wrapper for FB graph requests.\nfunction graphRequest(path) {\n  return httpsRequest.get('https://graph.facebook.com/' + path);\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"17f5c15b98de741bae44fdc0b817f49588ba50b4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2rmrvufug5=function(){return actualCoverage;};}return actualCoverage;}cov_2rmrvufug5();const Parse=(cov_2rmrvufug5().s[0]++,require('parse/node').Parse);const crypto=(cov_2rmrvufug5().s[1]++,require('crypto'));const jwksClient=(cov_2rmrvufug5().s[2]++,require('jwks-rsa'));const util=(cov_2rmrvufug5().s[3]++,require('util'));const jwt=(cov_2rmrvufug5().s[4]++,require('jsonwebtoken'));const httpsRequest=(cov_2rmrvufug5().s[5]++,require('./httpsRequest'));const TOKEN_ISSUER=(cov_2rmrvufug5().s[6]++,'https://facebook.com');function getAppSecretPath(authData,options=(cov_2rmrvufug5().b[0][0]++,{})){cov_2rmrvufug5().f[0]++;const appSecret=(cov_2rmrvufug5().s[7]++,options.appSecret);cov_2rmrvufug5().s[8]++;if(!appSecret){cov_2rmrvufug5().b[1][0]++;cov_2rmrvufug5().s[9]++;return'';}else{cov_2rmrvufug5().b[1][1]++;}const appsecret_proof=(cov_2rmrvufug5().s[10]++,crypto.createHmac('sha256',appSecret).update(authData.access_token).digest('hex'));cov_2rmrvufug5().s[11]++;return`&appsecret_proof=${appsecret_proof}`;}function validateGraphToken(authData,options){cov_2rmrvufug5().f[1]++;cov_2rmrvufug5().s[12]++;return graphRequest('me?fields=id&access_token='+authData.access_token+getAppSecretPath(authData,options)).then(data=>{cov_2rmrvufug5().f[2]++;cov_2rmrvufug5().s[13]++;if((cov_2rmrvufug5().b[3][0]++,data)&&(cov_2rmrvufug5().b[3][1]++,data.id==authData.id)||(cov_2rmrvufug5().b[3][2]++,process.env.TESTING)&&(cov_2rmrvufug5().b[3][3]++,authData.id==='test')){cov_2rmrvufug5().b[2][0]++;cov_2rmrvufug5().s[14]++;return;}else{cov_2rmrvufug5().b[2][1]++;}cov_2rmrvufug5().s[15]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Facebook auth is invalid for this user.');});}function validateGraphAppId(appIds,authData,options){cov_2rmrvufug5().f[3]++;var access_token=(cov_2rmrvufug5().s[16]++,authData.access_token);cov_2rmrvufug5().s[17]++;if((cov_2rmrvufug5().b[5][0]++,process.env.TESTING)&&(cov_2rmrvufug5().b[5][1]++,access_token==='test')){cov_2rmrvufug5().b[4][0]++;cov_2rmrvufug5().s[18]++;return Promise.resolve();}else{cov_2rmrvufug5().b[4][1]++;}cov_2rmrvufug5().s[19]++;if(!appIds.length){cov_2rmrvufug5().b[6][0]++;cov_2rmrvufug5().s[20]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Facebook auth is not configured.');}else{cov_2rmrvufug5().b[6][1]++;}cov_2rmrvufug5().s[21]++;return graphRequest('app?access_token='+access_token+getAppSecretPath(authData,options)).then(data=>{cov_2rmrvufug5().f[4]++;cov_2rmrvufug5().s[22]++;if((cov_2rmrvufug5().b[8][0]++,data)&&(cov_2rmrvufug5().b[8][1]++,appIds.indexOf(data.id)!=-1)){cov_2rmrvufug5().b[7][0]++;cov_2rmrvufug5().s[23]++;return;}else{cov_2rmrvufug5().b[7][1]++;}cov_2rmrvufug5().s[24]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Facebook auth is invalid for this user.');});}cov_2rmrvufug5().s[25]++;const getFacebookKeyByKeyId=async(keyId,cacheMaxEntries,cacheMaxAge)=>{cov_2rmrvufug5().f[5]++;const client=(cov_2rmrvufug5().s[26]++,jwksClient({jwksUri:`${TOKEN_ISSUER}/.well-known/oauth/openid/jwks/`,cache:true,cacheMaxEntries,cacheMaxAge}));const asyncGetSigningKeyFunction=(cov_2rmrvufug5().s[27]++,util.promisify(client.getSigningKey));let key;cov_2rmrvufug5().s[28]++;try{cov_2rmrvufug5().s[29]++;key=await asyncGetSigningKeyFunction(keyId);}catch(error){cov_2rmrvufug5().s[30]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`Unable to find matching key for Key ID: ${keyId}`);}cov_2rmrvufug5().s[31]++;return key;};cov_2rmrvufug5().s[32]++;const getHeaderFromToken=token=>{cov_2rmrvufug5().f[6]++;const decodedToken=(cov_2rmrvufug5().s[33]++,jwt.decode(token,{complete:true}));cov_2rmrvufug5().s[34]++;if(!decodedToken){cov_2rmrvufug5().b[9][0]++;cov_2rmrvufug5().s[35]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'provided token does not decode as JWT');}else{cov_2rmrvufug5().b[9][1]++;}cov_2rmrvufug5().s[36]++;return decodedToken.header;};cov_2rmrvufug5().s[37]++;const verifyIdToken=async({token,id},{clientId,cacheMaxEntries,cacheMaxAge})=>{cov_2rmrvufug5().f[7]++;cov_2rmrvufug5().s[38]++;if(!token){cov_2rmrvufug5().b[10][0]++;cov_2rmrvufug5().s[39]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'id token is invalid for this user.');}else{cov_2rmrvufug5().b[10][1]++;}const{kid:keyId,alg:algorithm}=(cov_2rmrvufug5().s[40]++,getHeaderFromToken(token));const ONE_HOUR_IN_MS=(cov_2rmrvufug5().s[41]++,3600000);let jwtClaims;cov_2rmrvufug5().s[42]++;cacheMaxAge=(cov_2rmrvufug5().b[11][0]++,cacheMaxAge)||(cov_2rmrvufug5().b[11][1]++,ONE_HOUR_IN_MS);cov_2rmrvufug5().s[43]++;cacheMaxEntries=(cov_2rmrvufug5().b[12][0]++,cacheMaxEntries)||(cov_2rmrvufug5().b[12][1]++,5);const facebookKey=(cov_2rmrvufug5().s[44]++,await getFacebookKeyByKeyId(keyId,cacheMaxEntries,cacheMaxAge));const signingKey=(cov_2rmrvufug5().s[45]++,(cov_2rmrvufug5().b[13][0]++,facebookKey.publicKey)||(cov_2rmrvufug5().b[13][1]++,facebookKey.rsaPublicKey));cov_2rmrvufug5().s[46]++;try{cov_2rmrvufug5().s[47]++;jwtClaims=jwt.verify(token,signingKey,{algorithms:algorithm,// the audience can be checked against a string, a regular expression or a list of strings and/or regular expressions.
audience:clientId});}catch(exception){const message=(cov_2rmrvufug5().s[48]++,exception.message);cov_2rmrvufug5().s[49]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`${message}`);}cov_2rmrvufug5().s[50]++;if(jwtClaims.iss!==TOKEN_ISSUER){cov_2rmrvufug5().b[14][0]++;cov_2rmrvufug5().s[51]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`id token not issued by correct OpenID provider - expected: ${TOKEN_ISSUER} | from: ${jwtClaims.iss}`);}else{cov_2rmrvufug5().b[14][1]++;}cov_2rmrvufug5().s[52]++;if(jwtClaims.sub!==id){cov_2rmrvufug5().b[15][0]++;cov_2rmrvufug5().s[53]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'auth data is invalid for this user.');}else{cov_2rmrvufug5().b[15][1]++;}cov_2rmrvufug5().s[54]++;return jwtClaims;};// Returns a promise that fulfills iff this user id is valid.
function validateAuthData(authData,options){cov_2rmrvufug5().f[8]++;cov_2rmrvufug5().s[55]++;if(authData.token){cov_2rmrvufug5().b[16][0]++;cov_2rmrvufug5().s[56]++;return verifyIdToken(authData,options);}else{cov_2rmrvufug5().b[16][1]++;cov_2rmrvufug5().s[57]++;return validateGraphToken(authData,options);}}// Returns a promise that fulfills iff this app id is valid.
function validateAppId(appIds,authData,options){cov_2rmrvufug5().f[9]++;cov_2rmrvufug5().s[58]++;if(authData.token){cov_2rmrvufug5().b[17][0]++;cov_2rmrvufug5().s[59]++;return Promise.resolve();}else{cov_2rmrvufug5().b[17][1]++;cov_2rmrvufug5().s[60]++;return validateGraphAppId(appIds,authData,options);}}// A promisey wrapper for FB graph requests.
function graphRequest(path){cov_2rmrvufug5().f[10]++;cov_2rmrvufug5().s[61]++;return httpsRequest.get('https://graph.facebook.com/'+path);}cov_2rmrvufug5().s[62]++;module.exports={validateAppId:validateAppId,validateAuthData:validateAuthData};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL2ZhY2Vib29rLmpzIl0sIm5hbWVzIjpbIlBhcnNlIiwicmVxdWlyZSIsImNyeXB0byIsImp3a3NDbGllbnQiLCJ1dGlsIiwiand0IiwiaHR0cHNSZXF1ZXN0IiwiVE9LRU5fSVNTVUVSIiwib3B0aW9ucyIsImFwcFNlY3JldCIsImFwcHNlY3JldF9wcm9vZiIsImF1dGhEYXRhIiwiZ2V0QXBwU2VjcmV0UGF0aCIsImRhdGEiLCJwcm9jZXNzIiwiYWNjZXNzX3Rva2VuIiwiUHJvbWlzZSIsImFwcElkcyIsImdldEZhY2Vib29rS2V5QnlLZXlJZCIsImNsaWVudCIsImp3a3NVcmkiLCJjYWNoZSIsImNhY2hlTWF4QWdlIiwiYXN5bmNHZXRTaWduaW5nS2V5RnVuY3Rpb24iLCJrZXkiLCJrZXlJZCIsImdldEhlYWRlckZyb21Ub2tlbiIsInRva2VuIiwiZGVjb2RlZFRva2VuIiwiY29tcGxldGUiLCJ2ZXJpZnlJZFRva2VuIiwiaWQiLCJraWQiLCJhbGciLCJhbGdvcml0aG0iLCJPTkVfSE9VUl9JTl9NUyIsImNhY2hlTWF4RW50cmllcyIsImZhY2Vib29rS2V5Iiwic2lnbmluZ0tleSIsImp3dENsYWltcyIsImFsZ29yaXRobXMiLCJhdWRpZW5jZSIsImNsaWVudElkIiwibWVzc2FnZSIsImV4Y2VwdGlvbiIsImlzcyIsInZhbGlkYXRlR3JhcGhUb2tlbiIsInZhbGlkYXRlR3JhcGhBcHBJZCIsIm1vZHVsZSIsInZhbGlkYXRlQXBwSWQiLCJ2YWxpZGF0ZUF1dGhEYXRhIl0sIm1hcHBpbmdzIjoiYUFBQTswem5CQVFNTzsyRkFQTixLQUFNUCxDQUFBQSxLQUFLLDBCQUFHQyxPQUFPLENBQVBBLFlBQU8sQ0FBUEEsQ0FBZCxLQUFXLENBQVgsQ0FDQSxLQUFNQyxDQUFBQSxNQUFNLDBCQUFHRCxPQUFPLENBQXRCLFFBQXNCLENBQVYsQ0FBWixDQUNBLEtBQU1FLENBQUFBLFVBQVUsMEJBQUdGLE9BQU8sQ0FBMUIs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LE1BQU8rQixDQUFBQSxrQkFBa0IsQ0FBQSxNQUFBLENBQUEsUUFBQSxDQUF6QixPQUF5QixDQUF6QixDQUNELEMsQ0FHSDtBQUNBLFFBQUEsQ0FBQSxZQUFBLENBQUEsSUFBQSxDQUE0QixtREFDMUIsTUFBT3pDLENBQUFBLFlBQVksQ0FBWkEsR0FBQUEsQ0FBaUIsOEJBQXhCLElBQU9BLENBQVAsQ0FDRCxDLHlCQUVEMEMsTUFBTSxDQUFOQSxPQUFBQSxDQUFpQixDQUNmQyxhQUFhLENBREUsYUFBQSxDQUVmQyxnQkFBZ0IsQ0FBRUEsZ0JBRkgsQ0FBakJGLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBIZWxwZXIgZnVuY3Rpb25zIGZvciBhY2Nlc3NpbmcgdGhlIEZhY2Vib29rIEdyYXBoIEFQSS5cbmNvbnN0IFBhcnNlID0gcmVxdWlyZSgncGFyc2Uvbm9kZScpLlBhcnNlO1xuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5jb25zdCBqd2tzQ2xpZW50ID0gcmVxdWlyZSgnandrcy1yc2EnKTtcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcbmNvbnN0IGh0dHBzUmVxdWVzdCA9IHJlcXVpcmUoJy4vaHR0cHNSZXF1ZXN0Jyk7XG5cbmNvbnN0IFRPS0VOX0lTU1VFUiA9ICdodHRwczovL2ZhY2Vib29rLmNvbSc7XG5cbmZ1bmN0aW9uIGdldEFwcFNlY3JldFBhdGgoYXV0aERhdGEsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBhcHBTZWNyZXQgPSBvcHRpb25zLmFwcFNlY3JldDtcbiAgaWYgKCFhcHBTZWNyZXQpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbiAgY29uc3QgYXBwc2VjcmV0X3Byb29mID0gY3J5cHRvXG4gICAgLmNyZWF0ZUhtYWMoJ3NoYTI1NicsIGFwcFNlY3JldClcbiAgICAudXBkYXRlKGF1dGhEYXRhLmFjY2Vzc190b2tlbilcbiAgICAuZGlnZXN0KCdoZXgnKTtcblxuICByZXR1cm4gYCZhcHBzZWNyZXRfcHJvb2Y9JHthcHBzZWNyZXRfcHJvb2Z9YDtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVHcmFwaFRva2VuKGF1dGhEYXRhLCBvcHRpb25zKSB7XG4gIHJldHVybiBncmFwaFJlcXVlc3QoXG4gICAgJ21lP2ZpZWxkcz1pZCZhY2Nlc3NfdG9rZW49JyArIGF1dGhEYXRhLmFjY2Vzc190b2tlbiArIGdldEFwcFNlY3JldFBhdGgoYXV0aERhdGEsIG9wdGlvbnMpXG4gICkudGhlbihkYXRhID0+IHtcbiAgICBpZiAoKGRhdGEgJiYgZGF0YS5pZCA9PSBhdXRoRGF0YS5pZCkgfHwgKHByb2Nlc3MuZW52LlRFU1RJTkcgJiYgYXV0aERhdGEuaWQgPT09ICd0ZXN0JykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsICdGYWNlYm9vayBhdXRoIGlzIGludmFsaWQgZm9yIHRoaXMgdXNlci4nKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlR3JhcGhBcHBJZChhcHBJZHMsIGF1dGhEYXRhLCBvcHRpb25zKSB7XG4gIHZhciBhY2Nlc3NfdG9rZW4gPSBhdXRoRGF0YS5hY2Nlc3NfdG9rZW47XG4gIGlmIChwcm9jZXNzLmVudi5URVNUSU5HICYmIGFjY2Vzc190b2tlbiA9PT0gJ3Rlc3QnKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG4gIGlmICghYXBwSWRzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihQYXJzZS5FcnJvci5PQkpFQ1RfTk9UX0ZPVU5ELCAnRmFjZWJvb2sgYXV0aCBpcyBub3QgY29uZmlndXJlZC4nKTtcbiAgfVxuICByZXR1cm4gZ3JhcGhSZXF1ZXN0KFxuICAgICdhcHA/YWNjZXNzX3Rva2VuPScgKyBhY2Nlc3NfdG9rZW4gKyBnZXRBcHBTZWNyZXRQYXRoKGF1dGhEYXRhLCBvcHRpb25zKVxuICApLnRoZW4oZGF0YSA9PiB7XG4gICAgaWYgKGRhdGEgJiYgYXBwSWRzLmluZGV4T2YoZGF0YS5pZCkgIT0gLTEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsICdGYWNlYm9vayBhdXRoIGlzIGludmFsaWQgZm9yIHRoaXMgdXNlci4nKTtcbiAgfSk7XG59XG5cbmNvbnN0IGdldEZhY2Vib29rS2V5QnlLZXlJZCA9IGFzeW5jIChrZXlJZCwgY2FjaGVNYXhFbnRyaWVzLCBjYWNoZU1heEFnZSkgPT4ge1xuICBjb25zdCBjbGllbnQgPSBqd2tzQ2xpZW50KHtcbiAgICBqd2tzVXJpOiBgJHtUT0tFTl9JU1NVRVJ9Ly53ZWxsLWtub3duL29hdXRoL29wZW5pZC9qd2tzL2AsXG4gICAgY2FjaGU6IHRydWUsXG4gICAgY2FjaGVNYXhFbnRyaWVzLFxuICAgIGNhY2hlTWF4QWdlLFxuICB9KTtcblxuICBjb25zdCBhc3luY0dldFNpZ25pbmdLZXlGdW5jdGlvbiA9IHV0aWwucHJvbWlzaWZ5KGNsaWVudC5nZXRTaWduaW5nS2V5KTtcblxuICBsZXQga2V5O1xuICB0cnkge1xuICAgIGtleSA9IGF3YWl0IGFzeW5jR2V0U2lnbmluZ0tleUZ1bmN0aW9uKGtleUlkKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoXG4gICAgICBQYXJzZS5FcnJvci5PQkpFQ1RfTk9UX0ZPVU5ELFxuICAgICAgYFVuYWJsZSB0byBmaW5kIG1hdGNoaW5nIGtleSBmb3IgS2V5IElEOiAke2tleUlkfWBcbiAgICApO1xuICB9XG4gIHJldHVybiBrZXk7XG59O1xuXG5jb25zdCBnZXRIZWFkZXJGcm9tVG9rZW4gPSB0b2tlbiA9PiB7XG4gIGNvbnN0IGRlY29kZWRUb2tlbiA9IGp3dC5kZWNvZGUodG9rZW4sIHsgY29tcGxldGU6IHRydWUgfSk7XG4gIGlmICghZGVjb2RlZFRva2VuKSB7XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsICdwcm92aWRlZCB0b2tlbiBkb2VzIG5vdCBkZWNvZGUgYXMgSldUJyk7XG4gIH1cblxuICByZXR1cm4gZGVjb2RlZFRva2VuLmhlYWRlcjtcbn07XG5cbmNvbnN0IHZlcmlmeUlkVG9rZW4gPSBhc3luYyAoeyB0b2tlbiwgaWQgfSwgeyBjbGllbnRJZCwgY2FjaGVNYXhFbnRyaWVzLCBjYWNoZU1heEFnZSB9KSA9PiB7XG4gIGlmICghdG9rZW4pIHtcbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuT0JKRUNUX05PVF9GT1VORCwgJ2lkIHRva2VuIGlzIGludmFsaWQgZm9yIHRoaXMgdXNlci4nKTtcbiAgfVxuXG4gIGNvbnN0IHsga2lkOiBrZXlJZCwgYWxnOiBhbGdvcml0aG0gfSA9IGdldEhlYWRlckZyb21Ub2tlbih0b2tlbik7XG4gIGNvbnN0IE9ORV9IT1VSX0lOX01TID0gMzYwMDAwMDtcbiAgbGV0IGp3dENsYWltcztcblxuICBjYWNoZU1heEFnZSA9IGNhY2hlTWF4QWdlIHx8IE9ORV9IT1VSX0lOX01TO1xuICBjYWNoZU1heEVudHJpZXMgPSBjYWNoZU1heEVudHJpZXMgfHwgNTtcblxuICBjb25zdCBmYWNlYm9va0tleSA9IGF3YWl0IGdldEZhY2Vib29rS2V5QnlLZXlJZChrZXlJZCwgY2FjaGVNYXhFbnRyaWVzLCBjYWNoZU1heEFnZSk7XG4gIGNvbnN0IHNpZ25pbmdLZXkgPSBmYWNlYm9va0tleS5wdWJsaWNLZXkgfHwgZmFjZWJvb2tLZXkucnNhUHVibGljS2V5O1xuXG4gIHRyeSB7XG4gICAgand0Q2xhaW1zID0gand0LnZlcmlmeSh0b2tlbiwgc2lnbmluZ0tleSwge1xuICAgICAgYWxnb3JpdGhtczogYWxnb3JpdGhtLFxuICAgICAgLy8gdGhlIGF1ZGllbmNlIGNhbiBiZSBjaGVja2VkIGFnYWluc3QgYSBzdHJpbmcsIGEgcmVndWxhciBleHByZXNzaW9uIG9yIGEgbGlzdCBvZiBzdHJpbmdzIGFuZC9vciByZWd1bGFyIGV4cHJlc3Npb25zLlxuICAgICAgYXVkaWVuY2U6IGNsaWVudElkLFxuICAgIH0pO1xuICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICBjb25zdCBtZXNzYWdlID0gZXhjZXB0aW9uLm1lc3NhZ2U7XG5cbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuT0JKRUNUX05PVF9GT1VORCwgYCR7bWVzc2FnZX1gKTtcbiAgfVxuXG4gIGlmIChqd3RDbGFpbXMuaXNzICE9PSBUT0tFTl9JU1NVRVIpIHtcbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoXG4gICAgICBQYXJzZS5FcnJvci5PQkpFQ1RfTk9UX0ZPVU5ELFxuICAgICAgYGlkIHRva2VuIG5vdCBpc3N1ZWQgYnkgY29ycmVjdCBPcGVuSUQgcHJvdmlkZXIgLSBleHBlY3RlZDogJHtUT0tFTl9JU1NVRVJ9IHwgZnJvbTogJHtqd3RDbGFpbXMuaXNzfWBcbiAgICApO1xuICB9XG5cbiAgaWYgKGp3dENsYWltcy5zdWIgIT09IGlkKSB7XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsICdhdXRoIGRhdGEgaXMgaW52YWxpZCBmb3IgdGhpcyB1c2VyLicpO1xuICB9XG4gIHJldHVybiBqd3RDbGFpbXM7XG59O1xuXG4vLyBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGZ1bGZpbGxzIGlmZiB0aGlzIHVzZXIgaWQgaXMgdmFsaWQuXG5mdW5jdGlvbiB2YWxpZGF0ZUF1dGhEYXRhKGF1dGhEYXRhLCBvcHRpb25zKSB7XG4gIGlmIChhdXRoRGF0YS50b2tlbikge1xuICAgIHJldHVybiB2ZXJpZnlJZFRva2VuKGF1dGhEYXRhLCBvcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdmFsaWRhdGVHcmFwaFRva2VuKGF1dGhEYXRhLCBvcHRpb25zKTtcbiAgfVxufVxuXG4vLyBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGZ1bGZpbGxzIGlmZiB0aGlzIGFwcCBpZCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXBwSWQoYXBwSWRzLCBhdXRoRGF0YSwgb3B0aW9ucykge1xuICBpZiAoYXV0aERhdGEudG9rZW4pIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHZhbGlkYXRlR3JhcGhBcHBJZChhcHBJZHMsIGF1dGhEYXRhLCBvcHRpb25zKTtcbiAgfVxufVxuXG4vLyBBIHByb21pc2V5IHdyYXBwZXIgZm9yIEZCIGdyYXBoIHJlcXVlc3RzLlxuZnVuY3Rpb24gZ3JhcGhSZXF1ZXN0KHBhdGgpIHtcbiAgcmV0dXJuIGh0dHBzUmVxdWVzdC5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycgKyBwYXRoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHZhbGlkYXRlQXBwSWQ6IHZhbGlkYXRlQXBwSWQsXG4gIHZhbGlkYXRlQXV0aERhdGE6IHZhbGlkYXRlQXV0aERhdGEsXG59O1xuIl19