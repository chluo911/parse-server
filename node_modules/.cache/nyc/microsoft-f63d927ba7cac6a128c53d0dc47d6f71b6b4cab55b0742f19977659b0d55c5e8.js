"use strict";// Helper functions for accessing the microsoft graph API.
function cov_1jz4vhwpf4(){var path="/parse-server/lib/Adapters/Auth/microsoft.js";var hash="b21c309673802261b83b4f1b0a3fe082c668c33a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/microsoft.js",statementMap:{"0":{start:{line:4,column:12},end:{line:4,column:39}},"1":{start:{line:6,column:21},end:{line:6,column:46}},"2":{start:{line:10,column:2},end:{line:16,column:5}},"3":{start:{line:11,column:4},end:{line:13,column:5}},"4":{start:{line:12,column:6},end:{line:12,column:13}},"5":{start:{line:15,column:4},end:{line:15,column:106}},"6":{start:{line:21,column:2},end:{line:21,column:27}},"7":{start:{line:26,column:2},end:{line:32,column:5}},"8":{start:{line:35,column:0},end:{line:38,column:2}}},fnMap:{"0":{name:"validateAuthData",decl:{start:{line:9,column:9},end:{line:9,column:25}},loc:{start:{line:9,column:36},end:{line:17,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:51},end:{line:10,column:52}},loc:{start:{line:10,column:63},end:{line:16,column:3}},line:10},"2":{name:"validateAppId",decl:{start:{line:20,column:9},end:{line:20,column:22}},loc:{start:{line:20,column:25},end:{line:22,column:1}},line:20},"3":{name:"request",decl:{start:{line:25,column:9},end:{line:25,column:16}},loc:{start:{line:25,column:37},end:{line:33,column:1}},line:25}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:13,column:5}},{start:{line:11,column:4},end:{line:13,column:5}}],line:11},"1":{loc:{start:{line:11,column:8},end:{line:11,column:61}},type:"binary-expr",locations:[{start:{line:11,column:8},end:{line:11,column:16}},{start:{line:11,column:20},end:{line:11,column:31}},{start:{line:11,column:35},end:{line:11,column:61}}],line:11}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/microsoft.js"],names:["Parse","require","httpsRequest","validateAuthData","authData","request","access_token","then","response","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","get","host","headers","Authorization","module","exports"],mappings:";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,OAAO,CAAC,IAAD,EAAOD,QAAQ,CAACE,YAAhB,CAAP,CAAqCC,IAArC,CAA0CC,QAAQ,IAAI;AAC3D,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,EAArB,IAA2BD,QAAQ,CAACC,EAAT,IAAeL,QAAQ,CAACK,EAAvD,EAA2D;AACzD;AACD;;AACD,UAAM,IAAIT,KAAK,CAACU,KAAV,CACJV,KAAK,CAACU,KAAN,CAAYC,gBADR,EAEJ,gDAFI,CAAN;AAID,GARM,CAAP;AASD,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,OAAO,CAACC,OAAR,EAAP;AACD,C,CAED;;;AACA,SAAST,OAAT,CAAiBU,IAAjB,EAAuBT,YAAvB,EAAqC;AACnC,SAAOJ,YAAY,CAACc,GAAb,CAAiB;AACtBC,IAAAA,IAAI,EAAE,qBADgB;AAEtBF,IAAAA,IAAI,EAAE,WAAWA,IAFK;AAGtBG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYb;AADpB;AAHa,GAAjB,CAAP;AAOD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,aAAa,EAAEA,aADA;AAEfT,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB",sourcesContent:["// Helper functions for accessing the microsoft graph API.\nvar Parse = require('parse/node').Parse;\nconst httpsRequest = require('./httpsRequest');\n\n// Returns a promise that fulfills if this user mail is valid.\nfunction validateAuthData(authData) {\n  return request('me', authData.access_token).then(response => {\n    if (response && response.id && response.id == authData.id) {\n      return;\n    }\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      'Microsoft Graph auth is invalid for this user.'\n    );\n  });\n}\n\n// Returns a promise that fulfills if this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path, access_token) {\n  return httpsRequest.get({\n    host: 'graph.microsoft.com',\n    path: '/v1.0/' + path,\n    headers: {\n      Authorization: 'Bearer ' + access_token,\n    },\n  });\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b21c309673802261b83b4f1b0a3fe082c668c33a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jz4vhwpf4=function(){return actualCoverage;};}return actualCoverage;}cov_1jz4vhwpf4();var Parse=(cov_1jz4vhwpf4().s[0]++,require('parse/node').Parse);const httpsRequest=(cov_1jz4vhwpf4().s[1]++,require('./httpsRequest'));// Returns a promise that fulfills if this user mail is valid.
function validateAuthData(authData){cov_1jz4vhwpf4().f[0]++;cov_1jz4vhwpf4().s[2]++;return request('me',authData.access_token).then(response=>{cov_1jz4vhwpf4().f[1]++;cov_1jz4vhwpf4().s[3]++;if((cov_1jz4vhwpf4().b[1][0]++,response)&&(cov_1jz4vhwpf4().b[1][1]++,response.id)&&(cov_1jz4vhwpf4().b[1][2]++,response.id==authData.id)){cov_1jz4vhwpf4().b[0][0]++;cov_1jz4vhwpf4().s[4]++;return;}else{cov_1jz4vhwpf4().b[0][1]++;}cov_1jz4vhwpf4().s[5]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Microsoft Graph auth is invalid for this user.');});}// Returns a promise that fulfills if this app id is valid.
function validateAppId(){cov_1jz4vhwpf4().f[2]++;cov_1jz4vhwpf4().s[6]++;return Promise.resolve();}// A promisey wrapper for api requests
function request(path,access_token){cov_1jz4vhwpf4().f[3]++;cov_1jz4vhwpf4().s[7]++;return httpsRequest.get({host:'graph.microsoft.com',path:'/v1.0/'+path,headers:{Authorization:'Bearer '+access_token}});}cov_1jz4vhwpf4().s[8]++;module.exports={validateAppId:validateAppId,validateAuthData:validateAuthData};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL21pY3Jvc29mdC5qcyJdLCJuYW1lcyI6WyJQYXJzZSIsInJlcXVpcmUiLCJodHRwc1JlcXVlc3QiLCJ2YWxpZGF0ZUF1dGhEYXRhIiwiYXV0aERhdGEiLCJyZXF1ZXN0IiwiYWNjZXNzX3Rva2VuIiwidGhlbiIsInJlc3BvbnNlIiwiaWQiLCJFcnJvciIsIk9CSkVDVF9OT1RfRk9VTkQiLCJ2YWxpZGF0ZUFwcElkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJwYXRoIiwiZ2V0IiwiaG9zdCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBUCxDQUFzQkQsS0FBbEM7O0FBQ0EsTUFBTUUsWUFBWSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBNUIsQyxDQUVBOzs7QUFDQSxTQUFTRSxnQkFBVCxDQUEwQkMsUUFBMUIsRUFBb0M7QUFDbEMsU0FBT0MsT0FBTyxDQUFDLElBQUQsRUFBT0QsUUFBUSxDQUFDRSxZQUFoQixDQUFQLENBQXFDQyxJQUFyQyxDQUEwQ0MsUUFBUSxJQUFJO0FBQzNELFFBQUlBLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxFQUFyQixJQUEyQkQsUUFBUSxDQUFDQyxFQUFULElBQWVMLFFBQVEsQ0FBQ0ssRUFBdkQsRUFBMkQ7QUFDekQ7QUFDRDs7QUFDRCxVQUFNLElBQUlULEtBQUssQ0FBQ1UsS0FBVixDQUNKVixLQUFLLENBQUNVLEtBQU4sQ0FBWUMsZ0JBRFIsRUFFSixnREFGSSxDQUFOO0FBSUQsR0FSTSxDQUFQO0FBU0QsQyxDQUVEOzs7QUFDQSxTQUFTQyxhQUFULEdBQXlCO0FBQ3ZCLFNBQU9DLE9BQU8sQ0FBQ0MsT0FBUixFQUFQO0FBQ0QsQyxDQUVEOzs7QUFDQSxTQUFTVCxPQUFULENBQWlCVSxJQUFqQixFQUF1QlQsWUFBdkIsRUFBcUM7QUFDbkMsU0FBT0osWUFBWSxDQUFDYyxHQUFiLENBQWlCO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUUscUJBRGdCO0FBRXRCRixJQUFBQSxJQUFJLEVBQUUsV0FBV0EsSUFGSztBQUd0QkcsSUFBQUEsT0FBTyxFQUFFO0FBQ1BDLE1BQUFBLGFBQWEsRUFBRSxZQUFZYjtBQURwQjtBQUhhLEdBQWpCLENBQVA7QUFPRDs7QUFFRGMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZULEVBQUFBLGFBQWEsRUFBRUEsYUFEQTtBQUVmVCxFQUFBQSxnQkFBZ0IsRUFBRUE7QUFGSCxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIGFjY2Vzc2luZyB0aGUgbWljcm9zb2Z0IGdyYXBoIEFQSS5cbnZhciBQYXJzZSA9IHJlcXVpcmUoJ3BhcnNlL25vZGUnKS5QYXJzZTtcbmNvbnN0IGh0dHBzUmVxdWVzdCA9IHJlcXVpcmUoJy4vaHR0cHNSZXF1ZXN0Jyk7XG5cbi8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgaWYgdGhpcyB1c2VyIG1haWwgaXMgdmFsaWQuXG5mdW5jdGlvbiB2YWxpZGF0ZUF1dGhEYXRhKGF1dGhEYXRhKSB7XG4gIHJldHVybiByZXF1ZXN0KCdtZScsIGF1dGhEYXRhLmFjY2Vzc190b2tlbikudGhlbihyZXNwb25zZSA9PiB7XG4gICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLmlkICYmIHJlc3BvbnNlLmlkID09IGF1dGhEYXRhLmlkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihcbiAgICAgIFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsXG4gICAgICAnTWljcm9zb2Z0IEdyYXBoIGF1dGggaXMgaW52YWxpZCBmb3IgdGhpcyB1c2VyLidcbiAgICApO1xuICB9KTtcbn1cblxuLy8gUmV0dXJucyBhIHByb21pc2UgdGhhdCBmdWxmaWxscyBpZiB0aGlzIGFwcCBpZCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXBwSWQoKSB7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbn1cblxuLy8gQSBwcm9taXNleSB3cmFwcGVyIGZvciBhcGkgcmVxdWVzdHNcbmZ1bmN0aW9uIHJlcXVlc3QocGF0aCwgYWNjZXNzX3Rva2VuKSB7XG4gIHJldHVybiBodHRwc1JlcXVlc3QuZ2V0KHtcbiAgICBob3N0OiAnZ3JhcGgubWljcm9zb2Z0LmNvbScsXG4gICAgcGF0aDogJy92MS4wLycgKyBwYXRoLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGFjY2Vzc190b2tlbixcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHZhbGlkYXRlQXBwSWQ6IHZhbGlkYXRlQXBwSWQsXG4gIHZhbGlkYXRlQXV0aERhdGE6IHZhbGlkYXRlQXV0aERhdGEsXG59O1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL21pY3Jvc29mdC5qcyJdLCJuYW1lcyI6WyJQYXJzZSIsInJlcXVpcmUiLCJodHRwc1JlcXVlc3QiLCJhdXRoRGF0YSIsInJlc3BvbnNlIiwiUHJvbWlzZSIsImhvc3QiLCJwYXRoIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJhY2Nlc3NfdG9rZW4iLCJtb2R1bGUiLCJ2YWxpZGF0ZUFwcElkIiwidmFsaWRhdGVBdXRoRGF0YSJdLCJtYXBwaW5ncyI6ImFBQUE7MnpJQU1FOzJGQUxGLEdBQUlBLENBQUFBLEtBQUssMEJBQUdDLE9BQU8sQ0FBUEEsWUFBTyxDQUFQQSxDQUFaLEtBQVMsQ0FBVCxDQUNBLEtBQU1DLENBQUFBLFlBQVksMEJBQUdELE9BQU8sQ0FBNUIsZ0JBQTRCLENBQVYsQ0FBbEIsQ0FFQTtBQUNBLFFBQUEsQ0FBQSxnQkFBQSxDQUFBLFFBQUEsQ0FBb0MsaURBQ2xDLE1BQU8sQ0FBQSxPQUFPLENBQUEsSUFBQSxDQUFPRSxRQUFRLENBQXRCLFlBQU8sQ0FBUCxDQUFBLElBQUEsQ0FBMENDLFFBQVEsRUFBSSxpREFDM0QsR0FBSUEsNEJBQUFBLFFBQVEsK0JBQUlBLFFBQVEsQ0FBcEJBLEVBQVEsQ0FBUkEsOEJBQTJCQSxRQUFRLENBQVJBLEVBQUFBLEVBQWVELFFBQVEsQ0FBdEQsRUFBSUMsQ0FBSixDQUEyRCxvREFDekQsT0FDRCxDQUZELGlDQUQyRCx3QkFJM0QsS0FBTSxJQUFJSixDQUFBQSxLQUFLLENBQVQsS0FBQSxDQUNKQSxLQUFLLENBQUxBLEtBQUFBLENBREksZ0JBQUEsQ0FBTixnREFBTSxDQUFOLENBSkYsQ0FBTyxDQUFQLEMsQ0FXRjtBQUNBLFFBQUEsQ0FBQSxhQUFBLEVBQXlCLGlEQUN2QixNQUFPSyxDQUFBQSxPQUFPLENBQWQsT0FBT0EsRUFBUCxDLENBR0Y7QUFDQSxRQUFBLENBQUEsT0FBQSxDQUFBLElBQUEsQ0FBQSxZQUFBLENBQXFDLGlEQUNuQyxNQUFPLENBQUEsWUFBWSxDQUFaLEdBQUEsQ0FBaUIsQ0FDdEJDLElBQUksQ0FEa0IscUJBQUEsQ0FFdEJDLElBQUksQ0FBRSxTQUZnQixJQUFBLENBR3RCQyxPQUFPLENBQUUsQ0FDUEMsYUFBYSxDQUFFLFVBQVlDLFlBRHBCLENBSGEsQ0FBakIsQ0FBUCxDQU9ELEMsd0JBRURDLE1BQU0sQ0FBTkEsT0FBQUEsQ0FBaUIsQ0FDZkMsYUFBYSxDQURFLGFBQUEsQ0FFZkMsZ0JBQWdCLENBQUVBLGdCQUZILENBQWpCRixDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSGVscGVyIGZ1bmN0aW9ucyBmb3IgYWNjZXNzaW5nIHRoZSBtaWNyb3NvZnQgZ3JhcGggQVBJLlxudmFyIFBhcnNlID0gcmVxdWlyZSgncGFyc2Uvbm9kZScpLlBhcnNlO1xuY29uc3QgaHR0cHNSZXF1ZXN0ID0gcmVxdWlyZSgnLi9odHRwc1JlcXVlc3QnKTtcblxuLy8gUmV0dXJucyBhIHByb21pc2UgdGhhdCBmdWxmaWxscyBpZiB0aGlzIHVzZXIgbWFpbCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXV0aERhdGEoYXV0aERhdGEpIHtcbiAgcmV0dXJuIHJlcXVlc3QoJ21lJywgYXV0aERhdGEuYWNjZXNzX3Rva2VuKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UuaWQgJiYgcmVzcG9uc2UuaWQgPT0gYXV0aERhdGEuaWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFxuICAgICAgUGFyc2UuRXJyb3IuT0JKRUNUX05PVF9GT1VORCxcbiAgICAgICdNaWNyb3NvZnQgR3JhcGggYXV0aCBpcyBpbnZhbGlkIGZvciB0aGlzIHVzZXIuJ1xuICAgICk7XG4gIH0pO1xufVxuXG4vLyBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGZ1bGZpbGxzIGlmIHRoaXMgYXBwIGlkIGlzIHZhbGlkLlxuZnVuY3Rpb24gdmFsaWRhdGVBcHBJZCgpIHtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufVxuXG4vLyBBIHByb21pc2V5IHdyYXBwZXIgZm9yIGFwaSByZXF1ZXN0c1xuZnVuY3Rpb24gcmVxdWVzdChwYXRoLCBhY2Nlc3NfdG9rZW4pIHtcbiAgcmV0dXJuIGh0dHBzUmVxdWVzdC5nZXQoe1xuICAgIGhvc3Q6ICdncmFwaC5taWNyb3NvZnQuY29tJyxcbiAgICBwYXRoOiAnL3YxLjAvJyArIHBhdGgsXG4gICAgaGVhZGVyczoge1xuICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzX3Rva2VuLFxuICAgIH0sXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmFsaWRhdGVBcHBJZDogdmFsaWRhdGVBcHBJZCxcbiAgdmFsaWRhdGVBdXRoRGF0YTogdmFsaWRhdGVBdXRoRGF0YSxcbn07XG4iXX0=