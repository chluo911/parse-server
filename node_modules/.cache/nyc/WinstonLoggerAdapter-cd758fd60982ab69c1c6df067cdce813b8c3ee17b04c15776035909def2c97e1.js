"use strict";function cov_1ni1lhli6u(){var path="/parse-server/lib/Adapters/Logger/WinstonLoggerAdapter.js";var hash="e5a1a472ba4385609b07f9a25f55e0a8bd869192";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Logger/WinstonLoggerAdapter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:56}},"2":{start:{line:8,column:21},end:{line:8,column:47}},"3":{start:{line:10,column:21},end:{line:10,column:47}},"4":{start:{line:12,column:30},end:{line:12,column:49}},"5":{start:{line:16,column:4},end:{line:16,column:12}},"6":{start:{line:18,column:4},end:{line:20,column:5}},"7":{start:{line:19,column:6},end:{line:19,column:51}},"8":{start:{line:24,column:4},end:{line:24,column:77}},"9":{start:{line:31,column:4},end:{line:31,column:48}},"10":{start:{line:36,column:4},end:{line:38,column:5}},"11":{start:{line:37,column:6},end:{line:37,column:19}},"12":{start:{line:41,column:17},end:{line:41,column:81}},"13":{start:{line:42,column:18},end:{line:42,column:45}},"14":{start:{line:43,column:18},end:{line:43,column:36}},"15":{start:{line:44,column:18},end:{line:44,column:41}},"16":{start:{line:45,column:18},end:{line:45,column:41}},"17":{start:{line:46,column:25},end:{line:51,column:5}},"18":{start:{line:52,column:4},end:{line:67,column:7}},"19":{start:{line:53,column:6},end:{line:66,column:9}},"20":{start:{line:54,column:8},end:{line:57,column:9}},"21":{start:{line:55,column:10},end:{line:55,column:24}},"22":{start:{line:56,column:10},end:{line:56,column:29}},"23":{start:{line:59,column:8},end:{line:65,column:9}},"24":{start:{line:60,column:10},end:{line:60,column:46}},"25":{start:{line:61,column:10},end:{line:61,column:45}},"26":{start:{line:63,column:10},end:{line:63,column:40}},"27":{start:{line:64,column:10},end:{line:64,column:39}},"28":{start:{line:72,column:0},end:{line:72,column:52}},"29":{start:{line:73,column:15},end:{line:73,column:35}},"30":{start:{line:74,column:0},end:{line:74,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:2},end:{line:15,column:3}},loc:{start:{line:15,column:23},end:{line:21,column:3}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:8},end:{line:25,column:3}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:2},end:{line:27,column:3}},loc:{start:{line:27,column:26},end:{line:32,column:3}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:38},end:{line:68,column:3}},line:35},"4":{name:"(anonymous_4)",decl:{start:{line:35,column:28},end:{line:35,column:29}},loc:{start:{line:35,column:34},end:{line:35,column:36}},line:35},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:23},end:{line:52,column:24}},loc:{start:{line:52,column:44},end:{line:67,column:5}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:53,column:48},end:{line:53,column:49}},loc:{start:{line:53,column:62},end:{line:66,column:7}},line:53}},branchMap:{"0":{loc:{start:{line:18,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:20,column:5}},{start:{line:18,column:4},end:{line:20,column:5}}],line:18},"1":{loc:{start:{line:35,column:17},end:{line:35,column:36}},type:"default-arg",locations:[{start:{line:35,column:28},end:{line:35,column:36}}],line:35},"2":{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},"3":{loc:{start:{line:41,column:17},end:{line:41,column:81}},type:"binary-expr",locations:[{start:{line:41,column:17},end:{line:41,column:29}},{start:{line:41,column:33},end:{line:41,column:81}}],line:41},"4":{loc:{start:{line:42,column:18},end:{line:42,column:45}},type:"binary-expr",locations:[{start:{line:42,column:18},end:{line:42,column:31}},{start:{line:42,column:35},end:{line:42,column:45}}],line:42},"5":{loc:{start:{line:43,column:18},end:{line:43,column:36}},type:"binary-expr",locations:[{start:{line:43,column:18},end:{line:43,column:30}},{start:{line:43,column:34},end:{line:43,column:36}}],line:43},"6":{loc:{start:{line:44,column:18},end:{line:44,column:41}},type:"binary-expr",locations:[{start:{line:44,column:18},end:{line:44,column:31}},{start:{line:44,column:35},end:{line:44,column:41}}],line:44},"7":{loc:{start:{line:45,column:18},end:{line:45,column:41}},type:"binary-expr",locations:[{start:{line:45,column:18},end:{line:45,column:31}},{start:{line:45,column:35},end:{line:45,column:41}}],line:45},"8":{loc:{start:{line:54,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:54,column:8},end:{line:57,column:9}},{start:{line:54,column:8},end:{line:57,column:9}}],line:54},"9":{loc:{start:{line:59,column:8},end:{line:65,column:9}},type:"if",locations:[{start:{line:59,column:8},end:{line:65,column:9}},{start:{line:59,column:8},end:{line:65,column:9}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Logger/WinstonLoggerAdapter.js"],names:["MILLISECONDS_IN_A_DAY","WinstonLoggerAdapter","LoggerAdapter","constructor","options","log","logger","apply","arguments","addTransport","transport","query","callback","from","Date","now","until","limit","size","order","level","queryOptions","Promise","resolve","reject","err","res"],mappings:";;;;;;;AAAA;;AACA;;AAEA,MAAMA,qBAAqB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA7C;;AAEO,MAAMC,oBAAN,SAAmCC,4BAAnC,CAAiD;AACtDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB;;AACA,QAAIA,OAAJ,EAAa;AACX,0CAAgBA,OAAhB;AACD;AACF;;AAEDC,EAAAA,GAAG,GAAG;AACJ,WAAOC,sBAAOD,GAAP,CAAWE,KAAX,CAAiBD,qBAAjB,EAAyBE,SAAzB,CAAP;AACD;;AAEDC,EAAAA,YAAY,CAACC,SAAD,EAAY;AACtB;AACA;AACA;AACA,qCAAaA,SAAb;AACD,GAjBqD,CAmBtD;;;AACAC,EAAAA,KAAK,CAACP,OAAD,EAAUQ,QAAQ,GAAG,MAAM,CAAE,CAA7B,EAA+B;AAClC,QAAI,CAACR,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,EAAV;AACD,KAHiC,CAIlC;;;AACA,UAAMS,IAAI,GAAGT,OAAO,CAACS,IAAR,IAAgB,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,IAAIf,qBAA1B,CAA7B;AACA,UAAMgB,KAAK,GAAGZ,OAAO,CAACY,KAAR,IAAiB,IAAIF,IAAJ,EAA/B;AACA,UAAMG,KAAK,GAAGb,OAAO,CAACc,IAAR,IAAgB,EAA9B;AACA,UAAMC,KAAK,GAAGf,OAAO,CAACe,KAAR,IAAiB,MAA/B;AACA,UAAMC,KAAK,GAAGhB,OAAO,CAACgB,KAAR,IAAiB,MAA/B;AAEA,UAAMC,YAAY,GAAG;AACnBR,MAAAA,IADmB;AAEnBG,MAAAA,KAFmB;AAGnBC,MAAAA,KAHmB;AAInBE,MAAAA;AAJmB,KAArB;AAOA,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,4BAAOK,KAAP,CAAaU,YAAb,EAA2B,CAACI,GAAD,EAAMC,GAAN,KAAc;AACvC,YAAID,GAAJ,EAAS;AACPb,UAAAA,QAAQ,CAACa,GAAD,CAAR;AACA,iBAAOD,MAAM,CAACC,GAAD,CAAb;AACD;;AAED,YAAIL,KAAK,KAAK,OAAd,EAAuB;AACrBR,UAAAA,QAAQ,CAACc,GAAG,CAAC,oBAAD,CAAJ,CAAR;AACAH,UAAAA,OAAO,CAACG,GAAG,CAAC,oBAAD,CAAJ,CAAP;AACD,SAHD,MAGO;AACLd,UAAAA,QAAQ,CAACc,GAAG,CAAC,cAAD,CAAJ,CAAR;AACAH,UAAAA,OAAO,CAACG,GAAG,CAAC,cAAD,CAAJ,CAAP;AACD;AACF,OAbD;AAcD,KAfM,CAAP;AAgBD;;AAtDqD;;;eAyDzCzB,oB",sourcesContent:["import { LoggerAdapter } from './LoggerAdapter';\nimport { logger, addTransport, configureLogger } from './WinstonLogger';\n\nconst MILLISECONDS_IN_A_DAY = 24 * 60 * 60 * 1000;\n\nexport class WinstonLoggerAdapter extends LoggerAdapter {\n  constructor(options) {\n    super();\n    if (options) {\n      configureLogger(options);\n    }\n  }\n\n  log() {\n    return logger.log.apply(logger, arguments);\n  }\n\n  addTransport(transport) {\n    // Note that this is calling addTransport\n    // from logger.  See import - confusing.\n    // but this is not recursive.\n    addTransport(transport);\n  }\n\n  // custom query as winston is currently limited\n  query(options, callback = () => {}) {\n    if (!options) {\n      options = {};\n    }\n    // defaults to 7 days prior\n    const from = options.from || new Date(Date.now() - 7 * MILLISECONDS_IN_A_DAY);\n    const until = options.until || new Date();\n    const limit = options.size || 10;\n    const order = options.order || 'desc';\n    const level = options.level || 'info';\n\n    const queryOptions = {\n      from,\n      until,\n      limit,\n      order,\n    };\n\n    return new Promise((resolve, reject) => {\n      logger.query(queryOptions, (err, res) => {\n        if (err) {\n          callback(err);\n          return reject(err);\n        }\n\n        if (level === 'error') {\n          callback(res['parse-server-error']);\n          resolve(res['parse-server-error']);\n        } else {\n          callback(res['parse-server']);\n          resolve(res['parse-server']);\n        }\n      });\n    });\n  }\n}\n\nexport default WinstonLoggerAdapter;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e5a1a472ba4385609b07f9a25f55e0a8bd869192"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ni1lhli6u=function(){return actualCoverage;};}return actualCoverage;}cov_1ni1lhli6u();cov_1ni1lhli6u().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1ni1lhli6u().s[1]++;exports.default=exports.WinstonLoggerAdapter=void 0;var _LoggerAdapter=(cov_1ni1lhli6u().s[2]++,require("./LoggerAdapter"));var _WinstonLogger=(cov_1ni1lhli6u().s[3]++,require("./WinstonLogger"));const MILLISECONDS_IN_A_DAY=(cov_1ni1lhli6u().s[4]++,24*60*60*1000);class WinstonLoggerAdapter extends(_LoggerAdapter.LoggerAdapter){constructor(options){cov_1ni1lhli6u().f[0]++;cov_1ni1lhli6u().s[5]++;super();cov_1ni1lhli6u().s[6]++;if(options){cov_1ni1lhli6u().b[0][0]++;cov_1ni1lhli6u().s[7]++;(0,_WinstonLogger.configureLogger)(options);}else{cov_1ni1lhli6u().b[0][1]++;}}log(){cov_1ni1lhli6u().f[1]++;cov_1ni1lhli6u().s[8]++;return _WinstonLogger.logger.log.apply(_WinstonLogger.logger,arguments);}addTransport(transport){cov_1ni1lhli6u().f[2]++;cov_1ni1lhli6u().s[9]++;// Note that this is calling addTransport
// from logger.  See import - confusing.
// but this is not recursive.
(0,_WinstonLogger.addTransport)(transport);}// custom query as winston is currently limited
query(options,callback=(cov_1ni1lhli6u().b[1][0]++,()=>{cov_1ni1lhli6u().f[4]++;})){cov_1ni1lhli6u().f[3]++;cov_1ni1lhli6u().s[10]++;if(!options){cov_1ni1lhli6u().b[2][0]++;cov_1ni1lhli6u().s[11]++;options={};}else{cov_1ni1lhli6u().b[2][1]++;}// defaults to 7 days prior
const from=(cov_1ni1lhli6u().s[12]++,(cov_1ni1lhli6u().b[3][0]++,options.from)||(cov_1ni1lhli6u().b[3][1]++,new Date(Date.now()-7*MILLISECONDS_IN_A_DAY)));const until=(cov_1ni1lhli6u().s[13]++,(cov_1ni1lhli6u().b[4][0]++,options.until)||(cov_1ni1lhli6u().b[4][1]++,new Date()));const limit=(cov_1ni1lhli6u().s[14]++,(cov_1ni1lhli6u().b[5][0]++,options.size)||(cov_1ni1lhli6u().b[5][1]++,10));const order=(cov_1ni1lhli6u().s[15]++,(cov_1ni1lhli6u().b[6][0]++,options.order)||(cov_1ni1lhli6u().b[6][1]++,'desc'));const level=(cov_1ni1lhli6u().s[16]++,(cov_1ni1lhli6u().b[7][0]++,options.level)||(cov_1ni1lhli6u().b[7][1]++,'info'));const queryOptions=(cov_1ni1lhli6u().s[17]++,{from,until,limit,order});cov_1ni1lhli6u().s[18]++;return new Promise((resolve,reject)=>{cov_1ni1lhli6u().f[5]++;cov_1ni1lhli6u().s[19]++;_WinstonLogger.logger.query(queryOptions,(err,res)=>{cov_1ni1lhli6u().f[6]++;cov_1ni1lhli6u().s[20]++;if(err){cov_1ni1lhli6u().b[8][0]++;cov_1ni1lhli6u().s[21]++;callback(err);cov_1ni1lhli6u().s[22]++;return reject(err);}else{cov_1ni1lhli6u().b[8][1]++;}cov_1ni1lhli6u().s[23]++;if(level==='error'){cov_1ni1lhli6u().b[9][0]++;cov_1ni1lhli6u().s[24]++;callback(res['parse-server-error']);cov_1ni1lhli6u().s[25]++;resolve(res['parse-server-error']);}else{cov_1ni1lhli6u().b[9][1]++;cov_1ni1lhli6u().s[26]++;callback(res['parse-server']);cov_1ni1lhli6u().s[27]++;resolve(res['parse-server']);}});});}}cov_1ni1lhli6u().s[28]++;exports.WinstonLoggerAdapter=WinstonLoggerAdapter;var _default=(cov_1ni1lhli6u().s[29]++,WinstonLoggerAdapter);cov_1ni1lhli6u().s[30]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9Mb2dnZXIvV2luc3RvbkxvZ2dlckFkYXB0ZXIuanMiXSwibmFtZXMiOlsiTUlMTElTRUNPTkRTX0lOX0FfREFZIiwiV2luc3RvbkxvZ2dlckFkYXB0ZXIiLCJMb2dnZXJBZGFwdGVyIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwibG9nIiwibG9nZ2VyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJhZGRUcmFuc3BvcnQiLCJ0cmFuc3BvcnQiLCJxdWVyeSIsImNhbGxiYWNrIiwiZnJvbSIsIkRhdGUiLCJub3ciLCJ1bnRpbCIsImxpbWl0Iiwic2l6ZSIsIm9yZGVyIiwibGV2ZWwiLCJxdWVyeU9wdGlvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLE1BQU1BLHFCQUFxQixHQUFHLEtBQUssRUFBTCxHQUFVLEVBQVYsR0FBZSxJQUE3Qzs7QUFFTyxNQUFNQyxvQkFBTixTQUFtQ0MsNEJBQW5DLENBQWlEO0FBQ3REQyxFQUFBQSxXQUFXLENBQUNDLE9BQUQsRUFBVTtBQUNuQjs7QUFDQSxRQUFJQSxPQUFKLEVBQWE7QUFDWCwwQ0FBZ0JBLE9BQWhCO0FBQ0Q7QUFDRjs7QUFFREMsRUFBQUEsR0FBRyxHQUFHO0FBQ0osV0FBT0Msc0JBQU9ELEdBQVAsQ0FBV0UsS0FBWCxDQUFpQkQscUJBQWpCLEVBQXlCRSxTQUF6QixDQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLFlBQVksQ0FBQ0MsU0FBRCxFQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHFDQUFhQSxTQUFiO0FBQ0QsR0FqQnFELENBbUJ0RDs7O0FBQ0FDLEVBQUFBLEtBQUssQ0FBQ1AsT0FBRCxFQUFVUSxRQUFRLEdBQUcsTUFBTSxDQUFFLENBQTdCLEVBQStCO0FBQ2xDLFFBQUksQ0FBQ1IsT0FBTCxFQUFjO0FBQ1pBLE1BQUFBLE9BQU8sR0FBRyxFQUFWO0FBQ0QsS0FIaUMsQ0FJbEM7OztBQUNBLFVBQU1TLElBQUksR0FBR1QsT0FBTyxDQUFDUyxJQUFSLElBQWdCLElBQUlDLElBQUosQ0FBU0EsSUFBSSxDQUFDQyxHQUFMLEtBQWEsSUFBSWYscUJBQTFCLENBQTdCO0FBQ0EsVUFBTWdCLEtBQUssR0FBR1osT0FBTyxDQUFDWSxLQUFSLElBQWlCLElBQUlGLElBQUosRUFBL0I7QUFDQSxVQUFNRyxLQUFLLEdBQUdiLE9BQU8sQ0FBQ2MsSUFBUixJQUFnQixFQUE5QjtBQUNBLFVBQU1DLEtBQUssR0FBR2YsT0FBTyxDQUFDZSxLQUFSLElBQWlCLE1BQS9CO0FBQ0EsVUFBTUMsS0FBSyxHQUFHaEIsT0FBTyxDQUFDZ0IsS0FBUixJQUFpQixNQUEvQjtBQUVBLFVBQU1DLFlBQVksR0FBRztBQUNuQlIsTUFBQUEsSUFEbUI7QUFFbkJHLE1BQUFBLEtBRm1CO0FBR25CQyxNQUFBQSxLQUhtQjtBQUluQkUsTUFBQUE7QUFKbUIsS0FBckI7QUFPQSxXQUFPLElBQUlHLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENsQiw0QkFBT0ssS0FBUCxDQUFhVSxZQUFiLEVBQTJCLENBQUNJLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3ZDLFlBQUlELEdBQUosRUFBUztBQUNQYixVQUFBQSxRQUFRLENBQUNhLEdBQUQsQ0FBUjtBQUNBLGlCQUFPRCxNQUFNLENBQUNDLEdBQUQsQ0FBYjtBQUNEOztBQUVELFlBQUlMLEtBQUssS0FBSyxPQUFkLEVBQXVCO0FBQ3JCUixVQUFBQSxRQUFRLENBQUNjLEdBQUcsQ0FBQyxvQkFBRCxDQUFKLENBQVI7QUFDQUgsVUFBQUEsT0FBTyxDQUFDRyxHQUFHLENBQUMsb0JBQUQsQ0FBSixDQUFQO0FBQ0QsU0FIRCxNQUdPO0FBQ0xkLFVBQUFBLFFBQVEsQ0FBQ2MsR0FBRyxDQUFDLGNBQUQsQ0FBSixDQUFSO0FBQ0FILFVBQUFBLE9BQU8sQ0FBQ0csR0FBRyxDQUFDLGNBQUQsQ0FBSixDQUFQO0FBQ0Q7QUFDRixPQWJEO0FBY0QsS0FmTSxDQUFQO0FBZ0JEOztBQXREcUQ7OztlQXlEekN6QixvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZ2dlckFkYXB0ZXIgfSBmcm9tICcuL0xvZ2dlckFkYXB0ZXInO1xuaW1wb3J0IHsgbG9nZ2VyLCBhZGRUcmFuc3BvcnQsIGNvbmZpZ3VyZUxvZ2dlciB9IGZyb20gJy4vV2luc3RvbkxvZ2dlcic7XG5cbmNvbnN0IE1JTExJU0VDT05EU19JTl9BX0RBWSA9IDI0ICogNjAgKiA2MCAqIDEwMDA7XG5cbmV4cG9ydCBjbGFzcyBXaW5zdG9uTG9nZ2VyQWRhcHRlciBleHRlbmRzIExvZ2dlckFkYXB0ZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAob3B0aW9ucykge1xuICAgICAgY29uZmlndXJlTG9nZ2VyKG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuXG4gIGxvZygpIHtcbiAgICByZXR1cm4gbG9nZ2VyLmxvZy5hcHBseShsb2dnZXIsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBhZGRUcmFuc3BvcnQodHJhbnNwb3J0KSB7XG4gICAgLy8gTm90ZSB0aGF0IHRoaXMgaXMgY2FsbGluZyBhZGRUcmFuc3BvcnRcbiAgICAvLyBmcm9tIGxvZ2dlci4gIFNlZSBpbXBvcnQgLSBjb25mdXNpbmcuXG4gICAgLy8gYnV0IHRoaXMgaXMgbm90IHJlY3Vyc2l2ZS5cbiAgICBhZGRUcmFuc3BvcnQodHJhbnNwb3J0KTtcbiAgfVxuXG4gIC8vIGN1c3RvbSBxdWVyeSBhcyB3aW5zdG9uIGlzIGN1cnJlbnRseSBsaW1pdGVkXG4gIHF1ZXJ5KG9wdGlvbnMsIGNhbGxiYWNrID0gKCkgPT4ge30pIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgLy8gZGVmYXVsdHMgdG8gNyBkYXlzIHByaW9yXG4gICAgY29uc3QgZnJvbSA9IG9wdGlvbnMuZnJvbSB8fCBuZXcgRGF0ZShEYXRlLm5vdygpIC0gNyAqIE1JTExJU0VDT05EU19JTl9BX0RBWSk7XG4gICAgY29uc3QgdW50aWwgPSBvcHRpb25zLnVudGlsIHx8IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgbGltaXQgPSBvcHRpb25zLnNpemUgfHwgMTA7XG4gICAgY29uc3Qgb3JkZXIgPSBvcHRpb25zLm9yZGVyIHx8ICdkZXNjJztcbiAgICBjb25zdCBsZXZlbCA9IG9wdGlvbnMubGV2ZWwgfHwgJ2luZm8nO1xuXG4gICAgY29uc3QgcXVlcnlPcHRpb25zID0ge1xuICAgICAgZnJvbSxcbiAgICAgIHVudGlsLFxuICAgICAgbGltaXQsXG4gICAgICBvcmRlcixcbiAgICB9O1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxvZ2dlci5xdWVyeShxdWVyeU9wdGlvbnMsIChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGV2ZWwgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICBjYWxsYmFjayhyZXNbJ3BhcnNlLXNlcnZlci1lcnJvciddKTtcbiAgICAgICAgICByZXNvbHZlKHJlc1sncGFyc2Utc2VydmVyLWVycm9yJ10pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhbGxiYWNrKHJlc1sncGFyc2Utc2VydmVyJ10pO1xuICAgICAgICAgIHJlc29sdmUocmVzWydwYXJzZS1zZXJ2ZXInXSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdpbnN0b25Mb2dnZXJBZGFwdGVyO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9Mb2dnZXIvV2luc3RvbkxvZ2dlckFkYXB0ZXIuanMiXSwibmFtZXMiOlsiTUlMTElTRUNPTkRTX0lOX0FfREFZIiwiTG9nZ2VyQWRhcHRlciIsImNvbnN0cnVjdG9yIiwibG9nIiwibG9nZ2VyIiwiYWRkVHJhbnNwb3J0IiwicXVlcnkiLCJjYWxsYmFjayIsIm9wdGlvbnMiLCJmcm9tIiwiRGF0ZSIsInVudGlsIiwibGltaXQiLCJvcmRlciIsImxldmVsIiwicXVlcnlPcHRpb25zIiwicmVqZWN0IiwicmVzIiwicmVzb2x2ZSIsIldpbnN0b25Mb2dnZXJBZGFwdGVyIl0sIm1hcHBpbmdzIjoiNjdSQU9JO3dQQVBKLEdBQUEsQ0FBQSxjQUFBLDBCQUFBLE9BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsY0FBQSwwQkFBQSxPQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLENBRUEsS0FBTUEsQ0FBQUEscUJBQXFCLDBCQUFHLEdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBOUIsSUFBMkIsQ0FBM0IsQ0FFTyxLQUFBLENBQUEsb0JBQUEsU0FBbUNDLGNBQUFBLENBQW5DLGFBQUEsQ0FBaUQsQ0FDdERDLFdBQVcsQ0FBQSxPQUFBLENBQVUsaURBQ25CLFFBRG1CLHdCQUVuQixHQUFBLE9BQUEsQ0FBYSxvREFDWCxDQUFBLEVBQUEsY0FBQSxDQUFBLGVBQUEsRUFBQSxPQUFBLEVBQ0QsQ0FGRCxpQ0FHRCxDQUVEQyxHQUFHLEVBQUcsaURBQ0osTUFBT0MsQ0FBQUEsY0FBQUEsQ0FBQUEsTUFBQUEsQ0FBQUEsR0FBQUEsQ0FBQUEsS0FBQUEsQ0FBaUJBLGNBQUFBLENBQWpCQSxNQUFBQSxDQUFQLFNBQU9BLENBQVAsQ0FDRCxDQUVEQyxZQUFZLENBQUEsU0FBQSxDQUFZLGlEQUN0QjtBQUNBO0FBQ0E7QUFDQSxDQUFBLEVBQUEsY0FBQSxDQUFBLFlBQUEsRUFBQSxTQUFBLEVBaEJvRCxDQW1CdEQ7QUFDQUMsS0FBSyxDQUFBLE9BQUEsQ0FBVUMsUUFBUSw2QkFBRyxJQUFNLHlCQUEzQixDQUFrQixDQUFsQixDQUErQixrREFDbEMsR0FBSSxDQUFKLE9BQUEsQ0FBYyxxREFDWkMsT0FBTyxDQUFQQSxFQUFBQSxDQUZnQyxDQUNsQyxpQ0FHQTtBQUNBLEtBQU1DLENBQUFBLElBQUksMkJBQUdELDRCQUFBQSxPQUFPLENBQVBBLElBQUFBLCtCQUFnQixHQUFBLENBQUEsSUFBQSxDQUFTRSxJQUFJLENBQUpBLEdBQUFBLEdBQWEsRUFBbkQscUJBQTZCLENBQWhCRixDQUFILENBQVYsQ0FDQSxLQUFNRyxDQUFBQSxLQUFLLDJCQUFHSCw0QkFBQUEsT0FBTyxDQUFQQSxLQUFBQSwrQkFBaUIsR0FBL0IsQ0FBQSxJQUErQixFQUFqQkEsQ0FBSCxDQUFYLENBQ0EsS0FBTUksQ0FBQUEsS0FBSywyQkFBR0osNEJBQUFBLE9BQU8sQ0FBUEEsSUFBQUEsK0JBQWQsRUFBY0EsQ0FBSCxDQUFYLENBQ0EsS0FBTUssQ0FBQUEsS0FBSywyQkFBR0wsNEJBQUFBLE9BQU8sQ0FBUEEsS0FBQUEsK0JBQWQsTUFBY0EsQ0FBSCxDQUFYLENBQ0EsS0FBTU0sQ0FBQUEsS0FBSywyQkFBR04sNEJBQUFBLE9BQU8sQ0FBUEEsS0FBQUEsK0JBQWQsTUFBY0EsQ0FBSCxDQUFYLENBRUEsS0FBTU8sQ0FBQUEsWUFBWSwyQkFBRyxDQUFBLElBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUluQkYsS0FKbUIsQ0FBSCxDQUFsQixDQVhrQyx5QkFrQmxDLE1BQU8sSUFBQSxDQUFBLE9BQUEsQ0FBWSxDQUFBLE9BQUEsQ0FBQSxNQUFBLEdBQXFCLGtEQUN0Q1QsY0FBQUEsQ0FBQUEsTUFBQUEsQ0FBQUEsS0FBQUEsQ0FBQUEsWUFBQUEsQ0FBMkIsQ0FBQSxHQUFBLENBQUEsR0FBQSxHQUFjLGtEQUN2QyxHQUFBLEdBQUEsQ0FBUyxxREFDUEcsUUFBUSxDQUFSQSxHQUFRLENBQVJBLENBRE8seUJBRVAsTUFBT1MsQ0FBQUEsTUFBTSxDQUFiLEdBQWEsQ0FBYixDQUNELENBSEQsaUNBRHVDLHlCQU12QyxHQUFJRixLQUFLLEdBQVQsT0FBQSxDQUF1QixxREFDckJQLFFBQVEsQ0FBQ1UsR0FBRyxDQUFaVixvQkFBWSxDQUFKLENBQVJBLENBRHFCLHlCQUVyQlcsT0FBTyxDQUFDRCxHQUFHLENBQVhDLG9CQUFXLENBQUosQ0FBUEEsQ0FGRixDQUFBLElBR08scURBQ0xYLFFBQVEsQ0FBQ1UsR0FBRyxDQUFaVixjQUFZLENBQUosQ0FBUkEsQ0FESyx5QkFFTFcsT0FBTyxDQUFDRCxHQUFHLENBQVhDLGNBQVcsQ0FBSixDQUFQQSxDQUNELENBWkhkLENBQUFBLEVBREYsQ0FBTyxDQUFQLENBZ0JELENBdERxRCxDLGtIQXlEekNlLG9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyQWRhcHRlciB9IGZyb20gJy4vTG9nZ2VyQWRhcHRlcic7XG5pbXBvcnQgeyBsb2dnZXIsIGFkZFRyYW5zcG9ydCwgY29uZmlndXJlTG9nZ2VyIH0gZnJvbSAnLi9XaW5zdG9uTG9nZ2VyJztcblxuY29uc3QgTUlMTElTRUNPTkRTX0lOX0FfREFZID0gMjQgKiA2MCAqIDYwICogMTAwMDtcblxuZXhwb3J0IGNsYXNzIFdpbnN0b25Mb2dnZXJBZGFwdGVyIGV4dGVuZHMgTG9nZ2VyQWRhcHRlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuICAgIGlmIChvcHRpb25zKSB7XG4gICAgICBjb25maWd1cmVMb2dnZXIob3B0aW9ucyk7XG4gICAgfVxuICB9XG5cbiAgbG9nKCkge1xuICAgIHJldHVybiBsb2dnZXIubG9nLmFwcGx5KGxvZ2dlciwgYXJndW1lbnRzKTtcbiAgfVxuXG4gIGFkZFRyYW5zcG9ydCh0cmFuc3BvcnQpIHtcbiAgICAvLyBOb3RlIHRoYXQgdGhpcyBpcyBjYWxsaW5nIGFkZFRyYW5zcG9ydFxuICAgIC8vIGZyb20gbG9nZ2VyLiAgU2VlIGltcG9ydCAtIGNvbmZ1c2luZy5cbiAgICAvLyBidXQgdGhpcyBpcyBub3QgcmVjdXJzaXZlLlxuICAgIGFkZFRyYW5zcG9ydCh0cmFuc3BvcnQpO1xuICB9XG5cbiAgLy8gY3VzdG9tIHF1ZXJ5IGFzIHdpbnN0b24gaXMgY3VycmVudGx5IGxpbWl0ZWRcbiAgcXVlcnkob3B0aW9ucywgY2FsbGJhY2sgPSAoKSA9PiB7fSkge1xuICAgIGlmICghb3B0aW9ucykge1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cbiAgICAvLyBkZWZhdWx0cyB0byA3IGRheXMgcHJpb3JcbiAgICBjb25zdCBmcm9tID0gb3B0aW9ucy5mcm9tIHx8IG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogTUlMTElTRUNPTkRTX0lOX0FfREFZKTtcbiAgICBjb25zdCB1bnRpbCA9IG9wdGlvbnMudW50aWwgfHwgbmV3IERhdGUoKTtcbiAgICBjb25zdCBsaW1pdCA9IG9wdGlvbnMuc2l6ZSB8fCAxMDtcbiAgICBjb25zdCBvcmRlciA9IG9wdGlvbnMub3JkZXIgfHwgJ2Rlc2MnO1xuICAgIGNvbnN0IGxldmVsID0gb3B0aW9ucy5sZXZlbCB8fCAnaW5mbyc7XG5cbiAgICBjb25zdCBxdWVyeU9wdGlvbnMgPSB7XG4gICAgICBmcm9tLFxuICAgICAgdW50aWwsXG4gICAgICBsaW1pdCxcbiAgICAgIG9yZGVyLFxuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbG9nZ2VyLnF1ZXJ5KHF1ZXJ5T3B0aW9ucywgKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsZXZlbCA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgIGNhbGxiYWNrKHJlc1sncGFyc2Utc2VydmVyLWVycm9yJ10pO1xuICAgICAgICAgIHJlc29sdmUocmVzWydwYXJzZS1zZXJ2ZXItZXJyb3InXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FsbGJhY2socmVzWydwYXJzZS1zZXJ2ZXInXSk7XG4gICAgICAgICAgcmVzb2x2ZShyZXNbJ3BhcnNlLXNlcnZlciddKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2luc3RvbkxvZ2dlckFkYXB0ZXI7XG4iXX0=