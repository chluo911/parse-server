"use strict";function cov_zpwhdjosd(){var path="/parse-server/lib/Routers/FilesRouter.js";var hash="1cb40848946871fbbfdbc4e3d93f6bef92ad71e0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/FilesRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:29}},"2":{start:{line:8,column:15},end:{line:8,column:57}},"3":{start:{line:10,column:18},end:{line:10,column:64}},"4":{start:{line:12,column:18},end:{line:12,column:68}},"5":{start:{line:14,column:12},end:{line:14,column:57}},"6":{start:{line:16,column:14},end:{line:16,column:58}},"7":{start:{line:18,column:12},end:{line:18,column:51}},"8":{start:{line:20,column:14},end:{line:20,column:58}},"9":{start:{line:22,column:49},end:{line:22,column:96}},"10":{start:{line:22,column:84},end:{line:22,column:96}},"11":{start:{line:22,column:121},end:{line:22,column:134}},"12":{start:{line:22,column:159},end:{line:22,column:172}},"13":{start:{line:22,column:174},end:{line:22,column:309}},"14":{start:{line:22,column:234},end:{line:22,column:292}},"15":{start:{line:24,column:53},end:{line:24,column:111}},"16":{start:{line:24,column:98},end:{line:24,column:109}},"17":{start:{line:24,column:112},end:{line:24,column:214}},"18":{start:{line:24,column:188},end:{line:24,column:212}},"19":{start:{line:24,column:227},end:{line:24,column:264}},"20":{start:{line:24,column:266},end:{line:24,column:321}},"21":{start:{line:24,column:297},end:{line:24,column:319}},"22":{start:{line:24,column:335},end:{line:24,column:337}},"23":{start:{line:24,column:367},end:{line:24,column:423}},"24":{start:{line:24,column:425},end:{line:24,column:726}},"25":{start:{line:24,column:448},end:{line:24,column:724}},"26":{start:{line:24,column:534},end:{line:24,column:606}},"27":{start:{line:24,column:608},end:{line:24,column:722}},"28":{start:{line:24,column:646},end:{line:24,column:687}},"29":{start:{line:24,column:697},end:{line:24,column:720}},"30":{start:{line:24,column:727},end:{line:24,column:748}},"31":{start:{line:24,column:749},end:{line:24,column:787}},"32":{start:{line:24,column:762},end:{line:24,column:785}},"33":{start:{line:24,column:788},end:{line:24,column:802}},"34":{start:{line:26,column:39},end:{line:26,column:93}},"35":{start:{line:28,column:17},end:{line:28,column:39}},"36":{start:{line:30,column:13},end:{line:30,column:28}},"37":{start:{line:32,column:28},end:{line:43,column:1}},"38":{start:{line:33,column:2},end:{line:42,column:5}},"39":{start:{line:34,column:4},end:{line:41,column:7}},"40":{start:{line:35,column:6},end:{line:35,column:44}},"41":{start:{line:36,column:17},end:{line:36,column:67}},"42":{start:{line:37,column:6},end:{line:37,column:48}},"43":{start:{line:37,column:34},end:{line:37,column:46}},"44":{start:{line:38,column:6},end:{line:38,column:42}},"45":{start:{line:38,column:31},end:{line:38,column:40}},"46":{start:{line:40,column:6},end:{line:40,column:62}},"47":{start:{line:45,column:28},end:{line:54,column:1}},"48":{start:{line:46,column:2},end:{line:51,column:3}},"49":{start:{line:47,column:19},end:{line:47,column:62}},"50":{start:{line:48,column:4},end:{line:48,column:30}},"51":{start:{line:49,column:4},end:{line:49,column:24}},"52":{start:{line:50,column:4},end:{line:50,column:29}},"53":{start:{line:53,column:2},end:{line:53,column:14}},"54":{start:{line:60,column:17},end:{line:60,column:42}},"55":{start:{line:62,column:4},end:{line:62,column:59}},"56":{start:{line:63,column:4},end:{line:63,column:73}},"57":{start:{line:64,column:4},end:{line:66,column:7}},"58":{start:{line:65,column:6},end:{line:65,column:101}},"59":{start:{line:67,column:4},end:{line:73,column:56}},"60":{start:{line:69,column:8},end:{line:69,column:20}},"61":{start:{line:74,column:4},end:{line:74,column:126}},"62":{start:{line:75,column:4},end:{line:75,column:18}},"63":{start:{line:79,column:19},end:{line:79,column:56}},"64":{start:{line:81,column:28},end:{line:81,column:50}},"65":{start:{line:82,column:21},end:{line:82,column:40}},"66":{start:{line:84,column:24},end:{line:84,column:55}},"67":{start:{line:86,column:4},end:{line:103,column:5}},"68":{start:{line:87,column:6},end:{line:91,column:9}},"69":{start:{line:88,column:8},end:{line:88,column:24}},"70":{start:{line:89,column:8},end:{line:89,column:46}},"71":{start:{line:90,column:8},end:{line:90,column:35}},"72":{start:{line:93,column:6},end:{line:102,column:9}},"73":{start:{line:94,column:8},end:{line:94,column:24}},"74":{start:{line:95,column:8},end:{line:95,column:45}},"75":{start:{line:96,column:8},end:{line:96,column:47}},"76":{start:{line:97,column:8},end:{line:97,column:22}},"77":{start:{line:99,column:8},end:{line:99,column:24}},"78":{start:{line:100,column:8},end:{line:100,column:46}},"79":{start:{line:101,column:8},end:{line:101,column:35}},"80":{start:{line:107,column:19},end:{line:107,column:29}},"81":{start:{line:108,column:17},end:{line:108,column:30}},"82":{start:{line:109,column:21},end:{line:109,column:38}},"83":{start:{line:111,column:21},end:{line:111,column:72}},"84":{start:{line:113,column:4},end:{line:116,column:5}},"85":{start:{line:114,column:6},end:{line:114,column:119}},"86":{start:{line:115,column:6},end:{line:115,column:13}},"87":{start:{line:118,column:4},end:{line:121,column:5}},"88":{start:{line:119,column:6},end:{line:119,column:123}},"89":{start:{line:120,column:6},end:{line:120,column:13}},"90":{start:{line:123,column:4},end:{line:126,column:5}},"91":{start:{line:124,column:6},end:{line:124,column:111}},"92":{start:{line:125,column:6},end:{line:125,column:13}},"93":{start:{line:128,column:28},end:{line:128,column:50}},"94":{start:{line:131,column:8},end:{line:131,column:18}},"95":{start:{line:132,column:24},end:{line:132,column:47}},"96":{start:{line:134,column:4},end:{line:137,column:5}},"97":{start:{line:135,column:6},end:{line:135,column:97}},"98":{start:{line:136,column:6},end:{line:136,column:13}},"99":{start:{line:139,column:18},end:{line:139,column:60}},"100":{start:{line:141,column:4},end:{line:144,column:5}},"101":{start:{line:142,column:6},end:{line:142,column:18}},"102":{start:{line:143,column:6},end:{line:143,column:13}},"103":{start:{line:146,column:19},end:{line:146,column:46}},"104":{start:{line:147,column:17},end:{line:149,column:19}},"105":{start:{line:153,column:8},end:{line:153,column:26}},"106":{start:{line:154,column:4},end:{line:154,column:23}},"107":{start:{line:155,column:4},end:{line:155,column:31}},"108":{start:{line:156,column:21},end:{line:156,column:48}},"109":{start:{line:157,column:23},end:{line:160,column:5}},"110":{start:{line:162,column:4},end:{line:223,column:5}},"111":{start:{line:164,column:28},end:{line:164,column:123}},"112":{start:{line:167,column:6},end:{line:178,column:7}},"113":{start:{line:168,column:8},end:{line:168,column:40}},"114":{start:{line:170,column:8},end:{line:177,column:9}},"115":{start:{line:172,column:10},end:{line:172,column:37}},"116":{start:{line:173,column:10},end:{line:176,column:12}},"117":{start:{line:181,column:6},end:{line:208,column:7}},"118":{start:{line:183,column:8},end:{line:183,column:51}},"119":{start:{line:185,column:27},end:{line:185,column:71}},"120":{start:{line:186,column:8},end:{line:186,column:60}},"121":{start:{line:188,column:28},end:{line:190,column:9}},"122":{start:{line:193,column:25},end:{line:195,column:14}},"123":{start:{line:196,column:8},end:{line:196,column:45}},"124":{start:{line:198,column:33},end:{line:198,column:151}},"125":{start:{line:200,column:8},end:{line:200,column:54}},"126":{start:{line:201,column:8},end:{line:201,column:52}},"127":{start:{line:202,column:8},end:{line:202,column:44}},"128":{start:{line:203,column:8},end:{line:203,column:73}},"129":{start:{line:204,column:8},end:{line:207,column:10}},"130":{start:{line:211,column:6},end:{line:211,column:101}},"131":{start:{line:212,column:6},end:{line:212,column:22}},"132":{start:{line:213,column:6},end:{line:213,column:42}},"133":{start:{line:214,column:6},end:{line:214,column:27}},"134":{start:{line:216,column:6},end:{line:216,column:58}},"135":{start:{line:218,column:20},end:{line:221,column:8}},"136":{start:{line:222,column:6},end:{line:222,column:18}},"137":{start:{line:227,column:4},end:{line:257,column:5}},"138":{start:{line:230,column:10},end:{line:230,column:20}},"139":{start:{line:233,column:10},end:{line:233,column:20}},"140":{start:{line:235,column:19},end:{line:235,column:51}},"141":{start:{line:236,column:6},end:{line:236,column:80}},"142":{start:{line:237,column:25},end:{line:240,column:7}},"143":{start:{line:241,column:6},end:{line:241,column:108}},"144":{start:{line:243,column:6},end:{line:243,column:61}},"145":{start:{line:245,column:6},end:{line:245,column:107}},"146":{start:{line:246,column:6},end:{line:246,column:22}},"147":{start:{line:248,column:6},end:{line:248,column:16}},"148":{start:{line:250,column:6},end:{line:250,column:58}},"149":{start:{line:252,column:20},end:{line:255,column:8}},"150":{start:{line:256,column:6},end:{line:256,column:18}},"151":{start:{line:261,column:19},end:{line:261,column:56}},"152":{start:{line:265,column:8},end:{line:265,column:14}},"153":{start:{line:268,column:8},end:{line:268,column:18}},"154":{start:{line:270,column:4},end:{line:277,column:5}},"155":{start:{line:271,column:19},end:{line:271,column:62}},"156":{start:{line:272,column:6},end:{line:272,column:22}},"157":{start:{line:273,column:6},end:{line:273,column:21}},"158":{start:{line:275,column:6},end:{line:275,column:22}},"159":{start:{line:276,column:6},end:{line:276,column:19}},"160":{start:{line:282,column:0},end:{line:282,column:34}},"161":{start:{line:285,column:2},end:{line:285,column:92}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:22,column:9},end:{line:22,column:33}},loc:{start:{line:22,column:47},end:{line:22,column:311}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:209},end:{line:22,column:210}},loc:{start:{line:22,column:232},end:{line:22,column:294}},line:22},"2":{name:"_interopRequireWildcard",decl:{start:{line:24,column:9},end:{line:24,column:32}},loc:{start:{line:24,column:51},end:{line:24,column:804}},line:24},"3":{name:"_interopRequireDefault",decl:{start:{line:26,column:9},end:{line:26,column:31}},loc:{start:{line:26,column:37},end:{line:26,column:95}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:32,column:28},end:{line:32,column:29}},loc:{start:{line:32,column:35},end:{line:43,column:1}},line:32},"5":{name:"(anonymous_5)",decl:{start:{line:33,column:21},end:{line:33,column:22}},loc:{start:{line:33,column:35},end:{line:42,column:3}},line:33},"6":{name:"(anonymous_6)",decl:{start:{line:34,column:18},end:{line:34,column:19}},loc:{start:{line:34,column:30},end:{line:39,column:5}},line:34},"7":{name:"(anonymous_7)",decl:{start:{line:37,column:26},end:{line:37,column:27}},loc:{start:{line:37,column:34},end:{line:37,column:46}},line:37},"8":{name:"(anonymous_8)",decl:{start:{line:38,column:25},end:{line:38,column:26}},loc:{start:{line:38,column:31},end:{line:38,column:40}},line:38},"9":{name:"(anonymous_9)",decl:{start:{line:39,column:19},end:{line:39,column:20}},loc:{start:{line:39,column:24},end:{line:41,column:5}},line:39},"10":{name:"(anonymous_10)",decl:{start:{line:45,column:28},end:{line:45,column:29}},loc:{start:{line:45,column:42},end:{line:54,column:1}},line:45},"11":{name:"(anonymous_11)",decl:{start:{line:57,column:2},end:{line:57,column:3}},loc:{start:{line:59,column:10},end:{line:76,column:3}},line:59},"12":{name:"(anonymous_12)",decl:{start:{line:64,column:26},end:{line:64,column:27}},loc:{start:{line:64,column:52},end:{line:66,column:5}},line:64},"13":{name:"(anonymous_13)",decl:{start:{line:68,column:12},end:{line:68,column:13}},loc:{start:{line:68,column:18},end:{line:70,column:7}},line:68},"14":{name:"(anonymous_14)",decl:{start:{line:78,column:2},end:{line:78,column:3}},loc:{start:{line:78,column:23},end:{line:104,column:3}},line:78},"15":{name:"(anonymous_15)",decl:{start:{line:87,column:86},end:{line:87,column:87}},loc:{start:{line:87,column:92},end:{line:91,column:7}},line:87},"16":{name:"(anonymous_16)",decl:{start:{line:93,column:57},end:{line:93,column:58}},loc:{start:{line:93,column:65},end:{line:98,column:7}},line:93},"17":{name:"(anonymous_17)",decl:{start:{line:98,column:15},end:{line:98,column:16}},loc:{start:{line:98,column:21},end:{line:102,column:7}},line:98},"18":{name:"(anonymous_18)",decl:{start:{line:106,column:2},end:{line:106,column:3}},loc:{start:{line:106,column:38},end:{line:224,column:3}},line:106},"19":{name:"(anonymous_19)",decl:{start:{line:226,column:2},end:{line:226,column:3}},loc:{start:{line:226,column:38},end:{line:258,column:3}},line:226},"20":{name:"(anonymous_20)",decl:{start:{line:260,column:2},end:{line:260,column:3}},loc:{start:{line:260,column:34},end:{line:278,column:3}},line:260},"21":{name:"isFileStreamable",decl:{start:{line:284,column:9},end:{line:284,column:25}},loc:{start:{line:284,column:48},end:{line:286,column:1}},line:284}},branchMap:{"0":{loc:{start:{line:22,column:49},end:{line:22,column:96}},type:"if",locations:[{start:{line:22,column:49},end:{line:22,column:96}},{start:{line:22,column:49},end:{line:22,column:96}}],line:22},"1":{loc:{start:{line:22,column:241},end:{line:22,column:291}},type:"cond-expr",locations:[{start:{line:22,column:255},end:{line:22,column:271}},{start:{line:22,column:274},end:{line:22,column:291}}],line:22},"2":{loc:{start:{line:24,column:53},end:{line:24,column:111}},type:"if",locations:[{start:{line:24,column:53},end:{line:24,column:111}},{start:{line:24,column:53},end:{line:24,column:111}}],line:24},"3":{loc:{start:{line:24,column:57},end:{line:24,column:94}},type:"binary-expr",locations:[{start:{line:24,column:57},end:{line:24,column:69}},{start:{line:24,column:73},end:{line:24,column:76}},{start:{line:24,column:80},end:{line:24,column:94}}],line:24},"4":{loc:{start:{line:24,column:112},end:{line:24,column:214}},type:"if",locations:[{start:{line:24,column:112},end:{line:24,column:214}},{start:{line:24,column:112},end:{line:24,column:214}}],line:24},"5":{loc:{start:{line:24,column:116},end:{line:24,column:184}},type:"binary-expr",locations:[{start:{line:24,column:116},end:{line:24,column:128}},{start:{line:24,column:132},end:{line:24,column:155}},{start:{line:24,column:159},end:{line:24,column:184}}],line:24},"6":{loc:{start:{line:24,column:266},end:{line:24,column:321}},type:"if",locations:[{start:{line:24,column:266},end:{line:24,column:321}},{start:{line:24,column:266},end:{line:24,column:321}}],line:24},"7":{loc:{start:{line:24,column:270},end:{line:24,column:293}},type:"binary-expr",locations:[{start:{line:24,column:270},end:{line:24,column:275}},{start:{line:24,column:279},end:{line:24,column:293}}],line:24},"8":{loc:{start:{line:24,column:367},end:{line:24,column:423}},type:"binary-expr",locations:[{start:{line:24,column:367},end:{line:24,column:388}},{start:{line:24,column:392},end:{line:24,column:423}}],line:24},"9":{loc:{start:{line:24,column:448},end:{line:24,column:724}},type:"if",locations:[{start:{line:24,column:448},end:{line:24,column:724}},{start:{line:24,column:448},end:{line:24,column:724}}],line:24},"10":{loc:{start:{line:24,column:452},end:{line:24,column:519}},type:"binary-expr",locations:[{start:{line:24,column:452},end:{line:24,column:469}},{start:{line:24,column:473},end:{line:24,column:519}}],line:24},"11":{loc:{start:{line:24,column:534},end:{line:24,column:606}},type:"cond-expr",locations:[{start:{line:24,column:558},end:{line:24,column:599}},{start:{line:24,column:602},end:{line:24,column:606}}],line:24},"12":{loc:{start:{line:24,column:608},end:{line:24,column:722}},type:"if",locations:[{start:{line:24,column:608},end:{line:24,column:722}},{start:{line:24,column:608},end:{line:24,column:722}}],line:24},"13":{loc:{start:{line:24,column:612},end:{line:24,column:642}},type:"binary-expr",locations:[{start:{line:24,column:612},end:{line:24,column:616}},{start:{line:24,column:621},end:{line:24,column:629}},{start:{line:24,column:633},end:{line:24,column:641}}],line:24},"14":{loc:{start:{line:24,column:749},end:{line:24,column:787}},type:"if",locations:[{start:{line:24,column:749},end:{line:24,column:787}},{start:{line:24,column:749},end:{line:24,column:787}}],line:24},"15":{loc:{start:{line:26,column:46},end:{line:26,column:92}},type:"cond-expr",locations:[{start:{line:26,column:70},end:{line:26,column:73}},{start:{line:26,column:76},end:{line:26,column:92}}],line:26},"16":{loc:{start:{line:26,column:46},end:{line:26,column:67}},type:"binary-expr",locations:[{start:{line:26,column:46},end:{line:26,column:49}},{start:{line:26,column:53},end:{line:26,column:67}}],line:26},"17":{loc:{start:{line:46,column:2},end:{line:51,column:3}},type:"if",locations:[{start:{line:46,column:2},end:{line:51,column:3}},{start:{line:46,column:2},end:{line:51,column:3}}],line:46},"18":{loc:{start:{line:57,column:16},end:{line:59,column:8}},type:"default-arg",locations:[{start:{line:59,column:6},end:{line:59,column:8}}],line:57},"19":{loc:{start:{line:58,column:4},end:{line:58,column:26}},type:"default-arg",locations:[{start:{line:58,column:20},end:{line:58,column:26}}],line:58},"20":{loc:{start:{line:86,column:4},end:{line:103,column:5}},type:"if",locations:[{start:{line:86,column:4},end:{line:103,column:5}},{start:{line:86,column:4},end:{line:103,column:5}}],line:86},"21":{loc:{start:{line:111,column:21},end:{line:111,column:72}},type:"binary-expr",locations:[{start:{line:111,column:21},end:{line:111,column:25}},{start:{line:111,column:29},end:{line:111,column:72}}],line:111},"22":{loc:{start:{line:113,column:4},end:{line:116,column:5}},type:"if",locations:[{start:{line:113,column:4},end:{line:116,column:5}},{start:{line:113,column:4},end:{line:116,column:5}}],line:113},"23":{loc:{start:{line:113,column:8},end:{line:113,column:74}},type:"binary-expr",locations:[{start:{line:113,column:8},end:{line:113,column:17}},{start:{line:113,column:21},end:{line:113,column:62}},{start:{line:113,column:66},end:{line:113,column:74}}],line:113},"24":{loc:{start:{line:118,column:4},end:{line:121,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:121,column:5}},{start:{line:118,column:4},end:{line:121,column:5}}],line:118},"25":{loc:{start:{line:118,column:8},end:{line:118,column:87}},type:"binary-expr",locations:[{start:{line:118,column:8},end:{line:118,column:17}},{start:{line:118,column:21},end:{line:118,column:66}},{start:{line:118,column:70},end:{line:118,column:79}},{start:{line:118,column:83},end:{line:118,column:87}}],line:118},"26":{loc:{start:{line:123,column:4},end:{line:126,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:126,column:5}},{start:{line:123,column:4},end:{line:126,column:5}}],line:123},"27":{loc:{start:{line:123,column:8},end:{line:123,column:64}},type:"binary-expr",locations:[{start:{line:123,column:8},end:{line:123,column:17}},{start:{line:123,column:21},end:{line:123,column:55}},{start:{line:123,column:59},end:{line:123,column:64}}],line:123},"28":{loc:{start:{line:134,column:4},end:{line:137,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:137,column:5}},{start:{line:134,column:4},end:{line:137,column:5}}],line:134},"29":{loc:{start:{line:134,column:8},end:{line:134,column:37}},type:"binary-expr",locations:[{start:{line:134,column:8},end:{line:134,column:17}},{start:{line:134,column:21},end:{line:134,column:37}}],line:134},"30":{loc:{start:{line:141,column:4},end:{line:144,column:5}},type:"if",locations:[{start:{line:141,column:4},end:{line:144,column:5}},{start:{line:141,column:4},end:{line:144,column:5}}],line:141},"31":{loc:{start:{line:151,column:6},end:{line:151,column:19}},type:"default-arg",locations:[{start:{line:151,column:17},end:{line:151,column:19}}],line:151},"32":{loc:{start:{line:152,column:6},end:{line:152,column:15}},type:"default-arg",locations:[{start:{line:152,column:13},end:{line:152,column:15}}],line:152},"33":{loc:{start:{line:153,column:8},end:{line:153,column:26}},type:"binary-expr",locations:[{start:{line:153,column:8},end:{line:153,column:20}},{start:{line:153,column:24},end:{line:153,column:26}}],line:153},"34":{loc:{start:{line:167,column:6},end:{line:178,column:7}},type:"if",locations:[{start:{line:167,column:6},end:{line:178,column:7}},{start:{line:167,column:6},end:{line:178,column:7}}],line:167},"35":{loc:{start:{line:170,column:8},end:{line:177,column:9}},type:"if",locations:[{start:{line:170,column:8},end:{line:177,column:9}},{start:{line:170,column:8},end:{line:177,column:9}}],line:170},"36":{loc:{start:{line:181,column:6},end:{line:208,column:7}},type:"if",locations:[{start:{line:181,column:6},end:{line:208,column:7}},{start:{line:181,column:6},end:{line:208,column:7}}],line:181},"37":{loc:{start:{line:193,column:25},end:{line:195,column:14}},type:"cond-expr",locations:[{start:{line:193,column:73},end:{line:195,column:9}},{start:{line:195,column:12},end:{line:195,column:14}}],line:193},"38":{loc:{start:{line:285,column:9},end:{line:285,column:91}},type:"binary-expr",locations:[{start:{line:285,column:9},end:{line:285,column:25}},{start:{line:285,column:29},end:{line:285,column:91}}],line:285}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0],"19":[0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0,0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0],"32":[0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/FilesRouter.js"],names:["triggers","require","http","downloadFileFromURI","uri","Promise","res","rej","get","response","setDefaultEncoding","body","headers","on","data","e","message","addFileDataIfNeeded","file","_source","format","base64","_previousSave","_data","_requestTask","FilesRouter","expressRouter","maxUploadSize","router","express","Router","getHandler","metadataHandler","post","req","next","Parse","Error","INVALID_FILE_NAME","BodyParser","raw","type","limit","Middlewares","handleParseHeaders","createHandler","delete","enforceMasterKeyAccess","deleteHandler","config","Config","params","appId","filesController","filename","contentType","mime","getType","isFileStreamable","handleFileStream","catch","status","set","end","getFileData","then","length","user","auth","isMaster","isLinked","AnonymousUtils","fileUpload","enableForAnonymousUser","FILE_SAVE_ERROR","enableForAuthenticatedUser","enableForPublic","error","validateFilename","toString","File","metadata","tags","fileData","setTags","setMetadata","fileSize","Buffer","byteLength","fileObject","triggerResult","maybeRunFileTrigger","Types","beforeSaveFile","saveResult","url","name","_name","bufferData","from","fileOptions","_metadata","fileTags","Object","keys","_tags","assign","createFileResult","createFile","_url","resolve","afterSaveFile","json","logger","resolveError","code","adapter","getFileLocation","beforeDeleteFile","deleteFile","afterDeleteFile","FILE_DELETE_ERROR","getMetadata"],mappings:"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",sourcesContent:["import express from 'express';\nimport BodyParser from 'body-parser';\nimport * as Middlewares from '../middlewares';\nimport Parse from 'parse/node';\nimport Config from '../Config';\nimport mime from 'mime';\nimport logger from '../logger';\nconst triggers = require('../triggers');\nconst http = require('http');\n\nconst downloadFileFromURI = uri => {\n  return new Promise((res, rej) => {\n    http\n      .get(uri, response => {\n        response.setDefaultEncoding('base64');\n        let body = `data:${response.headers['content-type']};base64,`;\n        response.on('data', data => (body += data));\n        response.on('end', () => res(body));\n      })\n      .on('error', e => {\n        rej(`Error downloading file from ${uri}: ${e.message}`);\n      });\n  });\n};\n\nconst addFileDataIfNeeded = async file => {\n  if (file._source.format === 'uri') {\n    const base64 = await downloadFileFromURI(file._source.uri);\n    file._previousSave = file;\n    file._data = base64;\n    file._requestTask = null;\n  }\n  return file;\n};\n\nexport class FilesRouter {\n  expressRouter({ maxUploadSize = '20Mb' } = {}) {\n    var router = express.Router();\n    router.get('/files/:appId/:filename', this.getHandler);\n    router.get('/files/:appId/metadata/:filename', this.metadataHandler);\n\n    router.post('/files', function (req, res, next) {\n      next(new Parse.Error(Parse.Error.INVALID_FILE_NAME, 'Filename not provided.'));\n    });\n\n    router.post(\n      '/files/:filename',\n      BodyParser.raw({\n        type: () => {\n          return true;\n        },\n        limit: maxUploadSize,\n      }), // Allow uploads without Content-Type, or with any Content-Type.\n      Middlewares.handleParseHeaders,\n      this.createHandler\n    );\n\n    router.delete(\n      '/files/:filename',\n      Middlewares.handleParseHeaders,\n      Middlewares.enforceMasterKeyAccess,\n      this.deleteHandler\n    );\n    return router;\n  }\n\n  getHandler(req, res) {\n    const config = Config.get(req.params.appId);\n    const filesController = config.filesController;\n    const filename = req.params.filename;\n    const contentType = mime.getType(filename);\n    if (isFileStreamable(req, filesController)) {\n      filesController.handleFileStream(config, filename, req, res, contentType).catch(() => {\n        res.status(404);\n        res.set('Content-Type', 'text/plain');\n        res.end('File not found.');\n      });\n    } else {\n      filesController\n        .getFileData(config, filename)\n        .then(data => {\n          res.status(200);\n          res.set('Content-Type', contentType);\n          res.set('Content-Length', data.length);\n          res.end(data);\n        })\n        .catch(() => {\n          res.status(404);\n          res.set('Content-Type', 'text/plain');\n          res.end('File not found.');\n        });\n    }\n  }\n\n  async createHandler(req, res, next) {\n    const config = req.config;\n    const user = req.auth.user;\n    const isMaster = req.auth.isMaster;\n    const isLinked = user && Parse.AnonymousUtils.isLinked(user);\n    if (!isMaster && !config.fileUpload.enableForAnonymousUser && isLinked) {\n      next(\n        new Parse.Error(Parse.Error.FILE_SAVE_ERROR, 'File upload by anonymous user is disabled.')\n      );\n      return;\n    }\n    if (!isMaster && !config.fileUpload.enableForAuthenticatedUser && !isLinked && user) {\n      next(\n        new Parse.Error(\n          Parse.Error.FILE_SAVE_ERROR,\n          'File upload by authenticated user is disabled.'\n        )\n      );\n      return;\n    }\n    if (!isMaster && !config.fileUpload.enableForPublic && !user) {\n      next(new Parse.Error(Parse.Error.FILE_SAVE_ERROR, 'File upload by public is disabled.'));\n      return;\n    }\n    const filesController = config.filesController;\n    const { filename } = req.params;\n    const contentType = req.get('Content-type');\n\n    if (!req.body || !req.body.length) {\n      next(new Parse.Error(Parse.Error.FILE_SAVE_ERROR, 'Invalid file upload.'));\n      return;\n    }\n\n    const error = filesController.validateFilename(filename);\n    if (error) {\n      next(error);\n      return;\n    }\n\n    const base64 = req.body.toString('base64');\n    const file = new Parse.File(filename, { base64 }, contentType);\n    const { metadata = {}, tags = {} } = req.fileData || {};\n    file.setTags(tags);\n    file.setMetadata(metadata);\n    const fileSize = Buffer.byteLength(req.body);\n    const fileObject = { file, fileSize };\n    try {\n      // run beforeSaveFile trigger\n      const triggerResult = await triggers.maybeRunFileTrigger(\n        triggers.Types.beforeSaveFile,\n        fileObject,\n        config,\n        req.auth\n      );\n      let saveResult;\n      // if a new ParseFile is returned check if it's an already saved file\n      if (triggerResult instanceof Parse.File) {\n        fileObject.file = triggerResult;\n        if (triggerResult.url()) {\n          // set fileSize to null because we wont know how big it is here\n          fileObject.fileSize = null;\n          saveResult = {\n            url: triggerResult.url(),\n            name: triggerResult._name,\n          };\n        }\n      }\n      // if the file returned by the trigger has already been saved skip saving anything\n      if (!saveResult) {\n        // if the ParseFile returned is type uri, download the file before saving it\n        await addFileDataIfNeeded(fileObject.file);\n        // update fileSize\n        const bufferData = Buffer.from(fileObject.file._data, 'base64');\n        fileObject.fileSize = Buffer.byteLength(bufferData);\n        // prepare file options\n        const fileOptions = {\n          metadata: fileObject.file._metadata,\n        };\n        // some s3-compatible providers (DigitalOcean, Linode) do not accept tags\n        // so we do not include the tags option if it is empty.\n        const fileTags =\n          Object.keys(fileObject.file._tags).length > 0 ? { tags: fileObject.file._tags } : {};\n        Object.assign(fileOptions, fileTags);\n        // save file\n        const createFileResult = await filesController.createFile(\n          config,\n          fileObject.file._name,\n          bufferData,\n          fileObject.file._source.type,\n          fileOptions\n        );\n        // update file with new data\n        fileObject.file._name = createFileResult.name;\n        fileObject.file._url = createFileResult.url;\n        fileObject.file._requestTask = null;\n        fileObject.file._previousSave = Promise.resolve(fileObject.file);\n        saveResult = {\n          url: createFileResult.url,\n          name: createFileResult.name,\n        };\n      }\n      // run afterSaveFile trigger\n      await triggers.maybeRunFileTrigger(\n        triggers.Types.afterSaveFile,\n        fileObject,\n        config,\n        req.auth\n      );\n      res.status(201);\n      res.set('Location', saveResult.url);\n      res.json(saveResult);\n    } catch (e) {\n      logger.error('Error creating a file: ', e);\n      const error = triggers.resolveError(e, {\n        code: Parse.Error.FILE_SAVE_ERROR,\n        message: `Could not store file: ${fileObject.file._name}.`,\n      });\n      next(error);\n    }\n  }\n\n  async deleteHandler(req, res, next) {\n    try {\n      const { filesController } = req.config;\n      const { filename } = req.params;\n      // run beforeDeleteFile trigger\n      const file = new Parse.File(filename);\n      file._url = filesController.adapter.getFileLocation(req.config, filename);\n      const fileObject = { file, fileSize: null };\n      await triggers.maybeRunFileTrigger(\n        triggers.Types.beforeDeleteFile,\n        fileObject,\n        req.config,\n        req.auth\n      );\n      // delete file\n      await filesController.deleteFile(req.config, filename);\n      // run afterDeleteFile trigger\n      await triggers.maybeRunFileTrigger(\n        triggers.Types.afterDeleteFile,\n        fileObject,\n        req.config,\n        req.auth\n      );\n      res.status(200);\n      // TODO: return useful JSON here?\n      res.end();\n    } catch (e) {\n      logger.error('Error deleting a file: ', e);\n      const error = triggers.resolveError(e, {\n        code: Parse.Error.FILE_DELETE_ERROR,\n        message: 'Could not delete file.',\n      });\n      next(error);\n    }\n  }\n\n  async metadataHandler(req, res) {\n    const config = Config.get(req.params.appId);\n    const { filesController } = config;\n    const { filename } = req.params;\n    try {\n      const data = await filesController.getMetadata(filename);\n      res.status(200);\n      res.json(data);\n    } catch (e) {\n      res.status(200);\n      res.json({});\n    }\n  }\n}\n\nfunction isFileStreamable(req, filesController) {\n  return req.get('Range') && typeof filesController.adapter.handleFileStream === 'function';\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1cb40848946871fbbfdbc4e3d93f6bef92ad71e0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_zpwhdjosd=function(){return actualCoverage;};}return actualCoverage;}cov_zpwhdjosd();cov_zpwhdjosd().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_zpwhdjosd().s[1]++;exports.FilesRouter=void 0;var _express=(cov_zpwhdjosd().s[2]++,_interopRequireDefault(require("express")));var _bodyParser=(cov_zpwhdjosd().s[3]++,_interopRequireDefault(require("body-parser")));var Middlewares=(cov_zpwhdjosd().s[4]++,_interopRequireWildcard(require("../middlewares")));var _node=(cov_zpwhdjosd().s[5]++,_interopRequireDefault(require("parse/node")));var _Config=(cov_zpwhdjosd().s[6]++,_interopRequireDefault(require("../Config")));var _mime=(cov_zpwhdjosd().s[7]++,_interopRequireDefault(require("mime")));var _logger=(cov_zpwhdjosd().s[8]++,_interopRequireDefault(require("../logger")));function _getRequireWildcardCache(nodeInterop){cov_zpwhdjosd().f[0]++;cov_zpwhdjosd().s[9]++;if(typeof WeakMap!=="function"){cov_zpwhdjosd().b[0][0]++;cov_zpwhdjosd().s[10]++;return null;}else{cov_zpwhdjosd().b[0][1]++;}var cacheBabelInterop=(cov_zpwhdjosd().s[11]++,new WeakMap());var cacheNodeInterop=(cov_zpwhdjosd().s[12]++,new WeakMap());cov_zpwhdjosd().s[13]++;return(_getRequireWildcardCache=function(nodeInterop){cov_zpwhdjosd().f[1]++;cov_zpwhdjosd().s[14]++;return nodeInterop?(cov_zpwhdjosd().b[1][0]++,cacheNodeInterop):(cov_zpwhdjosd().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_zpwhdjosd().f[2]++;cov_zpwhdjosd().s[15]++;if((cov_zpwhdjosd().b[3][0]++,!nodeInterop)&&(cov_zpwhdjosd().b[3][1]++,obj)&&(cov_zpwhdjosd().b[3][2]++,obj.__esModule)){cov_zpwhdjosd().b[2][0]++;cov_zpwhdjosd().s[16]++;return obj;}else{cov_zpwhdjosd().b[2][1]++;}cov_zpwhdjosd().s[17]++;if((cov_zpwhdjosd().b[5][0]++,obj===null)||(cov_zpwhdjosd().b[5][1]++,typeof obj!=="object")&&(cov_zpwhdjosd().b[5][2]++,typeof obj!=="function")){cov_zpwhdjosd().b[4][0]++;cov_zpwhdjosd().s[18]++;return{default:obj};}else{cov_zpwhdjosd().b[4][1]++;}var cache=(cov_zpwhdjosd().s[19]++,_getRequireWildcardCache(nodeInterop));cov_zpwhdjosd().s[20]++;if((cov_zpwhdjosd().b[7][0]++,cache)&&(cov_zpwhdjosd().b[7][1]++,cache.has(obj))){cov_zpwhdjosd().b[6][0]++;cov_zpwhdjosd().s[21]++;return cache.get(obj);}else{cov_zpwhdjosd().b[6][1]++;}var newObj=(cov_zpwhdjosd().s[22]++,{});var hasPropertyDescriptor=(cov_zpwhdjosd().s[23]++,(cov_zpwhdjosd().b[8][0]++,Object.defineProperty)&&(cov_zpwhdjosd().b[8][1]++,Object.getOwnPropertyDescriptor));cov_zpwhdjosd().s[24]++;for(var key in obj){cov_zpwhdjosd().s[25]++;if((cov_zpwhdjosd().b[10][0]++,key!=="default")&&(cov_zpwhdjosd().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_zpwhdjosd().b[9][0]++;var desc=(cov_zpwhdjosd().s[26]++,hasPropertyDescriptor?(cov_zpwhdjosd().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_zpwhdjosd().b[11][1]++,null));cov_zpwhdjosd().s[27]++;if((cov_zpwhdjosd().b[13][0]++,desc)&&((cov_zpwhdjosd().b[13][1]++,desc.get)||(cov_zpwhdjosd().b[13][2]++,desc.set))){cov_zpwhdjosd().b[12][0]++;cov_zpwhdjosd().s[28]++;Object.defineProperty(newObj,key,desc);}else{cov_zpwhdjosd().b[12][1]++;cov_zpwhdjosd().s[29]++;newObj[key]=obj[key];}}else{cov_zpwhdjosd().b[9][1]++;}}cov_zpwhdjosd().s[30]++;newObj.default=obj;cov_zpwhdjosd().s[31]++;if(cache){cov_zpwhdjosd().b[14][0]++;cov_zpwhdjosd().s[32]++;cache.set(obj,newObj);}else{cov_zpwhdjosd().b[14][1]++;}cov_zpwhdjosd().s[33]++;return newObj;}function _interopRequireDefault(obj){cov_zpwhdjosd().f[3]++;cov_zpwhdjosd().s[34]++;return(cov_zpwhdjosd().b[16][0]++,obj)&&(cov_zpwhdjosd().b[16][1]++,obj.__esModule)?(cov_zpwhdjosd().b[15][0]++,obj):(cov_zpwhdjosd().b[15][1]++,{default:obj});}const triggers=(cov_zpwhdjosd().s[35]++,require('../triggers'));const http=(cov_zpwhdjosd().s[36]++,require('http'));cov_zpwhdjosd().s[37]++;const downloadFileFromURI=uri=>{cov_zpwhdjosd().f[4]++;cov_zpwhdjosd().s[38]++;return new Promise((res,rej)=>{cov_zpwhdjosd().f[5]++;cov_zpwhdjosd().s[39]++;http.get(uri,response=>{cov_zpwhdjosd().f[6]++;cov_zpwhdjosd().s[40]++;response.setDefaultEncoding('base64');let body=(cov_zpwhdjosd().s[41]++,`data:${response.headers['content-type']};base64,`);cov_zpwhdjosd().s[42]++;response.on('data',data=>{cov_zpwhdjosd().f[7]++;cov_zpwhdjosd().s[43]++;return body+=data;});cov_zpwhdjosd().s[44]++;response.on('end',()=>{cov_zpwhdjosd().f[8]++;cov_zpwhdjosd().s[45]++;return res(body);});}).on('error',e=>{cov_zpwhdjosd().f[9]++;cov_zpwhdjosd().s[46]++;rej(`Error downloading file from ${uri}: ${e.message}`);});});};cov_zpwhdjosd().s[47]++;const addFileDataIfNeeded=async file=>{cov_zpwhdjosd().f[10]++;cov_zpwhdjosd().s[48]++;if(file._source.format==='uri'){cov_zpwhdjosd().b[17][0]++;const base64=(cov_zpwhdjosd().s[49]++,await downloadFileFromURI(file._source.uri));cov_zpwhdjosd().s[50]++;file._previousSave=file;cov_zpwhdjosd().s[51]++;file._data=base64;cov_zpwhdjosd().s[52]++;file._requestTask=null;}else{cov_zpwhdjosd().b[17][1]++;}cov_zpwhdjosd().s[53]++;return file;};class FilesRouter{expressRouter({maxUploadSize=(cov_zpwhdjosd().b[19][0]++,'20Mb')}=(cov_zpwhdjosd().b[18][0]++,{})){cov_zpwhdjosd().f[11]++;var router=(cov_zpwhdjosd().s[54]++,_express.default.Router());cov_zpwhdjosd().s[55]++;router.get('/files/:appId/:filename',this.getHandler);cov_zpwhdjosd().s[56]++;router.get('/files/:appId/metadata/:filename',this.metadataHandler);cov_zpwhdjosd().s[57]++;router.post('/files',function(req,res,next){cov_zpwhdjosd().f[12]++;cov_zpwhdjosd().s[58]++;next(new _node.default.Error(_node.default.Error.INVALID_FILE_NAME,'Filename not provided.'));});cov_zpwhdjosd().s[59]++;router.post('/files/:filename',_bodyParser.default.raw({type:()=>{cov_zpwhdjosd().f[13]++;cov_zpwhdjosd().s[60]++;return true;},limit:maxUploadSize}),// Allow uploads without Content-Type, or with any Content-Type.
Middlewares.handleParseHeaders,this.createHandler);cov_zpwhdjosd().s[61]++;router.delete('/files/:filename',Middlewares.handleParseHeaders,Middlewares.enforceMasterKeyAccess,this.deleteHandler);cov_zpwhdjosd().s[62]++;return router;}getHandler(req,res){cov_zpwhdjosd().f[14]++;const config=(cov_zpwhdjosd().s[63]++,_Config.default.get(req.params.appId));const filesController=(cov_zpwhdjosd().s[64]++,config.filesController);const filename=(cov_zpwhdjosd().s[65]++,req.params.filename);const contentType=(cov_zpwhdjosd().s[66]++,_mime.default.getType(filename));cov_zpwhdjosd().s[67]++;if(isFileStreamable(req,filesController)){cov_zpwhdjosd().b[20][0]++;cov_zpwhdjosd().s[68]++;filesController.handleFileStream(config,filename,req,res,contentType).catch(()=>{cov_zpwhdjosd().f[15]++;cov_zpwhdjosd().s[69]++;res.status(404);cov_zpwhdjosd().s[70]++;res.set('Content-Type','text/plain');cov_zpwhdjosd().s[71]++;res.end('File not found.');});}else{cov_zpwhdjosd().b[20][1]++;cov_zpwhdjosd().s[72]++;filesController.getFileData(config,filename).then(data=>{cov_zpwhdjosd().f[16]++;cov_zpwhdjosd().s[73]++;res.status(200);cov_zpwhdjosd().s[74]++;res.set('Content-Type',contentType);cov_zpwhdjosd().s[75]++;res.set('Content-Length',data.length);cov_zpwhdjosd().s[76]++;res.end(data);}).catch(()=>{cov_zpwhdjosd().f[17]++;cov_zpwhdjosd().s[77]++;res.status(404);cov_zpwhdjosd().s[78]++;res.set('Content-Type','text/plain');cov_zpwhdjosd().s[79]++;res.end('File not found.');});}}async createHandler(req,res,next){cov_zpwhdjosd().f[18]++;const config=(cov_zpwhdjosd().s[80]++,req.config);const user=(cov_zpwhdjosd().s[81]++,req.auth.user);const isMaster=(cov_zpwhdjosd().s[82]++,req.auth.isMaster);const isLinked=(cov_zpwhdjosd().s[83]++,(cov_zpwhdjosd().b[21][0]++,user)&&(cov_zpwhdjosd().b[21][1]++,_node.default.AnonymousUtils.isLinked(user)));cov_zpwhdjosd().s[84]++;if((cov_zpwhdjosd().b[23][0]++,!isMaster)&&(cov_zpwhdjosd().b[23][1]++,!config.fileUpload.enableForAnonymousUser)&&(cov_zpwhdjosd().b[23][2]++,isLinked)){cov_zpwhdjosd().b[22][0]++;cov_zpwhdjosd().s[85]++;next(new _node.default.Error(_node.default.Error.FILE_SAVE_ERROR,'File upload by anonymous user is disabled.'));cov_zpwhdjosd().s[86]++;return;}else{cov_zpwhdjosd().b[22][1]++;}cov_zpwhdjosd().s[87]++;if((cov_zpwhdjosd().b[25][0]++,!isMaster)&&(cov_zpwhdjosd().b[25][1]++,!config.fileUpload.enableForAuthenticatedUser)&&(cov_zpwhdjosd().b[25][2]++,!isLinked)&&(cov_zpwhdjosd().b[25][3]++,user)){cov_zpwhdjosd().b[24][0]++;cov_zpwhdjosd().s[88]++;next(new _node.default.Error(_node.default.Error.FILE_SAVE_ERROR,'File upload by authenticated user is disabled.'));cov_zpwhdjosd().s[89]++;return;}else{cov_zpwhdjosd().b[24][1]++;}cov_zpwhdjosd().s[90]++;if((cov_zpwhdjosd().b[27][0]++,!isMaster)&&(cov_zpwhdjosd().b[27][1]++,!config.fileUpload.enableForPublic)&&(cov_zpwhdjosd().b[27][2]++,!user)){cov_zpwhdjosd().b[26][0]++;cov_zpwhdjosd().s[91]++;next(new _node.default.Error(_node.default.Error.FILE_SAVE_ERROR,'File upload by public is disabled.'));cov_zpwhdjosd().s[92]++;return;}else{cov_zpwhdjosd().b[26][1]++;}const filesController=(cov_zpwhdjosd().s[93]++,config.filesController);const{filename}=(cov_zpwhdjosd().s[94]++,req.params);const contentType=(cov_zpwhdjosd().s[95]++,req.get('Content-type'));cov_zpwhdjosd().s[96]++;if((cov_zpwhdjosd().b[29][0]++,!req.body)||(cov_zpwhdjosd().b[29][1]++,!req.body.length)){cov_zpwhdjosd().b[28][0]++;cov_zpwhdjosd().s[97]++;next(new _node.default.Error(_node.default.Error.FILE_SAVE_ERROR,'Invalid file upload.'));cov_zpwhdjosd().s[98]++;return;}else{cov_zpwhdjosd().b[28][1]++;}const error=(cov_zpwhdjosd().s[99]++,filesController.validateFilename(filename));cov_zpwhdjosd().s[100]++;if(error){cov_zpwhdjosd().b[30][0]++;cov_zpwhdjosd().s[101]++;next(error);cov_zpwhdjosd().s[102]++;return;}else{cov_zpwhdjosd().b[30][1]++;}const base64=(cov_zpwhdjosd().s[103]++,req.body.toString('base64'));const file=(cov_zpwhdjosd().s[104]++,new _node.default.File(filename,{base64},contentType));const{metadata=(cov_zpwhdjosd().b[31][0]++,{}),tags=(cov_zpwhdjosd().b[32][0]++,{})}=(cov_zpwhdjosd().s[105]++,(cov_zpwhdjosd().b[33][0]++,req.fileData)||(cov_zpwhdjosd().b[33][1]++,{}));cov_zpwhdjosd().s[106]++;file.setTags(tags);cov_zpwhdjosd().s[107]++;file.setMetadata(metadata);const fileSize=(cov_zpwhdjosd().s[108]++,Buffer.byteLength(req.body));const fileObject=(cov_zpwhdjosd().s[109]++,{file,fileSize});cov_zpwhdjosd().s[110]++;try{// run beforeSaveFile trigger
const triggerResult=(cov_zpwhdjosd().s[111]++,await triggers.maybeRunFileTrigger(triggers.Types.beforeSaveFile,fileObject,config,req.auth));let saveResult;// if a new ParseFile is returned check if it's an already saved file
cov_zpwhdjosd().s[112]++;if(triggerResult instanceof _node.default.File){cov_zpwhdjosd().b[34][0]++;cov_zpwhdjosd().s[113]++;fileObject.file=triggerResult;cov_zpwhdjosd().s[114]++;if(triggerResult.url()){cov_zpwhdjosd().b[35][0]++;cov_zpwhdjosd().s[115]++;// set fileSize to null because we wont know how big it is here
fileObject.fileSize=null;cov_zpwhdjosd().s[116]++;saveResult={url:triggerResult.url(),name:triggerResult._name};}else{cov_zpwhdjosd().b[35][1]++;}}else{cov_zpwhdjosd().b[34][1]++;}// if the file returned by the trigger has already been saved skip saving anything
cov_zpwhdjosd().s[117]++;if(!saveResult){cov_zpwhdjosd().b[36][0]++;cov_zpwhdjosd().s[118]++;// if the ParseFile returned is type uri, download the file before saving it
await addFileDataIfNeeded(fileObject.file);// update fileSize
const bufferData=(cov_zpwhdjosd().s[119]++,Buffer.from(fileObject.file._data,'base64'));cov_zpwhdjosd().s[120]++;fileObject.fileSize=Buffer.byteLength(bufferData);// prepare file options
const fileOptions=(cov_zpwhdjosd().s[121]++,{metadata:fileObject.file._metadata});// some s3-compatible providers (DigitalOcean, Linode) do not accept tags
// so we do not include the tags option if it is empty.
const fileTags=(cov_zpwhdjosd().s[122]++,Object.keys(fileObject.file._tags).length>0?(cov_zpwhdjosd().b[37][0]++,{tags:fileObject.file._tags}):(cov_zpwhdjosd().b[37][1]++,{}));cov_zpwhdjosd().s[123]++;Object.assign(fileOptions,fileTags);// save file
const createFileResult=(cov_zpwhdjosd().s[124]++,await filesController.createFile(config,fileObject.file._name,bufferData,fileObject.file._source.type,fileOptions));// update file with new data
cov_zpwhdjosd().s[125]++;fileObject.file._name=createFileResult.name;cov_zpwhdjosd().s[126]++;fileObject.file._url=createFileResult.url;cov_zpwhdjosd().s[127]++;fileObject.file._requestTask=null;cov_zpwhdjosd().s[128]++;fileObject.file._previousSave=Promise.resolve(fileObject.file);cov_zpwhdjosd().s[129]++;saveResult={url:createFileResult.url,name:createFileResult.name};}else{cov_zpwhdjosd().b[36][1]++;}// run afterSaveFile trigger
cov_zpwhdjosd().s[130]++;await triggers.maybeRunFileTrigger(triggers.Types.afterSaveFile,fileObject,config,req.auth);cov_zpwhdjosd().s[131]++;res.status(201);cov_zpwhdjosd().s[132]++;res.set('Location',saveResult.url);cov_zpwhdjosd().s[133]++;res.json(saveResult);}catch(e){cov_zpwhdjosd().s[134]++;_logger.default.error('Error creating a file: ',e);const error=(cov_zpwhdjosd().s[135]++,triggers.resolveError(e,{code:_node.default.Error.FILE_SAVE_ERROR,message:`Could not store file: ${fileObject.file._name}.`}));cov_zpwhdjosd().s[136]++;next(error);}}async deleteHandler(req,res,next){cov_zpwhdjosd().f[19]++;cov_zpwhdjosd().s[137]++;try{const{filesController}=(cov_zpwhdjosd().s[138]++,req.config);const{filename}=(cov_zpwhdjosd().s[139]++,req.params);// run beforeDeleteFile trigger
const file=(cov_zpwhdjosd().s[140]++,new _node.default.File(filename));cov_zpwhdjosd().s[141]++;file._url=filesController.adapter.getFileLocation(req.config,filename);const fileObject=(cov_zpwhdjosd().s[142]++,{file,fileSize:null});cov_zpwhdjosd().s[143]++;await triggers.maybeRunFileTrigger(triggers.Types.beforeDeleteFile,fileObject,req.config,req.auth);// delete file
cov_zpwhdjosd().s[144]++;await filesController.deleteFile(req.config,filename);// run afterDeleteFile trigger
cov_zpwhdjosd().s[145]++;await triggers.maybeRunFileTrigger(triggers.Types.afterDeleteFile,fileObject,req.config,req.auth);cov_zpwhdjosd().s[146]++;res.status(200);// TODO: return useful JSON here?
cov_zpwhdjosd().s[147]++;res.end();}catch(e){cov_zpwhdjosd().s[148]++;_logger.default.error('Error deleting a file: ',e);const error=(cov_zpwhdjosd().s[149]++,triggers.resolveError(e,{code:_node.default.Error.FILE_DELETE_ERROR,message:'Could not delete file.'}));cov_zpwhdjosd().s[150]++;next(error);}}async metadataHandler(req,res){cov_zpwhdjosd().f[20]++;const config=(cov_zpwhdjosd().s[151]++,_Config.default.get(req.params.appId));const{filesController}=(cov_zpwhdjosd().s[152]++,config);const{filename}=(cov_zpwhdjosd().s[153]++,req.params);cov_zpwhdjosd().s[154]++;try{const data=(cov_zpwhdjosd().s[155]++,await filesController.getMetadata(filename));cov_zpwhdjosd().s[156]++;res.status(200);cov_zpwhdjosd().s[157]++;res.json(data);}catch(e){cov_zpwhdjosd().s[158]++;res.status(200);cov_zpwhdjosd().s[159]++;res.json({});}}}cov_zpwhdjosd().s[160]++;exports.FilesRouter=FilesRouter;function isFileStreamable(req,filesController){cov_zpwhdjosd().f[21]++;cov_zpwhdjosd().s[161]++;return(cov_zpwhdjosd().b[38][0]++,req.get('Range'))&&(cov_zpwhdjosd().b[38][1]++,typeof filesController.adapter.handleFileStream==='function');}//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Sb3V0ZXJzL0ZpbGVzUm91dGVyLmpzIl0sIm5hbWVzIjpbInRyaWdnZXJzIiwicmVxdWlyZSIsImh0dHAiLCJkb3dubG9hZEZpbGVGcm9tVVJJIiwidXJpIiwicmVzcG9uc2UiLCJib2R5IiwiZGF0YSIsInJlcyIsImUiLCJyZWoiLCJtZXNzYWdlIiwiYWRkRmlsZURhdGFJZk5lZWRlZCIsImZpbGUiLCJiYXNlNjQiLCJleHByZXNzUm91dGVyIiwibWF4VXBsb2FkU2l6ZSIsInJvdXRlciIsImV4cHJlc3MiLCJuZXh0IiwiUGFyc2UiLCJ0eXBlIiwibGltaXQiLCJNaWRkbGV3YXJlcyIsImdldEhhbmRsZXIiLCJjb25maWciLCJDb25maWciLCJyZXEiLCJmaWxlc0NvbnRyb2xsZXIiLCJmaWxlbmFtZSIsImNvbnRlbnRUeXBlIiwibWltZSIsImlzRmlsZVN0cmVhbWFibGUiLCJjcmVhdGVIYW5kbGVyIiwidXNlciIsImlzTWFzdGVyIiwiaXNMaW5rZWQiLCJlcnJvciIsIm1ldGFkYXRhIiwidGFncyIsImZpbGVTaXplIiwiQnVmZmVyIiwiZmlsZU9iamVjdCIsInRyaWdnZXJSZXN1bHQiLCJzYXZlUmVzdWx0IiwidXJsIiwibmFtZSIsIl9uYW1lIiwiYnVmZmVyRGF0YSIsImZpbGVPcHRpb25zIiwiX21ldGFkYXRhIiwiZmlsZVRhZ3MiLCJfdGFncyIsIk9iamVjdCIsImNyZWF0ZUZpbGVSZXN1bHQiLCJQcm9taXNlIiwibG9nZ2VyIiwiY29kZSIsImRlbGV0ZUhhbmRsZXIiLCJtZXRhZGF0YUhhbmRsZXIiXSwibWFwcGluZ3MiOiI4OXlDQUlBOzJOQUpBLEdBQUEsQ0FBQSxRQUFBLHlCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsV0FBQSx5QkFBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLFdBQUEseUJBQUEsdUJB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LENBQUFBLGVBQWUsQ0FBZkEsT0FBQUEsQ0FBUCxnQkFBQSxHQUEzQixVQUFPRCxDQUFQLENBQ0QsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IEJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0ICogYXMgTWlkZGxld2FyZXMgZnJvbSAnLi4vbWlkZGxld2FyZXMnO1xuaW1wb3J0IFBhcnNlIGZyb20gJ3BhcnNlL25vZGUnO1xuaW1wb3J0IENvbmZpZyBmcm9tICcuLi9Db25maWcnO1xuaW1wb3J0IG1pbWUgZnJvbSAnbWltZSc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4uL2xvZ2dlcic7XG5jb25zdCB0cmlnZ2VycyA9IHJlcXVpcmUoJy4uL3RyaWdnZXJzJyk7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuXG5jb25zdCBkb3dubG9hZEZpbGVGcm9tVVJJID0gdXJpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgIGh0dHBcbiAgICAgIC5nZXQodXJpLCByZXNwb25zZSA9PiB7XG4gICAgICAgIHJlc3BvbnNlLnNldERlZmF1bHRFbmNvZGluZygnYmFzZTY0Jyk7XG4gICAgICAgIGxldCBib2R5ID0gYGRhdGE6JHtyZXNwb25zZS5oZWFkZXJzWydjb250ZW50LXR5cGUnXX07YmFzZTY0LGA7XG4gICAgICAgIHJlc3BvbnNlLm9uKCdkYXRhJywgZGF0YSA9PiAoYm9keSArPSBkYXRhKSk7XG4gICAgICAgIHJlc3BvbnNlLm9uKCdlbmQnLCAoKSA9PiByZXMoYm9keSkpO1xuICAgICAgfSlcbiAgICAgIC5vbignZXJyb3InLCBlID0+IHtcbiAgICAgICAgcmVqKGBFcnJvciBkb3dubG9hZGluZyBmaWxlIGZyb20gJHt1cml9OiAke2UubWVzc2FnZX1gKTtcbiAgICAgIH0pO1xuICB9KTtcbn07XG5cbmNvbnN0IGFkZEZpbGVEYXRhSWZOZWVkZWQgPSBhc3luYyBmaWxlID0+IHtcbiAgaWYgKGZpbGUuX3NvdXJjZS5mb3JtYXQgPT09ICd1cmknKSB7XG4gICAgY29uc3QgYmFzZTY0ID0gYXdhaXQgZG93bmxvYWRGaWxlRnJvbVVSSShmaWxlLl9zb3VyY2UudXJpKTtcbiAgICBmaWxlLl9wcmV2aW91c1NhdmUgPSBmaWxlO1xuICAgIGZpbGUuX2RhdGEgPSBiYXNlNjQ7XG4gICAgZmlsZS5fcmVxdWVzdFRhc2sgPSBudWxsO1xuICB9XG4gIHJldHVybiBmaWxlO1xufTtcblxuZXhwb3J0IGNsYXNzIEZpbGVzUm91dGVyIHtcbiAgZXhwcmVzc1JvdXRlcih7IG1heFVwbG9hZFNpemUgPSAnMjBNYicgfSA9IHt9KSB7XG4gICAgdmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG4gICAgcm91dGVyLmdldCgnL2ZpbGVzLzphcHBJZC86ZmlsZW5hbWUnLCB0aGlzLmdldEhhbmRsZXIpO1xuICAgIHJvdXRlci5nZXQoJy9maWxlcy86YXBwSWQvbWV0YWRhdGEvOmZpbGVuYW1lJywgdGhpcy5tZXRhZGF0YUhhbmRsZXIpO1xuXG4gICAgcm91dGVyLnBvc3QoJy9maWxlcycsIGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgbmV4dChuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuSU5WQUxJRF9GSUxFX05BTUUsICdGaWxlbmFtZSBub3QgcHJvdmlkZWQuJykpO1xuICAgIH0pO1xuXG4gICAgcm91dGVyLnBvc3QoXG4gICAgICAnL2ZpbGVzLzpmaWxlbmFtZScsXG4gICAgICBCb2R5UGFyc2VyLnJhdyh7XG4gICAgICAgIHR5cGU6ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgbGltaXQ6IG1heFVwbG9hZFNpemUsXG4gICAgICB9KSwgLy8gQWxsb3cgdXBsb2FkcyB3aXRob3V0IENvbnRlbnQtVHlwZSwgb3Igd2l0aCBhbnkgQ29udGVudC1UeXBlLlxuICAgICAgTWlkZGxld2FyZXMuaGFuZGxlUGFyc2VIZWFkZXJzLFxuICAgICAgdGhpcy5jcmVhdGVIYW5kbGVyXG4gICAgKTtcblxuICAgIHJvdXRlci5kZWxldGUoXG4gICAgICAnL2ZpbGVzLzpmaWxlbmFtZScsXG4gICAgICBNaWRkbGV3YXJlcy5oYW5kbGVQYXJzZUhlYWRlcnMsXG4gICAgICBNaWRkbGV3YXJlcy5lbmZvcmNlTWFzdGVyS2V5QWNjZXNzLFxuICAgICAgdGhpcy5kZWxldGVIYW5kbGVyXG4gICAgKTtcbiAgICByZXR1cm4gcm91dGVyO1xuICB9XG5cbiAgZ2V0SGFuZGxlcihyZXEsIHJlcykge1xuICAgIGNvbnN0IGNvbmZpZyA9IENvbmZpZy5nZXQocmVxLnBhcmFtcy5hcHBJZCk7XG4gICAgY29uc3QgZmlsZXNDb250cm9sbGVyID0gY29uZmlnLmZpbGVzQ29udHJvbGxlcjtcbiAgICBjb25zdCBmaWxlbmFtZSA9IHJlcS5wYXJhbXMuZmlsZW5hbWU7XG4gICAgY29uc3QgY29udGVudFR5cGUgPSBtaW1lLmdldFR5cGUoZmlsZW5hbWUpO1xuICAgIGlmIChpc0ZpbGVTdHJlYW1hYmxlKHJlcSwgZmlsZXNDb250cm9sbGVyKSkge1xuICAgICAgZmlsZXNDb250cm9sbGVyLmhhbmRsZUZpbGVTdHJlYW0oY29uZmlnLCBmaWxlbmFtZSwgcmVxLCByZXMsIGNvbnRlbnRUeXBlKS5jYXRjaCgoKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDA0KTtcbiAgICAgICAgcmVzLnNldCgnQ29udGVudC1UeXBlJywgJ3RleHQvcGxhaW4nKTtcbiAgICAgICAgcmVzLmVuZCgnRmlsZSBub3QgZm91bmQuJyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmlsZXNDb250cm9sbGVyXG4gICAgICAgIC5nZXRGaWxlRGF0YShjb25maWcsIGZpbGVuYW1lKVxuICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICByZXMuc3RhdHVzKDIwMCk7XG4gICAgICAgICAgcmVzLnNldCgnQ29udGVudC1UeXBlJywgY29udGVudFR5cGUpO1xuICAgICAgICAgIHJlcy5zZXQoJ0NvbnRlbnQtTGVuZ3RoJywgZGF0YS5sZW5ndGgpO1xuICAgICAgICAgIHJlcy5lbmQoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgcmVzLnN0YXR1cyg0MDQpO1xuICAgICAgICAgIHJlcy5zZXQoJ0NvbnRlbnQtVHlwZScsICd0ZXh0L3BsYWluJyk7XG4gICAgICAgICAgcmVzLmVuZCgnRmlsZSBub3QgZm91bmQuJyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZUhhbmRsZXIocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCBjb25maWcgPSByZXEuY29uZmlnO1xuICAgIGNvbnN0IHVzZXIgPSByZXEuYXV0aC51c2VyO1xuICAgIGNvbnN0IGlzTWFzdGVyID0gcmVxLmF1dGguaXNNYXN0ZXI7XG4gICAgY29uc3QgaXNMaW5rZWQgPSB1c2VyICYmIFBhcnNlLkFub255bW91c1V0aWxzLmlzTGlua2VkKHVzZXIpO1xuICAgIGlmICghaXNNYXN0ZXIgJiYgIWNvbmZpZy5maWxlVXBsb2FkLmVuYWJsZUZvckFub255bW91c1VzZXIgJiYgaXNMaW5rZWQpIHtcbiAgICAgIG5leHQoXG4gICAgICAgIG5ldyBQYXJzZS5FcnJvcihQYXJzZS5FcnJvci5GSUxFX1NBVkVfRVJST1IsICdGaWxlIHVwbG9hZCBieSBhbm9ueW1vdXMgdXNlciBpcyBkaXNhYmxlZC4nKVxuICAgICAgKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFpc01hc3RlciAmJiAhY29uZmlnLmZpbGVVcGxvYWQuZW5hYmxlRm9yQXV0aGVudGljYXRlZFVzZXIgJiYgIWlzTGlua2VkICYmIHVzZXIpIHtcbiAgICAgIG5leHQoXG4gICAgICAgIG5ldyBQYXJzZS5FcnJvcihcbiAgICAgICAgICBQYXJzZS5FcnJvci5GSUxFX1NBVkVfRVJST1IsXG4gICAgICAgICAgJ0ZpbGUgdXBsb2FkIGJ5IGF1dGhlbnRpY2F0ZWQgdXNlciBpcyBkaXNhYmxlZC4nXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghaXNNYXN0ZXIgJiYgIWNvbmZpZy5maWxlVXBsb2FkLmVuYWJsZUZvclB1YmxpYyAmJiAhdXNlcikge1xuICAgICAgbmV4dChuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuRklMRV9TQVZFX0VSUk9SLCAnRmlsZSB1cGxvYWQgYnkgcHVibGljIGlzIGRpc2FibGVkLicpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZmlsZXNDb250cm9sbGVyID0gY29uZmlnLmZpbGVzQ29udHJvbGxlcjtcbiAgICBjb25zdCB7IGZpbGVuYW1lIH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxLmdldCgnQ29udGVudC10eXBlJyk7XG5cbiAgICBpZiAoIXJlcS5ib2R5IHx8ICFyZXEuYm9keS5sZW5ndGgpIHtcbiAgICAgIG5leHQobmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLkZJTEVfU0FWRV9FUlJPUiwgJ0ludmFsaWQgZmlsZSB1cGxvYWQuJykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGVycm9yID0gZmlsZXNDb250cm9sbGVyLnZhbGlkYXRlRmlsZW5hbWUoZmlsZW5hbWUpO1xuICAgIGlmIChlcnJvcikge1xuICAgICAgbmV4dChlcnJvcik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgYmFzZTY0ID0gcmVxLmJvZHkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgIGNvbnN0IGZpbGUgPSBuZXcgUGFyc2UuRmlsZShmaWxlbmFtZSwgeyBiYXNlNjQgfSwgY29udGVudFR5cGUpO1xuICAgIGNvbnN0IHsgbWV0YWRhdGEgPSB7fSwgdGFncyA9IHt9IH0gPSByZXEuZmlsZURhdGEgfHwge307XG4gICAgZmlsZS5zZXRUYWdzKHRhZ3MpO1xuICAgIGZpbGUuc2V0TWV0YWRhdGEobWV0YWRhdGEpO1xuICAgIGNvbnN0IGZpbGVTaXplID0gQnVmZmVyLmJ5dGVMZW5ndGgocmVxLmJvZHkpO1xuICAgIGNvbnN0IGZpbGVPYmplY3QgPSB7IGZpbGUsIGZpbGVTaXplIH07XG4gICAgdHJ5IHtcbiAgICAgIC8vIHJ1biBiZWZvcmVTYXZlRmlsZSB0cmlnZ2VyXG4gICAgICBjb25zdCB0cmlnZ2VyUmVzdWx0ID0gYXdhaXQgdHJpZ2dlcnMubWF5YmVSdW5GaWxlVHJpZ2dlcihcbiAgICAgICAgdHJpZ2dlcnMuVHlwZXMuYmVmb3JlU2F2ZUZpbGUsXG4gICAgICAgIGZpbGVPYmplY3QsXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgcmVxLmF1dGhcbiAgICAgICk7XG4gICAgICBsZXQgc2F2ZVJlc3VsdDtcbiAgICAgIC8vIGlmIGEgbmV3IFBhcnNlRmlsZSBpcyByZXR1cm5lZCBjaGVjayBpZiBpdCdzIGFuIGFscmVhZHkgc2F2ZWQgZmlsZVxuICAgICAgaWYgKHRyaWdnZXJSZXN1bHQgaW5zdGFuY2VvZiBQYXJzZS5GaWxlKSB7XG4gICAgICAgIGZpbGVPYmplY3QuZmlsZSA9IHRyaWdnZXJSZXN1bHQ7XG4gICAgICAgIGlmICh0cmlnZ2VyUmVzdWx0LnVybCgpKSB7XG4gICAgICAgICAgLy8gc2V0IGZpbGVTaXplIHRvIG51bGwgYmVjYXVzZSB3ZSB3b250IGtub3cgaG93IGJpZyBpdCBpcyBoZXJlXG4gICAgICAgICAgZmlsZU9iamVjdC5maWxlU2l6ZSA9IG51bGw7XG4gICAgICAgICAgc2F2ZVJlc3VsdCA9IHtcbiAgICAgICAgICAgIHVybDogdHJpZ2dlclJlc3VsdC51cmwoKSxcbiAgICAgICAgICAgIG5hbWU6IHRyaWdnZXJSZXN1bHQuX25hbWUsXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gaWYgdGhlIGZpbGUgcmV0dXJuZWQgYnkgdGhlIHRyaWdnZXIgaGFzIGFscmVhZHkgYmVlbiBzYXZlZCBza2lwIHNhdmluZyBhbnl0aGluZ1xuICAgICAgaWYgKCFzYXZlUmVzdWx0KSB7XG4gICAgICAgIC8vIGlmIHRoZSBQYXJzZUZpbGUgcmV0dXJuZWQgaXMgdHlwZSB1cmksIGRvd25sb2FkIHRoZSBmaWxlIGJlZm9yZSBzYXZpbmcgaXRcbiAgICAgICAgYXdhaXQgYWRkRmlsZURhdGFJZk5lZWRlZChmaWxlT2JqZWN0LmZpbGUpO1xuICAgICAgICAvLyB1cGRhdGUgZmlsZVNpemVcbiAgICAgICAgY29uc3QgYnVmZmVyRGF0YSA9IEJ1ZmZlci5mcm9tKGZpbGVPYmplY3QuZmlsZS5fZGF0YSwgJ2Jhc2U2NCcpO1xuICAgICAgICBmaWxlT2JqZWN0LmZpbGVTaXplID0gQnVmZmVyLmJ5dGVMZW5ndGgoYnVmZmVyRGF0YSk7XG4gICAgICAgIC8vIHByZXBhcmUgZmlsZSBvcHRpb25zXG4gICAgICAgIGNvbnN0IGZpbGVPcHRpb25zID0ge1xuICAgICAgICAgIG1ldGFkYXRhOiBmaWxlT2JqZWN0LmZpbGUuX21ldGFkYXRhLFxuICAgICAgICB9O1xuICAgICAgICAvLyBzb21lIHMzLWNvbXBhdGlibGUgcHJvdmlkZXJzIChEaWdpdGFsT2NlYW4sIExpbm9kZSkgZG8gbm90IGFjY2VwdCB0YWdzXG4gICAgICAgIC8vIHNvIHdlIGRvIG5vdCBpbmNsdWRlIHRoZSB0YWdzIG9wdGlvbiBpZiBpdCBpcyBlbXB0eS5cbiAgICAgICAgY29uc3QgZmlsZVRhZ3MgPVxuICAgICAgICAgIE9iamVjdC5rZXlzKGZpbGVPYmplY3QuZmlsZS5fdGFncykubGVuZ3RoID4gMCA/IHsgdGFnczogZmlsZU9iamVjdC5maWxlLl90YWdzIH0gOiB7fTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihmaWxlT3B0aW9ucywgZmlsZVRhZ3MpO1xuICAgICAgICAvLyBzYXZlIGZpbGVcbiAgICAgICAgY29uc3QgY3JlYXRlRmlsZVJlc3VsdCA9IGF3YWl0IGZpbGVzQ29udHJvbGxlci5jcmVhdGVGaWxlKFxuICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICBmaWxlT2JqZWN0LmZpbGUuX25hbWUsXG4gICAgICAgICAgYnVmZmVyRGF0YSxcbiAgICAgICAgICBmaWxlT2JqZWN0LmZpbGUuX3NvdXJjZS50eXBlLFxuICAgICAgICAgIGZpbGVPcHRpb25zXG4gICAgICAgICk7XG4gICAgICAgIC8vIHVwZGF0ZSBmaWxlIHdpdGggbmV3IGRhdGFcbiAgICAgICAgZmlsZU9iamVjdC5maWxlLl9uYW1lID0gY3JlYXRlRmlsZVJlc3VsdC5uYW1lO1xuICAgICAgICBmaWxlT2JqZWN0LmZpbGUuX3VybCA9IGNyZWF0ZUZpbGVSZXN1bHQudXJsO1xuICAgICAgICBmaWxlT2JqZWN0LmZpbGUuX3JlcXVlc3RUYXNrID0gbnVsbDtcbiAgICAgICAgZmlsZU9iamVjdC5maWxlLl9wcmV2aW91c1NhdmUgPSBQcm9taXNlLnJlc29sdmUoZmlsZU9iamVjdC5maWxlKTtcbiAgICAgICAgc2F2ZVJlc3VsdCA9IHtcbiAgICAgICAgICB1cmw6IGNyZWF0ZUZpbGVSZXN1bHQudXJsLFxuICAgICAgICAgIG5hbWU6IGNyZWF0ZUZpbGVSZXN1bHQubmFtZSxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIC8vIHJ1biBhZnRlclNhdmVGaWxlIHRyaWdnZXJcbiAgICAgIGF3YWl0IHRyaWdnZXJzLm1heWJlUnVuRmlsZVRyaWdnZXIoXG4gICAgICAgIHRyaWdnZXJzLlR5cGVzLmFmdGVyU2F2ZUZpbGUsXG4gICAgICAgIGZpbGVPYmplY3QsXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgcmVxLmF1dGhcbiAgICAgICk7XG4gICAgICByZXMuc3RhdHVzKDIwMSk7XG4gICAgICByZXMuc2V0KCdMb2NhdGlvbicsIHNhdmVSZXN1bHQudXJsKTtcbiAgICAgIHJlcy5qc29uKHNhdmVSZXN1bHQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignRXJyb3IgY3JlYXRpbmcgYSBmaWxlOiAnLCBlKTtcbiAgICAgIGNvbnN0IGVycm9yID0gdHJpZ2dlcnMucmVzb2x2ZUVycm9yKGUsIHtcbiAgICAgICAgY29kZTogUGFyc2UuRXJyb3IuRklMRV9TQVZFX0VSUk9SLFxuICAgICAgICBtZXNzYWdlOiBgQ291bGQgbm90IHN0b3JlIGZpbGU6ICR7ZmlsZU9iamVjdC5maWxlLl9uYW1lfS5gLFxuICAgICAgfSk7XG4gICAgICBuZXh0KGVycm9yKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBkZWxldGVIYW5kbGVyKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZmlsZXNDb250cm9sbGVyIH0gPSByZXEuY29uZmlnO1xuICAgICAgY29uc3QgeyBmaWxlbmFtZSB9ID0gcmVxLnBhcmFtcztcbiAgICAgIC8vIHJ1biBiZWZvcmVEZWxldGVGaWxlIHRyaWdnZXJcbiAgICAgIGNvbnN0IGZpbGUgPSBuZXcgUGFyc2UuRmlsZShmaWxlbmFtZSk7XG4gICAgICBmaWxlLl91cmwgPSBmaWxlc0NvbnRyb2xsZXIuYWRhcHRlci5nZXRGaWxlTG9jYXRpb24ocmVxLmNvbmZpZywgZmlsZW5hbWUpO1xuICAgICAgY29uc3QgZmlsZU9iamVjdCA9IHsgZmlsZSwgZmlsZVNpemU6IG51bGwgfTtcbiAgICAgIGF3YWl0IHRyaWdnZXJzLm1heWJlUnVuRmlsZVRyaWdnZXIoXG4gICAgICAgIHRyaWdnZXJzLlR5cGVzLmJlZm9yZURlbGV0ZUZpbGUsXG4gICAgICAgIGZpbGVPYmplY3QsXG4gICAgICAgIHJlcS5jb25maWcsXG4gICAgICAgIHJlcS5hdXRoXG4gICAgICApO1xuICAgICAgLy8gZGVsZXRlIGZpbGVcbiAgICAgIGF3YWl0IGZpbGVzQ29udHJvbGxlci5kZWxldGVGaWxlKHJlcS5jb25maWcsIGZpbGVuYW1lKTtcbiAgICAgIC8vIHJ1biBhZnRlckRlbGV0ZUZpbGUgdHJpZ2dlclxuICAgICAgYXdhaXQgdHJpZ2dlcnMubWF5YmVSdW5GaWxlVHJpZ2dlcihcbiAgICAgICAgdHJpZ2dlcnMuVHlwZXMuYWZ0ZXJEZWxldGVGaWxlLFxuICAgICAgICBmaWxlT2JqZWN0LFxuICAgICAgICByZXEuY29uZmlnLFxuICAgICAgICByZXEuYXV0aFxuICAgICAgKTtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKTtcbiAgICAgIC8vIFRPRE86IHJldHVybiB1c2VmdWwgSlNPTiBoZXJlP1xuICAgICAgcmVzLmVuZCgpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignRXJyb3IgZGVsZXRpbmcgYSBmaWxlOiAnLCBlKTtcbiAgICAgIGNvbnN0IGVycm9yID0gdHJpZ2dlcnMucmVzb2x2ZUVycm9yKGUsIHtcbiAgICAgICAgY29kZTogUGFyc2UuRXJyb3IuRklMRV9ERUxFVEVfRVJST1IsXG4gICAgICAgIG1lc3NhZ2U6ICdDb3VsZCBub3QgZGVsZXRlIGZpbGUuJyxcbiAgICAgIH0pO1xuICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbWV0YWRhdGFIYW5kbGVyKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgY29uZmlnID0gQ29uZmlnLmdldChyZXEucGFyYW1zLmFwcElkKTtcbiAgICBjb25zdCB7IGZpbGVzQ29udHJvbGxlciB9ID0gY29uZmlnO1xuICAgIGNvbnN0IHsgZmlsZW5hbWUgfSA9IHJlcS5wYXJhbXM7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBmaWxlc0NvbnRyb2xsZXIuZ2V0TWV0YWRhdGEoZmlsZW5hbWUpO1xuICAgICAgcmVzLnN0YXR1cygyMDApO1xuICAgICAgcmVzLmpzb24oZGF0YSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cygyMDApO1xuICAgICAgcmVzLmpzb24oe30pO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpc0ZpbGVTdHJlYW1hYmxlKHJlcSwgZmlsZXNDb250cm9sbGVyKSB7XG4gIHJldHVybiByZXEuZ2V0KCdSYW5nZScpICYmIHR5cGVvZiBmaWxlc0NvbnRyb2xsZXIuYWRhcHRlci5oYW5kbGVGaWxlU3RyZWFtID09PSAnZnVuY3Rpb24nO1xufVxuIl19