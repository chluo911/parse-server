"use strict";function cov_1rf5e04r2f(){var path="/parse-server/lib/GraphQL/transformers/query.js";var hash="f32a532eb24a22bc3958611146b780845f08865a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/GraphQL/transformers/query.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:91}},"2":{start:{line:8,column:20},end:{line:8,column:44}},"3":{start:{line:10,column:54},end:{line:10,column:73}},"4":{start:{line:10,column:75},end:{line:10,column:330}},"5":{start:{line:10,column:125},end:{line:10,column:161}},"6":{start:{line:10,column:163},end:{line:10,column:296}},"7":{start:{line:10,column:185},end:{line:10,column:294}},"8":{start:{line:10,column:227},end:{line:10,column:290}},"9":{start:{line:10,column:297},end:{line:10,column:328}},"10":{start:{line:10,column:331},end:{line:10,column:343}},"11":{start:{line:12,column:33},end:{line:12,column:517}},"12":{start:{line:12,column:46},end:{line:12,column:47}},"13":{start:{line:12,column:91},end:{line:12,column:131}},"14":{start:{line:12,column:133},end:{line:12,column:515}},"15":{start:{line:12,column:146},end:{line:12,column:247}},"16":{start:{line:12,column:201},end:{line:12,column:243}},"17":{start:{line:12,column:255},end:{line:12,column:515}},"18":{start:{line:12,column:295},end:{line:12,column:369}},"19":{start:{line:12,column:379},end:{line:12,column:513}},"20":{start:{line:12,column:428},end:{line:12,column:509}},"21":{start:{line:12,column:518},end:{line:12,column:532}},"22":{start:{line:14,column:44},end:{line:14,column:195}},"23":{start:{line:14,column:62},end:{line:14,column:166}},"24":{start:{line:14,column:176},end:{line:14,column:193}},"25":{start:{line:14,column:196},end:{line:14,column:207}},"26":{start:{line:16,column:22},end:{line:20,column:1}},"27":{start:{line:21,column:27},end:{line:57,column:1}},"28":{start:{line:59,column:45},end:{line:246,column:1}},"29":{start:{line:60,column:17},end:{line:60,column:91}},"30":{start:{line:60,column:49},end:{line:60,column:83}},"31":{start:{line:62,column:2},end:{line:86,column:3}},"32":{start:{line:63,column:4},end:{line:83,column:7}},"33":{start:{line:64,column:30},end:{line:64,column:57}},"34":{start:{line:66,column:6},end:{line:82,column:7}},"35":{start:{line:67,column:31},end:{line:67,column:79}},"36":{start:{line:69,column:8},end:{line:71,column:9}},"37":{start:{line:70,column:10},end:{line:70,column:58}},"38":{start:{line:72,column:13},end:{line:82,column:7}},"39":{start:{line:73,column:8},end:{line:81,column:11}},"40":{start:{line:74,column:33},end:{line:74,column:71}},"41":{start:{line:76,column:10},end:{line:78,column:11}},"42":{start:{line:77,column:12},end:{line:77,column:37}},"43":{start:{line:80,column:10},end:{line:80,column:23}},"44":{start:{line:84,column:4},end:{line:84,column:45}},"45":{start:{line:85,column:4},end:{line:85,column:32}},"46":{start:{line:88,column:2},end:{line:245,column:5}},"47":{start:{line:89,column:21},end:{line:89,column:43}},"48":{start:{line:91,column:4},end:{line:94,column:5}},"49":{start:{line:92,column:6},end:{line:92,column:74}},"50":{start:{line:93,column:6},end:{line:93,column:36}},"51":{start:{line:123,column:4},end:{line:187,column:5}},"52":{start:{line:124,column:6},end:{line:124,column:48}},"53":{start:{line:125,column:6},end:{line:127,column:9}},"54":{start:{line:128,column:11},end:{line:187,column:5}},"55":{start:{line:131,column:10},end:{line:131,column:33}},"56":{start:{line:133,column:6},end:{line:165,column:7}},"57":{start:{line:134,column:8},end:{line:162,column:9}},"58":{start:{line:135,column:30},end:{line:135,column:63}},"59":{start:{line:137,column:10},end:{line:157,column:11}},"60":{start:{line:138,column:12},end:{line:146,column:13}},"61":{start:{line:139,column:14},end:{line:141,column:17}},"62":{start:{line:143,column:14},end:{line:145,column:16}},"63":{start:{line:148,column:37},end:{line:148,column:76}},"64":{start:{line:149,column:12},end:{line:156,column:14}},"65":{start:{line:159,column:10},end:{line:159,column:37}},"66":{start:{line:161,column:10},end:{line:161,column:66}},"67":{start:{line:164,column:8},end:{line:164,column:15}},"68":{start:{line:167,column:6},end:{line:183,column:7}},"69":{start:{line:169,column:10},end:{line:172,column:12}},"70":{start:{line:173,column:10},end:{line:173,column:115}},"71":{start:{line:174,column:10},end:{line:174,column:16}},"72":{start:{line:177,column:10},end:{line:180,column:12}},"73":{start:{line:181,column:10},end:{line:181,column:118}},"74":{start:{line:182,column:10},end:{line:182,column:16}},"75":{start:{line:185,column:6},end:{line:185,column:36}},"76":{start:{line:186,column:6},end:{line:186,column:13}},"77":{start:{line:189,column:4},end:{line:236,column:5}},"78":{start:{line:191,column:8},end:{line:193,column:9}},"79":{start:{line:192,column:10},end:{line:192,column:41}},"80":{start:{line:195,column:8},end:{line:195,column:14}},"81":{start:{line:198,column:8},end:{line:200,column:9}},"82":{start:{line:199,column:10},end:{line:199,column:41}},"83":{start:{line:202,column:8},end:{line:202,column:14}},"84":{start:{line:205,column:8},end:{line:212,column:9}},"85":{start:{line:206,column:10},end:{line:210,column:37}},"86":{start:{line:211,column:10},end:{line:211,column:66}},"87":{start:{line:214,column:8},end:{line:214,column:14}},"88":{start:{line:217,column:8},end:{line:223,column:9}},"89":{start:{line:218,column:10},end:{line:222,column:13}},"90":{start:{line:219,column:12},end:{line:221,column:13}},"91":{start:{line:220,column:14},end:{line:220,column:43}},"92":{start:{line:225,column:8},end:{line:225,column:14}},"93":{start:{line:228,column:8},end:{line:233,column:9}},"94":{start:{line:229,column:10},end:{line:231,column:54}},"95":{start:{line:232,column:10},end:{line:232,column:66}},"96":{start:{line:235,column:8},end:{line:235,column:14}},"97":{start:{line:238,column:4},end:{line:244,column:5}},"98":{start:{line:239,column:6},end:{line:243,column:7}},"99":{start:{line:240,column:8},end:{line:240,column:72}},"100":{start:{line:242,column:8},end:{line:242,column:106}},"101":{start:{line:248,column:0},end:{line:248,column:84}},"102":{start:{line:250,column:35},end:{line:270,column:1}},"103":{start:{line:251,column:2},end:{line:253,column:3}},"104":{start:{line:252,column:4},end:{line:252,column:11}},"105":{start:{line:255,column:2},end:{line:269,column:5}},"106":{start:{line:256,column:23},end:{line:256,column:45}},"107":{start:{line:258,column:4},end:{line:268,column:5}},"108":{start:{line:259,column:6},end:{line:259,column:36}},"109":{start:{line:260,column:6},end:{line:260,column:43}},"110":{start:{line:261,column:6},end:{line:261,column:42}},"111":{start:{line:262,column:6},end:{line:264,column:9}},"112":{start:{line:263,column:8},end:{line:263,column:76}},"113":{start:{line:265,column:6},end:{line:265,column:13}},"114":{start:{line:267,column:6},end:{line:267,column:104}},"115":{start:{line:272,column:0},end:{line:272,column:64}}},fnMap:{"0":{name:"ownKeys",decl:{start:{line:10,column:9},end:{line:10,column:16}},loc:{start:{line:10,column:41},end:{line:10,column:345}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:210},end:{line:10,column:211}},loc:{start:{line:10,column:225},end:{line:10,column:292}},line:10},"2":{name:"_objectSpread",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:31},end:{line:12,column:534}},line:12},"3":{name:"(anonymous_3)",decl:{start:{line:12,column:184},end:{line:12,column:185}},loc:{start:{line:12,column:199},end:{line:12,column:245}},line:12},"4":{name:"(anonymous_4)",decl:{start:{line:12,column:411},end:{line:12,column:412}},loc:{start:{line:12,column:426},end:{line:12,column:511}},line:12},"5":{name:"_defineProperty",decl:{start:{line:14,column:9},end:{line:14,column:24}},loc:{start:{line:14,column:42},end:{line:14,column:209}},line:14},"6":{name:"(anonymous_6)",decl:{start:{line:59,column:45},end:{line:59,column:46}},loc:{start:{line:59,column:123},end:{line:246,column:1}},line:59},"7":{name:"(anonymous_7)",decl:{start:{line:60,column:35},end:{line:60,column:36}},loc:{start:{line:60,column:49},end:{line:60,column:83}},line:60},"8":{name:"(anonymous_8)",decl:{start:{line:63,column:37},end:{line:63,column:38}},loc:{start:{line:63,column:55},end:{line:83,column:5}},line:63},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:58},end:{line:73,column:59}},loc:{start:{line:73,column:67},end:{line:81,column:9}},line:73},"10":{name:"(anonymous_10)",decl:{start:{line:88,column:35},end:{line:88,column:36}},loc:{start:{line:88,column:48},end:{line:245,column:3}},line:88},"11":{name:"(anonymous_11)",decl:{start:{line:218,column:29},end:{line:218,column:30}},loc:{start:{line:218,column:41},end:{line:222,column:11}},line:218},"12":{name:"(anonymous_12)",decl:{start:{line:250,column:35},end:{line:250,column:36}},loc:{start:{line:250,column:77},end:{line:270,column:1}},line:250},"13":{name:"(anonymous_13)",decl:{start:{line:255,column:35},end:{line:255,column:36}},loc:{start:{line:255,column:48},end:{line:269,column:3}},line:255},"14":{name:"(anonymous_14)",decl:{start:{line:262,column:25},end:{line:262,column:26}},loc:{start:{line:262,column:43},end:{line:264,column:7}},line:262}},branchMap:{"0":{loc:{start:{line:10,column:75},end:{line:10,column:330}},type:"if",locations:[{start:{line:10,column:75},end:{line:10,column:330}},{start:{line:10,column:75},end:{line:10,column:330}}],line:10},"1":{loc:{start:{line:10,column:163},end:{line:10,column:296}},type:"if",locations:[{start:{line:10,column:163},end:{line:10,column:296}},{start:{line:10,column:163},end:{line:10,column:296}}],line:10},"2":{loc:{start:{line:12,column:91},end:{line:12,column:131}},type:"cond-expr",locations:[{start:{line:12,column:114},end:{line:12,column:126}},{start:{line:12,column:129},end:{line:12,column:131}}],line:12},"3":{loc:{start:{line:12,column:133},end:{line:12,column:515}},type:"if",locations:[{start:{line:12,column:133},end:{line:12,column:515}},{start:{line:12,column:133},end:{line:12,column:515}}],line:12},"4":{loc:{start:{line:12,column:255},end:{line:12,column:515}},type:"if",locations:[{start:{line:12,column:255},end:{line:12,column:515}},{start:{line:12,column:255},end:{line:12,column:515}}],line:12},"5":{loc:{start:{line:14,column:44},end:{line:14,column:195}},type:"if",locations:[{start:{line:14,column:44},end:{line:14,column:195}},{start:{line:14,column:44},end:{line:14,column:195}}],line:14},"6":{loc:{start:{line:62,column:2},end:{line:86,column:3}},type:"if",locations:[{start:{line:62,column:2},end:{line:86,column:3}},{start:{line:62,column:2},end:{line:86,column:3}}],line:62},"7":{loc:{start:{line:62,column:6},end:{line:62,column:43}},type:"binary-expr",locations:[{start:{line:62,column:6},end:{line:62,column:30}},{start:{line:62,column:34},end:{line:62,column:43}}],line:62},"8":{loc:{start:{line:66,column:6},end:{line:82,column:7}},type:"if",locations:[{start:{line:66,column:6},end:{line:82,column:7}},{start:{line:66,column:6},end:{line:82,column:7}}],line:66},"9":{loc:{start:{line:69,column:8},end:{line:71,column:9}},type:"if",locations:[{start:{line:69,column:8},end:{line:71,column:9}},{start:{line:69,column:8},end:{line:71,column:9}}],line:69},"10":{loc:{start:{line:72,column:13},end:{line:82,column:7}},type:"if",locations:[{start:{line:72,column:13},end:{line:82,column:7}},{start:{line:72,column:13},end:{line:82,column:7}}],line:72},"11":{loc:{start:{line:76,column:10},end:{line:78,column:11}},type:"if",locations:[{start:{line:76,column:10},end:{line:78,column:11}},{start:{line:76,column:10},end:{line:78,column:11}}],line:76},"12":{loc:{start:{line:91,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:91,column:4},end:{line:94,column:5}},{start:{line:91,column:4},end:{line:94,column:5}}],line:91},"13":{loc:{start:{line:123,column:4},end:{line:187,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:187,column:5}},{start:{line:123,column:4},end:{line:187,column:5}}],line:123},"14":{loc:{start:{line:123,column:8},end:{line:123,column:82}},type:"binary-expr",locations:[{start:{line:123,column:8},end:{line:123,column:22}},{start:{line:123,column:26},end:{line:123,column:42}},{start:{line:123,column:46},end:{line:123,column:63}},{start:{line:123,column:67},end:{line:123,column:82}}],line:123},"15":{loc:{start:{line:128,column:11},end:{line:187,column:5}},type:"if",locations:[{start:{line:128,column:11},end:{line:187,column:5}},{start:{line:128,column:11},end:{line:187,column:5}}],line:128},"16":{loc:{start:{line:128,column:15},end:{line:128,column:133}},type:"binary-expr",locations:[{start:{line:128,column:15},end:{line:128,column:38}},{start:{line:128,column:43},end:{line:128,column:85}},{start:{line:128,column:89},end:{line:128,column:132}}],line:128},"17":{loc:{start:{line:133,column:6},end:{line:165,column:7}},type:"if",locations:[{start:{line:133,column:6},end:{line:165,column:7}},{start:{line:133,column:6},end:{line:165,column:7}}],line:133},"18":{loc:{start:{line:134,column:8},end:{line:162,column:9}},type:"if",locations:[{start:{line:134,column:8},end:{line:162,column:9}},{start:{line:134,column:8},end:{line:162,column:9}}],line:134},"19":{loc:{start:{line:135,column:30},end:{line:135,column:63}},type:"cond-expr",locations:[{start:{line:135,column:43},end:{line:135,column:50}},{start:{line:135,column:53},end:{line:135,column:63}}],line:135},"20":{loc:{start:{line:137,column:10},end:{line:157,column:11}},type:"if",locations:[{start:{line:137,column:10},end:{line:157,column:11}},{start:{line:137,column:10},end:{line:157,column:11}}],line:137},"21":{loc:{start:{line:138,column:12},end:{line:146,column:13}},type:"if",locations:[{start:{line:138,column:12},end:{line:146,column:13}},{start:{line:138,column:12},end:{line:146,column:13}}],line:138},"22":{loc:{start:{line:148,column:37},end:{line:148,column:76}},type:"cond-expr",locations:[{start:{line:148,column:50},end:{line:148,column:60}},{start:{line:148,column:63},end:{line:148,column:76}}],line:148},"23":{loc:{start:{line:167,column:6},end:{line:183,column:7}},type:"switch",locations:[{start:{line:168,column:8},end:{line:174,column:16}},{start:{line:176,column:8},end:{line:182,column:16}}],line:167},"24":{loc:{start:{line:189,column:4},end:{line:236,column:5}},type:"switch",locations:[{start:{line:190,column:6},end:{line:195,column:14}},{start:{line:197,column:6},end:{line:202,column:14}},{start:{line:204,column:6},end:{line:214,column:14}},{start:{line:216,column:6},end:{line:225,column:14}},{start:{line:227,column:6},end:{line:235,column:14}}],line:189},"25":{loc:{start:{line:191,column:8},end:{line:193,column:9}},type:"if",locations:[{start:{line:191,column:8},end:{line:193,column:9}},{start:{line:191,column:8},end:{line:193,column:9}}],line:191},"26":{loc:{start:{line:191,column:12},end:{line:191,column:64}},type:"binary-expr",locations:[{start:{line:191,column:12},end:{line:191,column:42}},{start:{line:191,column:46},end:{line:191,column:64}}],line:191},"27":{loc:{start:{line:198,column:8},end:{line:200,column:9}},type:"if",locations:[{start:{line:198,column:8},end:{line:200,column:9}},{start:{line:198,column:8},end:{line:200,column:9}}],line:198},"28":{loc:{start:{line:198,column:12},end:{line:198,column:64}},type:"binary-expr",locations:[{start:{line:198,column:12},end:{line:198,column:42}},{start:{line:198,column:46},end:{line:198,column:64}}],line:198},"29":{loc:{start:{line:205,column:8},end:{line:212,column:9}},type:"if",locations:[{start:{line:205,column:8},end:{line:212,column:9}},{start:{line:205,column:8},end:{line:212,column:9}}],line:205},"30":{loc:{start:{line:205,column:12},end:{line:205,column:92}},type:"binary-expr",locations:[{start:{line:205,column:12},end:{line:205,column:42}},{start:{line:205,column:46},end:{line:205,column:67}},{start:{line:205,column:71},end:{line:205,column:92}}],line:205},"31":{loc:{start:{line:217,column:8},end:{line:223,column:9}},type:"if",locations:[{start:{line:217,column:8},end:{line:223,column:9}},{start:{line:217,column:8},end:{line:223,column:9}}],line:217},"32":{loc:{start:{line:219,column:12},end:{line:221,column:13}},type:"if",locations:[{start:{line:219,column:12},end:{line:221,column:13}},{start:{line:219,column:12},end:{line:221,column:13}}],line:219},"33":{loc:{start:{line:219,column:16},end:{line:219,column:64}},type:"binary-expr",locations:[{start:{line:219,column:16},end:{line:219,column:44}},{start:{line:219,column:48},end:{line:219,column:64}}],line:219},"34":{loc:{start:{line:228,column:8},end:{line:233,column:9}},type:"if",locations:[{start:{line:228,column:8},end:{line:233,column:9}},{start:{line:228,column:8},end:{line:233,column:9}}],line:228},"35":{loc:{start:{line:228,column:12},end:{line:228,column:86}},type:"binary-expr",locations:[{start:{line:228,column:12},end:{line:228,column:42}},{start:{line:228,column:46},end:{line:228,column:63}},{start:{line:228,column:67},end:{line:228,column:86}}],line:228},"36":{loc:{start:{line:238,column:4},end:{line:244,column:5}},type:"if",locations:[{start:{line:238,column:4},end:{line:244,column:5}},{start:{line:238,column:4},end:{line:244,column:5}}],line:238},"37":{loc:{start:{line:239,column:6},end:{line:243,column:7}},type:"if",locations:[{start:{line:239,column:6},end:{line:243,column:7}},{start:{line:239,column:6},end:{line:243,column:7}}],line:239},"38":{loc:{start:{line:251,column:2},end:{line:253,column:3}},type:"if",locations:[{start:{line:251,column:2},end:{line:253,column:3}},{start:{line:251,column:2},end:{line:253,column:3}}],line:251},"39":{loc:{start:{line:251,column:6},end:{line:251,column:53}},type:"binary-expr",locations:[{start:{line:251,column:6},end:{line:251,column:18}},{start:{line:251,column:22},end:{line:251,column:53}}],line:251},"40":{loc:{start:{line:258,column:4},end:{line:268,column:5}},type:"if",locations:[{start:{line:258,column:4},end:{line:268,column:5}},{start:{line:258,column:4},end:{line:268,column:5}}],line:258}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},inputSourceMap:{version:3,sources:["../../../src/GraphQL/transformers/query.js"],names:["parseQueryMap","OR","AND","NOR","parseConstraintMap","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","in","notIn","exists","inQueryKey","notInQueryKey","inQuery","notInQuery","containedBy","contains","matchesRegex","options","text","search","term","language","caseSensitive","diacriticSensitive","nearSphere","maxDistance","maxDistanceInRadians","maxDistanceInMiles","maxDistanceInKilometers","within","box","geoWithin","polygon","centerSphere","geoIntersects","point","transformQueryConstraintInputToParse","constraints","parentFieldName","className","parentConstraints","parseClasses","fields","find","parseClass","Object","keys","forEach","constraintName","constraintValue","globalIdObject","type","id","Array","isArray","map","value","objectId","fieldName","fieldValue","key","targetClass","whereTarget","$exists","parseWhereTarget","where","$inQuery","transformQueryInputToParse","$notInQuery","__type","bottomLeft","upperRight","geoPoint","center","distance","fieldValueItem"],mappings:"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",sourcesContent:["import { fromGlobalId } from 'graphql-relay';\n\nconst parseQueryMap = {\n  OR: '$or',\n  AND: '$and',\n  NOR: '$nor',\n};\n\nconst parseConstraintMap = {\n  equalTo: '$eq',\n  notEqualTo: '$ne',\n  lessThan: '$lt',\n  lessThanOrEqualTo: '$lte',\n  greaterThan: '$gt',\n  greaterThanOrEqualTo: '$gte',\n  in: '$in',\n  notIn: '$nin',\n  exists: '$exists',\n  inQueryKey: '$select',\n  notInQueryKey: '$dontSelect',\n  inQuery: '$inQuery',\n  notInQuery: '$notInQuery',\n  containedBy: '$containedBy',\n  contains: '$all',\n  matchesRegex: '$regex',\n  options: '$options',\n  text: '$text',\n  search: '$search',\n  term: '$term',\n  language: '$language',\n  caseSensitive: '$caseSensitive',\n  diacriticSensitive: '$diacriticSensitive',\n  nearSphere: '$nearSphere',\n  maxDistance: '$maxDistance',\n  maxDistanceInRadians: '$maxDistanceInRadians',\n  maxDistanceInMiles: '$maxDistanceInMiles',\n  maxDistanceInKilometers: '$maxDistanceInKilometers',\n  within: '$within',\n  box: '$box',\n  geoWithin: '$geoWithin',\n  polygon: '$polygon',\n  centerSphere: '$centerSphere',\n  geoIntersects: '$geoIntersects',\n  point: '$point',\n};\n\nconst transformQueryConstraintInputToParse = (\n  constraints,\n  parentFieldName,\n  className,\n  parentConstraints,\n  parseClasses\n) => {\n  const fields = parseClasses.find(parseClass => parseClass.className === className).fields;\n  if (parentFieldName === 'id' && className) {\n    Object.keys(constraints).forEach(constraintName => {\n      const constraintValue = constraints[constraintName];\n      if (typeof constraintValue === 'string') {\n        const globalIdObject = fromGlobalId(constraintValue);\n\n        if (globalIdObject.type === className) {\n          constraints[constraintName] = globalIdObject.id;\n        }\n      } else if (Array.isArray(constraintValue)) {\n        constraints[constraintName] = constraintValue.map(value => {\n          const globalIdObject = fromGlobalId(value);\n\n          if (globalIdObject.type === className) {\n            return globalIdObject.id;\n          }\n\n          return value;\n        });\n      }\n    });\n    parentConstraints.objectId = constraints;\n    delete parentConstraints.id;\n  }\n  Object.keys(constraints).forEach(fieldName => {\n    let fieldValue = constraints[fieldName];\n    if (parseConstraintMap[fieldName]) {\n      constraints[parseConstraintMap[fieldName]] = constraints[fieldName];\n      delete constraints[fieldName];\n    }\n    /**\n     * If we have a key-value pair, we need to change the way the constraint is structured.\n     *\n     * Example:\n     *   From:\n     *   {\n     *     \"someField\": {\n     *       \"lessThan\": {\n     *         \"key\":\"foo.bar\",\n     *         \"value\": 100\n     *       },\n     *       \"greaterThan\": {\n     *         \"key\":\"foo.bar\",\n     *         \"value\": 10\n     *       }\n     *     }\n     *   }\n     *\n     *   To:\n     *   {\n     *     \"someField.foo.bar\": {\n     *       \"$lt\": 100,\n     *       \"$gt\": 10\n     *      }\n     *   }\n     */\n    if (fieldValue.key && fieldValue.value && parentConstraints && parentFieldName) {\n      delete parentConstraints[parentFieldName];\n      parentConstraints[`${parentFieldName}.${fieldValue.key}`] = {\n        ...parentConstraints[`${parentFieldName}.${fieldValue.key}`],\n        [parseConstraintMap[fieldName]]: fieldValue.value,\n      };\n    } else if (\n      fields[parentFieldName] &&\n      (fields[parentFieldName].type === 'Pointer' || fields[parentFieldName].type === 'Relation')\n    ) {\n      const { targetClass } = fields[parentFieldName];\n      if (fieldName === 'exists') {\n        if (fields[parentFieldName].type === 'Relation') {\n          const whereTarget = fieldValue ? 'where' : 'notWhere';\n          if (constraints[whereTarget]) {\n            if (constraints[whereTarget].objectId) {\n              constraints[whereTarget].objectId = {\n                ...constraints[whereTarget].objectId,\n                $exists: fieldValue,\n              };\n            } else {\n              constraints[whereTarget].objectId = {\n                $exists: fieldValue,\n              };\n            }\n          } else {\n            const parseWhereTarget = fieldValue ? '$inQuery' : '$notInQuery';\n            parentConstraints[parentFieldName][parseWhereTarget] = {\n              where: { objectId: { $exists: true } },\n              className: targetClass,\n            };\n          }\n          delete constraints.$exists;\n        } else {\n          parentConstraints[parentFieldName].$exists = fieldValue;\n        }\n        return;\n      }\n      switch (fieldName) {\n        case 'have':\n          parentConstraints[parentFieldName].$inQuery = {\n            where: fieldValue,\n            className: targetClass,\n          };\n          transformQueryInputToParse(\n            parentConstraints[parentFieldName].$inQuery.where,\n            targetClass,\n            parseClasses\n          );\n          break;\n        case 'haveNot':\n          parentConstraints[parentFieldName].$notInQuery = {\n            where: fieldValue,\n            className: targetClass,\n          };\n          transformQueryInputToParse(\n            parentConstraints[parentFieldName].$notInQuery.where,\n            targetClass,\n            parseClasses\n          );\n          break;\n      }\n      delete constraints[fieldName];\n      return;\n    }\n    switch (fieldName) {\n      case 'point':\n        if (typeof fieldValue === 'object' && !fieldValue.__type) {\n          fieldValue.__type = 'GeoPoint';\n        }\n        break;\n      case 'nearSphere':\n        if (typeof fieldValue === 'object' && !fieldValue.__type) {\n          fieldValue.__type = 'GeoPoint';\n        }\n        break;\n      case 'box':\n        if (typeof fieldValue === 'object' && fieldValue.bottomLeft && fieldValue.upperRight) {\n          fieldValue = [\n            {\n              __type: 'GeoPoint',\n              ...fieldValue.bottomLeft,\n            },\n            {\n              __type: 'GeoPoint',\n              ...fieldValue.upperRight,\n            },\n          ];\n          constraints[parseConstraintMap[fieldName]] = fieldValue;\n        }\n        break;\n      case 'polygon':\n        if (fieldValue instanceof Array) {\n          fieldValue.forEach(geoPoint => {\n            if (typeof geoPoint === 'object' && !geoPoint.__type) {\n              geoPoint.__type = 'GeoPoint';\n            }\n          });\n        }\n        break;\n      case 'centerSphere':\n        if (typeof fieldValue === 'object' && fieldValue.center && fieldValue.distance) {\n          fieldValue = [\n            {\n              __type: 'GeoPoint',\n              ...fieldValue.center,\n            },\n            fieldValue.distance,\n          ];\n          constraints[parseConstraintMap[fieldName]] = fieldValue;\n        }\n        break;\n    }\n    if (typeof fieldValue === 'object') {\n      if (fieldName === 'where') {\n        transformQueryInputToParse(fieldValue, className, parseClasses);\n      } else {\n        transformQueryConstraintInputToParse(\n          fieldValue,\n          fieldName,\n          className,\n          constraints,\n          parseClasses\n        );\n      }\n    }\n  });\n};\n\nconst transformQueryInputToParse = (constraints, className, parseClasses) => {\n  if (!constraints || typeof constraints !== 'object') {\n    return;\n  }\n\n  Object.keys(constraints).forEach(fieldName => {\n    const fieldValue = constraints[fieldName];\n\n    if (parseQueryMap[fieldName]) {\n      delete constraints[fieldName];\n      fieldName = parseQueryMap[fieldName];\n      constraints[fieldName] = fieldValue;\n      fieldValue.forEach(fieldValueItem => {\n        transformQueryInputToParse(fieldValueItem, className, parseClasses);\n      });\n      return;\n    } else {\n      transformQueryConstraintInputToParse(\n        fieldValue,\n        fieldName,\n        className,\n        constraints,\n        parseClasses\n      );\n    }\n  });\n};\n\nexport { transformQueryConstraintInputToParse, transformQueryInputToParse };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f32a532eb24a22bc3958611146b780845f08865a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1rf5e04r2f=function(){return actualCoverage;};}return actualCoverage;}cov_1rf5e04r2f();cov_1rf5e04r2f().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1rf5e04r2f().s[1]++;exports.transformQueryInputToParse=exports.transformQueryConstraintInputToParse=void 0;var _graphqlRelay=(cov_1rf5e04r2f().s[2]++,require("graphql-relay"));function ownKeys(object,enumerableOnly){cov_1rf5e04r2f().f[0]++;var keys=(cov_1rf5e04r2f().s[3]++,Object.keys(object));cov_1rf5e04r2f().s[4]++;if(Object.getOwnPropertySymbols){cov_1rf5e04r2f().b[0][0]++;var symbols=(cov_1rf5e04r2f().s[5]++,Object.getOwnPropertySymbols(object));cov_1rf5e04r2f().s[6]++;if(enumerableOnly){cov_1rf5e04r2f().b[1][0]++;cov_1rf5e04r2f().s[7]++;symbols=symbols.filter(function(sym){cov_1rf5e04r2f().f[1]++;cov_1rf5e04r2f().s[8]++;return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}else{cov_1rf5e04r2f().b[1][1]++;}cov_1rf5e04r2f().s[9]++;keys.push.apply(keys,symbols);}else{cov_1rf5e04r2f().b[0][1]++;}cov_1rf5e04r2f().s[10]++;return keys;}function _objectSpread(target){cov_1rf5e04r2f().f[2]++;cov_1rf5e04r2f().s[11]++;for(var i=(cov_1rf5e04r2f().s[12]++,1);i<arguments.length;i++){var source=(cov_1rf5e04r2f().s[13]++,arguments[i]!=null?(cov_1rf5e04r2f().b[2][0]++,arguments[i]):(cov_1rf5e04r2f().b[2][1]++,{}));cov_1rf5e04r2f().s[14]++;if(i%2){cov_1rf5e04r2f().b[3][0]++;cov_1rf5e04r2f().s[15]++;ownKeys(Object(source),true).forEach(function(key){cov_1rf5e04r2f().f[3]++;cov_1rf5e04r2f().s[16]++;_defineProperty(target,key,source[key]);});}else{cov_1rf5e04r2f().b[3][1]++;cov_1rf5e04r2f().s[17]++;if(Object.getOwnPropertyDescriptors){cov_1rf5e04r2f().b[4][0]++;cov_1rf5e04r2f().s[18]++;Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{cov_1rf5e04r2f().b[4][1]++;cov_1rf5e04r2f().s[19]++;ownKeys(Object(source)).forEach(function(key){cov_1rf5e04r2f().f[4]++;cov_1rf5e04r2f().s[20]++;Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}}cov_1rf5e04r2f().s[21]++;return target;}function _defineProperty(obj,key,value){cov_1rf5e04r2f().f[5]++;cov_1rf5e04r2f().s[22]++;if(key in obj){cov_1rf5e04r2f().b[5][0]++;cov_1rf5e04r2f().s[23]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_1rf5e04r2f().b[5][1]++;cov_1rf5e04r2f().s[24]++;obj[key]=value;}cov_1rf5e04r2f().s[25]++;return obj;}const parseQueryMap=(cov_1rf5e04r2f().s[26]++,{OR:'$or',AND:'$and',NOR:'$nor'});const parseConstraintMap=(cov_1rf5e04r2f().s[27]++,{equalTo:'$eq',notEqualTo:'$ne',lessThan:'$lt',lessThanOrEqualTo:'$lte',greaterThan:'$gt',greaterThanOrEqualTo:'$gte',in:'$in',notIn:'$nin',exists:'$exists',inQueryKey:'$select',notInQueryKey:'$dontSelect',inQuery:'$inQuery',notInQuery:'$notInQuery',containedBy:'$containedBy',contains:'$all',matchesRegex:'$regex',options:'$options',text:'$text',search:'$search',term:'$term',language:'$language',caseSensitive:'$caseSensitive',diacriticSensitive:'$diacriticSensitive',nearSphere:'$nearSphere',maxDistance:'$maxDistance',maxDistanceInRadians:'$maxDistanceInRadians',maxDistanceInMiles:'$maxDistanceInMiles',maxDistanceInKilometers:'$maxDistanceInKilometers',within:'$within',box:'$box',geoWithin:'$geoWithin',polygon:'$polygon',centerSphere:'$centerSphere',geoIntersects:'$geoIntersects',point:'$point'});cov_1rf5e04r2f().s[28]++;const transformQueryConstraintInputToParse=(constraints,parentFieldName,className,parentConstraints,parseClasses)=>{cov_1rf5e04r2f().f[6]++;const fields=(cov_1rf5e04r2f().s[29]++,parseClasses.find(parseClass=>{cov_1rf5e04r2f().f[7]++;cov_1rf5e04r2f().s[30]++;return parseClass.className===className;}).fields);cov_1rf5e04r2f().s[31]++;if((cov_1rf5e04r2f().b[7][0]++,parentFieldName==='id')&&(cov_1rf5e04r2f().b[7][1]++,className)){cov_1rf5e04r2f().b[6][0]++;cov_1rf5e04r2f().s[32]++;Object.keys(constraints).forEach(constraintName=>{cov_1rf5e04r2f().f[8]++;const constraintValue=(cov_1rf5e04r2f().s[33]++,constraints[constraintName]);cov_1rf5e04r2f().s[34]++;if(typeof constraintValue==='string'){cov_1rf5e04r2f().b[8][0]++;const globalIdObject=(cov_1rf5e04r2f().s[35]++,(0,_graphqlRelay.fromGlobalId)(constraintValue));cov_1rf5e04r2f().s[36]++;if(globalIdObject.type===className){cov_1rf5e04r2f().b[9][0]++;cov_1rf5e04r2f().s[37]++;constraints[constraintName]=globalIdObject.id;}else{cov_1rf5e04r2f().b[9][1]++;}}else{cov_1rf5e04r2f().b[8][1]++;cov_1rf5e04r2f().s[38]++;if(Array.isArray(constraintValue)){cov_1rf5e04r2f().b[10][0]++;cov_1rf5e04r2f().s[39]++;constraints[constraintName]=constraintValue.map(value=>{cov_1rf5e04r2f().f[9]++;const globalIdObject=(cov_1rf5e04r2f().s[40]++,(0,_graphqlRelay.fromGlobalId)(value));cov_1rf5e04r2f().s[41]++;if(globalIdObject.type===className){cov_1rf5e04r2f().b[11][0]++;cov_1rf5e04r2f().s[42]++;return globalIdObject.id;}else{cov_1rf5e04r2f().b[11][1]++;}cov_1rf5e04r2f().s[43]++;return value;});}else{cov_1rf5e04r2f().b[10][1]++;}}});cov_1rf5e04r2f().s[44]++;parentConstraints.objectId=constraints;cov_1rf5e04r2f().s[45]++;delete parentConstraints.id;}else{cov_1rf5e04r2f().b[6][1]++;}cov_1rf5e04r2f().s[46]++;Object.keys(constraints).forEach(fieldName=>{cov_1rf5e04r2f().f[10]++;let fieldValue=(cov_1rf5e04r2f().s[47]++,constraints[fieldName]);cov_1rf5e04r2f().s[48]++;if(parseConstraintMap[fieldName]){cov_1rf5e04r2f().b[12][0]++;cov_1rf5e04r2f().s[49]++;constraints[parseConstraintMap[fieldName]]=constraints[fieldName];cov_1rf5e04r2f().s[50]++;delete constraints[fieldName];}else{cov_1rf5e04r2f().b[12][1]++;}/**
     * If we have a key-value pair, we need to change the way the constraint is structured.
     *
     * Example:
     *   From:
     *   {
     *     "someField": {
     *       "lessThan": {
     *         "key":"foo.bar",
     *         "value": 100
     *       },
     *       "greaterThan": {
     *         "key":"foo.bar",
     *         "value": 10
     *       }
     *     }
     *   }
     *
     *   To:
     *   {
     *     "someField.foo.bar": {
     *       "$lt": 100,
     *       "$gt": 10
     *      }
     *   }
     */cov_1rf5e04r2f().s[51]++;if((cov_1rf5e04r2f().b[14][0]++,fieldValue.key)&&(cov_1rf5e04r2f().b[14][1]++,fieldValue.value)&&(cov_1rf5e04r2f().b[14][2]++,parentConstraints)&&(cov_1rf5e04r2f().b[14][3]++,parentFieldName)){cov_1rf5e04r2f().b[13][0]++;cov_1rf5e04r2f().s[52]++;delete parentConstraints[parentFieldName];cov_1rf5e04r2f().s[53]++;parentConstraints[`${parentFieldName}.${fieldValue.key}`]=_objectSpread(_objectSpread({},parentConstraints[`${parentFieldName}.${fieldValue.key}`]),{},{[parseConstraintMap[fieldName]]:fieldValue.value});}else{cov_1rf5e04r2f().b[13][1]++;cov_1rf5e04r2f().s[54]++;if((cov_1rf5e04r2f().b[16][0]++,fields[parentFieldName])&&((cov_1rf5e04r2f().b[16][1]++,fields[parentFieldName].type==='Pointer')||(cov_1rf5e04r2f().b[16][2]++,fields[parentFieldName].type==='Relation'))){cov_1rf5e04r2f().b[15][0]++;const{targetClass}=(cov_1rf5e04r2f().s[55]++,fields[parentFieldName]);cov_1rf5e04r2f().s[56]++;if(fieldName==='exists'){cov_1rf5e04r2f().b[17][0]++;cov_1rf5e04r2f().s[57]++;if(fields[parentFieldName].type==='Relation'){cov_1rf5e04r2f().b[18][0]++;const whereTarget=(cov_1rf5e04r2f().s[58]++,fieldValue?(cov_1rf5e04r2f().b[19][0]++,'where'):(cov_1rf5e04r2f().b[19][1]++,'notWhere'));cov_1rf5e04r2f().s[59]++;if(constraints[whereTarget]){cov_1rf5e04r2f().b[20][0]++;cov_1rf5e04r2f().s[60]++;if(constraints[whereTarget].objectId){cov_1rf5e04r2f().b[21][0]++;cov_1rf5e04r2f().s[61]++;constraints[whereTarget].objectId=_objectSpread(_objectSpread({},constraints[whereTarget].objectId),{},{$exists:fieldValue});}else{cov_1rf5e04r2f().b[21][1]++;cov_1rf5e04r2f().s[62]++;constraints[whereTarget].objectId={$exists:fieldValue};}}else{cov_1rf5e04r2f().b[20][1]++;const parseWhereTarget=(cov_1rf5e04r2f().s[63]++,fieldValue?(cov_1rf5e04r2f().b[22][0]++,'$inQuery'):(cov_1rf5e04r2f().b[22][1]++,'$notInQuery'));cov_1rf5e04r2f().s[64]++;parentConstraints[parentFieldName][parseWhereTarget]={where:{objectId:{$exists:true}},className:targetClass};}cov_1rf5e04r2f().s[65]++;delete constraints.$exists;}else{cov_1rf5e04r2f().b[18][1]++;cov_1rf5e04r2f().s[66]++;parentConstraints[parentFieldName].$exists=fieldValue;}cov_1rf5e04r2f().s[67]++;return;}else{cov_1rf5e04r2f().b[17][1]++;}cov_1rf5e04r2f().s[68]++;switch(fieldName){case'have':cov_1rf5e04r2f().b[23][0]++;cov_1rf5e04r2f().s[69]++;parentConstraints[parentFieldName].$inQuery={where:fieldValue,className:targetClass};cov_1rf5e04r2f().s[70]++;transformQueryInputToParse(parentConstraints[parentFieldName].$inQuery.where,targetClass,parseClasses);cov_1rf5e04r2f().s[71]++;break;case'haveNot':cov_1rf5e04r2f().b[23][1]++;cov_1rf5e04r2f().s[72]++;parentConstraints[parentFieldName].$notInQuery={where:fieldValue,className:targetClass};cov_1rf5e04r2f().s[73]++;transformQueryInputToParse(parentConstraints[parentFieldName].$notInQuery.where,targetClass,parseClasses);cov_1rf5e04r2f().s[74]++;break;}cov_1rf5e04r2f().s[75]++;delete constraints[fieldName];cov_1rf5e04r2f().s[76]++;return;}else{cov_1rf5e04r2f().b[15][1]++;}}cov_1rf5e04r2f().s[77]++;switch(fieldName){case'point':cov_1rf5e04r2f().b[24][0]++;cov_1rf5e04r2f().s[78]++;if((cov_1rf5e04r2f().b[26][0]++,typeof fieldValue==='object')&&(cov_1rf5e04r2f().b[26][1]++,!fieldValue.__type)){cov_1rf5e04r2f().b[25][0]++;cov_1rf5e04r2f().s[79]++;fieldValue.__type='GeoPoint';}else{cov_1rf5e04r2f().b[25][1]++;}cov_1rf5e04r2f().s[80]++;break;case'nearSphere':cov_1rf5e04r2f().b[24][1]++;cov_1rf5e04r2f().s[81]++;if((cov_1rf5e04r2f().b[28][0]++,typeof fieldValue==='object')&&(cov_1rf5e04r2f().b[28][1]++,!fieldValue.__type)){cov_1rf5e04r2f().b[27][0]++;cov_1rf5e04r2f().s[82]++;fieldValue.__type='GeoPoint';}else{cov_1rf5e04r2f().b[27][1]++;}cov_1rf5e04r2f().s[83]++;break;case'box':cov_1rf5e04r2f().b[24][2]++;cov_1rf5e04r2f().s[84]++;if((cov_1rf5e04r2f().b[30][0]++,typeof fieldValue==='object')&&(cov_1rf5e04r2f().b[30][1]++,fieldValue.bottomLeft)&&(cov_1rf5e04r2f().b[30][2]++,fieldValue.upperRight)){cov_1rf5e04r2f().b[29][0]++;cov_1rf5e04r2f().s[85]++;fieldValue=[_objectSpread({__type:'GeoPoint'},fieldValue.bottomLeft),_objectSpread({__type:'GeoPoint'},fieldValue.upperRight)];cov_1rf5e04r2f().s[86]++;constraints[parseConstraintMap[fieldName]]=fieldValue;}else{cov_1rf5e04r2f().b[29][1]++;}cov_1rf5e04r2f().s[87]++;break;case'polygon':cov_1rf5e04r2f().b[24][3]++;cov_1rf5e04r2f().s[88]++;if(fieldValue instanceof Array){cov_1rf5e04r2f().b[31][0]++;cov_1rf5e04r2f().s[89]++;fieldValue.forEach(geoPoint=>{cov_1rf5e04r2f().f[11]++;cov_1rf5e04r2f().s[90]++;if((cov_1rf5e04r2f().b[33][0]++,typeof geoPoint==='object')&&(cov_1rf5e04r2f().b[33][1]++,!geoPoint.__type)){cov_1rf5e04r2f().b[32][0]++;cov_1rf5e04r2f().s[91]++;geoPoint.__type='GeoPoint';}else{cov_1rf5e04r2f().b[32][1]++;}});}else{cov_1rf5e04r2f().b[31][1]++;}cov_1rf5e04r2f().s[92]++;break;case'centerSphere':cov_1rf5e04r2f().b[24][4]++;cov_1rf5e04r2f().s[93]++;if((cov_1rf5e04r2f().b[35][0]++,typeof fieldValue==='object')&&(cov_1rf5e04r2f().b[35][1]++,fieldValue.center)&&(cov_1rf5e04r2f().b[35][2]++,fieldValue.distance)){cov_1rf5e04r2f().b[34][0]++;cov_1rf5e04r2f().s[94]++;fieldValue=[_objectSpread({__type:'GeoPoint'},fieldValue.center),fieldValue.distance];cov_1rf5e04r2f().s[95]++;constraints[parseConstraintMap[fieldName]]=fieldValue;}else{cov_1rf5e04r2f().b[34][1]++;}cov_1rf5e04r2f().s[96]++;break;}cov_1rf5e04r2f().s[97]++;if(typeof fieldValue==='object'){cov_1rf5e04r2f().b[36][0]++;cov_1rf5e04r2f().s[98]++;if(fieldName==='where'){cov_1rf5e04r2f().b[37][0]++;cov_1rf5e04r2f().s[99]++;transformQueryInputToParse(fieldValue,className,parseClasses);}else{cov_1rf5e04r2f().b[37][1]++;cov_1rf5e04r2f().s[100]++;transformQueryConstraintInputToParse(fieldValue,fieldName,className,constraints,parseClasses);}}else{cov_1rf5e04r2f().b[36][1]++;}});};cov_1rf5e04r2f().s[101]++;exports.transformQueryConstraintInputToParse=transformQueryConstraintInputToParse;cov_1rf5e04r2f().s[102]++;const transformQueryInputToParse=(constraints,className,parseClasses)=>{cov_1rf5e04r2f().f[12]++;cov_1rf5e04r2f().s[103]++;if((cov_1rf5e04r2f().b[39][0]++,!constraints)||(cov_1rf5e04r2f().b[39][1]++,typeof constraints!=='object')){cov_1rf5e04r2f().b[38][0]++;cov_1rf5e04r2f().s[104]++;return;}else{cov_1rf5e04r2f().b[38][1]++;}cov_1rf5e04r2f().s[105]++;Object.keys(constraints).forEach(fieldName=>{cov_1rf5e04r2f().f[13]++;const fieldValue=(cov_1rf5e04r2f().s[106]++,constraints[fieldName]);cov_1rf5e04r2f().s[107]++;if(parseQueryMap[fieldName]){cov_1rf5e04r2f().b[40][0]++;cov_1rf5e04r2f().s[108]++;delete constraints[fieldName];cov_1rf5e04r2f().s[109]++;fieldName=parseQueryMap[fieldName];cov_1rf5e04r2f().s[110]++;constraints[fieldName]=fieldValue;cov_1rf5e04r2f().s[111]++;fieldValue.forEach(fieldValueItem=>{cov_1rf5e04r2f().f[14]++;cov_1rf5e04r2f().s[112]++;transformQueryInputToParse(fieldValueItem,className,parseClasses);});cov_1rf5e04r2f().s[113]++;return;}else{cov_1rf5e04r2f().b[40][1]++;cov_1rf5e04r2f().s[114]++;transformQueryConstraintInputToParse(fieldValue,fieldName,className,constraints,parseClasses);}});};cov_1rf5e04r2f().s[115]++;exports.transformQueryInputToParse=transformQueryInputToParse;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,