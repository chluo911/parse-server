"use strict";function cov_1awkzybx8q(){var path="/parse-server/lib/SchemaMigrations/DefinedSchemas.js";var hash="87567820a9e032c63a77a39b49ea94dfbf5510aa";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/SchemaMigrations/DefinedSchemas.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:32}},"2":{start:{line:8,column:14},end:{line:8,column:34}},"3":{start:{line:10,column:14},end:{line:10,column:58}},"4":{start:{line:12,column:21},end:{line:12,column:56}},"5":{start:{line:14,column:24},end:{line:14,column:66}},"6":{start:{line:16,column:15},end:{line:16,column:36}},"7":{start:{line:18,column:17},end:{line:18,column:65}},"8":{start:{line:20,column:49},end:{line:20,column:96}},"9":{start:{line:20,column:84},end:{line:20,column:96}},"10":{start:{line:20,column:121},end:{line:20,column:134}},"11":{start:{line:20,column:159},end:{line:20,column:172}},"12":{start:{line:20,column:174},end:{line:20,column:309}},"13":{start:{line:20,column:234},end:{line:20,column:292}},"14":{start:{line:22,column:53},end:{line:22,column:111}},"15":{start:{line:22,column:98},end:{line:22,column:109}},"16":{start:{line:22,column:112},end:{line:22,column:214}},"17":{start:{line:22,column:188},end:{line:22,column:212}},"18":{start:{line:22,column:227},end:{line:22,column:264}},"19":{start:{line:22,column:266},end:{line:22,column:321}},"20":{start:{line:22,column:297},end:{line:22,column:319}},"21":{start:{line:22,column:335},end:{line:22,column:337}},"22":{start:{line:22,column:367},end:{line:22,column:423}},"23":{start:{line:22,column:425},end:{line:22,column:726}},"24":{start:{line:22,column:448},end:{line:22,column:724}},"25":{start:{line:22,column:534},end:{line:22,column:606}},"26":{start:{line:22,column:608},end:{line:22,column:722}},"27":{start:{line:22,column:646},end:{line:22,column:687}},"28":{start:{line:22,column:697},end:{line:22,column:720}},"29":{start:{line:22,column:727},end:{line:22,column:748}},"30":{start:{line:22,column:749},end:{line:22,column:787}},"31":{start:{line:22,column:762},end:{line:22,column:785}},"32":{start:{line:22,column:788},end:{line:22,column:802}},"33":{start:{line:24,column:39},end:{line:24,column:93}},"34":{start:{line:26,column:54},end:{line:26,column:73}},"35":{start:{line:26,column:75},end:{line:26,column:330}},"36":{start:{line:26,column:125},end:{line:26,column:161}},"37":{start:{line:26,column:163},end:{line:26,column:296}},"38":{start:{line:26,column:185},end:{line:26,column:294}},"39":{start:{line:26,column:227},end:{line:26,column:290}},"40":{start:{line:26,column:297},end:{line:26,column:328}},"41":{start:{line:26,column:331},end:{line:26,column:343}},"42":{start:{line:28,column:33},end:{line:28,column:517}},"43":{start:{line:28,column:46},end:{line:28,column:47}},"44":{start:{line:28,column:91},end:{line:28,column:131}},"45":{start:{line:28,column:133},end:{line:28,column:515}},"46":{start:{line:28,column:146},end:{line:28,column:247}},"47":{start:{line:28,column:201},end:{line:28,column:243}},"48":{start:{line:28,column:255},end:{line:28,column:515}},"49":{start:{line:28,column:295},end:{line:28,column:369}},"50":{start:{line:28,column:379},end:{line:28,column:513}},"51":{start:{line:28,column:428},end:{line:28,column:509}},"52":{start:{line:28,column:518},end:{line:28,column:532}},"53":{start:{line:30,column:44},end:{line:30,column:195}},"54":{start:{line:30,column:62},end:{line:30,column:166}},"55":{start:{line:30,column:176},end:{line:30,column:193}},"56":{start:{line:30,column:196},end:{line:30,column:207}},"57":{start:{line:33,column:14},end:{line:33,column:35}},"58":{start:{line:37,column:4},end:{line:37,column:27}},"59":{start:{line:38,column:4},end:{line:38,column:52}},"60":{start:{line:39,column:4},end:{line:39,column:39}},"61":{start:{line:41,column:4},end:{line:47,column:5}},"62":{start:{line:42,column:6},end:{line:44,column:7}},"63":{start:{line:43,column:8},end:{line:43,column:65}},"64":{start:{line:46,column:6},end:{line:46,column:52}},"65":{start:{line:49,column:4},end:{line:49,column:21}},"66":{start:{line:50,column:4},end:{line:50,column:24}},"67":{start:{line:54,column:20},end:{line:59,column:5}},"68":{start:{line:60,column:4},end:{line:60,column:91}},"69":{start:{line:61,column:4},end:{line:61,column:32}},"70":{start:{line:66,column:4},end:{line:66,column:24}},"71":{start:{line:67,column:4},end:{line:67,column:25}},"72":{start:{line:73,column:20},end:{line:78,column:5}},"73":{start:{line:79,column:4},end:{line:79,column:91}},"74":{start:{line:80,column:4},end:{line:80,column:32}},"75":{start:{line:84,column:4},end:{line:102,column:5}},"76":{start:{line:85,column:6},end:{line:85,column:48}},"77":{start:{line:87,column:6},end:{line:89,column:7}},"78":{start:{line:88,column:8},end:{line:88,column:68}},"79":{start:{line:91,column:6},end:{line:91,column:37}},"80":{start:{line:93,column:6},end:{line:95,column:7}},"81":{start:{line:94,column:8},end:{line:94,column:67}},"82":{start:{line:97,column:6},end:{line:97,column:58}},"83":{start:{line:99,column:6},end:{line:99,column:61}},"84":{start:{line:101,column:6},end:{line:101,column:65}},"85":{start:{line:101,column:49},end:{line:101,column:65}},"86":{start:{line:106,column:18},end:{line:106,column:22}},"87":{start:{line:108,column:4},end:{line:143,column:5}},"88":{start:{line:113,column:6},end:{line:119,column:7}},"89":{start:{line:114,column:8},end:{line:118,column:18}},"90":{start:{line:115,column:10},end:{line:115,column:94}},"91":{start:{line:117,column:10},end:{line:117,column:26}},"92":{start:{line:122,column:6},end:{line:122,column:39}},"93":{start:{line:123,column:6},end:{line:123,column:54}},"94":{start:{line:124,column:6},end:{line:124,column:28}},"95":{start:{line:125,column:6},end:{line:125,column:100}},"96":{start:{line:125,column:67},end:{line:125,column:97}},"97":{start:{line:126,column:6},end:{line:126,column:36}},"98":{start:{line:127,column:6},end:{line:127,column:49}},"99":{start:{line:129,column:6},end:{line:129,column:41}},"100":{start:{line:129,column:19},end:{line:129,column:41}},"101":{start:{line:131,column:6},end:{line:142,column:7}},"102":{start:{line:132,column:8},end:{line:132,column:23}},"103":{start:{line:136,column:8},end:{line:136,column:45}},"104":{start:{line:137,column:8},end:{line:137,column:39}},"105":{start:{line:139,column:8},end:{line:139,column:63}},"106":{start:{line:141,column:8},end:{line:141,column:67}},"107":{start:{line:141,column:51},end:{line:141,column:67}},"108":{start:{line:147,column:4},end:{line:149,column:5}},"109":{start:{line:148,column:6},end:{line:148,column:13}},"110":{start:{line:151,column:25},end:{line:151,column:67}},"111":{start:{line:151,column:55},end:{line:151,column:66}},"112":{start:{line:152,column:25},end:{line:152,column:64}},"113":{start:{line:152,column:52},end:{line:152,column:63}},"114":{start:{line:153,column:27},end:{line:153,column:126}},"115":{start:{line:153,column:52},end:{line:153,column:125}},"116":{start:{line:155,column:4},end:{line:159,column:5}},"117":{start:{line:156,column:6},end:{line:156,column:122}},"118":{start:{line:158,column:6},end:{line:158,column:22}},"119":{start:{line:161,column:4},end:{line:163,column:5}},"120":{start:{line:162,column:6},end:{line:162,column:163}},"121":{start:{line:168,column:4},end:{line:168,column:61}},"122":{start:{line:168,column:34},end:{line:168,column:59}},"123":{start:{line:172,column:31},end:{line:172,column:162}},"124":{start:{line:172,column:74},end:{line:172,column:161}},"125":{start:{line:172,column:113},end:{line:172,column:160}},"126":{start:{line:173,column:4},end:{line:177,column:8}},"127":{start:{line:174,column:26},end:{line:174,column:60}},"128":{start:{line:175,column:6},end:{line:175,column:42}},"129":{start:{line:176,column:6},end:{line:176,column:47}},"130":{start:{line:183,column:20},end:{line:183,column:39}},"131":{start:{line:184,column:4},end:{line:186,column:7}},"132":{start:{line:187,column:4},end:{line:189,column:7}},"133":{start:{line:193,column:24},end:{line:193,column:95}},"134":{start:{line:193,column:56},end:{line:193,column:94}},"135":{start:{line:195,column:4},end:{line:207,column:5}},"136":{start:{line:196,column:6},end:{line:200,column:7}},"137":{start:{line:197,column:8},end:{line:197,column:58}},"138":{start:{line:199,column:8},end:{line:199,column:86}},"139":{start:{line:202,column:6},end:{line:206,column:7}},"140":{start:{line:203,column:8},end:{line:203,column:43}},"141":{start:{line:205,column:8},end:{line:205,column:82}},"142":{start:{line:211,column:27},end:{line:211,column:66}},"143":{start:{line:213,column:4},end:{line:221,column:5}},"144":{start:{line:215,column:6},end:{line:220,column:9}},"145":{start:{line:215,column:58},end:{line:215,column:115}},"146":{start:{line:216,column:8},end:{line:219,column:9}},"147":{start:{line:217,column:24},end:{line:217,column:53}},"148":{start:{line:218,column:10},end:{line:218,column:62}},"149":{start:{line:224,column:4},end:{line:230,column:5}},"150":{start:{line:225,column:6},end:{line:229,column:9}},"151":{start:{line:226,column:8},end:{line:228,column:9}},"152":{start:{line:227,column:10},end:{line:227,column:77}},"153":{start:{line:232,column:4},end:{line:232,column:48}},"154":{start:{line:233,column:4},end:{line:233,column:53}},"155":{start:{line:237,column:27},end:{line:237,column:66}},"156":{start:{line:240,column:4},end:{line:249,column:5}},"157":{start:{line:241,column:6},end:{line:248,column:9}},"158":{start:{line:241,column:58},end:{line:241,column:115}},"159":{start:{line:243,column:22},end:{line:243,column:51}},"160":{start:{line:245,column:8},end:{line:247,column:9}},"161":{start:{line:246,column:10},end:{line:246,column:62}},"162":{start:{line:251,column:27},end:{line:251,column:29}},"163":{start:{line:252,column:29},end:{line:252,column:31}},"164":{start:{line:253,column:36},end:{line:253,column:38}},"165":{start:{line:255,column:4},end:{line:290,column:7}},"166":{start:{line:255,column:56},end:{line:255,column:113}},"167":{start:{line:256,column:20},end:{line:256,column:49}},"168":{start:{line:258,column:6},end:{line:261,column:7}},"169":{start:{line:259,column:8},end:{line:259,column:39}},"170":{start:{line:260,column:8},end:{line:260,column:15}},"171":{start:{line:263,column:25},end:{line:263,column:54}},"172":{start:{line:265,column:6},end:{line:284,column:7}},"173":{start:{line:272,column:8},end:{line:282,column:11}},"174":{start:{line:283,column:8},end:{line:283,column:15}},"175":{start:{line:287,column:6},end:{line:289,column:7}},"176":{start:{line:288,column:8},end:{line:288,column:48}},"177":{start:{line:292,column:4},end:{line:300,column:5}},"178":{start:{line:293,column:6},end:{line:295,column:9}},"179":{start:{line:294,column:8},end:{line:294,column:46}},"180":{start:{line:297,column:6},end:{line:297,column:50}},"181":{start:{line:298,column:11},end:{line:300,column:5}},"182":{start:{line:299,column:6},end:{line:299,column:169}},"183":{start:{line:302,column:4},end:{line:321,column:5}},"184":{start:{line:303,column:6},end:{line:305,column:9}},"185":{start:{line:304,column:8},end:{line:304,column:52}},"186":{start:{line:307,column:6},end:{line:307,column:50}},"187":{start:{line:308,column:6},end:{line:313,column:9}},"188":{start:{line:309,column:8},end:{line:312,column:9}},"189":{start:{line:310,column:24},end:{line:310,column:63}},"190":{start:{line:311,column:10},end:{line:311,column:72}},"191":{start:{line:314,column:11},end:{line:321,column:5}},"192":{start:{line:315,column:6},end:{line:320,column:9}},"193":{start:{line:316,column:21},end:{line:316,column:101}},"194":{start:{line:317,column:19},end:{line:317,column:93}},"195":{start:{line:319,column:8},end:{line:319,column:210}},"196":{start:{line:323,column:4},end:{line:328,column:7}},"197":{start:{line:324,column:6},end:{line:327,column:7}},"198":{start:{line:325,column:22},end:{line:325,column:51}},"199":{start:{line:326,column:8},end:{line:326,column:60}},"200":{start:{line:331,column:4},end:{line:339,column:5}},"201":{start:{line:332,column:6},end:{line:338,column:9}},"202":{start:{line:333,column:8},end:{line:337,column:9}},"203":{start:{line:334,column:10},end:{line:336,column:11}},"204":{start:{line:335,column:12},end:{line:335,column:79}},"205":{start:{line:341,column:25},end:{line:341,column:27}},"206":{start:{line:343,column:4},end:{line:360,column:5}},"207":{start:{line:344,column:6},end:{line:359,column:9}},"208":{start:{line:345,column:8},end:{line:358,column:9}},"209":{start:{line:346,column:10},end:{line:357,column:11}},"210":{start:{line:347,column:12},end:{line:347,column:50}},"211":{start:{line:348,column:17},end:{line:357,column:11}},"212":{start:{line:349,column:12},end:{line:349,column:50}},"213":{start:{line:351,column:12},end:{line:356,column:13}},"214":{start:{line:352,column:14},end:{line:355,column:17}},"215":{start:{line:362,column:4},end:{line:362,column:61}},"216":{start:{line:364,column:4},end:{line:364,column:48}},"217":{start:{line:366,column:4},end:{line:371,column:5}},"218":{start:{line:367,column:6},end:{line:367,column:111}},"219":{start:{line:369,column:6},end:{line:369,column:79}},"220":{start:{line:369,column:32},end:{line:369,column:77}},"221":{start:{line:370,column:6},end:{line:370,column:50}},"222":{start:{line:375,column:4},end:{line:377,column:5}},"223":{start:{line:376,column:6},end:{line:376,column:94}},"224":{start:{line:380,column:16},end:{line:380,column:74}},"225":{start:{line:382,column:4},end:{line:382,column:22}},"226":{start:{line:383,column:4},end:{line:383,column:31}},"227":{start:{line:387,column:4},end:{line:387,column:175}},"228":{start:{line:391,column:18},end:{line:391,column:26}},"229":{start:{line:393,column:4},end:{line:395,column:5}},"230":{start:{line:394,column:6},end:{line:394,column:109}},"231":{start:{line:397,column:4},end:{line:397,column:45}},"232":{start:{line:401,column:18},end:{line:401,column:35}},"233":{start:{line:402,column:18},end:{line:402,column:35}},"234":{start:{line:404,column:4},end:{line:404,column:52}},"235":{start:{line:404,column:39},end:{line:404,column:52}},"236":{start:{line:405,column:4},end:{line:405,column:49}},"237":{start:{line:405,column:28},end:{line:405,column:47}},"238":{start:{line:409,column:4},end:{line:415,column:5}},"239":{start:{line:410,column:6},end:{line:410,column:63}},"240":{start:{line:411,column:11},end:{line:415,column:5}},"241":{start:{line:412,column:6},end:{line:412,column:69}},"242":{start:{line:414,column:6},end:{line:414,column:60}},"243":{start:{line:420,column:0},end:{line:420,column:40}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:20,column:9},end:{line:20,column:33}},loc:{start:{line:20,column:47},end:{line:20,column:311}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:209},end:{line:20,column:210}},loc:{start:{line:20,column:232},end:{line:20,column:294}},line:20},"2":{name:"_interopRequireWildcard",decl:{start:{line:22,column:9},end:{line:22,column:32}},loc:{start:{line:22,column:51},end:{line:22,column:804}},line:22},"3":{name:"_interopRequireDefault",decl:{start:{line:24,column:9},end:{line:24,column:31}},loc:{start:{line:24,column:37},end:{line:24,column:95}},line:24},"4":{name:"ownKeys",decl:{start:{line:26,column:9},end:{line:26,column:16}},loc:{start:{line:26,column:41},end:{line:26,column:345}},line:26},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:210},end:{line:26,column:211}},loc:{start:{line:26,column:225},end:{line:26,column:292}},line:26},"6":{name:"_objectSpread",decl:{start:{line:28,column:9},end:{line:28,column:22}},loc:{start:{line:28,column:31},end:{line:28,column:534}},line:28},"7":{name:"(anonymous_7)",decl:{start:{line:28,column:184},end:{line:28,column:185}},loc:{start:{line:28,column:199},end:{line:28,column:245}},line:28},"8":{name:"(anonymous_8)",decl:{start:{line:28,column:411},end:{line:28,column:412}},loc:{start:{line:28,column:426},end:{line:28,column:511}},line:28},"9":{name:"_defineProperty",decl:{start:{line:30,column:9},end:{line:30,column:24}},loc:{start:{line:30,column:42},end:{line:30,column:209}},line:30},"10":{name:"(anonymous_10)",decl:{start:{line:36,column:2},end:{line:36,column:3}},loc:{start:{line:36,column:37},end:{line:51,column:3}},line:36},"11":{name:"(anonymous_11)",decl:{start:{line:53,column:2},end:{line:53,column:3}},loc:{start:{line:53,column:31},end:{line:62,column:3}},line:53},"12":{name:"(anonymous_12)",decl:{start:{line:64,column:2},end:{line:64,column:3}},loc:{start:{line:64,column:25},end:{line:68,column:3}},line:64},"13":{name:"(anonymous_13)",decl:{start:{line:72,column:2},end:{line:72,column:3}},loc:{start:{line:72,column:33},end:{line:81,column:3}},line:72},"14":{name:"(anonymous_14)",decl:{start:{line:83,column:2},end:{line:83,column:3}},loc:{start:{line:83,column:18},end:{line:103,column:3}},line:83},"15":{name:"(anonymous_15)",decl:{start:{line:105,column:2},end:{line:105,column:3}},loc:{start:{line:105,column:28},end:{line:144,column:3}},line:105},"16":{name:"(anonymous_16)",decl:{start:{line:114,column:29},end:{line:114,column:30}},loc:{start:{line:114,column:35},end:{line:118,column:9}},line:114},"17":{name:"(anonymous_17)",decl:{start:{line:125,column:46},end:{line:125,column:47}},loc:{start:{line:125,column:67},end:{line:125,column:97}},line:125},"18":{name:"(anonymous_18)",decl:{start:{line:146,column:2},end:{line:146,column:3}},loc:{start:{line:146,column:27},end:{line:164,column:3}},line:146},"19":{name:"(anonymous_19)",decl:{start:{line:151,column:50},end:{line:151,column:51}},loc:{start:{line:151,column:55},end:{line:151,column:66}},line:151},"20":{name:"(anonymous_20)",decl:{start:{line:152,column:47},end:{line:152,column:48}},loc:{start:{line:152,column:52},end:{line:152,column:63}},line:152},"21":{name:"(anonymous_21)",decl:{start:{line:153,column:47},end:{line:153,column:48}},loc:{start:{line:153,column:52},end:{line:153,column:125}},line:153},"22":{name:"(anonymous_22)",decl:{start:{line:167,column:2},end:{line:167,column:3}},loc:{start:{line:167,column:13},end:{line:169,column:3}},line:167},"23":{name:"(anonymous_23)",decl:{start:{line:168,column:23},end:{line:168,column:24}},loc:{start:{line:168,column:34},end:{line:168,column:59}},line:168},"24":{name:"(anonymous_24)",decl:{start:{line:171,column:2},end:{line:171,column:3}},loc:{start:{line:171,column:40},end:{line:178,column:3}},line:171},"25":{name:"(anonymous_25)",decl:{start:{line:172,column:59},end:{line:172,column:60}},loc:{start:{line:172,column:74},end:{line:172,column:161}},line:172},"26":{name:"(anonymous_26)",decl:{start:{line:172,column:98},end:{line:172,column:99}},loc:{start:{line:172,column:113},end:{line:172,column:160}},line:172},"27":{name:"(anonymous_27)",decl:{start:{line:173,column:45},end:{line:173,column:46}},loc:{start:{line:173,column:61},end:{line:177,column:5}},line:173},"28":{name:"(anonymous_28)",decl:{start:{line:182,column:2},end:{line:182,column:3}},loc:{start:{line:182,column:30},end:{line:190,column:3}},line:182},"29":{name:"(anonymous_29)",decl:{start:{line:192,column:2},end:{line:192,column:3}},loc:{start:{line:192,column:34},end:{line:208,column:3}},line:192},"30":{name:"(anonymous_30)",decl:{start:{line:193,column:50},end:{line:193,column:51}},loc:{start:{line:193,column:56},end:{line:193,column:94}},line:193},"31":{name:"(anonymous_31)",decl:{start:{line:210,column:2},end:{line:210,column:3}},loc:{start:{line:210,column:32},end:{line:234,column:3}},line:210},"32":{name:"(anonymous_32)",decl:{start:{line:215,column:45},end:{line:215,column:46}},loc:{start:{line:215,column:58},end:{line:215,column:115}},line:215},"33":{name:"(anonymous_33)",decl:{start:{line:215,column:125},end:{line:215,column:126}},loc:{start:{line:215,column:138},end:{line:220,column:7}},line:215},"34":{name:"(anonymous_34)",decl:{start:{line:225,column:47},end:{line:225,column:48}},loc:{start:{line:225,column:60},end:{line:229,column:7}},line:225},"35":{name:"(anonymous_35)",decl:{start:{line:236,column:2},end:{line:236,column:3}},loc:{start:{line:236,column:47},end:{line:372,column:3}},line:236},"36":{name:"(anonymous_36)",decl:{start:{line:241,column:45},end:{line:241,column:46}},loc:{start:{line:241,column:58},end:{line:241,column:115}},line:241},"37":{name:"(anonymous_37)",decl:{start:{line:241,column:125},end:{line:241,column:126}},loc:{start:{line:241,column:138},end:{line:248,column:7}},line:241},"38":{name:"(anonymous_38)",decl:{start:{line:255,column:43},end:{line:255,column:44}},loc:{start:{line:255,column:56},end:{line:255,column:113}},line:255},"39":{name:"(anonymous_39)",decl:{start:{line:255,column:123},end:{line:255,column:124}},loc:{start:{line:255,column:136},end:{line:290,column:5}},line:255},"40":{name:"(anonymous_40)",decl:{start:{line:293,column:29},end:{line:293,column:30}},loc:{start:{line:293,column:42},end:{line:295,column:7}},line:293},"41":{name:"(anonymous_41)",decl:{start:{line:303,column:31},end:{line:303,column:32}},loc:{start:{line:303,column:40},end:{line:305,column:7}},line:303},"42":{name:"(anonymous_42)",decl:{start:{line:308,column:31},end:{line:308,column:32}},loc:{start:{line:308,column:44},end:{line:313,column:7}},line:308},"43":{name:"(anonymous_43)",decl:{start:{line:315,column:31},end:{line:315,column:32}},loc:{start:{line:315,column:40},end:{line:320,column:7}},line:315},"44":{name:"(anonymous_44)",decl:{start:{line:323,column:36},end:{line:323,column:37}},loc:{start:{line:323,column:49},end:{line:328,column:5}},line:323},"45":{name:"(anonymous_45)",decl:{start:{line:332,column:47},end:{line:332,column:48}},loc:{start:{line:332,column:60},end:{line:338,column:7}},line:332},"46":{name:"(anonymous_46)",decl:{start:{line:344,column:47},end:{line:344,column:48}},loc:{start:{line:344,column:60},end:{line:359,column:7}},line:344},"47":{name:"(anonymous_47)",decl:{start:{line:369,column:27},end:{line:369,column:28}},loc:{start:{line:369,column:32},end:{line:369,column:77}},line:369},"48":{name:"(anonymous_48)",decl:{start:{line:374,column:2},end:{line:374,column:3}},loc:{start:{line:374,column:54},end:{line:384,column:3}},line:374},"49":{name:"(anonymous_49)",decl:{start:{line:386,column:2},end:{line:386,column:3}},loc:{start:{line:386,column:42},end:{line:388,column:3}},line:386},"50":{name:"(anonymous_50)",decl:{start:{line:390,column:2},end:{line:390,column:3}},loc:{start:{line:390,column:41},end:{line:398,column:3}},line:390},"51":{name:"(anonymous_51)",decl:{start:{line:400,column:2},end:{line:400,column:3}},loc:{start:{line:400,column:30},end:{line:406,column:3}},line:400},"52":{name:"(anonymous_52)",decl:{start:{line:405,column:23},end:{line:405,column:24}},loc:{start:{line:405,column:28},end:{line:405,column:47}},line:405},"53":{name:"(anonymous_53)",decl:{start:{line:408,column:2},end:{line:408,column:3}},loc:{start:{line:408,column:49},end:{line:416,column:3}},line:408}},branchMap:{"0":{loc:{start:{line:20,column:49},end:{line:20,column:96}},type:"if",locations:[{start:{line:20,column:49},end:{line:20,column:96}},{start:{line:20,column:49},end:{line:20,column:96}}],line:20},"1":{loc:{start:{line:20,column:241},end:{line:20,column:291}},type:"cond-expr",locations:[{start:{line:20,column:255},end:{line:20,column:271}},{start:{line:20,column:274},end:{line:20,column:291}}],line:20},"2":{loc:{start:{line:22,column:53},end:{line:22,column:111}},type:"if",locations:[{start:{line:22,column:53},end:{line:22,column:111}},{start:{line:22,column:53},end:{line:22,column:111}}],line:22},"3":{loc:{start:{line:22,column:57},end:{line:22,column:94}},type:"binary-expr",locations:[{start:{line:22,column:57},end:{line:22,column:69}},{start:{line:22,column:73},end:{line:22,column:76}},{start:{line:22,column:80},end:{line:22,column:94}}],line:22},"4":{loc:{start:{line:22,column:112},end:{line:22,column:214}},type:"if",locations:[{start:{line:22,column:112},end:{line:22,column:214}},{start:{line:22,column:112},end:{line:22,column:214}}],line:22},"5":{loc:{start:{line:22,column:116},end:{line:22,column:184}},type:"binary-expr",locations:[{start:{line:22,column:116},end:{line:22,column:128}},{start:{line:22,column:132},end:{line:22,column:155}},{start:{line:22,column:159},end:{line:22,column:184}}],line:22},"6":{loc:{start:{line:22,column:266},end:{line:22,column:321}},type:"if",locations:[{start:{line:22,column:266},end:{line:22,column:321}},{start:{line:22,column:266},end:{line:22,column:321}}],line:22},"7":{loc:{start:{line:22,column:270},end:{line:22,column:293}},type:"binary-expr",locations:[{start:{line:22,column:270},end:{line:22,column:275}},{start:{line:22,column:279},end:{line:22,column:293}}],line:22},"8":{loc:{start:{line:22,column:367},end:{line:22,column:423}},type:"binary-expr",locations:[{start:{line:22,column:367},end:{line:22,column:388}},{start:{line:22,column:392},end:{line:22,column:423}}],line:22},"9":{loc:{start:{line:22,column:448},end:{line:22,column:724}},type:"if",locations:[{start:{line:22,column:448},end:{line:22,column:724}},{start:{line:22,column:448},end:{line:22,column:724}}],line:22},"10":{loc:{start:{line:22,column:452},end:{line:22,column:519}},type:"binary-expr",locations:[{start:{line:22,column:452},end:{line:22,column:469}},{start:{line:22,column:473},end:{line:22,column:519}}],line:22},"11":{loc:{start:{line:22,column:534},end:{line:22,column:606}},type:"cond-expr",locations:[{start:{line:22,column:558},end:{line:22,column:599}},{start:{line:22,column:602},end:{line:22,column:606}}],line:22},"12":{loc:{start:{line:22,column:608},end:{line:22,column:722}},type:"if",locations:[{start:{line:22,column:608},end:{line:22,column:722}},{start:{line:22,column:608},end:{line:22,column:722}}],line:22},"13":{loc:{start:{line:22,column:612},end:{line:22,column:642}},type:"binary-expr",locations:[{start:{line:22,column:612},end:{line:22,column:616}},{start:{line:22,column:621},end:{line:22,column:629}},{start:{line:22,column:633},end:{line:22,column:641}}],line:22},"14":{loc:{start:{line:22,column:749},end:{line:22,column:787}},type:"if",locations:[{start:{line:22,column:749},end:{line:22,column:787}},{start:{line:22,column:749},end:{line:22,column:787}}],line:22},"15":{loc:{start:{line:24,column:46},end:{line:24,column:92}},type:"cond-expr",locations:[{start:{line:24,column:70},end:{line:24,column:73}},{start:{line:24,column:76},end:{line:24,column:92}}],line:24},"16":{loc:{start:{line:24,column:46},end:{line:24,column:67}},type:"binary-expr",locations:[{start:{line:24,column:46},end:{line:24,column:49}},{start:{line:24,column:53},end:{line:24,column:67}}],line:24},"17":{loc:{start:{line:26,column:75},end:{line:26,column:330}},type:"if",locations:[{start:{line:26,column:75},end:{line:26,column:330}},{start:{line:26,column:75},end:{line:26,column:330}}],line:26},"18":{loc:{start:{line:26,column:163},end:{line:26,column:296}},type:"if",locations:[{start:{line:26,column:163},end:{line:26,column:296}},{start:{line:26,column:163},end:{line:26,column:296}}],line:26},"19":{loc:{start:{line:28,column:91},end:{line:28,column:131}},type:"cond-expr",locations:[{start:{line:28,column:114},end:{line:28,column:126}},{start:{line:28,column:129},end:{line:28,column:131}}],line:28},"20":{loc:{start:{line:28,column:133},end:{line:28,column:515}},type:"if",locations:[{start:{line:28,column:133},end:{line:28,column:515}},{start:{line:28,column:133},end:{line:28,column:515}}],line:28},"21":{loc:{start:{line:28,column:255},end:{line:28,column:515}},type:"if",locations:[{start:{line:28,column:255},end:{line:28,column:515}},{start:{line:28,column:255},end:{line:28,column:515}}],line:28},"22":{loc:{start:{line:30,column:44},end:{line:30,column:195}},type:"if",locations:[{start:{line:30,column:44},end:{line:30,column:195}},{start:{line:30,column:44},end:{line:30,column:195}}],line:30},"23":{loc:{start:{line:41,column:4},end:{line:47,column:5}},type:"if",locations:[{start:{line:41,column:4},end:{line:47,column:5}},{start:{line:41,column:4},end:{line:47,column:5}}],line:41},"24":{loc:{start:{line:41,column:8},end:{line:41,column:50}},type:"binary-expr",locations:[{start:{line:41,column:8},end:{line:41,column:21}},{start:{line:41,column:25},end:{line:41,column:50}}],line:41},"25":{loc:{start:{line:42,column:6},end:{line:44,column:7}},type:"if",locations:[{start:{line:42,column:6},end:{line:44,column:7}},{start:{line:42,column:6},end:{line:44,column:7}}],line:42},"26":{loc:{start:{line:87,column:6},end:{line:89,column:7}},type:"if",locations:[{start:{line:87,column:6},end:{line:89,column:7}},{start:{line:87,column:6},end:{line:89,column:7}}],line:87},"27":{loc:{start:{line:87,column:10},end:{line:87,column:66}},type:"binary-expr",locations:[{start:{line:87,column:10},end:{line:87,column:28}},{start:{line:87,column:32},end:{line:87,column:66}}],line:87},"28":{loc:{start:{line:93,column:6},end:{line:95,column:7}},type:"if",locations:[{start:{line:93,column:6},end:{line:95,column:7}},{start:{line:93,column:6},end:{line:95,column:7}}],line:93},"29":{loc:{start:{line:93,column:10},end:{line:93,column:65}},type:"binary-expr",locations:[{start:{line:93,column:10},end:{line:93,column:28}},{start:{line:93,column:32},end:{line:93,column:65}}],line:93},"30":{loc:{start:{line:101,column:6},end:{line:101,column:65}},type:"if",locations:[{start:{line:101,column:6},end:{line:101,column:65}},{start:{line:101,column:6},end:{line:101,column:65}}],line:101},"31":{loc:{start:{line:113,column:6},end:{line:119,column:7}},type:"if",locations:[{start:{line:113,column:6},end:{line:119,column:7}},{start:{line:113,column:6},end:{line:119,column:7}}],line:113},"32":{loc:{start:{line:129,column:6},end:{line:129,column:41}},type:"if",locations:[{start:{line:129,column:6},end:{line:129,column:41}},{start:{line:129,column:6},end:{line:129,column:41}}],line:129},"33":{loc:{start:{line:131,column:6},end:{line:142,column:7}},type:"if",locations:[{start:{line:131,column:6},end:{line:142,column:7}},{start:{line:131,column:6},end:{line:142,column:7}}],line:131},"34":{loc:{start:{line:141,column:8},end:{line:141,column:67}},type:"if",locations:[{start:{line:141,column:8},end:{line:141,column:67}},{start:{line:141,column:8},end:{line:141,column:67}}],line:141},"35":{loc:{start:{line:147,column:4},end:{line:149,column:5}},type:"if",locations:[{start:{line:147,column:4},end:{line:149,column:5}},{start:{line:147,column:4},end:{line:149,column:5}}],line:147},"36":{loc:{start:{line:153,column:52},end:{line:153,column:125}},type:"binary-expr",locations:[{start:{line:153,column:52},end:{line:153,column:77}},{start:{line:153,column:81},end:{line:153,column:125}}],line:153},"37":{loc:{start:{line:155,column:4},end:{line:159,column:5}},type:"if",locations:[{start:{line:155,column:4},end:{line:159,column:5}},{start:{line:155,column:4},end:{line:159,column:5}}],line:155},"38":{loc:{start:{line:161,column:4},end:{line:163,column:5}},type:"if",locations:[{start:{line:161,column:4},end:{line:163,column:5}},{start:{line:161,column:4},end:{line:163,column:5}}],line:161},"39":{loc:{start:{line:161,column:8},end:{line:161,column:58}},type:"binary-expr",locations:[{start:{line:161,column:8},end:{line:161,column:33}},{start:{line:161,column:37},end:{line:161,column:58}}],line:161},"40":{loc:{start:{line:195,column:4},end:{line:207,column:5}},type:"if",locations:[{start:{line:195,column:4},end:{line:207,column:5}},{start:{line:195,column:4},end:{line:207,column:5}}],line:195},"41":{loc:{start:{line:213,column:4},end:{line:221,column:5}},type:"if",locations:[{start:{line:213,column:4},end:{line:221,column:5}},{start:{line:213,column:4},end:{line:221,column:5}}],line:213},"42":{loc:{start:{line:216,column:8},end:{line:219,column:9}},type:"if",locations:[{start:{line:216,column:8},end:{line:219,column:9}},{start:{line:216,column:8},end:{line:219,column:9}}],line:216},"43":{loc:{start:{line:224,column:4},end:{line:230,column:5}},type:"if",locations:[{start:{line:224,column:4},end:{line:230,column:5}},{start:{line:224,column:4},end:{line:230,column:5}}],line:224},"44":{loc:{start:{line:226,column:8},end:{line:228,column:9}},type:"if",locations:[{start:{line:226,column:8},end:{line:228,column:9}},{start:{line:226,column:8},end:{line:228,column:9}}],line:226},"45":{loc:{start:{line:226,column:12},end:{line:226,column:91}},type:"binary-expr",locations:[{start:{line:226,column:12},end:{line:226,column:31}},{start:{line:226,column:35},end:{line:226,column:91}}],line:226},"46":{loc:{start:{line:240,column:4},end:{line:249,column:5}},type:"if",locations:[{start:{line:240,column:4},end:{line:249,column:5}},{start:{line:240,column:4},end:{line:249,column:5}}],line:240},"47":{loc:{start:{line:245,column:8},end:{line:247,column:9}},type:"if",locations:[{start:{line:245,column:8},end:{line:247,column:9}},{start:{line:245,column:8},end:{line:247,column:9}}],line:245},"48":{loc:{start:{line:258,column:6},end:{line:261,column:7}},type:"if",locations:[{start:{line:258,column:6},end:{line:261,column:7}},{start:{line:258,column:6},end:{line:261,column:7}}],line:258},"49":{loc:{start:{line:258,column:10},end:{line:258,column:63}},type:"binary-expr",locations:[{start:{line:258,column:10},end:{line:258,column:29}},{start:{line:258,column:33},end:{line:258,column:63}}],line:258},"50":{loc:{start:{line:265,column:6},end:{line:284,column:7}},type:"if",locations:[{start:{line:265,column:6},end:{line:284,column:7}},{start:{line:265,column:6},end:{line:284,column:7}}],line:265},"51":{loc:{start:{line:287,column:6},end:{line:289,column:7}},type:"if",locations:[{start:{line:287,column:6},end:{line:289,column:7}},{start:{line:287,column:6},end:{line:289,column:7}}],line:287},"52":{loc:{start:{line:292,column:4},end:{line:300,column:5}},type:"if",locations:[{start:{line:292,column:4},end:{line:300,column:5}},{start:{line:292,column:4},end:{line:300,column:5}}],line:292},"53":{loc:{start:{line:298,column:11},end:{line:300,column:5}},type:"if",locations:[{start:{line:298,column:11},end:{line:300,column:5}},{start:{line:298,column:11},end:{line:300,column:5}}],line:298},"54":{loc:{start:{line:298,column:15},end:{line:298,column:74}},type:"binary-expr",locations:[{start:{line:298,column:15},end:{line:298,column:49}},{start:{line:298,column:53},end:{line:298,column:74}}],line:298},"55":{loc:{start:{line:302,column:4},end:{line:321,column:5}},type:"if",locations:[{start:{line:302,column:4},end:{line:321,column:5}},{start:{line:302,column:4},end:{line:321,column:5}}],line:302},"56":{loc:{start:{line:309,column:8},end:{line:312,column:9}},type:"if",locations:[{start:{line:309,column:8},end:{line:312,column:9}},{start:{line:309,column:8},end:{line:312,column:9}}],line:309},"57":{loc:{start:{line:314,column:11},end:{line:321,column:5}},type:"if",locations:[{start:{line:314,column:11},end:{line:321,column:5}},{start:{line:314,column:11},end:{line:321,column:5}}],line:314},"58":{loc:{start:{line:314,column:15},end:{line:314,column:76}},type:"binary-expr",locations:[{start:{line:314,column:15},end:{line:314,column:49}},{start:{line:314,column:53},end:{line:314,column:76}}],line:314},"59":{loc:{start:{line:316,column:40},end:{line:316,column:100}},type:"cond-expr",locations:[{start:{line:316,column:65},end:{line:316,column:95}},{start:{line:316,column:98},end:{line:316,column:100}}],line:316},"60":{loc:{start:{line:317,column:36},end:{line:317,column:92}},type:"cond-expr",locations:[{start:{line:317,column:59},end:{line:317,column:87}},{start:{line:317,column:90},end:{line:317,column:92}}],line:317},"61":{loc:{start:{line:324,column:6},end:{line:327,column:7}},type:"if",locations:[{start:{line:324,column:6},end:{line:327,column:7}},{start:{line:324,column:6},end:{line:327,column:7}}],line:324},"62":{loc:{start:{line:331,column:4},end:{line:339,column:5}},type:"if",locations:[{start:{line:331,column:4},end:{line:339,column:5}},{start:{line:331,column:4},end:{line:339,column:5}}],line:331},"63":{loc:{start:{line:333,column:8},end:{line:337,column:9}},type:"if",locations:[{start:{line:333,column:8},end:{line:337,column:9}},{start:{line:333,column:8},end:{line:337,column:9}}],line:333},"64":{loc:{start:{line:333,column:12},end:{line:333,column:129}},type:"binary-expr",locations:[{start:{line:333,column:13},end:{line:333,column:33}},{start:{line:333,column:37},end:{line:333,column:68}},{start:{line:333,column:73},end:{line:333,column:129}}],line:333},"65":{loc:{start:{line:334,column:10},end:{line:336,column:11}},type:"if",locations:[{start:{line:334,column:10},end:{line:336,column:11}},{start:{line:334,column:10},end:{line:336,column:11}}],line:334},"66":{loc:{start:{line:343,column:4},end:{line:360,column:5}},type:"if",locations:[{start:{line:343,column:4},end:{line:360,column:5}},{start:{line:343,column:4},end:{line:360,column:5}}],line:343},"67":{loc:{start:{line:345,column:8},end:{line:358,column:9}},type:"if",locations:[{start:{line:345,column:8},end:{line:358,column:9}},{start:{line:345,column:8},end:{line:358,column:9}}],line:345},"68":{loc:{start:{line:346,column:10},end:{line:357,column:11}},type:"if",locations:[{start:{line:346,column:10},end:{line:357,column:11}},{start:{line:346,column:10},end:{line:357,column:11}}],line:346},"69":{loc:{start:{line:346,column:14},end:{line:346,column:69}},type:"binary-expr",locations:[{start:{line:346,column:14},end:{line:346,column:34}},{start:{line:346,column:38},end:{line:346,column:69}}],line:346},"70":{loc:{start:{line:348,column:17},end:{line:357,column:11}},type:"if",locations:[{start:{line:348,column:17},end:{line:357,column:11}},{start:{line:348,column:17},end:{line:357,column:11}}],line:348},"71":{loc:{start:{line:351,column:12},end:{line:356,column:13}},type:"if",locations:[{start:{line:351,column:12},end:{line:356,column:13}},{start:{line:351,column:12},end:{line:356,column:13}}],line:351},"72":{loc:{start:{line:366,column:4},end:{line:371,column:5}},type:"if",locations:[{start:{line:366,column:4},end:{line:371,column:5}},{start:{line:366,column:4},end:{line:371,column:5}}],line:366},"73":{loc:{start:{line:375,column:4},end:{line:377,column:5}},type:"if",locations:[{start:{line:375,column:4},end:{line:377,column:5}},{start:{line:375,column:4},end:{line:377,column:5}}],line:375},"74":{loc:{start:{line:375,column:8},end:{line:375,column:58}},type:"binary-expr",locations:[{start:{line:375,column:8},end:{line:375,column:42}},{start:{line:375,column:46},end:{line:375,column:58}}],line:375},"75":{loc:{start:{line:380,column:16},end:{line:380,column:74}},type:"binary-expr",locations:[{start:{line:380,column:16},end:{line:380,column:68}},{start:{line:380,column:72},end:{line:380,column:74}}],line:380},"76":{loc:{start:{line:387,column:11},end:{line:387,column:174}},type:"binary-expr",locations:[{start:{line:387,column:11},end:{line:387,column:65}},{start:{line:387,column:69},end:{line:387,column:174}}],line:387},"77":{loc:{start:{line:387,column:72},end:{line:387,column:173}},type:"binary-expr",locations:[{start:{line:387,column:72},end:{line:387,column:115}},{start:{line:387,column:119},end:{line:387,column:173}}],line:387},"78":{loc:{start:{line:393,column:4},end:{line:395,column:5}},type:"if",locations:[{start:{line:393,column:4},end:{line:395,column:5}},{start:{line:393,column:4},end:{line:395,column:5}}],line:393},"79":{loc:{start:{line:404,column:4},end:{line:404,column:52}},type:"if",locations:[{start:{line:404,column:4},end:{line:404,column:52}},{start:{line:404,column:4},end:{line:404,column:52}}],line:404},"80":{loc:{start:{line:409,column:4},end:{line:415,column:5}},type:"if",locations:[{start:{line:409,column:4},end:{line:415,column:5}},{start:{line:409,column:4},end:{line:415,column:5}}],line:409},"81":{loc:{start:{line:411,column:11},end:{line:415,column:5}},type:"if",locations:[{start:{line:411,column:11},end:{line:415,column:5}},{start:{line:411,column:11},end:{line:415,column:5}}],line:411}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0]},inputSourceMap:{version:3,sources:["../../src/SchemaMigrations/DefinedSchemas.js"],names:["Parse","require","DefinedSchemas","constructor","schemaOptions","config","localSchemas","Config","get","appId","definitions","Array","isArray","retries","maxRetries","saveSchemaToDB","schema","payload","className","fields","_fields","indexes","_indexes","classLevelPermissions","_clp","resetSchemaOps","updateSchemaToDB","execute","logger","info","beforeMigration","Promise","resolve","executeMigrations","afterMigration","e","error","process","env","NODE_ENV","exit","timeout","setTimeout","createDeleteSession","allCloudSchemas","Schema","all","clearTimeout","map","localSchema","saveOrUpdate","checkForMissingSchemas","enforceCLPForNonProvidedClass","wait","strict","cloudSchemas","s","missingSchemas","filter","c","includes","systemClasses","Set","size","length","join","warn","time","nonProvidedClasses","cloudSchema","some","parseSchema","handleCLP","session","Session","save","useMasterKey","destroy","find","sc","updateSchema","saveSchema","newLocalSchema","Object","keys","fieldName","isProtectedFields","forEach","field","handleFields","indexName","isProtectedIndex","addIndex","fieldsToDelete","fieldsToRecreate","fieldsWithChangedParams","push","localField","paramsAreEquals","type","targetClass","from","to","deleteExtraFields","deleteField","recreateModifiedFields","fieldInfo","indexesToAdd","deleteIndex","index","debug","o","clp","addField","setCLP","defaultColumns","_Default","indexOf","objA","objB","keysA","keysB","every","k","addRelation","addPointer"],mappings:"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",sourcesContent:["// @flow\n// @flow-disable-next Cannot resolve module `parse/node`.\nconst Parse = require('parse/node');\nimport { logger } from '../logger';\nimport Config from '../Config';\nimport { internalCreateSchema, internalUpdateSchema } from '../Routers/SchemasRouter';\nimport { defaultColumns, systemClasses } from '../Controllers/SchemaController';\nimport { ParseServerOptions } from '../Options';\nimport * as Migrations from './Migrations';\n\nexport class DefinedSchemas {\n  config: ParseServerOptions;\n  schemaOptions: Migrations.SchemaOptions;\n  localSchemas: Migrations.JSONSchema[];\n  retries: number;\n  maxRetries: number;\n  allCloudSchemas: Parse.Schema[];\n\n  constructor(schemaOptions: Migrations.SchemaOptions, config: ParseServerOptions) {\n    this.localSchemas = [];\n    this.config = Config.get(config.appId);\n    this.schemaOptions = schemaOptions;\n    if (schemaOptions && schemaOptions.definitions) {\n      if (!Array.isArray(schemaOptions.definitions)) {\n        throw `\"schema.definitions\" must be an array of schemas`;\n      }\n\n      this.localSchemas = schemaOptions.definitions;\n    }\n\n    this.retries = 0;\n    this.maxRetries = 3;\n  }\n\n  async saveSchemaToDB(schema: Parse.Schema): Promise<void> {\n    const payload = {\n      className: schema.className,\n      fields: schema._fields,\n      indexes: schema._indexes,\n      classLevelPermissions: schema._clp,\n    };\n    await internalCreateSchema(schema.className, payload, this.config);\n    this.resetSchemaOps(schema);\n  }\n\n  resetSchemaOps(schema: Parse.Schema) {\n    // Reset ops like SDK\n    schema._fields = {};\n    schema._indexes = {};\n  }\n\n  // Simulate update like the SDK\n  // We cannot use SDK since routes are disabled\n  async updateSchemaToDB(schema: Parse.Schema) {\n    const payload = {\n      className: schema.className,\n      fields: schema._fields,\n      indexes: schema._indexes,\n      classLevelPermissions: schema._clp,\n    };\n    await internalUpdateSchema(schema.className, payload, this.config);\n    this.resetSchemaOps(schema);\n  }\n\n  async execute() {\n    try {\n      logger.info('Running Migrations');\n      if (this.schemaOptions && this.schemaOptions.beforeMigration) {\n        await Promise.resolve(this.schemaOptions.beforeMigration());\n      }\n\n      await this.executeMigrations();\n\n      if (this.schemaOptions && this.schemaOptions.afterMigration) {\n        await Promise.resolve(this.schemaOptions.afterMigration());\n      }\n\n      logger.info('Running Migrations Completed');\n    } catch (e) {\n      logger.error(`Failed to run migrations: ${e}`);\n      if (process.env.NODE_ENV === 'production') process.exit(1);\n    }\n  }\n\n  async executeMigrations() {\n    let timeout = null;\n    try {\n      // Set up a time out in production\n      // if we fail to get schema\n      // pm2 or K8s and many other process managers will try to restart the process\n      // after the exit\n      if (process.env.NODE_ENV === 'production') {\n        timeout = setTimeout(() => {\n          logger.error('Timeout occurred during execution of migrations. Exiting...');\n          process.exit(1);\n        }, 20000);\n      }\n\n      // Hack to force session schema to be created\n      await this.createDeleteSession();\n      this.allCloudSchemas = await Parse.Schema.all();\n      clearTimeout(timeout);\n      await Promise.all(this.localSchemas.map(async localSchema => this.saveOrUpdate(localSchema)));\n\n      this.checkForMissingSchemas();\n      await this.enforceCLPForNonProvidedClass();\n    } catch (e) {\n      if (timeout) clearTimeout(timeout);\n      if (this.retries < this.maxRetries) {\n        this.retries++;\n        // first retry 1sec, 2sec, 3sec total 6sec retry sequence\n        // retry will only happen in case of deploying multi parse server instance\n        // at the same time. Modern systems like k8 avoid this by doing rolling updates\n        await this.wait(1000 * this.retries);\n        await this.executeMigrations();\n      } else {\n        logger.error(`Failed to run migrations: ${e}`);\n        if (process.env.NODE_ENV === 'production') process.exit(1);\n      }\n    }\n  }\n\n  checkForMissingSchemas() {\n    if (this.schemaOptions.strict !== true) {\n      return;\n    }\n\n    const cloudSchemas = this.allCloudSchemas.map(s => s.className);\n    const localSchemas = this.localSchemas.map(s => s.className);\n    const missingSchemas = cloudSchemas.filter(\n      c => !localSchemas.includes(c) && !systemClasses.includes(c)\n    );\n\n    if (new Set(localSchemas).size !== localSchemas.length) {\n      logger.error(\n        `The list of schemas provided contains duplicated \"className\"  \"${localSchemas.join(\n          '\",\"'\n        )}\"`\n      );\n      process.exit(1);\n    }\n\n    if (this.schemaOptions.strict && missingSchemas.length) {\n      logger.warn(\n        `The following schemas are currently present in the database, but not explicitly defined in a schema: \"${missingSchemas.join(\n          '\", \"'\n        )}\"`\n      );\n    }\n  }\n\n  // Required for testing purpose\n  wait(time: number) {\n    return new Promise<void>(resolve => setTimeout(resolve, time));\n  }\n\n  async enforceCLPForNonProvidedClass(): Promise<void> {\n    const nonProvidedClasses = this.allCloudSchemas.filter(\n      cloudSchema =>\n        !this.localSchemas.some(localSchema => localSchema.className === cloudSchema.className)\n    );\n    await Promise.all(\n      nonProvidedClasses.map(async schema => {\n        const parseSchema = new Parse.Schema(schema.className);\n        this.handleCLP(schema, parseSchema);\n        await this.updateSchemaToDB(parseSchema);\n      })\n    );\n  }\n\n  // Create a fake session since Parse do not create the _Session until\n  // a session is created\n  async createDeleteSession() {\n    const session = new Parse.Session();\n    await session.save(null, { useMasterKey: true });\n    await session.destroy({ useMasterKey: true });\n  }\n\n  async saveOrUpdate(localSchema: Migrations.JSONSchema) {\n    const cloudSchema = this.allCloudSchemas.find(sc => sc.className === localSchema.className);\n    if (cloudSchema) {\n      try {\n        await this.updateSchema(localSchema, cloudSchema);\n      } catch (e) {\n        throw `Error during update of schema for type ${cloudSchema.className}: ${e}`;\n      }\n    } else {\n      try {\n        await this.saveSchema(localSchema);\n      } catch (e) {\n        throw `Error while saving Schema for type ${localSchema.className}: ${e}`;\n      }\n    }\n  }\n\n  async saveSchema(localSchema: Migrations.JSONSchema) {\n    const newLocalSchema = new Parse.Schema(localSchema.className);\n    if (localSchema.fields) {\n      // Handle fields\n      Object.keys(localSchema.fields)\n        .filter(fieldName => !this.isProtectedFields(localSchema.className, fieldName))\n        .forEach(fieldName => {\n          if (localSchema.fields) {\n            const field = localSchema.fields[fieldName];\n            this.handleFields(newLocalSchema, fieldName, field);\n          }\n        });\n    }\n    // Handle indexes\n    if (localSchema.indexes) {\n      Object.keys(localSchema.indexes).forEach(indexName => {\n        if (localSchema.indexes && !this.isProtectedIndex(localSchema.className, indexName)) {\n          newLocalSchema.addIndex(indexName, localSchema.indexes[indexName]);\n        }\n      });\n    }\n\n    this.handleCLP(localSchema, newLocalSchema);\n\n    return await this.saveSchemaToDB(newLocalSchema);\n  }\n\n  async updateSchema(localSchema: Migrations.JSONSchema, cloudSchema: Parse.Schema) {\n    const newLocalSchema = new Parse.Schema(localSchema.className);\n\n    // Handle fields\n    // Check addition\n    if (localSchema.fields) {\n      Object.keys(localSchema.fields)\n        .filter(fieldName => !this.isProtectedFields(localSchema.className, fieldName))\n        .forEach(fieldName => {\n          // @flow-disable-next\n          const field = localSchema.fields[fieldName];\n          if (!cloudSchema.fields[fieldName]) {\n            this.handleFields(newLocalSchema, fieldName, field);\n          }\n        });\n    }\n\n    const fieldsToDelete: string[] = [];\n    const fieldsToRecreate: {\n      fieldName: string,\n      from: { type: string, targetClass?: string },\n      to: { type: string, targetClass?: string },\n    }[] = [];\n    const fieldsWithChangedParams: string[] = [];\n\n    // Check deletion\n    Object.keys(cloudSchema.fields)\n      .filter(fieldName => !this.isProtectedFields(localSchema.className, fieldName))\n      .forEach(fieldName => {\n        const field = cloudSchema.fields[fieldName];\n        if (!localSchema.fields || !localSchema.fields[fieldName]) {\n          fieldsToDelete.push(fieldName);\n          return;\n        }\n\n        const localField = localSchema.fields[fieldName];\n        // Check if field has a changed type\n        if (\n          !this.paramsAreEquals(\n            { type: field.type, targetClass: field.targetClass },\n            { type: localField.type, targetClass: localField.targetClass }\n          )\n        ) {\n          fieldsToRecreate.push({\n            fieldName,\n            from: { type: field.type, targetClass: field.targetClass },\n            to: { type: localField.type, targetClass: localField.targetClass },\n          });\n          return;\n        }\n\n        // Check if something changed other than the type (like required, defaultValue)\n        if (!this.paramsAreEquals(field, localField)) {\n          fieldsWithChangedParams.push(fieldName);\n        }\n      });\n\n    if (this.schemaOptions.deleteExtraFields === true) {\n      fieldsToDelete.forEach(fieldName => {\n        newLocalSchema.deleteField(fieldName);\n      });\n\n      // Delete fields from the schema then apply changes\n      await this.updateSchemaToDB(newLocalSchema);\n    } else if (this.schemaOptions.strict === true && fieldsToDelete.length) {\n      logger.warn(\n        `The following fields exist in the database for \"${\n          localSchema.className\n        }\", but are missing in the schema : \"${fieldsToDelete.join('\" ,\"')}\"`\n      );\n    }\n\n    if (this.schemaOptions.recreateModifiedFields === true) {\n      fieldsToRecreate.forEach(field => {\n        newLocalSchema.deleteField(field.fieldName);\n      });\n\n      // Delete fields from the schema then apply changes\n      await this.updateSchemaToDB(newLocalSchema);\n\n      fieldsToRecreate.forEach(fieldInfo => {\n        if (localSchema.fields) {\n          const field = localSchema.fields[fieldInfo.fieldName];\n          this.handleFields(newLocalSchema, fieldInfo.fieldName, field);\n        }\n      });\n    } else if (this.schemaOptions.strict === true && fieldsToRecreate.length) {\n      fieldsToRecreate.forEach(field => {\n        const from =\n          field.from.type + (field.from.targetClass ? ` (${field.from.targetClass})` : '');\n        const to = field.to.type + (field.to.targetClass ? ` (${field.to.targetClass})` : '');\n\n        logger.warn(\n          `The field \"${field.fieldName}\" type differ between the schema and the database for \"${localSchema.className}\"; Schema is defined as \"${to}\" and current database type is \"${from}\"`\n        );\n      });\n    }\n\n    fieldsWithChangedParams.forEach(fieldName => {\n      if (localSchema.fields) {\n        const field = localSchema.fields[fieldName];\n        this.handleFields(newLocalSchema, fieldName, field);\n      }\n    });\n\n    // Handle Indexes\n    // Check addition\n    if (localSchema.indexes) {\n      Object.keys(localSchema.indexes).forEach(indexName => {\n        if (\n          (!cloudSchema.indexes || !cloudSchema.indexes[indexName]) &&\n          !this.isProtectedIndex(localSchema.className, indexName)\n        ) {\n          if (localSchema.indexes) {\n            newLocalSchema.addIndex(indexName, localSchema.indexes[indexName]);\n          }\n        }\n      });\n    }\n\n    const indexesToAdd = [];\n\n    // Check deletion\n    if (cloudSchema.indexes) {\n      Object.keys(cloudSchema.indexes).forEach(indexName => {\n        if (!this.isProtectedIndex(localSchema.className, indexName)) {\n          if (!localSchema.indexes || !localSchema.indexes[indexName]) {\n            newLocalSchema.deleteIndex(indexName);\n          } else if (\n            !this.paramsAreEquals(localSchema.indexes[indexName], cloudSchema.indexes[indexName])\n          ) {\n            newLocalSchema.deleteIndex(indexName);\n            if (localSchema.indexes) {\n              indexesToAdd.push({\n                indexName,\n                index: localSchema.indexes[indexName],\n              });\n            }\n          }\n        }\n      });\n    }\n\n    this.handleCLP(localSchema, newLocalSchema, cloudSchema);\n    // Apply changes\n    await this.updateSchemaToDB(newLocalSchema);\n    // Apply new/changed indexes\n    if (indexesToAdd.length) {\n      logger.debug(\n        `Updating indexes for \"${newLocalSchema.className}\" :  ${indexesToAdd.join(' ,')}`\n      );\n      indexesToAdd.forEach(o => newLocalSchema.addIndex(o.indexName, o.index));\n      await this.updateSchemaToDB(newLocalSchema);\n    }\n  }\n\n  handleCLP(\n    localSchema: Migrations.JSONSchema,\n    newLocalSchema: Parse.Schema,\n    cloudSchema: Parse.Schema\n  ) {\n    if (!localSchema.classLevelPermissions && !cloudSchema) {\n      logger.warn(`classLevelPermissions not provided for ${localSchema.className}.`);\n    }\n    // Use spread to avoid read only issue (encountered by Moumouls using directAccess)\n    const clp = ({ ...localSchema.classLevelPermissions } || {}: Parse.CLP.PermissionsMap);\n    // To avoid inconsistency we need to remove all rights on addField\n    clp.addField = {};\n    newLocalSchema.setCLP(clp);\n  }\n\n  isProtectedFields(className: string, fieldName: string) {\n    return (\n      !!defaultColumns._Default[fieldName] ||\n      !!(defaultColumns[className] && defaultColumns[className][fieldName])\n    );\n  }\n\n  isProtectedIndex(className: string, indexName: string) {\n    let indexes = ['_id_'];\n    if (className === '_User') {\n      indexes = [\n        ...indexes,\n        'case_insensitive_username',\n        'case_insensitive_email',\n        'username_1',\n        'email_1',\n      ];\n    }\n\n    return indexes.indexOf(indexName) !== -1;\n  }\n\n  paramsAreEquals<T: { [key: string]: any }>(objA: T, objB: T) {\n    const keysA: string[] = Object.keys(objA);\n    const keysB: string[] = Object.keys(objB);\n\n    // Check key name\n    if (keysA.length !== keysB.length) return false;\n    return keysA.every(k => objA[k] === objB[k]);\n  }\n\n  handleFields(newLocalSchema: Parse.Schema, fieldName: string, field: Migrations.FieldType) {\n    if (field.type === 'Relation') {\n      newLocalSchema.addRelation(fieldName, field.targetClass);\n    } else if (field.type === 'Pointer') {\n      newLocalSchema.addPointer(fieldName, field.targetClass, field);\n    } else {\n      newLocalSchema.addField(fieldName, field.type, field);\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"87567820a9e032c63a77a39b49ea94dfbf5510aa"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1awkzybx8q=function(){return actualCoverage;};}return actualCoverage;}cov_1awkzybx8q();cov_1awkzybx8q().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1awkzybx8q().s[1]++;exports.DefinedSchemas=void 0;var _logger=(cov_1awkzybx8q().s[2]++,require("../logger"));var _Config=(cov_1awkzybx8q().s[3]++,_interopRequireDefault(require("../Config")));var _SchemasRouter=(cov_1awkzybx8q().s[4]++,require("../Routers/SchemasRouter"));var _SchemaController=(cov_1awkzybx8q().s[5]++,require("../Controllers/SchemaController"));var _Options=(cov_1awkzybx8q().s[6]++,require("../Options"));var Migrations=(cov_1awkzybx8q().s[7]++,_interopRequireWildcard(require("./Migrations")));function _getRequireWildcardCache(nodeInterop){cov_1awkzybx8q().f[0]++;cov_1awkzybx8q().s[8]++;if(typeof WeakMap!=="function"){cov_1awkzybx8q().b[0][0]++;cov_1awkzybx8q().s[9]++;return null;}else{cov_1awkzybx8q().b[0][1]++;}var cacheBabelInterop=(cov_1awkzybx8q().s[10]++,new WeakMap());var cacheNodeInterop=(cov_1awkzybx8q().s[11]++,new WeakMap());cov_1awkzybx8q().s[12]++;return(_getRequireWildcardCache=function(nodeInterop){cov_1awkzybx8q().f[1]++;cov_1awkzybx8q().s[13]++;return nodeInterop?(cov_1awkzybx8q().b[1][0]++,cacheNodeInterop):(cov_1awkzybx8q().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_1awkzybx8q().f[2]++;cov_1awkzybx8q().s[14]++;if((cov_1awkzybx8q().b[3][0]++,!nodeInterop)&&(cov_1awkzybx8q().b[3][1]++,obj)&&(cov_1awkzybx8q().b[3][2]++,obj.__esModule)){cov_1awkzybx8q().b[2][0]++;cov_1awkzybx8q().s[15]++;return obj;}else{cov_1awkzybx8q().b[2][1]++;}cov_1awkzybx8q().s[16]++;if((cov_1awkzybx8q().b[5][0]++,obj===null)||(cov_1awkzybx8q().b[5][1]++,typeof obj!=="object")&&(cov_1awkzybx8q().b[5][2]++,typeof obj!=="function")){cov_1awkzybx8q().b[4][0]++;cov_1awkzybx8q().s[17]++;return{default:obj};}else{cov_1awkzybx8q().b[4][1]++;}var cache=(cov_1awkzybx8q().s[18]++,_getRequireWildcardCache(nodeInterop));cov_1awkzybx8q().s[19]++;if((cov_1awkzybx8q().b[7][0]++,cache)&&(cov_1awkzybx8q().b[7][1]++,cache.has(obj))){cov_1awkzybx8q().b[6][0]++;cov_1awkzybx8q().s[20]++;return cache.get(obj);}else{cov_1awkzybx8q().b[6][1]++;}var newObj=(cov_1awkzybx8q().s[21]++,{});var hasPropertyDescriptor=(cov_1awkzybx8q().s[22]++,(cov_1awkzybx8q().b[8][0]++,Object.defineProperty)&&(cov_1awkzybx8q().b[8][1]++,Object.getOwnPropertyDescriptor));cov_1awkzybx8q().s[23]++;for(var key in obj){cov_1awkzybx8q().s[24]++;if((cov_1awkzybx8q().b[10][0]++,key!=="default")&&(cov_1awkzybx8q().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_1awkzybx8q().b[9][0]++;var desc=(cov_1awkzybx8q().s[25]++,hasPropertyDescriptor?(cov_1awkzybx8q().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_1awkzybx8q().b[11][1]++,null));cov_1awkzybx8q().s[26]++;if((cov_1awkzybx8q().b[13][0]++,desc)&&((cov_1awkzybx8q().b[13][1]++,desc.get)||(cov_1awkzybx8q().b[13][2]++,desc.set))){cov_1awkzybx8q().b[12][0]++;cov_1awkzybx8q().s[27]++;Object.defineProperty(newObj,key,desc);}else{cov_1awkzybx8q().b[12][1]++;cov_1awkzybx8q().s[28]++;newObj[key]=obj[key];}}else{cov_1awkzybx8q().b[9][1]++;}}cov_1awkzybx8q().s[29]++;newObj.default=obj;cov_1awkzybx8q().s[30]++;if(cache){cov_1awkzybx8q().b[14][0]++;cov_1awkzybx8q().s[31]++;cache.set(obj,newObj);}else{cov_1awkzybx8q().b[14][1]++;}cov_1awkzybx8q().s[32]++;return newObj;}function _interopRequireDefault(obj){cov_1awkzybx8q().f[3]++;cov_1awkzybx8q().s[33]++;return(cov_1awkzybx8q().b[16][0]++,obj)&&(cov_1awkzybx8q().b[16][1]++,obj.__esModule)?(cov_1awkzybx8q().b[15][0]++,obj):(cov_1awkzybx8q().b[15][1]++,{default:obj});}function ownKeys(object,enumerableOnly){cov_1awkzybx8q().f[4]++;var keys=(cov_1awkzybx8q().s[34]++,Object.keys(object));cov_1awkzybx8q().s[35]++;if(Object.getOwnPropertySymbols){cov_1awkzybx8q().b[17][0]++;var symbols=(cov_1awkzybx8q().s[36]++,Object.getOwnPropertySymbols(object));cov_1awkzybx8q().s[37]++;if(enumerableOnly){cov_1awkzybx8q().b[18][0]++;cov_1awkzybx8q().s[38]++;symbols=symbols.filter(function(sym){cov_1awkzybx8q().f[5]++;cov_1awkzybx8q().s[39]++;return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}else{cov_1awkzybx8q().b[18][1]++;}cov_1awkzybx8q().s[40]++;keys.push.apply(keys,symbols);}else{cov_1awkzybx8q().b[17][1]++;}cov_1awkzybx8q().s[41]++;return keys;}function _objectSpread(target){cov_1awkzybx8q().f[6]++;cov_1awkzybx8q().s[42]++;for(var i=(cov_1awkzybx8q().s[43]++,1);i<arguments.length;i++){var source=(cov_1awkzybx8q().s[44]++,arguments[i]!=null?(cov_1awkzybx8q().b[19][0]++,arguments[i]):(cov_1awkzybx8q().b[19][1]++,{}));cov_1awkzybx8q().s[45]++;if(i%2){cov_1awkzybx8q().b[20][0]++;cov_1awkzybx8q().s[46]++;ownKeys(Object(source),true).forEach(function(key){cov_1awkzybx8q().f[7]++;cov_1awkzybx8q().s[47]++;_defineProperty(target,key,source[key]);});}else{cov_1awkzybx8q().b[20][1]++;cov_1awkzybx8q().s[48]++;if(Object.getOwnPropertyDescriptors){cov_1awkzybx8q().b[21][0]++;cov_1awkzybx8q().s[49]++;Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{cov_1awkzybx8q().b[21][1]++;cov_1awkzybx8q().s[50]++;ownKeys(Object(source)).forEach(function(key){cov_1awkzybx8q().f[8]++;cov_1awkzybx8q().s[51]++;Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}}cov_1awkzybx8q().s[52]++;return target;}function _defineProperty(obj,key,value){cov_1awkzybx8q().f[9]++;cov_1awkzybx8q().s[53]++;if(key in obj){cov_1awkzybx8q().b[22][0]++;cov_1awkzybx8q().s[54]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_1awkzybx8q().b[22][1]++;cov_1awkzybx8q().s[55]++;obj[key]=value;}cov_1awkzybx8q().s[56]++;return obj;}// -disable-next Cannot resolve module `parse/node`.
const Parse=(cov_1awkzybx8q().s[57]++,require('parse/node'));class DefinedSchemas{constructor(schemaOptions,config){cov_1awkzybx8q().f[10]++;cov_1awkzybx8q().s[58]++;this.localSchemas=[];cov_1awkzybx8q().s[59]++;this.config=_Config.default.get(config.appId);cov_1awkzybx8q().s[60]++;this.schemaOptions=schemaOptions;cov_1awkzybx8q().s[61]++;if((cov_1awkzybx8q().b[24][0]++,schemaOptions)&&(cov_1awkzybx8q().b[24][1]++,schemaOptions.definitions)){cov_1awkzybx8q().b[23][0]++;cov_1awkzybx8q().s[62]++;if(!Array.isArray(schemaOptions.definitions)){cov_1awkzybx8q().b[25][0]++;cov_1awkzybx8q().s[63]++;throw`"schema.definitions" must be an array of schemas`;}else{cov_1awkzybx8q().b[25][1]++;}cov_1awkzybx8q().s[64]++;this.localSchemas=schemaOptions.definitions;}else{cov_1awkzybx8q().b[23][1]++;}cov_1awkzybx8q().s[65]++;this.retries=0;cov_1awkzybx8q().s[66]++;this.maxRetries=3;}async saveSchemaToDB(schema){cov_1awkzybx8q().f[11]++;const payload=(cov_1awkzybx8q().s[67]++,{className:schema.className,fields:schema._fields,indexes:schema._indexes,classLevelPermissions:schema._clp});cov_1awkzybx8q().s[68]++;await(0,_SchemasRouter.internalCreateSchema)(schema.className,payload,this.config);cov_1awkzybx8q().s[69]++;this.resetSchemaOps(schema);}resetSchemaOps(schema){cov_1awkzybx8q().f[12]++;cov_1awkzybx8q().s[70]++;// Reset ops like SDK
schema._fields={};cov_1awkzybx8q().s[71]++;schema._indexes={};}// Simulate update like the SDK
// We cannot use SDK since routes are disabled
async updateSchemaToDB(schema){cov_1awkzybx8q().f[13]++;const payload=(cov_1awkzybx8q().s[72]++,{className:schema.className,fields:schema._fields,indexes:schema._indexes,classLevelPermissions:schema._clp});cov_1awkzybx8q().s[73]++;await(0,_SchemasRouter.internalUpdateSchema)(schema.className,payload,this.config);cov_1awkzybx8q().s[74]++;this.resetSchemaOps(schema);}async execute(){cov_1awkzybx8q().f[14]++;cov_1awkzybx8q().s[75]++;try{cov_1awkzybx8q().s[76]++;_logger.logger.info('Running Migrations');cov_1awkzybx8q().s[77]++;if((cov_1awkzybx8q().b[27][0]++,this.schemaOptions)&&(cov_1awkzybx8q().b[27][1]++,this.schemaOptions.beforeMigration)){cov_1awkzybx8q().b[26][0]++;cov_1awkzybx8q().s[78]++;await Promise.resolve(this.schemaOptions.beforeMigration());}else{cov_1awkzybx8q().b[26][1]++;}cov_1awkzybx8q().s[79]++;await this.executeMigrations();cov_1awkzybx8q().s[80]++;if((cov_1awkzybx8q().b[29][0]++,this.schemaOptions)&&(cov_1awkzybx8q().b[29][1]++,this.schemaOptions.afterMigration)){cov_1awkzybx8q().b[28][0]++;cov_1awkzybx8q().s[81]++;await Promise.resolve(this.schemaOptions.afterMigration());}else{cov_1awkzybx8q().b[28][1]++;}cov_1awkzybx8q().s[82]++;_logger.logger.info('Running Migrations Completed');}catch(e){cov_1awkzybx8q().s[83]++;_logger.logger.error(`Failed to run migrations: ${e}`);cov_1awkzybx8q().s[84]++;if(process.env.NODE_ENV==='production'){cov_1awkzybx8q().b[30][0]++;cov_1awkzybx8q().s[85]++;process.exit(1);}else{cov_1awkzybx8q().b[30][1]++;}}}async executeMigrations(){cov_1awkzybx8q().f[15]++;let timeout=(cov_1awkzybx8q().s[86]++,null);cov_1awkzybx8q().s[87]++;try{cov_1awkzybx8q().s[88]++;// Set up a time out in production
// if we fail to get schema
// pm2 or K8s and many other process managers will try to restart the process
// after the exit
if(process.env.NODE_ENV==='production'){cov_1awkzybx8q().b[31][0]++;cov_1awkzybx8q().s[89]++;timeout=setTimeout(()=>{cov_1awkzybx8q().f[16]++;cov_1awkzybx8q().s[90]++;_logger.logger.error('Timeout occurred during execution of migrations. Exiting...');cov_1awkzybx8q().s[91]++;process.exit(1);},20000);}else{cov_1awkzybx8q().b[31][1]++;}// Hack to force session schema to be created
cov_1awkzybx8q().s[92]++;await this.createDeleteSession();cov_1awkzybx8q().s[93]++;this.allCloudSchemas=await Parse.Schema.all();cov_1awkzybx8q().s[94]++;clearTimeout(timeout);cov_1awkzybx8q().s[95]++;await Promise.all(this.localSchemas.map(async localSchema=>{cov_1awkzybx8q().f[17]++;cov_1awkzybx8q().s[96]++;return this.saveOrUpdate(localSchema);}));cov_1awkzybx8q().s[97]++;this.checkForMissingSchemas();cov_1awkzybx8q().s[98]++;await this.enforceCLPForNonProvidedClass();}catch(e){cov_1awkzybx8q().s[99]++;if(timeout){cov_1awkzybx8q().b[32][0]++;cov_1awkzybx8q().s[100]++;clearTimeout(timeout);}else{cov_1awkzybx8q().b[32][1]++;}cov_1awkzybx8q().s[101]++;if(this.retries<this.maxRetries){cov_1awkzybx8q().b[33][0]++;cov_1awkzybx8q().s[102]++;this.retries++;// first retry 1sec, 2sec, 3sec total 6sec retry sequence
// retry will only happen in case of deploying multi parse server instance
// at the same time. Modern systems like k8 avoid this by doing rolling updates
cov_1awkzybx8q().s[103]++;await this.wait(1000*this.retries);cov_1awkzybx8q().s[104]++;await this.executeMigrations();}else{cov_1awkzybx8q().b[33][1]++;cov_1awkzybx8q().s[105]++;_logger.logger.error(`Failed to run migrations: ${e}`);cov_1awkzybx8q().s[106]++;if(process.env.NODE_ENV==='production'){cov_1awkzybx8q().b[34][0]++;cov_1awkzybx8q().s[107]++;process.exit(1);}else{cov_1awkzybx8q().b[34][1]++;}}}}checkForMissingSchemas(){cov_1awkzybx8q().f[18]++;cov_1awkzybx8q().s[108]++;if(this.schemaOptions.strict!==true){cov_1awkzybx8q().b[35][0]++;cov_1awkzybx8q().s[109]++;return;}else{cov_1awkzybx8q().b[35][1]++;}const cloudSchemas=(cov_1awkzybx8q().s[110]++,this.allCloudSchemas.map(s=>{cov_1awkzybx8q().f[19]++;cov_1awkzybx8q().s[111]++;return s.className;}));const localSchemas=(cov_1awkzybx8q().s[112]++,this.localSchemas.map(s=>{cov_1awkzybx8q().f[20]++;cov_1awkzybx8q().s[113]++;return s.className;}));const missingSchemas=(cov_1awkzybx8q().s[114]++,cloudSchemas.filter(c=>{cov_1awkzybx8q().f[21]++;cov_1awkzybx8q().s[115]++;return(cov_1awkzybx8q().b[36][0]++,!localSchemas.includes(c))&&(cov_1awkzybx8q().b[36][1]++,!_SchemaController.systemClasses.includes(c));}));cov_1awkzybx8q().s[116]++;if(new Set(localSchemas).size!==localSchemas.length){cov_1awkzybx8q().b[37][0]++;cov_1awkzybx8q().s[117]++;_logger.logger.error(`The list of schemas provided contains duplicated "className"  "${localSchemas.join('","')}"`);cov_1awkzybx8q().s[118]++;process.exit(1);}else{cov_1awkzybx8q().b[37][1]++;}cov_1awkzybx8q().s[119]++;if((cov_1awkzybx8q().b[39][0]++,this.schemaOptions.strict)&&(cov_1awkzybx8q().b[39][1]++,missingSchemas.length)){cov_1awkzybx8q().b[38][0]++;cov_1awkzybx8q().s[120]++;_logger.logger.warn(`The following schemas are currently present in the database, but not explicitly defined in a schema: "${missingSchemas.join('", "')}"`);}else{cov_1awkzybx8q().b[38][1]++;}}// Required for testing purpose
wait(time){cov_1awkzybx8q().f[22]++;cov_1awkzybx8q().s[121]++;return new Promise(resolve=>{cov_1awkzybx8q().f[23]++;cov_1awkzybx8q().s[122]++;return setTimeout(resolve,time);});}async enforceCLPForNonProvidedClass(){cov_1awkzybx8q().f[24]++;const nonProvidedClasses=(cov_1awkzybx8q().s[123]++,this.allCloudSchemas.filter(cloudSchema=>{cov_1awkzybx8q().f[25]++;cov_1awkzybx8q().s[124]++;return!this.localSchemas.some(localSchema=>{cov_1awkzybx8q().f[26]++;cov_1awkzybx8q().s[125]++;return localSchema.className===cloudSchema.className;});}));cov_1awkzybx8q().s[126]++;await Promise.all(nonProvidedClasses.map(async schema=>{cov_1awkzybx8q().f[27]++;const parseSchema=(cov_1awkzybx8q().s[127]++,new Parse.Schema(schema.className));cov_1awkzybx8q().s[128]++;this.handleCLP(schema,parseSchema);cov_1awkzybx8q().s[129]++;await this.updateSchemaToDB(parseSchema);}));}// Create a fake session since Parse do not create the _Session until
// a session is created
async createDeleteSession(){cov_1awkzybx8q().f[28]++;const session=(cov_1awkzybx8q().s[130]++,new Parse.Session());cov_1awkzybx8q().s[131]++;await session.save(null,{useMasterKey:true});cov_1awkzybx8q().s[132]++;await session.destroy({useMasterKey:true});}async saveOrUpdate(localSchema){cov_1awkzybx8q().f[29]++;const cloudSchema=(cov_1awkzybx8q().s[133]++,this.allCloudSchemas.find(sc=>{cov_1awkzybx8q().f[30]++;cov_1awkzybx8q().s[134]++;return sc.className===localSchema.className;}));cov_1awkzybx8q().s[135]++;if(cloudSchema){cov_1awkzybx8q().b[40][0]++;cov_1awkzybx8q().s[136]++;try{cov_1awkzybx8q().s[137]++;await this.updateSchema(localSchema,cloudSchema);}catch(e){cov_1awkzybx8q().s[138]++;throw`Error during update of schema for type ${cloudSchema.className}: ${e}`;}}else{cov_1awkzybx8q().b[40][1]++;cov_1awkzybx8q().s[139]++;try{cov_1awkzybx8q().s[140]++;await this.saveSchema(localSchema);}catch(e){cov_1awkzybx8q().s[141]++;throw`Error while saving Schema for type ${localSchema.className}: ${e}`;}}}async saveSchema(localSchema){cov_1awkzybx8q().f[31]++;const newLocalSchema=(cov_1awkzybx8q().s[142]++,new Parse.Schema(localSchema.className));cov_1awkzybx8q().s[143]++;if(localSchema.fields){cov_1awkzybx8q().b[41][0]++;cov_1awkzybx8q().s[144]++;// Handle fields
Object.keys(localSchema.fields).filter(fieldName=>{cov_1awkzybx8q().f[32]++;cov_1awkzybx8q().s[145]++;return!this.isProtectedFields(localSchema.className,fieldName);}).forEach(fieldName=>{cov_1awkzybx8q().f[33]++;cov_1awkzybx8q().s[146]++;if(localSchema.fields){cov_1awkzybx8q().b[42][0]++;const field=(cov_1awkzybx8q().s[147]++,localSchema.fields[fieldName]);cov_1awkzybx8q().s[148]++;this.handleFields(newLocalSchema,fieldName,field);}else{cov_1awkzybx8q().b[42][1]++;}});}else{cov_1awkzybx8q().b[41][1]++;}// Handle indexes
cov_1awkzybx8q().s[149]++;if(localSchema.indexes){cov_1awkzybx8q().b[43][0]++;cov_1awkzybx8q().s[150]++;Object.keys(localSchema.indexes).forEach(indexName=>{cov_1awkzybx8q().f[34]++;cov_1awkzybx8q().s[151]++;if((cov_1awkzybx8q().b[45][0]++,localSchema.indexes)&&(cov_1awkzybx8q().b[45][1]++,!this.isProtectedIndex(localSchema.className,indexName))){cov_1awkzybx8q().b[44][0]++;cov_1awkzybx8q().s[152]++;newLocalSchema.addIndex(indexName,localSchema.indexes[indexName]);}else{cov_1awkzybx8q().b[44][1]++;}});}else{cov_1awkzybx8q().b[43][1]++;}cov_1awkzybx8q().s[153]++;this.handleCLP(localSchema,newLocalSchema);cov_1awkzybx8q().s[154]++;return await this.saveSchemaToDB(newLocalSchema);}async updateSchema(localSchema,cloudSchema){cov_1awkzybx8q().f[35]++;const newLocalSchema=(cov_1awkzybx8q().s[155]++,new Parse.Schema(localSchema.className));// Handle fields
// Check addition
cov_1awkzybx8q().s[156]++;if(localSchema.fields){cov_1awkzybx8q().b[46][0]++;cov_1awkzybx8q().s[157]++;Object.keys(localSchema.fields).filter(fieldName=>{cov_1awkzybx8q().f[36]++;cov_1awkzybx8q().s[158]++;return!this.isProtectedFields(localSchema.className,fieldName);}).forEach(fieldName=>{cov_1awkzybx8q().f[37]++;// -disable-next
const field=(cov_1awkzybx8q().s[159]++,localSchema.fields[fieldName]);cov_1awkzybx8q().s[160]++;if(!cloudSchema.fields[fieldName]){cov_1awkzybx8q().b[47][0]++;cov_1awkzybx8q().s[161]++;this.handleFields(newLocalSchema,fieldName,field);}else{cov_1awkzybx8q().b[47][1]++;}});}else{cov_1awkzybx8q().b[46][1]++;}const fieldsToDelete=(cov_1awkzybx8q().s[162]++,[]);const fieldsToRecreate=(cov_1awkzybx8q().s[163]++,[]);const fieldsWithChangedParams=(cov_1awkzybx8q().s[164]++,[]);// Check deletion
cov_1awkzybx8q().s[165]++;Object.keys(cloudSchema.fields).filter(fieldName=>{cov_1awkzybx8q().f[38]++;cov_1awkzybx8q().s[166]++;return!this.isProtectedFields(localSchema.className,fieldName);}).forEach(fieldName=>{cov_1awkzybx8q().f[39]++;const field=(cov_1awkzybx8q().s[167]++,cloudSchema.fields[fieldName]);cov_1awkzybx8q().s[168]++;if((cov_1awkzybx8q().b[49][0]++,!localSchema.fields)||(cov_1awkzybx8q().b[49][1]++,!localSchema.fields[fieldName])){cov_1awkzybx8q().b[48][0]++;cov_1awkzybx8q().s[169]++;fieldsToDelete.push(fieldName);cov_1awkzybx8q().s[170]++;return;}else{cov_1awkzybx8q().b[48][1]++;}const localField=(cov_1awkzybx8q().s[171]++,localSchema.fields[fieldName]);// Check if field has a changed type
cov_1awkzybx8q().s[172]++;if(!this.paramsAreEquals({type:field.type,targetClass:field.targetClass},{type:localField.type,targetClass:localField.targetClass})){cov_1awkzybx8q().b[50][0]++;cov_1awkzybx8q().s[173]++;fieldsToRecreate.push({fieldName,from:{type:field.type,targetClass:field.targetClass},to:{type:localField.type,targetClass:localField.targetClass}});cov_1awkzybx8q().s[174]++;return;}else{cov_1awkzybx8q().b[50][1]++;}// Check if something changed other than the type (like required, defaultValue)
cov_1awkzybx8q().s[175]++;if(!this.paramsAreEquals(field,localField)){cov_1awkzybx8q().b[51][0]++;cov_1awkzybx8q().s[176]++;fieldsWithChangedParams.push(fieldName);}else{cov_1awkzybx8q().b[51][1]++;}});cov_1awkzybx8q().s[177]++;if(this.schemaOptions.deleteExtraFields===true){cov_1awkzybx8q().b[52][0]++;cov_1awkzybx8q().s[178]++;fieldsToDelete.forEach(fieldName=>{cov_1awkzybx8q().f[40]++;cov_1awkzybx8q().s[179]++;newLocalSchema.deleteField(fieldName);});// Delete fields from the schema then apply changes
cov_1awkzybx8q().s[180]++;await this.updateSchemaToDB(newLocalSchema);}else{cov_1awkzybx8q().b[52][1]++;cov_1awkzybx8q().s[181]++;if((cov_1awkzybx8q().b[54][0]++,this.schemaOptions.strict===true)&&(cov_1awkzybx8q().b[54][1]++,fieldsToDelete.length)){cov_1awkzybx8q().b[53][0]++;cov_1awkzybx8q().s[182]++;_logger.logger.warn(`The following fields exist in the database for "${localSchema.className}", but are missing in the schema : "${fieldsToDelete.join('" ,"')}"`);}else{cov_1awkzybx8q().b[53][1]++;}}cov_1awkzybx8q().s[183]++;if(this.schemaOptions.recreateModifiedFields===true){cov_1awkzybx8q().b[55][0]++;cov_1awkzybx8q().s[184]++;fieldsToRecreate.forEach(field=>{cov_1awkzybx8q().f[41]++;cov_1awkzybx8q().s[185]++;newLocalSchema.deleteField(field.fieldName);});// Delete fields from the schema then apply changes
cov_1awkzybx8q().s[186]++;await this.updateSchemaToDB(newLocalSchema);cov_1awkzybx8q().s[187]++;fieldsToRecreate.forEach(fieldInfo=>{cov_1awkzybx8q().f[42]++;cov_1awkzybx8q().s[188]++;if(localSchema.fields){cov_1awkzybx8q().b[56][0]++;const field=(cov_1awkzybx8q().s[189]++,localSchema.fields[fieldInfo.fieldName]);cov_1awkzybx8q().s[190]++;this.handleFields(newLocalSchema,fieldInfo.fieldName,field);}else{cov_1awkzybx8q().b[56][1]++;}});}else{cov_1awkzybx8q().b[55][1]++;cov_1awkzybx8q().s[191]++;if((cov_1awkzybx8q().b[58][0]++,this.schemaOptions.strict===true)&&(cov_1awkzybx8q().b[58][1]++,fieldsToRecreate.length)){cov_1awkzybx8q().b[57][0]++;cov_1awkzybx8q().s[192]++;fieldsToRecreate.forEach(field=>{cov_1awkzybx8q().f[43]++;const from=(cov_1awkzybx8q().s[193]++,field.from.type+(field.from.targetClass?(cov_1awkzybx8q().b[59][0]++,` (${field.from.targetClass})`):(cov_1awkzybx8q().b[59][1]++,'')));const to=(cov_1awkzybx8q().s[194]++,field.to.type+(field.to.targetClass?(cov_1awkzybx8q().b[60][0]++,` (${field.to.targetClass})`):(cov_1awkzybx8q().b[60][1]++,'')));cov_1awkzybx8q().s[195]++;_logger.logger.warn(`The field "${field.fieldName}" type differ between the schema and the database for "${localSchema.className}"; Schema is defined as "${to}" and current database type is "${from}"`);});}else{cov_1awkzybx8q().b[57][1]++;}}cov_1awkzybx8q().s[196]++;fieldsWithChangedParams.forEach(fieldName=>{cov_1awkzybx8q().f[44]++;cov_1awkzybx8q().s[197]++;if(localSchema.fields){cov_1awkzybx8q().b[61][0]++;const field=(cov_1awkzybx8q().s[198]++,localSchema.fields[fieldName]);cov_1awkzybx8q().s[199]++;this.handleFields(newLocalSchema,fieldName,field);}else{cov_1awkzybx8q().b[61][1]++;}});// Handle Indexes
// Check addition
cov_1awkzybx8q().s[200]++;if(localSchema.indexes){cov_1awkzybx8q().b[62][0]++;cov_1awkzybx8q().s[201]++;Object.keys(localSchema.indexes).forEach(indexName=>{cov_1awkzybx8q().f[45]++;cov_1awkzybx8q().s[202]++;if(((cov_1awkzybx8q().b[64][0]++,!cloudSchema.indexes)||(cov_1awkzybx8q().b[64][1]++,!cloudSchema.indexes[indexName]))&&(cov_1awkzybx8q().b[64][2]++,!this.isProtectedIndex(localSchema.className,indexName))){cov_1awkzybx8q().b[63][0]++;cov_1awkzybx8q().s[203]++;if(localSchema.indexes){cov_1awkzybx8q().b[65][0]++;cov_1awkzybx8q().s[204]++;newLocalSchema.addIndex(indexName,localSchema.indexes[indexName]);}else{cov_1awkzybx8q().b[65][1]++;}}else{cov_1awkzybx8q().b[63][1]++;}});}else{cov_1awkzybx8q().b[62][1]++;}const indexesToAdd=(cov_1awkzybx8q().s[205]++,[]);// Check deletion
cov_1awkzybx8q().s[206]++;if(cloudSchema.indexes){cov_1awkzybx8q().b[66][0]++;cov_1awkzybx8q().s[207]++;Object.keys(cloudSchema.indexes).forEach(indexName=>{cov_1awkzybx8q().f[46]++;cov_1awkzybx8q().s[208]++;if(!this.isProtectedIndex(localSchema.className,indexName)){cov_1awkzybx8q().b[67][0]++;cov_1awkzybx8q().s[209]++;if((cov_1awkzybx8q().b[69][0]++,!localSchema.indexes)||(cov_1awkzybx8q().b[69][1]++,!localSchema.indexes[indexName])){cov_1awkzybx8q().b[68][0]++;cov_1awkzybx8q().s[210]++;newLocalSchema.deleteIndex(indexName);}else{cov_1awkzybx8q().b[68][1]++;cov_1awkzybx8q().s[211]++;if(!this.paramsAreEquals(localSchema.indexes[indexName],cloudSchema.indexes[indexName])){cov_1awkzybx8q().b[70][0]++;cov_1awkzybx8q().s[212]++;newLocalSchema.deleteIndex(indexName);cov_1awkzybx8q().s[213]++;if(localSchema.indexes){cov_1awkzybx8q().b[71][0]++;cov_1awkzybx8q().s[214]++;indexesToAdd.push({indexName,index:localSchema.indexes[indexName]});}else{cov_1awkzybx8q().b[71][1]++;}}else{cov_1awkzybx8q().b[70][1]++;}}}else{cov_1awkzybx8q().b[67][1]++;}});}else{cov_1awkzybx8q().b[66][1]++;}cov_1awkzybx8q().s[215]++;this.handleCLP(localSchema,newLocalSchema,cloudSchema);// Apply changes
cov_1awkzybx8q().s[216]++;await this.updateSchemaToDB(newLocalSchema);// Apply new/changed indexes
cov_1awkzybx8q().s[217]++;if(indexesToAdd.length){cov_1awkzybx8q().b[72][0]++;cov_1awkzybx8q().s[218]++;_logger.logger.debug(`Updating indexes for "${newLocalSchema.className}" :  ${indexesToAdd.join(' ,')}`);cov_1awkzybx8q().s[219]++;indexesToAdd.forEach(o=>{cov_1awkzybx8q().f[47]++;cov_1awkzybx8q().s[220]++;return newLocalSchema.addIndex(o.indexName,o.index);});cov_1awkzybx8q().s[221]++;await this.updateSchemaToDB(newLocalSchema);}else{cov_1awkzybx8q().b[72][1]++;}}handleCLP(localSchema,newLocalSchema,cloudSchema){cov_1awkzybx8q().f[48]++;cov_1awkzybx8q().s[222]++;if((cov_1awkzybx8q().b[74][0]++,!localSchema.classLevelPermissions)&&(cov_1awkzybx8q().b[74][1]++,!cloudSchema)){cov_1awkzybx8q().b[73][0]++;cov_1awkzybx8q().s[223]++;_logger.logger.warn(`classLevelPermissions not provided for ${localSchema.className}.`);}else{cov_1awkzybx8q().b[73][1]++;}// Use spread to avoid read only issue (encountered by Moumouls using directAccess)
const clp=(cov_1awkzybx8q().s[224]++,(cov_1awkzybx8q().b[75][0]++,_objectSpread({},localSchema.classLevelPermissions))||(cov_1awkzybx8q().b[75][1]++,{}));// To avoid inconsistency we need to remove all rights on addField
cov_1awkzybx8q().s[225]++;clp.addField={};cov_1awkzybx8q().s[226]++;newLocalSchema.setCLP(clp);}isProtectedFields(className,fieldName){cov_1awkzybx8q().f[49]++;cov_1awkzybx8q().s[227]++;return(cov_1awkzybx8q().b[76][0]++,!!_SchemaController.defaultColumns._Default[fieldName])||(cov_1awkzybx8q().b[76][1]++,!!((cov_1awkzybx8q().b[77][0]++,_SchemaController.defaultColumns[className])&&(cov_1awkzybx8q().b[77][1]++,_SchemaController.defaultColumns[className][fieldName])));}isProtectedIndex(className,indexName){cov_1awkzybx8q().f[50]++;let indexes=(cov_1awkzybx8q().s[228]++,['_id_']);cov_1awkzybx8q().s[229]++;if(className==='_User'){cov_1awkzybx8q().b[78][0]++;cov_1awkzybx8q().s[230]++;indexes=[...indexes,'case_insensitive_username','case_insensitive_email','username_1','email_1'];}else{cov_1awkzybx8q().b[78][1]++;}cov_1awkzybx8q().s[231]++;return indexes.indexOf(indexName)!==-1;}paramsAreEquals(objA,objB){cov_1awkzybx8q().f[51]++;const keysA=(cov_1awkzybx8q().s[232]++,Object.keys(objA));const keysB=(cov_1awkzybx8q().s[233]++,Object.keys(objB));// Check key name
cov_1awkzybx8q().s[234]++;if(keysA.length!==keysB.length){cov_1awkzybx8q().b[79][0]++;cov_1awkzybx8q().s[235]++;return false;}else{cov_1awkzybx8q().b[79][1]++;}cov_1awkzybx8q().s[236]++;return keysA.every(k=>{cov_1awkzybx8q().f[52]++;cov_1awkzybx8q().s[237]++;return objA[k]===objB[k];});}handleFields(newLocalSchema,fieldName,field){cov_1awkzybx8q().f[53]++;cov_1awkzybx8q().s[238]++;if(field.type==='Relation'){cov_1awkzybx8q().b[80][0]++;cov_1awkzybx8q().s[239]++;newLocalSchema.addRelation(fieldName,field.targetClass);}else{cov_1awkzybx8q().b[80][1]++;cov_1awkzybx8q().s[240]++;if(field.type==='Pointer'){cov_1awkzybx8q().b[81][0]++;cov_1awkzybx8q().s[241]++;newLocalSchema.addPointer(fieldName,field.targetClass,field);}else{cov_1awkzybx8q().b[81][1]++;cov_1awkzybx8q().s[242]++;newLocalSchema.addField(fieldName,field.type,field);}}}}cov_1awkzybx8q().s[243]++;exports.DefinedSchemas=DefinedSchemas;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,