"use strict";function cov_3hq3dbr2o(){var path="/parse-server/lib/Routers/FunctionsRouter.js";var hash="3fb20bb56f1f06ee521758eda0000bcbaf20647a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/FunctionsRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:33}},"2":{start:{line:8,column:21},end:{line:8,column:72}},"3":{start:{line:10,column:19},end:{line:10,column:44}},"4":{start:{line:12,column:21},end:{line:12,column:48}},"5":{start:{line:14,column:14},end:{line:14,column:55}},"6":{start:{line:16,column:14},end:{line:16,column:34}},"7":{start:{line:18,column:39},end:{line:18,column:93}},"8":{start:{line:21,column:12},end:{line:21,column:39}},"9":{start:{line:22,column:15},end:{line:22,column:37}},"10":{start:{line:25,column:2},end:{line:37,column:3}},"11":{start:{line:26,column:4},end:{line:28,column:7}},"12":{start:{line:27,column:6},end:{line:27,column:31}},"13":{start:{line:29,column:9},end:{line:37,column:3}},"14":{start:{line:30,column:4},end:{line:30,column:49}},"15":{start:{line:31,column:9},end:{line:37,column:3}},"16":{start:{line:32,column:4},end:{line:32,column:36}},"17":{start:{line:33,column:9},end:{line:37,column:3}},"18":{start:{line:34,column:4},end:{line:34,column:28}},"19":{start:{line:36,column:4},end:{line:36,column:15}},"20":{start:{line:41,column:2},end:{line:41,column:56}},"21":{start:{line:46,column:4},end:{line:46,column:127}},"22":{start:{line:47,column:4},end:{line:49,column:7}},"23":{start:{line:48,column:6},end:{line:48,column:49}},"24":{start:{line:50,column:4},end:{line:52,column:7}},"25":{start:{line:51,column:6},end:{line:51,column:49}},"26":{start:{line:56,column:20},end:{line:56,column:58}},"27":{start:{line:57,column:26},end:{line:57,column:50}},"28":{start:{line:58,column:23},end:{line:58,column:71}},"29":{start:{line:59,column:24},end:{line:59,column:63}},"30":{start:{line:61,column:4},end:{line:63,column:5}},"31":{start:{line:62,column:6},end:{line:62,column:71}},"32":{start:{line:65,column:17},end:{line:65,column:55}},"33":{start:{line:66,column:4},end:{line:66,column:33}},"34":{start:{line:67,column:20},end:{line:74,column:5}},"35":{start:{line:75,column:4},end:{line:93,column:7}},"36":{start:{line:76,column:6},end:{line:76,column:41}},"37":{start:{line:78,column:6},end:{line:86,column:9}},"38":{start:{line:79,column:8},end:{line:85,column:11}},"39":{start:{line:80,column:10},end:{line:80,column:38}},"40":{start:{line:82,column:10},end:{line:82,column:42}},"41":{start:{line:84,column:10},end:{line:84,column:38}},"42":{start:{line:87,column:6},end:{line:92,column:8}},"43":{start:{line:97,column:4},end:{line:109,column:6}},"44":{start:{line:99,column:8},end:{line:103,column:11}},"45":{start:{line:106,column:22},end:{line:106,column:52}},"46":{start:{line:107,column:8},end:{line:107,column:22}},"47":{start:{line:113,column:25},end:{line:113,column:48}},"48":{start:{line:114,column:26},end:{line:114,column:50}},"49":{start:{line:115,column:24},end:{line:115,column:73}},"50":{start:{line:117,column:4},end:{line:119,column:5}},"51":{start:{line:118,column:6},end:{line:118,column:94}},"52":{start:{line:121,column:17},end:{line:121,column:55}},"53":{start:{line:122,column:4},end:{line:122,column:33}},"54":{start:{line:123,column:20},end:{line:133,column:5}},"55":{start:{line:134,column:4},end:{line:175,column:7}},"56":{start:{line:135,column:25},end:{line:135,column:81}},"57":{start:{line:137,column:25},end:{line:137,column:82}},"58":{start:{line:142,column:10},end:{line:169,column:8}},"59":{start:{line:143,column:8},end:{line:155,column:9}},"60":{start:{line:144,column:30},end:{line:144,column:103}},"61":{start:{line:146,column:10},end:{line:150,column:13}},"62":{start:{line:152,column:10},end:{line:152,column:26}},"63":{start:{line:154,column:10},end:{line:154,column:20}},"64":{start:{line:157,column:8},end:{line:168,column:9}},"65":{start:{line:158,column:10},end:{line:163,column:13}},"66":{start:{line:165,column:10},end:{line:165,column:24}},"67":{start:{line:167,column:10},end:{line:167,column:20}},"68":{start:{line:170,column:6},end:{line:174,column:30}},"69":{start:{line:171,column:8},end:{line:171,column:75}},"70":{start:{line:173,column:8},end:{line:173,column:36}},"71":{start:{line:180,column:0},end:{line:180,column:42}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"1":{name:"parseObject",decl:{start:{line:24,column:9},end:{line:24,column:20}},loc:{start:{line:24,column:26},end:{line:38,column:1}},line:24},"2":{name:"(anonymous_2)",decl:{start:{line:26,column:19},end:{line:26,column:20}},loc:{start:{line:26,column:27},end:{line:28,column:5}},line:26},"3":{name:"parseParams",decl:{start:{line:40,column:9},end:{line:40,column:20}},loc:{start:{line:40,column:29},end:{line:42,column:1}},line:40},"4":{name:"(anonymous_4)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:16},end:{line:53,column:3}},line:45},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:124},end:{line:47,column:125}},loc:{start:{line:47,column:139},end:{line:49,column:5}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:50,column:76},end:{line:50,column:77}},loc:{start:{line:50,column:91},end:{line:52,column:5}},line:50},"7":{name:"(anonymous_7)",decl:{start:{line:55,column:2},end:{line:55,column:3}},loc:{start:{line:55,column:29},end:{line:94,column:3}},line:55},"8":{name:"(anonymous_8)",decl:{start:{line:75,column:55},end:{line:75,column:56}},loc:{start:{line:75,column:68},end:{line:93,column:5}},line:75},"9":{name:"(anonymous_9)",decl:{start:{line:78,column:23},end:{line:78,column:24}},loc:{start:{line:78,column:29},end:{line:86,column:7}},line:78},"10":{name:"(anonymous_10)",decl:{start:{line:79,column:31},end:{line:79,column:32}},loc:{start:{line:79,column:37},end:{line:81,column:9}},line:79},"11":{name:"(anonymous_11)",decl:{start:{line:81,column:16},end:{line:81,column:17}},loc:{start:{line:81,column:26},end:{line:83,column:9}},line:81},"12":{name:"(anonymous_12)",decl:{start:{line:83,column:11},end:{line:83,column:12}},loc:{start:{line:83,column:20},end:{line:85,column:9}},line:83},"13":{name:"(anonymous_13)",decl:{start:{line:96,column:2},end:{line:96,column:3}},loc:{start:{line:96,column:47},end:{line:110,column:3}},line:96},"14":{name:"(anonymous_14)",decl:{start:{line:98,column:15},end:{line:98,column:16}},loc:{start:{line:98,column:33},end:{line:104,column:7}},line:98},"15":{name:"(anonymous_15)",decl:{start:{line:105,column:13},end:{line:105,column:14}},loc:{start:{line:105,column:32},end:{line:108,column:7}},line:105},"16":{name:"(anonymous_16)",decl:{start:{line:112,column:2},end:{line:112,column:3}},loc:{start:{line:112,column:34},end:{line:176,column:3}},line:112},"17":{name:"(anonymous_17)",decl:{start:{line:134,column:23},end:{line:134,column:24}},loc:{start:{line:134,column:50},end:{line:175,column:5}},line:134},"18":{name:"(anonymous_18)",decl:{start:{line:142,column:47},end:{line:142,column:48}},loc:{start:{line:142,column:57},end:{line:156,column:7}},line:142},"19":{name:"(anonymous_19)",decl:{start:{line:156,column:9},end:{line:156,column:10}},loc:{start:{line:156,column:18},end:{line:169,column:7}},line:156},"20":{name:"(anonymous_20)",decl:{start:{line:170,column:36},end:{line:170,column:37}},loc:{start:{line:170,column:42},end:{line:172,column:7}},line:170},"21":{name:"(anonymous_21)",decl:{start:{line:172,column:14},end:{line:172,column:15}},loc:{start:{line:172,column:20},end:{line:174,column:7}},line:172}},branchMap:{"0":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"1":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"2":{loc:{start:{line:25,column:2},end:{line:37,column:3}},type:"if",locations:[{start:{line:25,column:2},end:{line:37,column:3}},{start:{line:25,column:2},end:{line:37,column:3}}],line:25},"3":{loc:{start:{line:29,column:9},end:{line:37,column:3}},type:"if",locations:[{start:{line:29,column:9},end:{line:37,column:3}},{start:{line:29,column:9},end:{line:37,column:3}}],line:29},"4":{loc:{start:{line:29,column:13},end:{line:29,column:40}},type:"binary-expr",locations:[{start:{line:29,column:13},end:{line:29,column:16}},{start:{line:29,column:20},end:{line:29,column:40}}],line:29},"5":{loc:{start:{line:31,column:9},end:{line:37,column:3}},type:"if",locations:[{start:{line:31,column:9},end:{line:37,column:3}},{start:{line:31,column:9},end:{line:37,column:3}}],line:31},"6":{loc:{start:{line:31,column:13},end:{line:31,column:40}},type:"binary-expr",locations:[{start:{line:31,column:13},end:{line:31,column:16}},{start:{line:31,column:20},end:{line:31,column:40}}],line:31},"7":{loc:{start:{line:33,column:9},end:{line:37,column:3}},type:"if",locations:[{start:{line:33,column:9},end:{line:37,column:3}},{start:{line:33,column:9},end:{line:37,column:3}}],line:33},"8":{loc:{start:{line:33,column:13},end:{line:33,column:43}},type:"binary-expr",locations:[{start:{line:33,column:13},end:{line:33,column:16}},{start:{line:33,column:20},end:{line:33,column:43}}],line:33},"9":{loc:{start:{line:56,column:20},end:{line:56,column:58}},type:"binary-expr",locations:[{start:{line:56,column:20},end:{line:56,column:38}},{start:{line:56,column:42},end:{line:56,column:58}}],line:56},"10":{loc:{start:{line:61,column:4},end:{line:63,column:5}},type:"if",locations:[{start:{line:61,column:4},end:{line:63,column:5}},{start:{line:61,column:4},end:{line:63,column:5}}],line:61},"11":{loc:{start:{line:117,column:4},end:{line:119,column:5}},type:"if",locations:[{start:{line:117,column:4},end:{line:119,column:5}},{start:{line:117,column:4},end:{line:119,column:5}}],line:117},"12":{loc:{start:{line:125,column:14},end:{line:125,column:43}},type:"binary-expr",locations:[{start:{line:125,column:14},end:{line:125,column:22}},{start:{line:125,column:26},end:{line:125,column:43}}],line:125},"13":{loc:{start:{line:126,column:12},end:{line:126,column:37}},type:"binary-expr",locations:[{start:{line:126,column:12},end:{line:126,column:20}},{start:{line:126,column:24},end:{line:126,column:37}}],line:126},"14":{loc:{start:{line:135,column:25},end:{line:135,column:81}},type:"cond-expr",locations:[{start:{line:135,column:53},end:{line:135,column:69}},{start:{line:135,column:72},end:{line:135,column:81}}],line:135},"15":{loc:{start:{line:135,column:25},end:{line:135,column:50}},type:"binary-expr",locations:[{start:{line:135,column:25},end:{line:135,column:33}},{start:{line:135,column:37},end:{line:135,column:50}}],line:135}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/FunctionsRouter.js"],names:["Parse","require","triggers","parseObject","obj","Array","isArray","map","item","__type","Object","assign","Date","iso","File","fromJSON","parseParams","params","_","mapValues","FunctionsRouter","PromiseRouter","mountRoutes","route","promiseEnsureIdempotency","handleCloudFunction","promiseEnforceMasterKeyAccess","req","handleCloudJob","jobName","body","applicationId","config","jobHandler","jobFunction","getJob","Error","SCRIPT_FAILED","query","request","log","loggerController","headers","ip","message","setMessage","bind","setRunning","then","jobStatus","jobId","objectId","process","nextTick","Promise","resolve","result","setSucceeded","error","setFailed","response","createResponseObject","reject","success","_encode","resolveError","functionName","theFunction","getFunction","master","auth","isMaster","user","installationId","info","context","userString","id","undefined","cleanInput","logger","truncateLogMessage","JSON","stringify","cleanResult","e","maybeRunValidator"],mappings:"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",sourcesContent:["// FunctionsRouter.js\n\nvar Parse = require('parse/node').Parse,\n  triggers = require('../triggers');\n\nimport PromiseRouter from '../PromiseRouter';\nimport { promiseEnforceMasterKeyAccess, promiseEnsureIdempotency } from '../middlewares';\nimport { jobStatusHandler } from '../StatusHandler';\nimport _ from 'lodash';\nimport { logger } from '../logger';\n\nfunction parseObject(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(item => {\n      return parseObject(item);\n    });\n  } else if (obj && obj.__type == 'Date') {\n    return Object.assign(new Date(obj.iso), obj);\n  } else if (obj && obj.__type == 'File') {\n    return Parse.File.fromJSON(obj);\n  } else if (obj && typeof obj === 'object') {\n    return parseParams(obj);\n  } else {\n    return obj;\n  }\n}\n\nfunction parseParams(params) {\n  return _.mapValues(params, parseObject);\n}\n\nexport class FunctionsRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route(\n      'POST',\n      '/functions/:functionName',\n      promiseEnsureIdempotency,\n      FunctionsRouter.handleCloudFunction\n    );\n    this.route(\n      'POST',\n      '/jobs/:jobName',\n      promiseEnsureIdempotency,\n      promiseEnforceMasterKeyAccess,\n      function (req) {\n        return FunctionsRouter.handleCloudJob(req);\n      }\n    );\n    this.route('POST', '/jobs', promiseEnforceMasterKeyAccess, function (req) {\n      return FunctionsRouter.handleCloudJob(req);\n    });\n  }\n\n  static handleCloudJob(req) {\n    const jobName = req.params.jobName || req.body.jobName;\n    const applicationId = req.config.applicationId;\n    const jobHandler = jobStatusHandler(req.config);\n    const jobFunction = triggers.getJob(jobName, applicationId);\n    if (!jobFunction) {\n      throw new Parse.Error(Parse.Error.SCRIPT_FAILED, 'Invalid job.');\n    }\n    let params = Object.assign({}, req.body, req.query);\n    params = parseParams(params);\n    const request = {\n      params: params,\n      log: req.config.loggerController,\n      headers: req.config.headers,\n      ip: req.config.ip,\n      jobName,\n      message: jobHandler.setMessage.bind(jobHandler),\n    };\n\n    return jobHandler.setRunning(jobName, params).then(jobStatus => {\n      request.jobId = jobStatus.objectId;\n      // run the function async\n      process.nextTick(() => {\n        Promise.resolve()\n          .then(() => {\n            return jobFunction(request);\n          })\n          .then(\n            result => {\n              jobHandler.setSucceeded(result);\n            },\n            error => {\n              jobHandler.setFailed(error);\n            }\n          );\n      });\n      return {\n        headers: {\n          'X-Parse-Job-Status-Id': jobStatus.objectId,\n        },\n        response: {},\n      };\n    });\n  }\n\n  static createResponseObject(resolve, reject) {\n    return {\n      success: function (result) {\n        resolve({\n          response: {\n            result: Parse._encode(result),\n          },\n        });\n      },\n      error: function (message) {\n        const error = triggers.resolveError(message);\n        reject(error);\n      },\n    };\n  }\n  static handleCloudFunction(req) {\n    const functionName = req.params.functionName;\n    const applicationId = req.config.applicationId;\n    const theFunction = triggers.getFunction(functionName, applicationId);\n\n    if (!theFunction) {\n      throw new Parse.Error(Parse.Error.SCRIPT_FAILED, `Invalid function: \"${functionName}\"`);\n    }\n    let params = Object.assign({}, req.body, req.query);\n    params = parseParams(params);\n    const request = {\n      params: params,\n      master: req.auth && req.auth.isMaster,\n      user: req.auth && req.auth.user,\n      installationId: req.info.installationId,\n      log: req.config.loggerController,\n      headers: req.config.headers,\n      ip: req.config.ip,\n      functionName,\n      context: req.info.context,\n    };\n\n    return new Promise(function (resolve, reject) {\n      const userString = req.auth && req.auth.user ? req.auth.user.id : undefined;\n      const cleanInput = logger.truncateLogMessage(JSON.stringify(params));\n      const { success, error } = FunctionsRouter.createResponseObject(\n        result => {\n          try {\n            const cleanResult = logger.truncateLogMessage(JSON.stringify(result.response.result));\n            logger.info(\n              `Ran cloud function ${functionName} for user ${userString} with:\\n  Input: ${cleanInput}\\n  Result: ${cleanResult}`,\n              {\n                functionName,\n                params,\n                user: userString,\n              }\n            );\n            resolve(result);\n          } catch (e) {\n            reject(e);\n          }\n        },\n        error => {\n          try {\n            logger.error(\n              `Failed running cloud function ${functionName} for user ${userString} with:\\n  Input: ${cleanInput}\\n  Error: ` +\n                JSON.stringify(error),\n              {\n                functionName,\n                error,\n                params,\n                user: userString,\n              }\n            );\n            reject(error);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      );\n      return Promise.resolve()\n        .then(() => {\n          return triggers.maybeRunValidator(request, functionName, req.auth);\n        })\n        .then(() => {\n          return theFunction(request);\n        })\n        .then(success, error);\n    });\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3fb20bb56f1f06ee521758eda0000bcbaf20647a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_3hq3dbr2o=function(){return actualCoverage;};}return actualCoverage;}cov_3hq3dbr2o();cov_3hq3dbr2o().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_3hq3dbr2o().s[1]++;exports.FunctionsRouter=void 0;var _PromiseRouter=(cov_3hq3dbr2o().s[2]++,_interopRequireDefault(require("../PromiseRouter")));var _middlewares=(cov_3hq3dbr2o().s[3]++,require("../middlewares"));var _StatusHandler=(cov_3hq3dbr2o().s[4]++,require("../StatusHandler"));var _lodash=(cov_3hq3dbr2o().s[5]++,_interopRequireDefault(require("lodash")));var _logger=(cov_3hq3dbr2o().s[6]++,require("../logger"));function _interopRequireDefault(obj){cov_3hq3dbr2o().f[0]++;cov_3hq3dbr2o().s[7]++;return(cov_3hq3dbr2o().b[1][0]++,obj)&&(cov_3hq3dbr2o().b[1][1]++,obj.__esModule)?(cov_3hq3dbr2o().b[0][0]++,obj):(cov_3hq3dbr2o().b[0][1]++,{default:obj});}// FunctionsRouter.js
var Parse=(cov_3hq3dbr2o().s[8]++,require('parse/node').Parse),triggers=(cov_3hq3dbr2o().s[9]++,require('../triggers'));function parseObject(obj){cov_3hq3dbr2o().f[1]++;cov_3hq3dbr2o().s[10]++;if(Array.isArray(obj)){cov_3hq3dbr2o().b[2][0]++;cov_3hq3dbr2o().s[11]++;return obj.map(item=>{cov_3hq3dbr2o().f[2]++;cov_3hq3dbr2o().s[12]++;return parseObject(item);});}else{cov_3hq3dbr2o().b[2][1]++;cov_3hq3dbr2o().s[13]++;if((cov_3hq3dbr2o().b[4][0]++,obj)&&(cov_3hq3dbr2o().b[4][1]++,obj.__type=='Date')){cov_3hq3dbr2o().b[3][0]++;cov_3hq3dbr2o().s[14]++;return Object.assign(new Date(obj.iso),obj);}else{cov_3hq3dbr2o().b[3][1]++;cov_3hq3dbr2o().s[15]++;if((cov_3hq3dbr2o().b[6][0]++,obj)&&(cov_3hq3dbr2o().b[6][1]++,obj.__type=='File')){cov_3hq3dbr2o().b[5][0]++;cov_3hq3dbr2o().s[16]++;return Parse.File.fromJSON(obj);}else{cov_3hq3dbr2o().b[5][1]++;cov_3hq3dbr2o().s[17]++;if((cov_3hq3dbr2o().b[8][0]++,obj)&&(cov_3hq3dbr2o().b[8][1]++,typeof obj==='object')){cov_3hq3dbr2o().b[7][0]++;cov_3hq3dbr2o().s[18]++;return parseParams(obj);}else{cov_3hq3dbr2o().b[7][1]++;cov_3hq3dbr2o().s[19]++;return obj;}}}}}function parseParams(params){cov_3hq3dbr2o().f[3]++;cov_3hq3dbr2o().s[20]++;return _lodash.default.mapValues(params,parseObject);}class FunctionsRouter extends(_PromiseRouter.default){mountRoutes(){cov_3hq3dbr2o().f[4]++;cov_3hq3dbr2o().s[21]++;this.route('POST','/functions/:functionName',_middlewares.promiseEnsureIdempotency,FunctionsRouter.handleCloudFunction);cov_3hq3dbr2o().s[22]++;this.route('POST','/jobs/:jobName',_middlewares.promiseEnsureIdempotency,_middlewares.promiseEnforceMasterKeyAccess,function(req){cov_3hq3dbr2o().f[5]++;cov_3hq3dbr2o().s[23]++;return FunctionsRouter.handleCloudJob(req);});cov_3hq3dbr2o().s[24]++;this.route('POST','/jobs',_middlewares.promiseEnforceMasterKeyAccess,function(req){cov_3hq3dbr2o().f[6]++;cov_3hq3dbr2o().s[25]++;return FunctionsRouter.handleCloudJob(req);});}static handleCloudJob(req){cov_3hq3dbr2o().f[7]++;const jobName=(cov_3hq3dbr2o().s[26]++,(cov_3hq3dbr2o().b[9][0]++,req.params.jobName)||(cov_3hq3dbr2o().b[9][1]++,req.body.jobName));const applicationId=(cov_3hq3dbr2o().s[27]++,req.config.applicationId);const jobHandler=(cov_3hq3dbr2o().s[28]++,(0,_StatusHandler.jobStatusHandler)(req.config));const jobFunction=(cov_3hq3dbr2o().s[29]++,triggers.getJob(jobName,applicationId));cov_3hq3dbr2o().s[30]++;if(!jobFunction){cov_3hq3dbr2o().b[10][0]++;cov_3hq3dbr2o().s[31]++;throw new Parse.Error(Parse.Error.SCRIPT_FAILED,'Invalid job.');}else{cov_3hq3dbr2o().b[10][1]++;}let params=(cov_3hq3dbr2o().s[32]++,Object.assign({},req.body,req.query));cov_3hq3dbr2o().s[33]++;params=parseParams(params);const request=(cov_3hq3dbr2o().s[34]++,{params:params,log:req.config.loggerController,headers:req.config.headers,ip:req.config.ip,jobName,message:jobHandler.setMessage.bind(jobHandler)});cov_3hq3dbr2o().s[35]++;return jobHandler.setRunning(jobName,params).then(jobStatus=>{cov_3hq3dbr2o().f[8]++;cov_3hq3dbr2o().s[36]++;request.jobId=jobStatus.objectId;// run the function async
cov_3hq3dbr2o().s[37]++;process.nextTick(()=>{cov_3hq3dbr2o().f[9]++;cov_3hq3dbr2o().s[38]++;Promise.resolve().then(()=>{cov_3hq3dbr2o().f[10]++;cov_3hq3dbr2o().s[39]++;return jobFunction(request);}).then(result=>{cov_3hq3dbr2o().f[11]++;cov_3hq3dbr2o().s[40]++;jobHandler.setSucceeded(result);},error=>{cov_3hq3dbr2o().f[12]++;cov_3hq3dbr2o().s[41]++;jobHandler.setFailed(error);});});cov_3hq3dbr2o().s[42]++;return{headers:{'X-Parse-Job-Status-Id':jobStatus.objectId},response:{}};});}static createResponseObject(resolve,reject){cov_3hq3dbr2o().f[13]++;cov_3hq3dbr2o().s[43]++;return{success:function(result){cov_3hq3dbr2o().f[14]++;cov_3hq3dbr2o().s[44]++;resolve({response:{result:Parse._encode(result)}});},error:function(message){cov_3hq3dbr2o().f[15]++;const error=(cov_3hq3dbr2o().s[45]++,triggers.resolveError(message));cov_3hq3dbr2o().s[46]++;reject(error);}};}static handleCloudFunction(req){cov_3hq3dbr2o().f[16]++;const functionName=(cov_3hq3dbr2o().s[47]++,req.params.functionName);const applicationId=(cov_3hq3dbr2o().s[48]++,req.config.applicationId);const theFunction=(cov_3hq3dbr2o().s[49]++,triggers.getFunction(functionName,applicationId));cov_3hq3dbr2o().s[50]++;if(!theFunction){cov_3hq3dbr2o().b[11][0]++;cov_3hq3dbr2o().s[51]++;throw new Parse.Error(Parse.Error.SCRIPT_FAILED,`Invalid function: "${functionName}"`);}else{cov_3hq3dbr2o().b[11][1]++;}let params=(cov_3hq3dbr2o().s[52]++,Object.assign({},req.body,req.query));cov_3hq3dbr2o().s[53]++;params=parseParams(params);const request=(cov_3hq3dbr2o().s[54]++,{params:params,master:(cov_3hq3dbr2o().b[12][0]++,req.auth)&&(cov_3hq3dbr2o().b[12][1]++,req.auth.isMaster),user:(cov_3hq3dbr2o().b[13][0]++,req.auth)&&(cov_3hq3dbr2o().b[13][1]++,req.auth.user),installationId:req.info.installationId,log:req.config.loggerController,headers:req.config.headers,ip:req.config.ip,functionName,context:req.info.context});cov_3hq3dbr2o().s[55]++;return new Promise(function(resolve,reject){cov_3hq3dbr2o().f[17]++;const userString=(cov_3hq3dbr2o().s[56]++,(cov_3hq3dbr2o().b[15][0]++,req.auth)&&(cov_3hq3dbr2o().b[15][1]++,req.auth.user)?(cov_3hq3dbr2o().b[14][0]++,req.auth.user.id):(cov_3hq3dbr2o().b[14][1]++,undefined));const cleanInput=(cov_3hq3dbr2o().s[57]++,_logger.logger.truncateLogMessage(JSON.stringify(params)));const{success,error}=(cov_3hq3dbr2o().s[58]++,FunctionsRouter.createResponseObject(result=>{cov_3hq3dbr2o().f[18]++;cov_3hq3dbr2o().s[59]++;try{const cleanResult=(cov_3hq3dbr2o().s[60]++,_logger.logger.truncateLogMessage(JSON.stringify(result.response.result)));cov_3hq3dbr2o().s[61]++;_logger.logger.info(`Ran cloud function ${functionName} for user ${userString} with:\n  Input: ${cleanInput}\n  Result: ${cleanResult}`,{functionName,params,user:userString});cov_3hq3dbr2o().s[62]++;resolve(result);}catch(e){cov_3hq3dbr2o().s[63]++;reject(e);}},error=>{cov_3hq3dbr2o().f[19]++;cov_3hq3dbr2o().s[64]++;try{cov_3hq3dbr2o().s[65]++;_logger.logger.error(`Failed running cloud function ${functionName} for user ${userString} with:\n  Input: ${cleanInput}\n  Error: `+JSON.stringify(error),{functionName,error,params,user:userString});cov_3hq3dbr2o().s[66]++;reject(error);}catch(e){cov_3hq3dbr2o().s[67]++;reject(e);}}));cov_3hq3dbr2o().s[68]++;return Promise.resolve().then(()=>{cov_3hq3dbr2o().f[20]++;cov_3hq3dbr2o().s[69]++;return triggers.maybeRunValidator(request,functionName,req.auth);}).then(()=>{cov_3hq3dbr2o().f[21]++;cov_3hq3dbr2o().s[70]++;return theFunction(request);}).then(success,error);});}}cov_3hq3dbr2o().s[71]++;exports.FunctionsRouter=FunctionsRouter;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,