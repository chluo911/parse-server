"use strict";function cov_d24t9vb5f(){var path="/parse-server/lib/LiveQuery/QueryTools.js";var hash="810795b1480a1851d8d87d348468fac18b735f08";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/LiveQuery/QueryTools.js",statementMap:{"0":{start:{line:3,column:19},end:{line:3,column:44}},"1":{start:{line:5,column:9},end:{line:5,column:24}},"2":{start:{line:7,column:12},end:{line:7,column:33}},"3":{start:{line:21,column:2},end:{line:23,column:3}},"4":{start:{line:22,column:4},end:{line:22,column:17}},"5":{start:{line:25,column:14},end:{line:25,column:16}},"6":{start:{line:27,column:2},end:{line:29,column:3}},"7":{start:{line:27,column:15},end:{line:27,column:16}},"8":{start:{line:28,column:4},end:{line:28,column:39}},"9":{start:{line:31,column:2},end:{line:31,column:15}},"10":{start:{line:39,column:2},end:{line:45,column:3}},"11":{start:{line:40,column:4},end:{line:42,column:5}},"12":{start:{line:41,column:6},end:{line:41,column:53}},"13":{start:{line:44,column:4},end:{line:44,column:23}},"14":{start:{line:47,column:2},end:{line:51,column:3}},"15":{start:{line:48,column:15},end:{line:48,column:36}},"16":{start:{line:49,column:4},end:{line:49,column:16}},"17":{start:{line:50,column:4},end:{line:50,column:38}},"18":{start:{line:53,column:17},end:{line:53,column:19}},"19":{start:{line:54,column:13},end:{line:54,column:32}},"20":{start:{line:55,column:2},end:{line:55,column:14}},"21":{start:{line:57,column:2},end:{line:59,column:3}},"22":{start:{line:57,column:15},end:{line:57,column:16}},"23":{start:{line:58,column:4},end:{line:58,column:73}},"24":{start:{line:61,column:2},end:{line:61,column:40}},"25":{start:{line:70,column:2},end:{line:75,column:3}},"26":{start:{line:71,column:4},end:{line:74,column:6}},"27":{start:{line:77,column:14},end:{line:77,column:49}},"28":{start:{line:78,column:16},end:{line:78,column:18}},"29":{start:{line:79,column:15},end:{line:79,column:17}},"30":{start:{line:82,column:2},end:{line:107,column:3}},"31":{start:{line:83,column:24},end:{line:83,column:26}},"32":{start:{line:85,column:4},end:{line:96,column:5}},"33":{start:{line:86,column:22},end:{line:86,column:24}},"34":{start:{line:87,column:17},end:{line:87,column:38}},"35":{start:{line:88,column:6},end:{line:88,column:18}},"36":{start:{line:90,column:6},end:{line:93,column:7}},"37":{start:{line:90,column:19},end:{line:90,column:20}},"38":{start:{line:91,column:8},end:{line:91,column:47}},"39":{start:{line:92,column:8},end:{line:92,column:38}},"40":{start:{line:95,column:6},end:{line:95,column:29}},"41":{start:{line:98,column:4},end:{line:98,column:41}},"42":{start:{line:99,column:4},end:{line:99,column:19}},"43":{start:{line:101,column:4},end:{line:101,column:33}},"44":{start:{line:102,column:4},end:{line:102,column:19}},"45":{start:{line:104,column:4},end:{line:106,column:5}},"46":{start:{line:105,column:6},end:{line:105,column:37}},"47":{start:{line:109,column:17},end:{line:109,column:55}},"48":{start:{line:110,column:2},end:{line:110,column:52}},"49":{start:{line:118,column:2},end:{line:132,column:3}},"50":{start:{line:119,column:4},end:{line:129,column:5}},"51":{start:{line:120,column:18},end:{line:120,column:29}},"52":{start:{line:122,column:6},end:{line:124,column:7}},"53":{start:{line:123,column:8},end:{line:123,column:20}},"54":{start:{line:126,column:6},end:{line:128,column:7}},"55":{start:{line:127,column:8},end:{line:127,column:20}},"56":{start:{line:131,column:4},end:{line:131,column:17}},"57":{start:{line:134,column:2},end:{line:134,column:39}},"58":{start:{line:145,column:2},end:{line:153,column:3}},"59":{start:{line:146,column:20},end:{line:146,column:84}},"60":{start:{line:148,column:4},end:{line:150,column:5}},"61":{start:{line:149,column:6},end:{line:149,column:19}},"62":{start:{line:152,column:4},end:{line:152,column:46}},"63":{start:{line:155,column:2},end:{line:159,column:3}},"64":{start:{line:156,column:4},end:{line:158,column:5}},"65":{start:{line:157,column:6},end:{line:157,column:19}},"66":{start:{line:161,column:2},end:{line:161,column:14}},"67":{start:{line:165,column:2},end:{line:173,column:3}},"68":{start:{line:166,column:4},end:{line:170,column:5}},"69":{start:{line:166,column:17},end:{line:166,column:18}},"70":{start:{line:167,column:6},end:{line:169,column:7}},"71":{start:{line:168,column:8},end:{line:168,column:20}},"72":{start:{line:172,column:4},end:{line:172,column:17}},"73":{start:{line:175,column:2},end:{line:175,column:31}},"74":{start:{line:183,column:2},end:{line:185,column:3}},"75":{start:{line:184,column:4},end:{line:184,column:17}},"76":{start:{line:187,column:2},end:{line:193,column:3}},"77":{start:{line:189,column:24},end:{line:189,column:38}},"78":{start:{line:190,column:23},end:{line:190,column:39}},"79":{start:{line:191,column:23},end:{line:191,column:55}},"80":{start:{line:192,column:4},end:{line:192,column:88}},"81":{start:{line:197,column:2},end:{line:205,column:3}},"82":{start:{line:198,column:4},end:{line:202,column:5}},"83":{start:{line:199,column:6},end:{line:201,column:7}},"84":{start:{line:200,column:8},end:{line:200,column:20}},"85":{start:{line:204,column:4},end:{line:204,column:17}},"86":{start:{line:207,column:2},end:{line:215,column:3}},"87":{start:{line:208,column:4},end:{line:212,column:5}},"88":{start:{line:209,column:6},end:{line:211,column:7}},"89":{start:{line:210,column:8},end:{line:210,column:21}},"90":{start:{line:214,column:4},end:{line:214,column:16}},"91":{start:{line:217,column:2},end:{line:225,column:3}},"92":{start:{line:218,column:4},end:{line:222,column:5}},"93":{start:{line:219,column:6},end:{line:221,column:7}},"94":{start:{line:220,column:8},end:{line:220,column:21}},"95":{start:{line:224,column:4},end:{line:224,column:16}},"96":{start:{line:227,column:2},end:{line:230,column:3}},"97":{start:{line:229,column:4},end:{line:229,column:17}},"98":{start:{line:233,column:2},end:{line:235,column:3}},"99":{start:{line:234,column:4},end:{line:234,column:44}},"100":{start:{line:238,column:2},end:{line:244,column:3}},"101":{start:{line:239,column:4},end:{line:241,column:5}},"102":{start:{line:240,column:6},end:{line:240,column:51}},"103":{start:{line:243,column:4},end:{line:243,column:39}},"104":{start:{line:248,column:2},end:{line:256,column:3}},"105":{start:{line:249,column:4},end:{line:253,column:5}},"106":{start:{line:250,column:6},end:{line:252,column:9}},"107":{start:{line:251,column:8},end:{line:251,column:110}},"108":{start:{line:255,column:4},end:{line:255,column:91}},"109":{start:{line:259,column:2},end:{line:446,column:3}},"110":{start:{line:260,column:4},end:{line:260,column:39}},"111":{start:{line:262,column:4},end:{line:264,column:5}},"112":{start:{line:263,column:6},end:{line:263,column:48}},"113":{start:{line:266,column:4},end:{line:445,column:5}},"114":{start:{line:268,column:8},end:{line:270,column:9}},"115":{start:{line:269,column:10},end:{line:269,column:23}},"116":{start:{line:272,column:8},end:{line:272,column:14}},"117":{start:{line:275,column:8},end:{line:277,column:9}},"118":{start:{line:276,column:10},end:{line:276,column:23}},"119":{start:{line:279,column:8},end:{line:279,column:14}},"120":{start:{line:282,column:8},end:{line:284,column:9}},"121":{start:{line:283,column:10},end:{line:283,column:23}},"122":{start:{line:286,column:8},end:{line:286,column:14}},"123":{start:{line:289,column:8},end:{line:291,column:9}},"124":{start:{line:290,column:10},end:{line:290,column:23}},"125":{start:{line:293,column:8},end:{line:293,column:14}},"126":{start:{line:296,column:8},end:{line:298,column:9}},"127":{start:{line:297,column:10},end:{line:297,column:23}},"128":{start:{line:300,column:8},end:{line:300,column:14}},"129":{start:{line:303,column:8},end:{line:305,column:9}},"130":{start:{line:304,column:10},end:{line:304,column:23}},"131":{start:{line:307,column:8},end:{line:307,column:14}},"132":{start:{line:310,column:8},end:{line:312,column:9}},"133":{start:{line:311,column:10},end:{line:311,column:23}},"134":{start:{line:314,column:8},end:{line:314,column:14}},"135":{start:{line:317,column:8},end:{line:319,column:9}},"136":{start:{line:318,column:10},end:{line:318,column:23}},"137":{start:{line:321,column:8},end:{line:325,column:9}},"138":{start:{line:322,column:10},end:{line:324,column:11}},"139":{start:{line:323,column:12},end:{line:323,column:25}},"140":{start:{line:327,column:8},end:{line:327,column:14}},"141":{start:{line:331,column:33},end:{line:331,column:67}},"142":{start:{line:332,column:38},end:{line:332,column:60}},"143":{start:{line:334,column:10},end:{line:338,column:11}},"144":{start:{line:337,column:12},end:{line:337,column:18}},"145":{start:{line:340,column:10},end:{line:342,column:11}},"146":{start:{line:341,column:12},end:{line:341,column:25}},"147":{start:{line:344,column:10},end:{line:344,column:16}},"148":{start:{line:348,column:8},end:{line:350,column:9}},"149":{start:{line:349,column:10},end:{line:349,column:45}},"150":{start:{line:353,column:24},end:{line:353,column:26}},"151":{start:{line:354,column:24},end:{line:354,column:26}},"152":{start:{line:355,column:26},end:{line:355,column:50}},"153":{start:{line:357,column:8},end:{line:367,column:9}},"154":{start:{line:359,column:10},end:{line:359,column:71}},"155":{start:{line:360,column:10},end:{line:360,column:60}},"156":{start:{line:362,column:10},end:{line:364,column:11}},"157":{start:{line:363,column:12},end:{line:363,column:125}},"158":{start:{line:366,column:10},end:{line:366,column:60}},"159":{start:{line:369,column:8},end:{line:369,column:79}},"160":{start:{line:370,column:18},end:{line:370,column:67}},"161":{start:{line:372,column:8},end:{line:374,column:9}},"162":{start:{line:373,column:10},end:{line:373,column:23}},"163":{start:{line:376,column:8},end:{line:376,column:14}},"164":{start:{line:379,column:8},end:{line:381,column:9}},"165":{start:{line:380,column:10},end:{line:380,column:23}},"166":{start:{line:383,column:23},end:{line:383,column:55}},"167":{start:{line:384,column:18},end:{line:384,column:54}},"168":{start:{line:385,column:8},end:{line:385,column:31}},"169":{start:{line:388,column:8},end:{line:390,column:9}},"170":{start:{line:389,column:10},end:{line:389,column:23}},"171":{start:{line:392,column:24},end:{line:392,column:41}},"172":{start:{line:393,column:24},end:{line:393,column:41}},"173":{start:{line:395,column:8},end:{line:398,column:9}},"174":{start:{line:397,column:10},end:{line:397,column:23}},"175":{start:{line:400,column:8},end:{line:400,column:196}},"176":{start:{line:404,column:10},end:{line:408,column:11}},"177":{start:{line:405,column:12},end:{line:407,column:13}},"178":{start:{line:406,column:14},end:{line:406,column:27}},"179":{start:{line:410,column:10},end:{line:410,column:22}},"180":{start:{line:415,column:25},end:{line:415,column:100}},"181":{start:{line:415,column:60},end:{line:415,column:99}},"182":{start:{line:416,column:26},end:{line:416,column:51}},"183":{start:{line:417,column:10},end:{line:417,column:52}},"184":{start:{line:422,column:26},end:{line:422,column:68}},"185":{start:{line:423,column:24},end:{line:423,column:60}},"186":{start:{line:424,column:10},end:{line:424,column:46}},"187":{start:{line:430,column:8},end:{line:430,column:14}},"188":{start:{line:435,column:8},end:{line:435,column:14}},"189":{start:{line:438,column:8},end:{line:438,column:21}},"190":{start:{line:441,column:8},end:{line:441,column:21}},"191":{start:{line:444,column:8},end:{line:444,column:21}},"192":{start:{line:448,column:2},end:{line:448,column:14}},"193":{start:{line:451,column:17},end:{line:454,column:1}},"194":{start:{line:455,column:0},end:{line:455,column:28}}},fnMap:{"0":{name:"flattenOrQueries",decl:{start:{line:20,column:9},end:{line:20,column:25}},loc:{start:{line:20,column:33},end:{line:32,column:1}},line:20},"1":{name:"stringify",decl:{start:{line:38,column:9},end:{line:38,column:18}},loc:{start:{line:38,column:27},end:{line:62,column:1}},line:38},"2":{name:"queryHash",decl:{start:{line:69,column:9},end:{line:69,column:18}},loc:{start:{line:69,column:26},end:{line:111,column:1}},line:69},"3":{name:"contains",decl:{start:{line:117,column:9},end:{line:117,column:17}},loc:{start:{line:117,column:36},end:{line:135,column:1}},line:117},"4":{name:"matchesQuery",decl:{start:{line:144,column:9},end:{line:144,column:21}},loc:{start:{line:144,column:37},end:{line:162,column:1}},line:144},"5":{name:"equalObjectsGeneric",decl:{start:{line:164,column:9},end:{line:164,column:28}},loc:{start:{line:164,column:52},end:{line:176,column:1}},line:164},"6":{name:"matchesKeyConstraints",decl:{start:{line:182,column:9},end:{line:182,column:30}},loc:{start:{line:182,column:57},end:{line:449,column:1}},line:182},"7":{name:"(anonymous_7)",decl:{start:{line:250,column:59},end:{line:250,column:60}},loc:{start:{line:250,column:79},end:{line:252,column:7}},line:250},"8":{name:"(anonymous_8)",decl:{start:{line:415,column:48},end:{line:415,column:49}},loc:{start:{line:415,column:60},end:{line:415,column:99}},line:415}},branchMap:{"0":{loc:{start:{line:21,column:2},end:{line:23,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:23,column:3}},{start:{line:21,column:2},end:{line:23,column:3}}],line:21},"1":{loc:{start:{line:39,column:2},end:{line:45,column:3}},type:"if",locations:[{start:{line:39,column:2},end:{line:45,column:3}},{start:{line:39,column:2},end:{line:45,column:3}}],line:39},"2":{loc:{start:{line:39,column:6},end:{line:39,column:51}},type:"binary-expr",locations:[{start:{line:39,column:6},end:{line:39,column:32}},{start:{line:39,column:36},end:{line:39,column:51}}],line:39},"3":{loc:{start:{line:40,column:4},end:{line:42,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:42,column:5}},{start:{line:40,column:4},end:{line:42,column:5}}],line:40},"4":{loc:{start:{line:47,column:2},end:{line:51,column:3}},type:"if",locations:[{start:{line:47,column:2},end:{line:51,column:3}},{start:{line:47,column:2},end:{line:51,column:3}}],line:47},"5":{loc:{start:{line:70,column:2},end:{line:75,column:3}},type:"if",locations:[{start:{line:70,column:2},end:{line:75,column:3}},{start:{line:70,column:2},end:{line:75,column:3}}],line:70},"6":{loc:{start:{line:77,column:31},end:{line:77,column:48}},type:"binary-expr",locations:[{start:{line:77,column:31},end:{line:77,column:42}},{start:{line:77,column:46},end:{line:77,column:48}}],line:77},"7":{loc:{start:{line:82,column:2},end:{line:107,column:3}},type:"if",locations:[{start:{line:82,column:2},end:{line:107,column:3}},{start:{line:82,column:2},end:{line:107,column:3}}],line:82},"8":{loc:{start:{line:118,column:2},end:{line:132,column:3}},type:"if",locations:[{start:{line:118,column:2},end:{line:132,column:3}},{start:{line:118,column:2},end:{line:132,column:3}}],line:118},"9":{loc:{start:{line:118,column:6},end:{line:118,column:60}},type:"binary-expr",locations:[{start:{line:118,column:6},end:{line:118,column:12}},{start:{line:118,column:16},end:{line:118,column:29}},{start:{line:118,column:33},end:{line:118,column:60}}],line:118},"10":{loc:{start:{line:122,column:6},end:{line:124,column:7}},type:"if",locations:[{start:{line:122,column:6},end:{line:124,column:7}},{start:{line:122,column:6},end:{line:124,column:7}}],line:122},"11":{loc:{start:{line:122,column:10},end:{line:122,column:60}},type:"binary-expr",locations:[{start:{line:122,column:10},end:{line:122,column:33}},{start:{line:122,column:37},end:{line:122,column:60}}],line:122},"12":{loc:{start:{line:126,column:6},end:{line:128,column:7}},type:"if",locations:[{start:{line:126,column:6},end:{line:128,column:7}},{start:{line:126,column:6},end:{line:128,column:7}}],line:126},"13":{loc:{start:{line:126,column:10},end:{line:126,column:80}},type:"binary-expr",locations:[{start:{line:126,column:10},end:{line:126,column:44}},{start:{line:126,column:48},end:{line:126,column:80}}],line:126},"14":{loc:{start:{line:145,column:2},end:{line:153,column:3}},type:"if",locations:[{start:{line:145,column:2},end:{line:153,column:3}},{start:{line:145,column:2},end:{line:153,column:3}}],line:145},"15":{loc:{start:{line:146,column:20},end:{line:146,column:84}},type:"cond-expr",locations:[{start:{line:146,column:46},end:{line:146,column:65}},{start:{line:146,column:68},end:{line:146,column:84}}],line:146},"16":{loc:{start:{line:148,column:4},end:{line:150,column:5}},type:"if",locations:[{start:{line:148,column:4},end:{line:150,column:5}},{start:{line:148,column:4},end:{line:150,column:5}}],line:148},"17":{loc:{start:{line:156,column:4},end:{line:158,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:158,column:5}},{start:{line:156,column:4},end:{line:158,column:5}}],line:156},"18":{loc:{start:{line:165,column:2},end:{line:173,column:3}},type:"if",locations:[{start:{line:165,column:2},end:{line:173,column:3}},{start:{line:165,column:2},end:{line:173,column:3}}],line:165},"19":{loc:{start:{line:167,column:6},end:{line:169,column:7}},type:"if",locations:[{start:{line:167,column:6},end:{line:169,column:7}},{start:{line:167,column:6},end:{line:169,column:7}}],line:167},"20":{loc:{start:{line:183,column:2},end:{line:185,column:3}},type:"if",locations:[{start:{line:183,column:2},end:{line:185,column:3}},{start:{line:183,column:2},end:{line:185,column:3}}],line:183},"21":{loc:{start:{line:187,column:2},end:{line:193,column:3}},type:"if",locations:[{start:{line:187,column:2},end:{line:193,column:3}},{start:{line:187,column:2},end:{line:193,column:3}}],line:187},"22":{loc:{start:{line:192,column:33},end:{line:192,column:59}},type:"binary-expr",locations:[{start:{line:192,column:33},end:{line:192,column:53}},{start:{line:192,column:57},end:{line:192,column:59}}],line:192},"23":{loc:{start:{line:197,column:2},end:{line:205,column:3}},type:"if",locations:[{start:{line:197,column:2},end:{line:205,column:3}},{start:{line:197,column:2},end:{line:205,column:3}}],line:197},"24":{loc:{start:{line:199,column:6},end:{line:201,column:7}},type:"if",locations:[{start:{line:199,column:6},end:{line:201,column:7}},{start:{line:199,column:6},end:{line:201,column:7}}],line:199},"25":{loc:{start:{line:207,column:2},end:{line:215,column:3}},type:"if",locations:[{start:{line:207,column:2},end:{line:215,column:3}},{start:{line:207,column:2},end:{line:215,column:3}}],line:207},"26":{loc:{start:{line:209,column:6},end:{line:211,column:7}},type:"if",locations:[{start:{line:209,column:6},end:{line:211,column:7}},{start:{line:209,column:6},end:{line:211,column:7}}],line:209},"27":{loc:{start:{line:217,column:2},end:{line:225,column:3}},type:"if",locations:[{start:{line:217,column:2},end:{line:225,column:3}},{start:{line:217,column:2},end:{line:225,column:3}}],line:217},"28":{loc:{start:{line:219,column:6},end:{line:221,column:7}},type:"if",locations:[{start:{line:219,column:6},end:{line:221,column:7}},{start:{line:219,column:6},end:{line:221,column:7}}],line:219},"29":{loc:{start:{line:227,column:2},end:{line:230,column:3}},type:"if",locations:[{start:{line:227,column:2},end:{line:230,column:3}},{start:{line:227,column:2},end:{line:230,column:3}}],line:227},"30":{loc:{start:{line:233,column:2},end:{line:235,column:3}},type:"if",locations:[{start:{line:233,column:2},end:{line:235,column:3}},{start:{line:233,column:2},end:{line:235,column:3}}],line:233},"31":{loc:{start:{line:233,column:6},end:{line:233,column:49}},type:"binary-expr",locations:[{start:{line:233,column:6},end:{line:233,column:17}},{start:{line:233,column:21},end:{line:233,column:49}}],line:233},"32":{loc:{start:{line:238,column:2},end:{line:244,column:3}},type:"if",locations:[{start:{line:238,column:2},end:{line:244,column:3}},{start:{line:238,column:2},end:{line:244,column:3}}],line:238},"33":{loc:{start:{line:239,column:4},end:{line:241,column:5}},type:"if",locations:[{start:{line:239,column:4},end:{line:241,column:5}},{start:{line:239,column:4},end:{line:241,column:5}}],line:239},"34":{loc:{start:{line:248,column:2},end:{line:256,column:3}},type:"if",locations:[{start:{line:248,column:2},end:{line:256,column:3}},{start:{line:248,column:2},end:{line:256,column:3}}],line:248},"35":{loc:{start:{line:249,column:4},end:{line:253,column:5}},type:"if",locations:[{start:{line:249,column:4},end:{line:253,column:5}},{start:{line:249,column:4},end:{line:253,column:5}}],line:249},"36":{loc:{start:{line:251,column:15},end:{line:251,column:109}},type:"binary-expr",locations:[{start:{line:251,column:15},end:{line:251,column:41}},{start:{line:251,column:45},end:{line:251,column:76}},{start:{line:251,column:80},end:{line:251,column:109}}],line:251},"37":{loc:{start:{line:262,column:4},end:{line:264,column:5}},type:"if",locations:[{start:{line:262,column:4},end:{line:264,column:5}},{start:{line:262,column:4},end:{line:264,column:5}}],line:262},"38":{loc:{start:{line:266,column:4},end:{line:445,column:5}},type:"switch",locations:[{start:{line:267,column:6},end:{line:272,column:14}},{start:{line:274,column:6},end:{line:279,column:14}},{start:{line:281,column:6},end:{line:286,column:14}},{start:{line:288,column:6},end:{line:293,column:14}},{start:{line:295,column:6},end:{line:300,column:14}},{start:{line:302,column:6},end:{line:307,column:14}},{start:{line:309,column:6},end:{line:314,column:14}},{start:{line:316,column:6},end:{line:327,column:14}},{start:{line:329,column:6},end:{line:345,column:9}},{start:{line:347,column:6},end:{line:376,column:14}},{start:{line:378,column:6},end:{line:385,column:31}},{start:{line:387,column:6},end:{line:400,column:196}},{start:{line:402,column:6},end:{line:411,column:9}},{start:{line:413,column:6},end:{line:418,column:9}},{start:{line:420,column:6},end:{line:425,column:9}},{start:{line:427,column:6},end:{line:430,column:14}},{start:{line:432,column:6},end:{line:435,column:14}},{start:{line:437,column:6},end:{line:438,column:21}},{start:{line:440,column:6},end:{line:441,column:21}},{start:{line:443,column:6},end:{line:444,column:21}}],line:266},"39":{loc:{start:{line:268,column:8},end:{line:270,column:9}},type:"if",locations:[{start:{line:268,column:8},end:{line:270,column:9}},{start:{line:268,column:8},end:{line:270,column:9}}],line:268},"40":{loc:{start:{line:275,column:8},end:{line:277,column:9}},type:"if",locations:[{start:{line:275,column:8},end:{line:277,column:9}},{start:{line:275,column:8},end:{line:277,column:9}}],line:275},"41":{loc:{start:{line:282,column:8},end:{line:284,column:9}},type:"if",locations:[{start:{line:282,column:8},end:{line:284,column:9}},{start:{line:282,column:8},end:{line:284,column:9}}],line:282},"42":{loc:{start:{line:289,column:8},end:{line:291,column:9}},type:"if",locations:[{start:{line:289,column:8},end:{line:291,column:9}},{start:{line:289,column:8},end:{line:291,column:9}}],line:289},"43":{loc:{start:{line:296,column:8},end:{line:298,column:9}},type:"if",locations:[{start:{line:296,column:8},end:{line:298,column:9}},{start:{line:296,column:8},end:{line:298,column:9}}],line:296},"44":{loc:{start:{line:303,column:8},end:{line:305,column:9}},type:"if",locations:[{start:{line:303,column:8},end:{line:305,column:9}},{start:{line:303,column:8},end:{line:305,column:9}}],line:303},"45":{loc:{start:{line:310,column:8},end:{line:312,column:9}},type:"if",locations:[{start:{line:310,column:8},end:{line:312,column:9}},{start:{line:310,column:8},end:{line:312,column:9}}],line:310},"46":{loc:{start:{line:317,column:8},end:{line:319,column:9}},type:"if",locations:[{start:{line:317,column:8},end:{line:319,column:9}},{start:{line:317,column:8},end:{line:319,column:9}}],line:317},"47":{loc:{start:{line:322,column:10},end:{line:324,column:11}},type:"if",locations:[{start:{line:322,column:10},end:{line:324,column:11}},{start:{line:322,column:10},end:{line:324,column:11}}],line:322},"48":{loc:{start:{line:334,column:10},end:{line:338,column:11}},type:"if",locations:[{start:{line:334,column:10},end:{line:338,column:11}},{start:{line:334,column:10},end:{line:338,column:11}}],line:334},"49":{loc:{start:{line:340,column:10},end:{line:342,column:11}},type:"if",locations:[{start:{line:340,column:10},end:{line:342,column:11}},{start:{line:340,column:10},end:{line:342,column:11}}],line:340},"50":{loc:{start:{line:340,column:14},end:{line:340,column:94}},type:"binary-expr",locations:[{start:{line:340,column:14},end:{line:340,column:29}},{start:{line:340,column:33},end:{line:340,column:52}},{start:{line:340,column:56},end:{line:340,column:70}},{start:{line:340,column:74},end:{line:340,column:94}}],line:340},"51":{loc:{start:{line:348,column:8},end:{line:350,column:9}},type:"if",locations:[{start:{line:348,column:8},end:{line:350,column:9}},{start:{line:348,column:8},end:{line:350,column:9}}],line:348},"52":{loc:{start:{line:362,column:10},end:{line:364,column:11}},type:"if",locations:[{start:{line:362,column:10},end:{line:364,column:11}},{start:{line:362,column:10},end:{line:364,column:11}}],line:362},"53":{loc:{start:{line:370,column:40},end:{line:370,column:66}},type:"binary-expr",locations:[{start:{line:370,column:40},end:{line:370,column:60}},{start:{line:370,column:64},end:{line:370,column:66}}],line:370},"54":{loc:{start:{line:372,column:8},end:{line:374,column:9}},type:"if",locations:[{start:{line:372,column:8},end:{line:374,column:9}},{start:{line:372,column:8},end:{line:374,column:9}}],line:372},"55":{loc:{start:{line:379,column:8},end:{line:381,column:9}},type:"if",locations:[{start:{line:379,column:8},end:{line:381,column:9}},{start:{line:379,column:8},end:{line:381,column:9}}],line:379},"56":{loc:{start:{line:379,column:12},end:{line:379,column:38}},type:"binary-expr",locations:[{start:{line:379,column:12},end:{line:379,column:22}},{start:{line:379,column:26},end:{line:379,column:38}}],line:379},"57":{loc:{start:{line:384,column:18},end:{line:384,column:54}},type:"binary-expr",locations:[{start:{line:384,column:18},end:{line:384,column:42}},{start:{line:384,column:46},end:{line:384,column:54}}],line:384},"58":{loc:{start:{line:388,column:8},end:{line:390,column:9}},type:"if",locations:[{start:{line:388,column:8},end:{line:390,column:9}},{start:{line:388,column:8},end:{line:390,column:9}}],line:388},"59":{loc:{start:{line:388,column:12},end:{line:388,column:38}},type:"binary-expr",locations:[{start:{line:388,column:12},end:{line:388,column:22}},{start:{line:388,column:26},end:{line:388,column:38}}],line:388},"60":{loc:{start:{line:395,column:8},end:{line:398,column:9}},type:"if",locations:[{start:{line:395,column:8},end:{line:398,column:9}},{start:{line:395,column:8},end:{line:398,column:9}}],line:395},"61":{loc:{start:{line:395,column:12},end:{line:395,column:96}},type:"binary-expr",locations:[{start:{line:395,column:12},end:{line:395,column:51}},{start:{line:395,column:55},end:{line:395,column:96}}],line:395},"62":{loc:{start:{line:400,column:15},end:{line:400,column:195}},type:"binary-expr",locations:[{start:{line:400,column:15},end:{line:400,column:56}},{start:{line:400,column:60},end:{line:400,column:101}},{start:{line:400,column:105},end:{line:400,column:148}},{start:{line:400,column:152},end:{line:400,column:195}}],line:400},"63":{loc:{start:{line:405,column:12},end:{line:407,column:13}},type:"if",locations:[{start:{line:405,column:12},end:{line:407,column:13}},{start:{line:405,column:12},end:{line:407,column:13}}],line:405}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0,0],"63":[0,0]},inputSourceMap:{version:3,sources:["../../src/LiveQuery/QueryTools.js"],names:["equalObjects","require","Id","Parse","flattenOrQueries","where","Object","prototype","hasOwnProperty","call","accum","i","$or","length","concat","stringify","object","replace","Array","isArray","copy","map","sort","join","sections","keys","k","push","queryHash","query","Query","className","_where","columns","values","uniqueColumns","subValues","j","contains","haystack","needle","__type","ptr","objectId","indexOf","matchesQuery","id","field","matchesKeyConstraints","equalObjectsGeneric","obj","compareTo","eqlFn","key","constraints","keyComponents","split","subObjectKey","keyRemainder","slice","Date","iso","_decode","condition","propertyExists","existenceIsRequired","test","expString","escapeEnd","escapeStart","substring","Math","max","exp","RegExp","$options","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","value","points","$polygon","geoPoint","polygon","Polygon","containsPoint","coordinates","point","GeoPoint","$point","QueryTools","module","exports"],mappings:"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",sourcesContent:["var equalObjects = require('./equalObjects');\nvar Id = require('./Id');\nvar Parse = require('parse/node');\n\n/**\n * Query Hashes are deterministic hashes for Parse Queries.\n * Any two queries that have the same set of constraints will produce the same\n * hash. This lets us reliably group components by the queries they depend upon,\n * and quickly determine if a query has changed.\n */\n\n/**\n * Convert $or queries into an array of where conditions\n */\nfunction flattenOrQueries(where) {\n  if (!Object.prototype.hasOwnProperty.call(where, '$or')) {\n    return where;\n  }\n  var accum = [];\n  for (var i = 0; i < where.$or.length; i++) {\n    accum = accum.concat(where.$or[i]);\n  }\n  return accum;\n}\n\n/**\n * Deterministically turns an object into a string. Disregards ordering\n */\nfunction stringify(object): string {\n  if (typeof object !== 'object' || object === null) {\n    if (typeof object === 'string') {\n      return '\"' + object.replace(/\\|/g, '%|') + '\"';\n    }\n    return object + '';\n  }\n  if (Array.isArray(object)) {\n    var copy = object.map(stringify);\n    copy.sort();\n    return '[' + copy.join(',') + ']';\n  }\n  var sections = [];\n  var keys = Object.keys(object);\n  keys.sort();\n  for (var k = 0; k < keys.length; k++) {\n    sections.push(stringify(keys[k]) + ':' + stringify(object[keys[k]]));\n  }\n  return '{' + sections.join(',') + '}';\n}\n\n/**\n * Generate a hash from a query, with unique fields for columns, values, order,\n * skip, and limit.\n */\nfunction queryHash(query) {\n  if (query instanceof Parse.Query) {\n    query = {\n      className: query.className,\n      where: query._where,\n    };\n  }\n  var where = flattenOrQueries(query.where || {});\n  var columns = [];\n  var values = [];\n  var i;\n  if (Array.isArray(where)) {\n    var uniqueColumns = {};\n    for (i = 0; i < where.length; i++) {\n      var subValues = {};\n      var keys = Object.keys(where[i]);\n      keys.sort();\n      for (var j = 0; j < keys.length; j++) {\n        subValues[keys[j]] = where[i][keys[j]];\n        uniqueColumns[keys[j]] = true;\n      }\n      values.push(subValues);\n    }\n    columns = Object.keys(uniqueColumns);\n    columns.sort();\n  } else {\n    columns = Object.keys(where);\n    columns.sort();\n    for (i = 0; i < columns.length; i++) {\n      values.push(where[columns[i]]);\n    }\n  }\n\n  var sections = [columns.join(','), stringify(values)];\n\n  return query.className + ':' + sections.join('|');\n}\n\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n */\nfunction contains(haystack: Array, needle: any): boolean {\n  if (needle && needle.__type && needle.__type === 'Pointer') {\n    for (const i in haystack) {\n      const ptr = haystack[i];\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return haystack.indexOf(needle) > -1;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n */\nfunction matchesQuery(object: any, query: any): boolean {\n  if (query instanceof Parse.Query) {\n    var className = object.id instanceof Id ? object.id.className : object.className;\n    if (className !== query.className) {\n      return false;\n    }\n    return matchesQuery(object, query._where);\n  }\n  for (var field in query) {\n    if (!matchesKeyConstraints(object, field, query[field])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n\n/**\n * Determines whether an object matches a single key's constraints\n */\nfunction matchesKeyConstraints(object, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n  if (key.indexOf('.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = keyComponents.slice(1).join('.');\n    return matchesKeyConstraints(object[subObjectKey] || {}, keyRemainder, constraints);\n  }\n  var i;\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(object, constraints[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(object, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(object, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n  // Decode Date JSON value\n  if (object[key] && object[key].__type == 'Date') {\n    object[key] = new Date(object[key].iso);\n  }\n  // Equality (or Array contains) cases\n  if (typeof constraints !== 'object') {\n    if (Array.isArray(object[key])) {\n      return object[key].indexOf(constraints) > -1;\n    }\n    return object[key] === constraints;\n  }\n  var compareTo;\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return (\n          typeof obj !== 'undefined' &&\n          ptr.className === obj.className &&\n          ptr.objectId === obj.objectId\n        );\n      });\n    }\n\n    return equalObjectsGeneric(object[key], Parse._decode(key, constraints), equalObjects);\n  }\n  // More complex cases\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n    if (compareTo.__type) {\n      compareTo = Parse._decode(key, compareTo);\n    }\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n        break;\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n        break;\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n        break;\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n        break;\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n        break;\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$all':\n        if (!object[key]) {\n          return false;\n        }\n        for (i = 0; i < compareTo.length; i++) {\n          if (object[key].indexOf(compareTo[i]) < 0) {\n            return false;\n          }\n        }\n        break;\n      case '$exists': {\n        const propertyExists = typeof object[key] !== 'undefined';\n        const existenceIsRequired = constraints['$exists'];\n        if (typeof constraints['$exists'] !== 'boolean') {\n          // The SDK will never submit a non-boolean for $exists, but if someone\n          // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n          break;\n        }\n        if ((!propertyExists && existenceIsRequired) || (propertyExists && !existenceIsRequired)) {\n          return false;\n        }\n        break;\n      }\n      case '$regex':\n        if (typeof compareTo === 'object') {\n          return compareTo.test(object[key]);\n        }\n        // JS doesn't support perl-style escaping\n        var expString = '';\n        var escapeEnd = -2;\n        var escapeStart = compareTo.indexOf('\\\\Q');\n        while (escapeStart > -1) {\n          // Add the unescaped portion\n          expString += compareTo.substring(escapeEnd + 2, escapeStart);\n          escapeEnd = compareTo.indexOf('\\\\E', escapeStart);\n          if (escapeEnd > -1) {\n            expString += compareTo\n              .substring(escapeStart + 2, escapeEnd)\n              .replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E')\n              .replace(/\\W/g, '\\\\$&');\n          }\n\n          escapeStart = compareTo.indexOf('\\\\Q', escapeEnd);\n        }\n        expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n        var exp = new RegExp(expString, constraints.$options || '');\n        if (!exp.test(object[key])) {\n          return false;\n        }\n        break;\n      case '$nearSphere':\n        if (!compareTo || !object[key]) {\n          return false;\n        }\n        var distance = compareTo.radiansTo(object[key]);\n        var max = constraints.$maxDistance || Infinity;\n        return distance <= max;\n      case '$within':\n        if (!compareTo || !object[key]) {\n          return false;\n        }\n        var southWest = compareTo.$box[0];\n        var northEast = compareTo.$box[1];\n        if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n          // Invalid box, crosses the date line\n          return false;\n        }\n        return (\n          object[key].latitude > southWest.latitude &&\n          object[key].latitude < northEast.latitude &&\n          object[key].longitude > southWest.longitude &&\n          object[key].longitude < northEast.longitude\n        );\n      case '$containedBy': {\n        for (const value of object[key]) {\n          if (!contains(compareTo, value)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      case '$geoWithin': {\n        const points = compareTo.$polygon.map(geoPoint => [geoPoint.latitude, geoPoint.longitude]);\n        const polygon = new Parse.Polygon(points);\n        return polygon.containsPoint(object[key]);\n      }\n      case '$geoIntersects': {\n        const polygon = new Parse.Polygon(object[key].coordinates);\n        const point = new Parse.GeoPoint(compareTo.$point);\n        return polygon.containsPoint(point);\n      }\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n      case '$select':\n        return false;\n      case '$dontSelect':\n        return false;\n      default:\n        return false;\n    }\n  }\n  return true;\n}\n\nvar QueryTools = {\n  queryHash: queryHash,\n  matchesQuery: matchesQuery,\n};\n\nmodule.exports = QueryTools;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"810795b1480a1851d8d87d348468fac18b735f08"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_d24t9vb5f=function(){return actualCoverage;};}return actualCoverage;}cov_d24t9vb5f();var equalObjects=(cov_d24t9vb5f().s[0]++,require('./equalObjects'));var Id=(cov_d24t9vb5f().s[1]++,require('./Id'));var Parse=(cov_d24t9vb5f().s[2]++,require('parse/node'));/**
 * Query Hashes are deterministic hashes for Parse Queries.
 * Any two queries that have the same set of constraints will produce the same
 * hash. This lets us reliably group components by the queries they depend upon,
 * and quickly determine if a query has changed.
 */ /**
 * Convert $or queries into an array of where conditions
 */function flattenOrQueries(where){cov_d24t9vb5f().f[0]++;cov_d24t9vb5f().s[3]++;if(!Object.prototype.hasOwnProperty.call(where,'$or')){cov_d24t9vb5f().b[0][0]++;cov_d24t9vb5f().s[4]++;return where;}else{cov_d24t9vb5f().b[0][1]++;}var accum=(cov_d24t9vb5f().s[5]++,[]);cov_d24t9vb5f().s[6]++;for(var i=(cov_d24t9vb5f().s[7]++,0);i<where.$or.length;i++){cov_d24t9vb5f().s[8]++;accum=accum.concat(where.$or[i]);}cov_d24t9vb5f().s[9]++;return accum;}/**
 * Deterministically turns an object into a string. Disregards ordering
 */function stringify(object){cov_d24t9vb5f().f[1]++;cov_d24t9vb5f().s[10]++;if((cov_d24t9vb5f().b[2][0]++,typeof object!=='object')||(cov_d24t9vb5f().b[2][1]++,object===null)){cov_d24t9vb5f().b[1][0]++;cov_d24t9vb5f().s[11]++;if(typeof object==='string'){cov_d24t9vb5f().b[3][0]++;cov_d24t9vb5f().s[12]++;return'"'+object.replace(/\|/g,'%|')+'"';}else{cov_d24t9vb5f().b[3][1]++;}cov_d24t9vb5f().s[13]++;return object+'';}else{cov_d24t9vb5f().b[1][1]++;}cov_d24t9vb5f().s[14]++;if(Array.isArray(object)){cov_d24t9vb5f().b[4][0]++;var copy=(cov_d24t9vb5f().s[15]++,object.map(stringify));cov_d24t9vb5f().s[16]++;copy.sort();cov_d24t9vb5f().s[17]++;return'['+copy.join(',')+']';}else{cov_d24t9vb5f().b[4][1]++;}var sections=(cov_d24t9vb5f().s[18]++,[]);var keys=(cov_d24t9vb5f().s[19]++,Object.keys(object));cov_d24t9vb5f().s[20]++;keys.sort();cov_d24t9vb5f().s[21]++;for(var k=(cov_d24t9vb5f().s[22]++,0);k<keys.length;k++){cov_d24t9vb5f().s[23]++;sections.push(stringify(keys[k])+':'+stringify(object[keys[k]]));}cov_d24t9vb5f().s[24]++;return'{'+sections.join(',')+'}';}/**
 * Generate a hash from a query, with unique fields for columns, values, order,
 * skip, and limit.
 */function queryHash(query){cov_d24t9vb5f().f[2]++;cov_d24t9vb5f().s[25]++;if(query instanceof Parse.Query){cov_d24t9vb5f().b[5][0]++;cov_d24t9vb5f().s[26]++;query={className:query.className,where:query._where};}else{cov_d24t9vb5f().b[5][1]++;}var where=(cov_d24t9vb5f().s[27]++,flattenOrQueries((cov_d24t9vb5f().b[6][0]++,query.where)||(cov_d24t9vb5f().b[6][1]++,{})));var columns=(cov_d24t9vb5f().s[28]++,[]);var values=(cov_d24t9vb5f().s[29]++,[]);var i;cov_d24t9vb5f().s[30]++;if(Array.isArray(where)){cov_d24t9vb5f().b[7][0]++;var uniqueColumns=(cov_d24t9vb5f().s[31]++,{});cov_d24t9vb5f().s[32]++;for(i=0;i<where.length;i++){var subValues=(cov_d24t9vb5f().s[33]++,{});var keys=(cov_d24t9vb5f().s[34]++,Object.keys(where[i]));cov_d24t9vb5f().s[35]++;keys.sort();cov_d24t9vb5f().s[36]++;for(var j=(cov_d24t9vb5f().s[37]++,0);j<keys.length;j++){cov_d24t9vb5f().s[38]++;subValues[keys[j]]=where[i][keys[j]];cov_d24t9vb5f().s[39]++;uniqueColumns[keys[j]]=true;}cov_d24t9vb5f().s[40]++;values.push(subValues);}cov_d24t9vb5f().s[41]++;columns=Object.keys(uniqueColumns);cov_d24t9vb5f().s[42]++;columns.sort();}else{cov_d24t9vb5f().b[7][1]++;cov_d24t9vb5f().s[43]++;columns=Object.keys(where);cov_d24t9vb5f().s[44]++;columns.sort();cov_d24t9vb5f().s[45]++;for(i=0;i<columns.length;i++){cov_d24t9vb5f().s[46]++;values.push(where[columns[i]]);}}var sections=(cov_d24t9vb5f().s[47]++,[columns.join(','),stringify(values)]);cov_d24t9vb5f().s[48]++;return query.className+':'+sections.join('|');}/**
 * contains -- Determines if an object is contained in a list with special handling for Parse pointers.
 */function contains(haystack,needle){cov_d24t9vb5f().f[3]++;cov_d24t9vb5f().s[49]++;if((cov_d24t9vb5f().b[9][0]++,needle)&&(cov_d24t9vb5f().b[9][1]++,needle.__type)&&(cov_d24t9vb5f().b[9][2]++,needle.__type==='Pointer')){cov_d24t9vb5f().b[8][0]++;cov_d24t9vb5f().s[50]++;for(const i in haystack){const ptr=(cov_d24t9vb5f().s[51]++,haystack[i]);cov_d24t9vb5f().s[52]++;if((cov_d24t9vb5f().b[11][0]++,typeof ptr==='string')&&(cov_d24t9vb5f().b[11][1]++,ptr===needle.objectId)){cov_d24t9vb5f().b[10][0]++;cov_d24t9vb5f().s[53]++;return true;}else{cov_d24t9vb5f().b[10][1]++;}cov_d24t9vb5f().s[54]++;if((cov_d24t9vb5f().b[13][0]++,ptr.className===needle.className)&&(cov_d24t9vb5f().b[13][1]++,ptr.objectId===needle.objectId)){cov_d24t9vb5f().b[12][0]++;cov_d24t9vb5f().s[55]++;return true;}else{cov_d24t9vb5f().b[12][1]++;}}cov_d24t9vb5f().s[56]++;return false;}else{cov_d24t9vb5f().b[8][1]++;}cov_d24t9vb5f().s[57]++;return haystack.indexOf(needle)>-1;}/**
 * matchesQuery -- Determines if an object would be returned by a Parse Query
 * It's a lightweight, where-clause only implementation of a full query engine.
 * Since we find queries that match objects, rather than objects that match
 * queries, we can avoid building a full-blown query tool.
 */function matchesQuery(object,query){cov_d24t9vb5f().f[4]++;cov_d24t9vb5f().s[58]++;if(query instanceof Parse.Query){cov_d24t9vb5f().b[14][0]++;var className=(cov_d24t9vb5f().s[59]++,object.id instanceof Id?(cov_d24t9vb5f().b[15][0]++,object.id.className):(cov_d24t9vb5f().b[15][1]++,object.className));cov_d24t9vb5f().s[60]++;if(className!==query.className){cov_d24t9vb5f().b[16][0]++;cov_d24t9vb5f().s[61]++;return false;}else{cov_d24t9vb5f().b[16][1]++;}cov_d24t9vb5f().s[62]++;return matchesQuery(object,query._where);}else{cov_d24t9vb5f().b[14][1]++;}cov_d24t9vb5f().s[63]++;for(var field in query){cov_d24t9vb5f().s[64]++;if(!matchesKeyConstraints(object,field,query[field])){cov_d24t9vb5f().b[17][0]++;cov_d24t9vb5f().s[65]++;return false;}else{cov_d24t9vb5f().b[17][1]++;}}cov_d24t9vb5f().s[66]++;return true;}function equalObjectsGeneric(obj,compareTo,eqlFn){cov_d24t9vb5f().f[5]++;cov_d24t9vb5f().s[67]++;if(Array.isArray(obj)){cov_d24t9vb5f().b[18][0]++;cov_d24t9vb5f().s[68]++;for(var i=(cov_d24t9vb5f().s[69]++,0);i<obj.length;i++){cov_d24t9vb5f().s[70]++;if(eqlFn(obj[i],compareTo)){cov_d24t9vb5f().b[19][0]++;cov_d24t9vb5f().s[71]++;return true;}else{cov_d24t9vb5f().b[19][1]++;}}cov_d24t9vb5f().s[72]++;return false;}else{cov_d24t9vb5f().b[18][1]++;}cov_d24t9vb5f().s[73]++;return eqlFn(obj,compareTo);}/**
 * Determines whether an object matches a single key's constraints
 */function matchesKeyConstraints(object,key,constraints){cov_d24t9vb5f().f[6]++;cov_d24t9vb5f().s[74]++;if(constraints===null){cov_d24t9vb5f().b[20][0]++;cov_d24t9vb5f().s[75]++;return false;}else{cov_d24t9vb5f().b[20][1]++;}cov_d24t9vb5f().s[76]++;if(key.indexOf('.')>=0){cov_d24t9vb5f().b[21][0]++;// Key references a subobject
var keyComponents=(cov_d24t9vb5f().s[77]++,key.split('.'));var subObjectKey=(cov_d24t9vb5f().s[78]++,keyComponents[0]);var keyRemainder=(cov_d24t9vb5f().s[79]++,keyComponents.slice(1).join('.'));cov_d24t9vb5f().s[80]++;return matchesKeyConstraints((cov_d24t9vb5f().b[22][0]++,object[subObjectKey])||(cov_d24t9vb5f().b[22][1]++,{}),keyRemainder,constraints);}else{cov_d24t9vb5f().b[21][1]++;}var i;cov_d24t9vb5f().s[81]++;if(key==='$or'){cov_d24t9vb5f().b[23][0]++;cov_d24t9vb5f().s[82]++;for(i=0;i<constraints.length;i++){cov_d24t9vb5f().s[83]++;if(matchesQuery(object,constraints[i])){cov_d24t9vb5f().b[24][0]++;cov_d24t9vb5f().s[84]++;return true;}else{cov_d24t9vb5f().b[24][1]++;}}cov_d24t9vb5f().s[85]++;return false;}else{cov_d24t9vb5f().b[23][1]++;}cov_d24t9vb5f().s[86]++;if(key==='$and'){cov_d24t9vb5f().b[25][0]++;cov_d24t9vb5f().s[87]++;for(i=0;i<constraints.length;i++){cov_d24t9vb5f().s[88]++;if(!matchesQuery(object,constraints[i])){cov_d24t9vb5f().b[26][0]++;cov_d24t9vb5f().s[89]++;return false;}else{cov_d24t9vb5f().b[26][1]++;}}cov_d24t9vb5f().s[90]++;return true;}else{cov_d24t9vb5f().b[25][1]++;}cov_d24t9vb5f().s[91]++;if(key==='$nor'){cov_d24t9vb5f().b[27][0]++;cov_d24t9vb5f().s[92]++;for(i=0;i<constraints.length;i++){cov_d24t9vb5f().s[93]++;if(matchesQuery(object,constraints[i])){cov_d24t9vb5f().b[28][0]++;cov_d24t9vb5f().s[94]++;return false;}else{cov_d24t9vb5f().b[28][1]++;}}cov_d24t9vb5f().s[95]++;return true;}else{cov_d24t9vb5f().b[27][1]++;}cov_d24t9vb5f().s[96]++;if(key==='$relatedTo'){cov_d24t9vb5f().b[29][0]++;cov_d24t9vb5f().s[97]++;// Bail! We can't handle relational queries locally
return false;}else{cov_d24t9vb5f().b[29][1]++;}// Decode Date JSON value
cov_d24t9vb5f().s[98]++;if((cov_d24t9vb5f().b[31][0]++,object[key])&&(cov_d24t9vb5f().b[31][1]++,object[key].__type=='Date')){cov_d24t9vb5f().b[30][0]++;cov_d24t9vb5f().s[99]++;object[key]=new Date(object[key].iso);}else{cov_d24t9vb5f().b[30][1]++;}// Equality (or Array contains) cases
cov_d24t9vb5f().s[100]++;if(typeof constraints!=='object'){cov_d24t9vb5f().b[32][0]++;cov_d24t9vb5f().s[101]++;if(Array.isArray(object[key])){cov_d24t9vb5f().b[33][0]++;cov_d24t9vb5f().s[102]++;return object[key].indexOf(constraints)>-1;}else{cov_d24t9vb5f().b[33][1]++;}cov_d24t9vb5f().s[103]++;return object[key]===constraints;}else{cov_d24t9vb5f().b[32][1]++;}var compareTo;cov_d24t9vb5f().s[104]++;if(constraints.__type){cov_d24t9vb5f().b[34][0]++;cov_d24t9vb5f().s[105]++;if(constraints.__type==='Pointer'){cov_d24t9vb5f().b[35][0]++;cov_d24t9vb5f().s[106]++;return equalObjectsGeneric(object[key],constraints,function(obj,ptr){cov_d24t9vb5f().f[7]++;cov_d24t9vb5f().s[107]++;return(cov_d24t9vb5f().b[36][0]++,typeof obj!=='undefined')&&(cov_d24t9vb5f().b[36][1]++,ptr.className===obj.className)&&(cov_d24t9vb5f().b[36][2]++,ptr.objectId===obj.objectId);});}else{cov_d24t9vb5f().b[35][1]++;}cov_d24t9vb5f().s[108]++;return equalObjectsGeneric(object[key],Parse._decode(key,constraints),equalObjects);}else{cov_d24t9vb5f().b[34][1]++;}// More complex cases
cov_d24t9vb5f().s[109]++;for(var condition in constraints){cov_d24t9vb5f().s[110]++;compareTo=constraints[condition];cov_d24t9vb5f().s[111]++;if(compareTo.__type){cov_d24t9vb5f().b[37][0]++;cov_d24t9vb5f().s[112]++;compareTo=Parse._decode(key,compareTo);}else{cov_d24t9vb5f().b[37][1]++;}cov_d24t9vb5f().s[113]++;switch(condition){case'$lt':cov_d24t9vb5f().b[38][0]++;cov_d24t9vb5f().s[114]++;if(object[key]>=compareTo){cov_d24t9vb5f().b[39][0]++;cov_d24t9vb5f().s[115]++;return false;}else{cov_d24t9vb5f().b[39][1]++;}cov_d24t9vb5f().s[116]++;break;case'$lte':cov_d24t9vb5f().b[38][1]++;cov_d24t9vb5f().s[117]++;if(object[key]>compareTo){cov_d24t9vb5f().b[40][0]++;cov_d24t9vb5f().s[118]++;return false;}else{cov_d24t9vb5f().b[40][1]++;}cov_d24t9vb5f().s[119]++;break;case'$gt':cov_d24t9vb5f().b[38][2]++;cov_d24t9vb5f().s[120]++;if(object[key]<=compareTo){cov_d24t9vb5f().b[41][0]++;cov_d24t9vb5f().s[121]++;return false;}else{cov_d24t9vb5f().b[41][1]++;}cov_d24t9vb5f().s[122]++;break;case'$gte':cov_d24t9vb5f().b[38][3]++;cov_d24t9vb5f().s[123]++;if(object[key]<compareTo){cov_d24t9vb5f().b[42][0]++;cov_d24t9vb5f().s[124]++;return false;}else{cov_d24t9vb5f().b[42][1]++;}cov_d24t9vb5f().s[125]++;break;case'$ne':cov_d24t9vb5f().b[38][4]++;cov_d24t9vb5f().s[126]++;if(equalObjects(object[key],compareTo)){cov_d24t9vb5f().b[43][0]++;cov_d24t9vb5f().s[127]++;return false;}else{cov_d24t9vb5f().b[43][1]++;}cov_d24t9vb5f().s[128]++;break;case'$in':cov_d24t9vb5f().b[38][5]++;cov_d24t9vb5f().s[129]++;if(!contains(compareTo,object[key])){cov_d24t9vb5f().b[44][0]++;cov_d24t9vb5f().s[130]++;return false;}else{cov_d24t9vb5f().b[44][1]++;}cov_d24t9vb5f().s[131]++;break;case'$nin':cov_d24t9vb5f().b[38][6]++;cov_d24t9vb5f().s[132]++;if(contains(compareTo,object[key])){cov_d24t9vb5f().b[45][0]++;cov_d24t9vb5f().s[133]++;return false;}else{cov_d24t9vb5f().b[45][1]++;}cov_d24t9vb5f().s[134]++;break;case'$all':cov_d24t9vb5f().b[38][7]++;cov_d24t9vb5f().s[135]++;if(!object[key]){cov_d24t9vb5f().b[46][0]++;cov_d24t9vb5f().s[136]++;return false;}else{cov_d24t9vb5f().b[46][1]++;}cov_d24t9vb5f().s[137]++;for(i=0;i<compareTo.length;i++){cov_d24t9vb5f().s[138]++;if(object[key].indexOf(compareTo[i])<0){cov_d24t9vb5f().b[47][0]++;cov_d24t9vb5f().s[139]++;return false;}else{cov_d24t9vb5f().b[47][1]++;}}cov_d24t9vb5f().s[140]++;break;case'$exists':cov_d24t9vb5f().b[38][8]++;{const propertyExists=(cov_d24t9vb5f().s[141]++,typeof object[key]!=='undefined');const existenceIsRequired=(cov_d24t9vb5f().s[142]++,constraints['$exists']);cov_d24t9vb5f().s[143]++;if(typeof constraints['$exists']!=='boolean'){cov_d24t9vb5f().b[48][0]++;cov_d24t9vb5f().s[144]++;// The SDK will never submit a non-boolean for $exists, but if someone
// tries to submit a non-boolean for $exits outside the SDKs, just ignore it.
break;}else{cov_d24t9vb5f().b[48][1]++;}cov_d24t9vb5f().s[145]++;if((cov_d24t9vb5f().b[50][0]++,!propertyExists)&&(cov_d24t9vb5f().b[50][1]++,existenceIsRequired)||(cov_d24t9vb5f().b[50][2]++,propertyExists)&&(cov_d24t9vb5f().b[50][3]++,!existenceIsRequired)){cov_d24t9vb5f().b[49][0]++;cov_d24t9vb5f().s[146]++;return false;}else{cov_d24t9vb5f().b[49][1]++;}cov_d24t9vb5f().s[147]++;break;}case'$regex':cov_d24t9vb5f().b[38][9]++;cov_d24t9vb5f().s[148]++;if(typeof compareTo==='object'){cov_d24t9vb5f().b[51][0]++;cov_d24t9vb5f().s[149]++;return compareTo.test(object[key]);}else{cov_d24t9vb5f().b[51][1]++;}// JS doesn't support perl-style escaping
var expString=(cov_d24t9vb5f().s[150]++,'');var escapeEnd=(cov_d24t9vb5f().s[151]++,-2);var escapeStart=(cov_d24t9vb5f().s[152]++,compareTo.indexOf('\\Q'));cov_d24t9vb5f().s[153]++;while(escapeStart>-1){cov_d24t9vb5f().s[154]++;// Add the unescaped portion
expString+=compareTo.substring(escapeEnd+2,escapeStart);cov_d24t9vb5f().s[155]++;escapeEnd=compareTo.indexOf('\\E',escapeStart);cov_d24t9vb5f().s[156]++;if(escapeEnd>-1){cov_d24t9vb5f().b[52][0]++;cov_d24t9vb5f().s[157]++;expString+=compareTo.substring(escapeStart+2,escapeEnd).replace(/\\\\\\\\E/g,'\\E').replace(/\W/g,'\\$&');}else{cov_d24t9vb5f().b[52][1]++;}cov_d24t9vb5f().s[158]++;escapeStart=compareTo.indexOf('\\Q',escapeEnd);}cov_d24t9vb5f().s[159]++;expString+=compareTo.substring(Math.max(escapeStart,escapeEnd+2));var exp=(cov_d24t9vb5f().s[160]++,new RegExp(expString,(cov_d24t9vb5f().b[53][0]++,constraints.$options)||(cov_d24t9vb5f().b[53][1]++,'')));cov_d24t9vb5f().s[161]++;if(!exp.test(object[key])){cov_d24t9vb5f().b[54][0]++;cov_d24t9vb5f().s[162]++;return false;}else{cov_d24t9vb5f().b[54][1]++;}cov_d24t9vb5f().s[163]++;break;case'$nearSphere':cov_d24t9vb5f().b[38][10]++;cov_d24t9vb5f().s[164]++;if((cov_d24t9vb5f().b[56][0]++,!compareTo)||(cov_d24t9vb5f().b[56][1]++,!object[key])){cov_d24t9vb5f().b[55][0]++;cov_d24t9vb5f().s[165]++;return false;}else{cov_d24t9vb5f().b[55][1]++;}var distance=(cov_d24t9vb5f().s[166]++,compareTo.radiansTo(object[key]));var max=(cov_d24t9vb5f().s[167]++,(cov_d24t9vb5f().b[57][0]++,constraints.$maxDistance)||(cov_d24t9vb5f().b[57][1]++,Infinity));cov_d24t9vb5f().s[168]++;return distance<=max;case'$within':cov_d24t9vb5f().b[38][11]++;cov_d24t9vb5f().s[169]++;if((cov_d24t9vb5f().b[59][0]++,!compareTo)||(cov_d24t9vb5f().b[59][1]++,!object[key])){cov_d24t9vb5f().b[58][0]++;cov_d24t9vb5f().s[170]++;return false;}else{cov_d24t9vb5f().b[58][1]++;}var southWest=(cov_d24t9vb5f().s[171]++,compareTo.$box[0]);var northEast=(cov_d24t9vb5f().s[172]++,compareTo.$box[1]);cov_d24t9vb5f().s[173]++;if((cov_d24t9vb5f().b[61][0]++,southWest.latitude>northEast.latitude)||(cov_d24t9vb5f().b[61][1]++,southWest.longitude>northEast.longitude)){cov_d24t9vb5f().b[60][0]++;cov_d24t9vb5f().s[174]++;// Invalid box, crosses the date line
return false;}else{cov_d24t9vb5f().b[60][1]++;}cov_d24t9vb5f().s[175]++;return(cov_d24t9vb5f().b[62][0]++,object[key].latitude>southWest.latitude)&&(cov_d24t9vb5f().b[62][1]++,object[key].latitude<northEast.latitude)&&(cov_d24t9vb5f().b[62][2]++,object[key].longitude>southWest.longitude)&&(cov_d24t9vb5f().b[62][3]++,object[key].longitude<northEast.longitude);case'$containedBy':cov_d24t9vb5f().b[38][12]++;{cov_d24t9vb5f().s[176]++;for(const value of object[key]){cov_d24t9vb5f().s[177]++;if(!contains(compareTo,value)){cov_d24t9vb5f().b[63][0]++;cov_d24t9vb5f().s[178]++;return false;}else{cov_d24t9vb5f().b[63][1]++;}}cov_d24t9vb5f().s[179]++;return true;}case'$geoWithin':cov_d24t9vb5f().b[38][13]++;{const points=(cov_d24t9vb5f().s[180]++,compareTo.$polygon.map(geoPoint=>{cov_d24t9vb5f().f[8]++;cov_d24t9vb5f().s[181]++;return[geoPoint.latitude,geoPoint.longitude];}));const polygon=(cov_d24t9vb5f().s[182]++,new Parse.Polygon(points));cov_d24t9vb5f().s[183]++;return polygon.containsPoint(object[key]);}case'$geoIntersects':cov_d24t9vb5f().b[38][14]++;{const polygon=(cov_d24t9vb5f().s[184]++,new Parse.Polygon(object[key].coordinates));const point=(cov_d24t9vb5f().s[185]++,new Parse.GeoPoint(compareTo.$point));cov_d24t9vb5f().s[186]++;return polygon.containsPoint(point);}case'$options':cov_d24t9vb5f().b[38][15]++;cov_d24t9vb5f().s[187]++;// Not a query type, but a way to add options to $regex. Ignore and
// avoid the default
break;case'$maxDistance':cov_d24t9vb5f().b[38][16]++;cov_d24t9vb5f().s[188]++;// Not a query type, but a way to add a cap to $nearSphere. Ignore and
// avoid the default
break;case'$select':cov_d24t9vb5f().b[38][17]++;cov_d24t9vb5f().s[189]++;return false;case'$dontSelect':cov_d24t9vb5f().b[38][18]++;cov_d24t9vb5f().s[190]++;return false;default:cov_d24t9vb5f().b[38][19]++;cov_d24t9vb5f().s[191]++;return false;}}cov_d24t9vb5f().s[192]++;return true;}var QueryTools=(cov_d24t9vb5f().s[193]++,{queryHash:queryHash,matchesQuery:matchesQuery});cov_d24t9vb5f().s[194]++;module.exports=QueryTools;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,