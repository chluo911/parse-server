"use strict";function cov_f3c24ttms(){var path="/parse-server/lib/GraphQL/loaders/schemaDirectives.js";var hash="4efa9e4f55d15c03cdd7f91f55f8a3a3dbe63307";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/GraphQL/loaders/schemaDirectives.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:44}},"2":{start:{line:8,column:18},end:{line:8,column:64}},"3":{start:{line:10,column:13},end:{line:10,column:44}},"4":{start:{line:12,column:23},end:{line:12,column:63}},"5":{start:{line:14,column:39},end:{line:14,column:93}},"6":{start:{line:16,column:20},end:{line:19,column:1}},"7":{start:{line:20,column:0},end:{line:20,column:34}},"8":{start:{line:22,column:13},end:{line:69,column:1}},"9":{start:{line:23,column:2},end:{line:23,column:70}},"10":{start:{line:27,column:6},end:{line:52,column:8}},"11":{start:{line:28,column:8},end:{line:51,column:9}},"12":{start:{line:33,column:14},end:{line:33,column:21}},"13":{start:{line:34,column:29},end:{line:34,column:39}},"14":{start:{line:36,column:10},end:{line:38,column:11}},"15":{start:{line:37,column:12},end:{line:37,column:40}},"16":{start:{line:40,column:10},end:{line:48,column:30}},"17":{start:{line:50,column:10},end:{line:50,column:44}},"18":{start:{line:57,column:2},end:{line:57,column:79}},"19":{start:{line:61,column:6},end:{line:63,column:8}},"20":{start:{line:62,column:8},end:{line:62,column:30}},"21":{start:{line:68,column:2},end:{line:68,column:73}},"22":{start:{line:71,column:0},end:{line:71,column:20}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:14,column:9},end:{line:14,column:31}},loc:{start:{line:14,column:37},end:{line:14,column:95}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:13},end:{line:22,column:14}},loc:{start:{line:22,column:35},end:{line:69,column:1}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:32},end:{line:53,column:5}},line:26},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:22},end:{line:27,column:23}},loc:{start:{line:27,column:56},end:{line:52,column:7}},line:27},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:32},end:{line:64,column:5}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:22},end:{line:61,column:23}},loc:{start:{line:61,column:28},end:{line:63,column:7}},line:61}},branchMap:{"0":{loc:{start:{line:14,column:46},end:{line:14,column:92}},type:"cond-expr",locations:[{start:{line:14,column:70},end:{line:14,column:73}},{start:{line:14,column:76},end:{line:14,column:92}}],line:14},"1":{loc:{start:{line:14,column:46},end:{line:14,column:67}},type:"binary-expr",locations:[{start:{line:14,column:46},end:{line:14,column:49}},{start:{line:14,column:53},end:{line:14,column:67}}],line:14},"2":{loc:{start:{line:36,column:10},end:{line:38,column:11}},type:"if",locations:[{start:{line:36,column:10},end:{line:38,column:11}},{start:{line:36,column:10},end:{line:38,column:11}}],line:36}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,sources:["../../../src/GraphQL/loaders/schemaDirectives.js"],names:["definitions","load","parseGraphQLSchema","graphQLSchemaDirectivesDefinitions","ResolveDirectiveVisitor","SchemaDirectiveVisitor","visitFieldDefinition","field","resolve","_source","args","context","config","auth","info","functionName","name","to","FunctionsRouter","handleCloudFunction","params","body","response","result","e","handleError","graphQLSchemaDirectives","MockDirectiveVisitor","with","mock"],mappings:";;;;;;;AAAA;;AACA;;AACA;;;;AAEO,MAAMA,WAAW,GAAG,wBAAI;AAC/B;AACA;AACA,CAHO;;;AAKP,MAAMC,IAAI,GAAGC,kBAAkB,IAAI;AACjCA,EAAAA,kBAAkB,CAACC,kCAAnB,GAAwDH,WAAxD;;AAEA,QAAMI,uBAAN,SAAsCC,6BAAtC,CAA6D;AAC3DC,IAAAA,oBAAoB,CAACC,KAAD,EAAQ;AAC1BA,MAAAA,KAAK,CAACC,OAAN,GAAgB,OAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,KAAkC;AAChD,YAAI;AACF,gBAAM;AAAEC,YAAAA,MAAF;AAAUC,YAAAA,IAAV;AAAgBC,YAAAA;AAAhB,cAAyBH,OAA/B;AAEA,cAAII,YAAY,GAAGR,KAAK,CAACS,IAAzB;;AACA,cAAI,KAAKN,IAAL,CAAUO,EAAd,EAAkB;AAChBF,YAAAA,YAAY,GAAG,KAAKL,IAAL,CAAUO,EAAzB;AACD;;AAED,iBAAO,CACL,MAAMC,iCAAgBC,mBAAhB,CAAoC;AACxCC,YAAAA,MAAM,EAAE;AACNL,cAAAA;AADM,aADgC;AAIxCH,YAAAA,MAJwC;AAKxCC,YAAAA,IALwC;AAMxCC,YAAAA,IANwC;AAOxCO,YAAAA,IAAI,EAAEX;AAPkC,WAApC,CADD,EAULY,QAVK,CAUIC,MAVX;AAWD,SAnBD,CAmBE,OAAOC,CAAP,EAAU;AACVtB,UAAAA,kBAAkB,CAACuB,WAAnB,CAA+BD,CAA/B;AACD;AACF,OAvBD;AAwBD;;AA1B0D;;AA6B7DtB,EAAAA,kBAAkB,CAACwB,uBAAnB,CAA2ClB,OAA3C,GAAqDJ,uBAArD;;AAEA,QAAMuB,oBAAN,SAAmCtB,6BAAnC,CAA0D;AACxDC,IAAAA,oBAAoB,CAACC,KAAD,EAAQ;AAC1BA,MAAAA,KAAK,CAACC,OAAN,GAAgB,MAAM;AACpB,eAAO,KAAKE,IAAL,CAAUkB,IAAjB;AACD,OAFD;AAGD;;AALuD;;AAQ1D1B,EAAAA,kBAAkB,CAACwB,uBAAnB,CAA2CG,IAA3C,GAAkDF,oBAAlD;AACD,CA3CD",sourcesContent:["import gql from 'graphql-tag';\nimport { SchemaDirectiveVisitor } from '@graphql-tools/utils';\nimport { FunctionsRouter } from '../../Routers/FunctionsRouter';\n\nexport const definitions = gql`\n  directive @resolve(to: String) on FIELD_DEFINITION\n  directive @mock(with: Any!) on FIELD_DEFINITION\n`;\n\nconst load = parseGraphQLSchema => {\n  parseGraphQLSchema.graphQLSchemaDirectivesDefinitions = definitions;\n\n  class ResolveDirectiveVisitor extends SchemaDirectiveVisitor {\n    visitFieldDefinition(field) {\n      field.resolve = async (_source, args, context) => {\n        try {\n          const { config, auth, info } = context;\n\n          let functionName = field.name;\n          if (this.args.to) {\n            functionName = this.args.to;\n          }\n\n          return (\n            await FunctionsRouter.handleCloudFunction({\n              params: {\n                functionName,\n              },\n              config,\n              auth,\n              info,\n              body: args,\n            })\n          ).response.result;\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      };\n    }\n  }\n\n  parseGraphQLSchema.graphQLSchemaDirectives.resolve = ResolveDirectiveVisitor;\n\n  class MockDirectiveVisitor extends SchemaDirectiveVisitor {\n    visitFieldDefinition(field) {\n      field.resolve = () => {\n        return this.args.with;\n      };\n    }\n  }\n\n  parseGraphQLSchema.graphQLSchemaDirectives.mock = MockDirectiveVisitor;\n};\n\nexport { load };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4efa9e4f55d15c03cdd7f91f55f8a3a3dbe63307"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_f3c24ttms=function(){return actualCoverage;};}return actualCoverage;}cov_f3c24ttms();cov_f3c24ttms().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_f3c24ttms().s[1]++;exports.load=exports.definitions=void 0;var _graphqlTag=(cov_f3c24ttms().s[2]++,_interopRequireDefault(require("graphql-tag")));var _utils=(cov_f3c24ttms().s[3]++,require("@graphql-tools/utils"));var _FunctionsRouter=(cov_f3c24ttms().s[4]++,require("../../Routers/FunctionsRouter"));function _interopRequireDefault(obj){cov_f3c24ttms().f[0]++;cov_f3c24ttms().s[5]++;return(cov_f3c24ttms().b[1][0]++,obj)&&(cov_f3c24ttms().b[1][1]++,obj.__esModule)?(cov_f3c24ttms().b[0][0]++,obj):(cov_f3c24ttms().b[0][1]++,{default:obj});}const definitions=(cov_f3c24ttms().s[6]++,(0,_graphqlTag.default)`
  directive @resolve(to: String) on FIELD_DEFINITION
  directive @mock(with: Any!) on FIELD_DEFINITION
`);cov_f3c24ttms().s[7]++;exports.definitions=definitions;cov_f3c24ttms().s[8]++;const load=parseGraphQLSchema=>{cov_f3c24ttms().f[1]++;cov_f3c24ttms().s[9]++;parseGraphQLSchema.graphQLSchemaDirectivesDefinitions=definitions;class ResolveDirectiveVisitor extends(_utils.SchemaDirectiveVisitor){visitFieldDefinition(field){cov_f3c24ttms().f[2]++;cov_f3c24ttms().s[10]++;field.resolve=async(_source,args,context)=>{cov_f3c24ttms().f[3]++;cov_f3c24ttms().s[11]++;try{const{config,auth,info}=(cov_f3c24ttms().s[12]++,context);let functionName=(cov_f3c24ttms().s[13]++,field.name);cov_f3c24ttms().s[14]++;if(this.args.to){cov_f3c24ttms().b[2][0]++;cov_f3c24ttms().s[15]++;functionName=this.args.to;}else{cov_f3c24ttms().b[2][1]++;}cov_f3c24ttms().s[16]++;return(await _FunctionsRouter.FunctionsRouter.handleCloudFunction({params:{functionName},config,auth,info,body:args})).response.result;}catch(e){cov_f3c24ttms().s[17]++;parseGraphQLSchema.handleError(e);}};}}cov_f3c24ttms().s[18]++;parseGraphQLSchema.graphQLSchemaDirectives.resolve=ResolveDirectiveVisitor;class MockDirectiveVisitor extends(_utils.SchemaDirectiveVisitor){visitFieldDefinition(field){cov_f3c24ttms().f[4]++;cov_f3c24ttms().s[19]++;field.resolve=()=>{cov_f3c24ttms().f[5]++;cov_f3c24ttms().s[20]++;return this.args.with;};}}cov_f3c24ttms().s[21]++;parseGraphQLSchema.graphQLSchemaDirectives.mock=MockDirectiveVisitor;};cov_f3c24ttms().s[22]++;exports.load=load;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9HcmFwaFFML2xvYWRlcnMvc2NoZW1hRGlyZWN0aXZlcy5qcyJdLCJuYW1lcyI6WyJkZWZpbml0aW9ucyIsImxvYWQiLCJwYXJzZUdyYXBoUUxTY2hlbWEiLCJncmFwaFFMU2NoZW1hRGlyZWN0aXZlc0RlZmluaXRpb25zIiwiUmVzb2x2ZURpcmVjdGl2ZVZpc2l0b3IiLCJTY2hlbWFEaXJlY3RpdmVWaXNpdG9yIiwidmlzaXRGaWVsZERlZmluaXRpb24iLCJmaWVsZCIsInJlc29sdmUiLCJfc291cmNlIiwiYXJncyIsImNvbnRleHQiLCJjb25maWciLCJhdXRoIiwiaW5mbyIsImZ1bmN0aW9uTmFtZSIsIm5hbWUiLCJ0byIsIkZ1bmN0aW9uc1JvdXRlciIsImhhbmRsZUNsb3VkRnVuY3Rpb24iLCJwYXJhbXMiLCJib2R5IiwicmVzcG9uc2UiLCJyZXN1bHQiLCJlIiwiaGFuZGxlRXJyb3IiLCJncmFwaFFMU2NoZW1hRGlyZWN0aXZlcyIsIk1vY2tEaXJlY3RpdmVWaXNpdG9yIiwid2l0aCIsIm1vY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFdBQVcsR0FBRyx3QkFBSTtBQUMvQjtBQUNBO0FBQ0EsQ0FITzs7O0FBS1AsTUFBTUMsSUFBSSxHQUFHQyxrQkFBa0IsSUFBSTtBQUNqQ0EsRUFBQUEsa0JBQWtCLENBQUNDLGtDQUFuQixHQUF3REgsV0FBeEQ7O0FBRUEsUUFBTUksdUJBQU4sU0FBc0NDLDZCQUF0QyxDQUE2RDtBQUMzREMsSUFBQUEsb0JBQW9CLENBQUNDLEtBQUQsRUFBUTtBQUMxQkEsTUFBQUEsS0FBSyxDQUFDQyxPQUFOLEdBQWdCLE9BQU9DLE9BQVAsRUFBZ0JDLElBQWhCLEVBQXNCQyxPQUF0QixLQUFrQztBQUNoRCxZQUFJO0FBQ0YsZ0JBQU07QUFBRUMsWUFBQUEsTUFBRjtBQUFVQyxZQUFBQSxJQUFWO0FBQWdCQyxZQUFBQTtBQUFoQixjQUF5QkgsT0FBL0I7QUFFQSxjQUFJSSxZQUFZLEdBQUdSLEtBQUssQ0FBQ1MsSUFBekI7O0FBQ0EsY0FBSSxLQUFLTixJQUFMLENBQVVPLEVBQWQsRUFBa0I7QUFDaEJGLFlBQUFBLFlBQVksR0FBRyxLQUFLTCxJQUFMLENBQVVPLEVBQXpCO0FBQ0Q7O0FBRUQsaUJBQU8sQ0FDTCxNQUFNQyxpQ0FBZ0JDLG1CQUFoQixDQUFvQztBQUN4Q0MsWUFBQUEsTUFBTSxFQUFFO0FBQ05MLGNBQUFBO0FBRE0sYUFEZ0M7QUFJeENILFlBQUFBLE1BSndDO0FBS3hDQyxZQUFBQSxJQUx3QztBQU14Q0MsWUFBQUEsSUFOd0M7QUFPeENPLFlBQUFBLElBQUksRUFBRVg7QUFQa0MsV0FBcEMsQ0FERCxFQVVMWSxRQVZLLENBVUlDLE1BVlg7QUFXRCxTQW5CRCxDQW1CRSxPQUFPQyxDQUFQLEVBQVU7QUFDVnRCLFVBQUFBLGtCQUFrQixDQUFDdUIsV0FBbkIsQ0FBK0JELENBQS9CO0FBQ0Q7QUFDRixPQXZCRDtBQXdCRDs7QUExQjBEOztBQTZCN0R0QixFQUFBQSxrQkFBa0IsQ0FBQ3dCLHVCQUFuQixDQUEyQ2xCLE9BQTNDLEdBQXFESix1QkFBckQ7O0FBRUEsUUFBTXVCLG9CQUFOLFNBQW1DdEIsNkJBQW5DLENBQTBEO0FBQ3hEQyxJQUFBQSxvQkFBb0IsQ0FBQ0MsS0FBRCxFQUFRO0FBQzFCQSxNQUFBQSxLQUFLLENBQUNDLE9BQU4sR0FBZ0IsTUFBTTtBQUNwQixlQUFPLEtBQUtFLElBQUwsQ0FBVWtCLElBQWpCO0FBQ0QsT0FGRDtBQUdEOztBQUx1RDs7QUFRMUQxQixFQUFBQSxrQkFBa0IsQ0FBQ3dCLHVCQUFuQixDQUEyQ0csSUFBM0MsR0FBa0RGLG9CQUFsRDtBQUNELENBM0NEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7XG5pbXBvcnQgeyBTY2hlbWFEaXJlY3RpdmVWaXNpdG9yIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgRnVuY3Rpb25zUm91dGVyIH0gZnJvbSAnLi4vLi4vUm91dGVycy9GdW5jdGlvbnNSb3V0ZXInO1xuXG5leHBvcnQgY29uc3QgZGVmaW5pdGlvbnMgPSBncWxgXG4gIGRpcmVjdGl2ZSBAcmVzb2x2ZSh0bzogU3RyaW5nKSBvbiBGSUVMRF9ERUZJTklUSU9OXG4gIGRpcmVjdGl2ZSBAbW9jayh3aXRoOiBBbnkhKSBvbiBGSUVMRF9ERUZJTklUSU9OXG5gO1xuXG5jb25zdCBsb2FkID0gcGFyc2VHcmFwaFFMU2NoZW1hID0+IHtcbiAgcGFyc2VHcmFwaFFMU2NoZW1hLmdyYXBoUUxTY2hlbWFEaXJlY3RpdmVzRGVmaW5pdGlvbnMgPSBkZWZpbml0aW9ucztcblxuICBjbGFzcyBSZXNvbHZlRGlyZWN0aXZlVmlzaXRvciBleHRlbmRzIFNjaGVtYURpcmVjdGl2ZVZpc2l0b3Ige1xuICAgIHZpc2l0RmllbGREZWZpbml0aW9uKGZpZWxkKSB7XG4gICAgICBmaWVsZC5yZXNvbHZlID0gYXN5bmMgKF9zb3VyY2UsIGFyZ3MsIGNvbnRleHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGNvbmZpZywgYXV0aCwgaW5mbyB9ID0gY29udGV4dDtcblxuICAgICAgICAgIGxldCBmdW5jdGlvbk5hbWUgPSBmaWVsZC5uYW1lO1xuICAgICAgICAgIGlmICh0aGlzLmFyZ3MudG8pIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IHRoaXMuYXJncy50bztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgYXdhaXQgRnVuY3Rpb25zUm91dGVyLmhhbmRsZUNsb3VkRnVuY3Rpb24oe1xuICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbk5hbWUsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgYXV0aCxcbiAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgYm9keTogYXJncyxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKS5yZXNwb25zZS5yZXN1bHQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuaGFuZGxlRXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcGFyc2VHcmFwaFFMU2NoZW1hLmdyYXBoUUxTY2hlbWFEaXJlY3RpdmVzLnJlc29sdmUgPSBSZXNvbHZlRGlyZWN0aXZlVmlzaXRvcjtcblxuICBjbGFzcyBNb2NrRGlyZWN0aXZlVmlzaXRvciBleHRlbmRzIFNjaGVtYURpcmVjdGl2ZVZpc2l0b3Ige1xuICAgIHZpc2l0RmllbGREZWZpbml0aW9uKGZpZWxkKSB7XG4gICAgICBmaWVsZC5yZXNvbHZlID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hcmdzLndpdGg7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHBhcnNlR3JhcGhRTFNjaGVtYS5ncmFwaFFMU2NoZW1hRGlyZWN0aXZlcy5tb2NrID0gTW9ja0RpcmVjdGl2ZVZpc2l0b3I7XG59O1xuXG5leHBvcnQgeyBsb2FkIH07XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9HcmFwaFFML2xvYWRlcnMvc2NoZW1hRGlyZWN0aXZlcy5qcyJdLCJuYW1lcyI6WyJkZWZpbml0aW9ucyIsImxvYWQiLCJwYXJzZUdyYXBoUUxTY2hlbWEiLCJTY2hlbWFEaXJlY3RpdmVWaXNpdG9yIiwidmlzaXRGaWVsZERlZmluaXRpb24iLCJmaWVsZCIsImluZm8iLCJmdW5jdGlvbk5hbWUiLCJwYXJhbXMiLCJib2R5IiwiYXJncyJdLCJtYXBwaW5ncyI6InFxTkFJYUE7d09BSmIsR0FBQSxDQUFBLFdBQUEseUJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQSxNQUFBLHlCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsZ0JBQUEseUJBQUEsT0FBQSxDQUFBLCtCQUFBLENBQUEsQ0FBQSxDLGdQQUVPLEtBQU1BLENBQUFBLFdBQVcseUJBQUcsQ0FBQSxFQUFBLFdBQUEsQ0FBQSxPQUFBLENBQUk7QUFDL0I7QUFDQTtBQUZPLENBQWlCLENBQWpCLEMsOEVBS1AsS0FBTUMsQ0FBQUEsSUFBSSxDQUFHQyxrQkFBa0IsRUFBSSwrQ0FDakNBLGtCQUFrQixDQUFsQkEsa0NBQUFBLENBQUFBLFdBQUFBLENBRUEsS0FBQSxDQUFBLHVCQUFBLFNBQXNDQyxNQUFBQSxDQUF0QyxzQkFBQSxDQUE2RCxDQUMzREMsb0JBQW9CLENBQUEsS0FBQSxDQUFRLGdEQUMxQkMsS0FBSyxDQUFMQSxPQUFBQSxDQUFnQixNQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsT0FBQSxHQUFrQyxnREFDaEQsR0FBSSxDQUNGLEtBQU0sQ0FBQSxNQUFBLENBQUEsSUFBQSxDQUFnQkMsSUFBaEIsMkJBQU4sT0FBTSxDQUFOLENBRUEsR0FBSUMsQ0FBQUEsWUFBWSwwQkFBR0YsS0FBSyxDQUF4QixJQUFnQixDQUFoQixDQUhFLHdCQUlGLEdBQUksS0FBQSxJQUFBLENBQUosRUFBQSxDQUFrQixtREFDaEJFLFlBQVksQ0FBRyxLQUFBLElBQUEsQ0FBZkEsRUFBQUEsQ0FDRCxDQUZELGdDQUpFLHdCQVFGLE1BQU8sQ0FDTCxLQUFNLENBQUEsZ0JBQUEsQ0FBQSxlQUFBLENBQUEsbUJBQUEsQ0FBb0MsQ0FDeENDLE1BQU0sQ0FBRSxDQUNORCxZQURNLENBRGdDLENBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBT3hDRSxJQUFJLENBQUVDLElBUGtDLENBQXBDLENBREQsRUFBQSxRQUFBLENBQVAsTUFBQSxDQVJGLENBbUJFLE1BQUEsQ0FBQSxDQUFVLHlCQUNWUixrQkFBa0IsQ0FBbEJBLFdBQUFBLENBQUFBLENBQUFBLEVBQ0QsQ0F0QkhHLENBQUFBLENBd0JELENBMUIwRCxDQUg1Qix3QkFnQ2pDSCxrQkFBa0IsQ0FBbEJBLHVCQUFBQSxDQUFBQSxPQUFBQSxDQUFBQSx1QkFBQUEsQ0FFQSxLQUFBLENBQUEsb0JBQUEsU0FBbUNDLE1BQUFBLENBQW5DLHNCQUFBLENBQTBELENBQ3hEQyxvQkFBb0IsQ0FBQSxLQUFBLENBQVEsZ0RBQzFCQyxLQUFLLENBQUxBLE9BQUFBLENBQWdCLElBQU0sZ0RBQ3BCLE1BQU8sTUFBQSxJQUFBLENBQVAsSUFBQSxDQURGQSxDQUFBQSxDQUdELENBTHVELENBbEN6Qix3QkEwQ2pDSCxrQkFBa0IsQ0FBbEJBLHVCQUFBQSxDQUFBQSxJQUFBQSxDQUFBQSxvQkFBQUEsQ0ExQ0YsQ0FBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7XG5pbXBvcnQgeyBTY2hlbWFEaXJlY3RpdmVWaXNpdG9yIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgRnVuY3Rpb25zUm91dGVyIH0gZnJvbSAnLi4vLi4vUm91dGVycy9GdW5jdGlvbnNSb3V0ZXInO1xuXG5leHBvcnQgY29uc3QgZGVmaW5pdGlvbnMgPSBncWxgXG4gIGRpcmVjdGl2ZSBAcmVzb2x2ZSh0bzogU3RyaW5nKSBvbiBGSUVMRF9ERUZJTklUSU9OXG4gIGRpcmVjdGl2ZSBAbW9jayh3aXRoOiBBbnkhKSBvbiBGSUVMRF9ERUZJTklUSU9OXG5gO1xuXG5jb25zdCBsb2FkID0gcGFyc2VHcmFwaFFMU2NoZW1hID0+IHtcbiAgcGFyc2VHcmFwaFFMU2NoZW1hLmdyYXBoUUxTY2hlbWFEaXJlY3RpdmVzRGVmaW5pdGlvbnMgPSBkZWZpbml0aW9ucztcblxuICBjbGFzcyBSZXNvbHZlRGlyZWN0aXZlVmlzaXRvciBleHRlbmRzIFNjaGVtYURpcmVjdGl2ZVZpc2l0b3Ige1xuICAgIHZpc2l0RmllbGREZWZpbml0aW9uKGZpZWxkKSB7XG4gICAgICBmaWVsZC5yZXNvbHZlID0gYXN5bmMgKF9zb3VyY2UsIGFyZ3MsIGNvbnRleHQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGNvbmZpZywgYXV0aCwgaW5mbyB9ID0gY29udGV4dDtcblxuICAgICAgICAgIGxldCBmdW5jdGlvbk5hbWUgPSBmaWVsZC5uYW1lO1xuICAgICAgICAgIGlmICh0aGlzLmFyZ3MudG8pIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IHRoaXMuYXJncy50bztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgYXdhaXQgRnVuY3Rpb25zUm91dGVyLmhhbmRsZUNsb3VkRnVuY3Rpb24oe1xuICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbk5hbWUsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgYXV0aCxcbiAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgYm9keTogYXJncyxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKS5yZXNwb25zZS5yZXN1bHQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuaGFuZGxlRXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcGFyc2VHcmFwaFFMU2NoZW1hLmdyYXBoUUxTY2hlbWFEaXJlY3RpdmVzLnJlc29sdmUgPSBSZXNvbHZlRGlyZWN0aXZlVmlzaXRvcjtcblxuICBjbGFzcyBNb2NrRGlyZWN0aXZlVmlzaXRvciBleHRlbmRzIFNjaGVtYURpcmVjdGl2ZVZpc2l0b3Ige1xuICAgIHZpc2l0RmllbGREZWZpbml0aW9uKGZpZWxkKSB7XG4gICAgICBmaWVsZC5yZXNvbHZlID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hcmdzLndpdGg7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHBhcnNlR3JhcGhRTFNjaGVtYS5ncmFwaFFMU2NoZW1hRGlyZWN0aXZlcy5tb2NrID0gTW9ja0RpcmVjdGl2ZVZpc2l0b3I7XG59O1xuXG5leHBvcnQgeyBsb2FkIH07XG4iXX0=