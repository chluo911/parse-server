"use strict";function cov_1x1x4nkd57(){var path="/parse-server/lib/Controllers/UserController.js";var hash="53b3b6d12963421a030f35e530c20aaa7bdfac07";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Controllers/UserController.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:50}},"2":{start:{line:8,column:19},end:{line:8,column:44}},"3":{start:{line:10,column:16},end:{line:10,column:38}},"4":{start:{line:12,column:27},end:{line:12,column:83}},"5":{start:{line:14,column:19},end:{line:14,column:83}},"6":{start:{line:16,column:12},end:{line:16,column:54}},"7":{start:{line:18,column:12},end:{line:18,column:57}},"8":{start:{line:20,column:22},end:{line:20,column:74}},"9":{start:{line:22,column:14},end:{line:22,column:58}},"10":{start:{line:24,column:39},end:{line:24,column:93}},"11":{start:{line:26,column:16},end:{line:26,column:39}},"12":{start:{line:28,column:11},end:{line:28,column:29}},"13":{start:{line:32,column:4},end:{line:32,column:35}},"14":{start:{line:36,column:4},end:{line:36,column:43}},"15":{start:{line:41,column:4},end:{line:43,column:5}},"16":{start:{line:42,column:6},end:{line:42,column:13}},"17":{start:{line:45,column:4},end:{line:45,column:35}},"18":{start:{line:49,column:4},end:{line:49,column:32}},"19":{start:{line:53,column:4},end:{line:53,column:41}},"20":{start:{line:57,column:4},end:{line:64,column:5}},"21":{start:{line:58,column:6},end:{line:58,column:68}},"22":{start:{line:59,column:6},end:{line:59,column:33}},"23":{start:{line:61,column:6},end:{line:63,column:7}},"24":{start:{line:62,column:8},end:{line:62,column:117}},"25":{start:{line:68,column:4},end:{line:72,column:5}},"26":{start:{line:71,column:6},end:{line:71,column:22}},"27":{start:{line:74,column:18},end:{line:77,column:5}},"28":{start:{line:78,column:25},end:{line:83,column:5}},"29":{start:{line:86,column:4},end:{line:94,column:5}},"30":{start:{line:87,column:6},end:{line:87,column:34}},"31":{start:{line:88,column:6},end:{line:90,column:8}},"32":{start:{line:91,column:6},end:{line:93,column:8}},"33":{start:{line:96,column:23},end:{line:96,column:47}},"34":{start:{line:97,column:39},end:{line:99,column:6}},"35":{start:{line:100,column:4},end:{line:108,column:7}},"36":{start:{line:101,column:6},end:{line:105,column:7}},"37":{start:{line:102,column:8},end:{line:102,column:57}},"38":{start:{line:103,column:13},end:{line:105,column:7}},"39":{start:{line:104,column:8},end:{line:104,column:52}},"40":{start:{line:107,column:6},end:{line:107,column:89}},"41":{start:{line:112,column:4},end:{line:133,column:7}},"42":{start:{line:118,column:6},end:{line:120,column:7}},"43":{start:{line:119,column:8},end:{line:119,column:78}},"44":{start:{line:122,column:6},end:{line:130,column:7}},"45":{start:{line:123,column:26},end:{line:123,column:65}},"46":{start:{line:125,column:8},end:{line:127,column:9}},"47":{start:{line:126,column:10},end:{line:126,column:50}},"48":{start:{line:129,column:8},end:{line:129,column:82}},"49":{start:{line:129,column:38},end:{line:129,column:82}},"50":{start:{line:132,column:6},end:{line:132,column:24}},"51":{start:{line:137,column:4},end:{line:139,column:5}},"52":{start:{line:138,column:6},end:{line:138,column:35}},"53":{start:{line:141,column:16},end:{line:141,column:18}},"54":{start:{line:143,column:4},end:{line:145,column:5}},"55":{start:{line:144,column:6},end:{line:144,column:37}},"56":{start:{line:147,column:4},end:{line:149,column:5}},"57":{start:{line:148,column:6},end:{line:148,column:31}},"58":{start:{line:151,column:16},end:{line:151,column:84}},"59":{start:{line:152,column:4},end:{line:158,column:7}},"60":{start:{line:153,column:6},end:{line:155,column:7}},"61":{start:{line:154,column:8},end:{line:154,column:24}},"62":{start:{line:157,column:6},end:{line:157,column:31}},"63":{start:{line:162,column:4},end:{line:164,column:5}},"64":{start:{line:163,column:6},end:{line:163,column:13}},"65":{start:{line:166,column:18},end:{line:166,column:62}},"66":{start:{line:168,column:4},end:{line:182,column:7}},"67":{start:{line:169,column:23},end:{line:169,column:56}},"68":{start:{line:170,column:19},end:{line:170,column:91}},"69":{start:{line:171,column:22},end:{line:175,column:7}},"70":{start:{line:177,column:6},end:{line:181,column:7}},"71":{start:{line:178,column:8},end:{line:178,column:52}},"72":{start:{line:180,column:8},end:{line:180,column:70}},"73":{start:{line:195,column:8},end:{line:195,column:12}},"74":{start:{line:198,column:8},end:{line:198,column:12}},"75":{start:{line:200,column:4},end:{line:202,column:5}},"76":{start:{line:201,column:6},end:{line:201,column:74}},"77":{start:{line:204,column:4},end:{line:206,column:5}},"78":{start:{line:205,column:6},end:{line:205,column:31}},"79":{start:{line:208,column:4},end:{line:208,column:35}},"80":{start:{line:209,column:4},end:{line:211,column:13}},"81":{start:{line:215,column:4},end:{line:225,column:7}},"82":{start:{line:218,column:6},end:{line:220,column:7}},"83":{start:{line:219,column:8},end:{line:219,column:24}},"84":{start:{line:222,column:6},end:{line:224,column:9}},"85":{start:{line:223,column:8},end:{line:223,column:42}},"86":{start:{line:229,column:18},end:{line:231,column:5}},"87":{start:{line:233,column:4},end:{line:235,column:5}},"88":{start:{line:234,column:6},end:{line:234,column:116}},"89":{start:{line:237,column:4},end:{line:246,column:24}},"90":{start:{line:250,column:4},end:{line:252,column:5}},"91":{start:{line:251,column:6},end:{line:251,column:68}},"92":{start:{line:256,column:4},end:{line:287,column:5}},"93":{start:{line:257,column:22},end:{line:274,column:8}},"94":{start:{line:276,column:6},end:{line:286,column:7}},"95":{start:{line:277,column:26},end:{line:277,column:65}},"96":{start:{line:279,column:8},end:{line:281,column:9}},"97":{start:{line:280,column:10},end:{line:280,column:50}},"98":{start:{line:283,column:8},end:{line:285,column:9}},"99":{start:{line:284,column:10},end:{line:284,column:28}},"100":{start:{line:289,column:4},end:{line:291,column:5}},"101":{start:{line:290,column:6},end:{line:290,column:53}},"102":{start:{line:293,column:18},end:{line:293,column:60}},"103":{start:{line:294,column:21},end:{line:294,column:54}},"104":{start:{line:295,column:17},end:{line:295,column:98}},"105":{start:{line:296,column:20},end:{line:300,column:5}},"106":{start:{line:302,column:4},end:{line:306,column:5}},"107":{start:{line:303,column:6},end:{line:303,column:51}},"108":{start:{line:305,column:6},end:{line:305,column:69}},"109":{start:{line:308,column:4},end:{line:308,column:33}},"110":{start:{line:312,column:4},end:{line:322,column:7}},"111":{start:{line:312,column:70},end:{line:312,column:117}},"112":{start:{line:313,column:35},end:{line:313,column:81}},"113":{start:{line:314,column:6},end:{line:314,column:50}},"114":{start:{line:316,column:6},end:{line:321,column:7}},"115":{start:{line:318,column:8},end:{line:318,column:45}},"116":{start:{line:320,column:8},end:{line:320,column:37}},"117":{start:{line:330,column:17},end:{line:330,column:175}},"118":{start:{line:331,column:15},end:{line:331,column:32}},"119":{start:{line:332,column:20},end:{line:332,column:62}},"120":{start:{line:333,column:4},end:{line:337,column:6}},"121":{start:{line:345,column:17},end:{line:345,column:219}},"122":{start:{line:346,column:15},end:{line:346,column:56}},"123":{start:{line:347,column:20},end:{line:347,column:51}},"124":{start:{line:348,column:4},end:{line:352,column:6}},"125":{start:{line:358,column:0},end:{line:358,column:40}},"126":{start:{line:361,column:2},end:{line:365,column:22}},"127":{start:{line:365,column:16},end:{line:365,column:20}},"128":{start:{line:369,column:27},end:{line:369,column:64}},"129":{start:{line:371,column:2},end:{line:376,column:3}},"130":{start:{line:372,column:35},end:{line:372,column:82}},"131":{start:{line:373,column:4},end:{line:373,column:108}},"132":{start:{line:375,column:4},end:{line:375,column:48}},"133":{start:{line:379,column:15},end:{line:379,column:29}},"134":{start:{line:380,column:0},end:{line:380,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:24,column:9},end:{line:24,column:31}},loc:{start:{line:24,column:37},end:{line:24,column:95}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:44},end:{line:33,column:3}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:15},end:{line:37,column:3}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:27},end:{line:46,column:3}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:24},end:{line:50,column:3}},line:48},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:2},end:{line:52,column:3}},loc:{start:{line:52,column:27},end:{line:54,column:3}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:56,column:2},end:{line:56,column:3}},loc:{start:{line:56,column:28},end:{line:65,column:3}},line:56},"7":{name:"(anonymous_7)",decl:{start:{line:67,column:2},end:{line:67,column:3}},loc:{start:{line:67,column:31},end:{line:109,column:3}},line:67},"8":{name:"(anonymous_8)",decl:{start:{line:100,column:55},end:{line:100,column:56}},loc:{start:{line:100,column:65},end:{line:108,column:5}},line:100},"9":{name:"(anonymous_9)",decl:{start:{line:111,column:2},end:{line:111,column:3}},loc:{start:{line:111,column:43},end:{line:134,column:3}},line:111},"10":{name:"(anonymous_10)",decl:{start:{line:117,column:12},end:{line:117,column:13}},loc:{start:{line:117,column:23},end:{line:133,column:5}},line:117},"11":{name:"(anonymous_11)",decl:{start:{line:136,column:2},end:{line:136,column:3}},loc:{start:{line:136,column:24},end:{line:159,column:3}},line:136},"12":{name:"(anonymous_12)",decl:{start:{line:152,column:32},end:{line:152,column:33}},loc:{start:{line:152,column:50},end:{line:158,column:5}},line:152},"13":{name:"(anonymous_13)",decl:{start:{line:161,column:2},end:{line:161,column:3}},loc:{start:{line:161,column:30},end:{line:183,column:3}},line:161},"14":{name:"(anonymous_14)",decl:{start:{line:168,column:36},end:{line:168,column:37}},loc:{start:{line:168,column:44},end:{line:182,column:5}},line:168},"15":{name:"(anonymous_15)",decl:{start:{line:192,column:2},end:{line:192,column:3}},loc:{start:{line:192,column:35},end:{line:212,column:3}},line:192},"16":{name:"(anonymous_16)",decl:{start:{line:214,column:2},end:{line:214,column:3}},loc:{start:{line:214,column:36},end:{line:226,column:3}},line:214},"17":{name:"(anonymous_17)",decl:{start:{line:217,column:12},end:{line:217,column:13}},loc:{start:{line:217,column:21},end:{line:225,column:5}},line:217},"18":{name:"(anonymous_18)",decl:{start:{line:222,column:57},end:{line:222,column:58}},loc:{start:{line:222,column:63},end:{line:224,column:7}},line:222},"19":{name:"(anonymous_19)",decl:{start:{line:228,column:2},end:{line:228,column:3}},loc:{start:{line:228,column:31},end:{line:247,column:3}},line:228},"20":{name:"(anonymous_20)",decl:{start:{line:249,column:2},end:{line:249,column:3}},loc:{start:{line:249,column:38},end:{line:309,column:3}},line:249},"21":{name:"(anonymous_21)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:44},end:{line:323,column:3}},line:311},"22":{name:"(anonymous_22)",decl:{start:{line:312,column:62},end:{line:312,column:63}},loc:{start:{line:312,column:70},end:{line:312,column:117}},line:312},"23":{name:"(anonymous_23)",decl:{start:{line:312,column:124},end:{line:312,column:125}},loc:{start:{line:312,column:132},end:{line:315,column:5}},line:312},"24":{name:"(anonymous_24)",decl:{start:{line:315,column:13},end:{line:315,column:14}},loc:{start:{line:315,column:22},end:{line:322,column:5}},line:315},"25":{name:"(anonymous_25)",decl:{start:{line:325,column:2},end:{line:325,column:3}},loc:{start:{line:329,column:5},end:{line:338,column:3}},line:329},"26":{name:"(anonymous_26)",decl:{start:{line:340,column:2},end:{line:340,column:3}},loc:{start:{line:344,column:5},end:{line:353,column:3}},line:344},"27":{name:"updateUserPassword",decl:{start:{line:360,column:9},end:{line:360,column:27}},loc:{start:{line:360,column:52},end:{line:366,column:1}},line:360},"28":{name:"(anonymous_28)",decl:{start:{line:365,column:10},end:{line:365,column:11}},loc:{start:{line:365,column:16},end:{line:365,column:20}},line:365},"29":{name:"buildEmailLink",decl:{start:{line:368,column:9},end:{line:368,column:23}},loc:{start:{line:368,column:62},end:{line:377,column:1}},line:368}},branchMap:{"0":{loc:{start:{line:24,column:46},end:{line:24,column:92}},type:"cond-expr",locations:[{start:{line:24,column:70},end:{line:24,column:73}},{start:{line:24,column:76},end:{line:24,column:92}}],line:24},"1":{loc:{start:{line:24,column:46},end:{line:24,column:67}},type:"binary-expr",locations:[{start:{line:24,column:46},end:{line:24,column:49}},{start:{line:24,column:53},end:{line:24,column:67}}],line:24},"2":{loc:{start:{line:31,column:30},end:{line:31,column:42}},type:"default-arg",locations:[{start:{line:31,column:40},end:{line:31,column:42}}],line:31},"3":{loc:{start:{line:41,column:4},end:{line:43,column:5}},type:"if",locations:[{start:{line:41,column:4},end:{line:43,column:5}},{start:{line:41,column:4},end:{line:43,column:5}}],line:41},"4":{loc:{start:{line:41,column:8},end:{line:41,column:44}},type:"binary-expr",locations:[{start:{line:41,column:8},end:{line:41,column:16}},{start:{line:41,column:20},end:{line:41,column:44}}],line:41},"5":{loc:{start:{line:57,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:64,column:5}},{start:{line:57,column:4},end:{line:64,column:5}}],line:57},"6":{loc:{start:{line:61,column:6},end:{line:63,column:7}},type:"if",locations:[{start:{line:61,column:6},end:{line:63,column:7}},{start:{line:61,column:6},end:{line:63,column:7}}],line:61},"7":{loc:{start:{line:68,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:68,column:4},end:{line:72,column:5}},{start:{line:68,column:4},end:{line:72,column:5}}],line:68},"8":{loc:{start:{line:86,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:86,column:4},end:{line:94,column:5}},{start:{line:86,column:4},end:{line:94,column:5}}],line:86},"9":{loc:{start:{line:101,column:6},end:{line:105,column:7}},type:"if",locations:[{start:{line:101,column:6},end:{line:105,column:7}},{start:{line:101,column:6},end:{line:105,column:7}}],line:101},"10":{loc:{start:{line:101,column:10},end:{line:101,column:66}},type:"binary-expr",locations:[{start:{line:101,column:10},end:{line:101,column:31}},{start:{line:101,column:35},end:{line:101,column:66}}],line:101},"11":{loc:{start:{line:103,column:13},end:{line:105,column:7}},type:"if",locations:[{start:{line:103,column:13},end:{line:105,column:7}},{start:{line:103,column:13},end:{line:105,column:7}}],line:103},"12":{loc:{start:{line:118,column:6},end:{line:120,column:7}},type:"if",locations:[{start:{line:118,column:6},end:{line:120,column:7}},{start:{line:118,column:6},end:{line:120,column:7}}],line:118},"13":{loc:{start:{line:122,column:6},end:{line:130,column:7}},type:"if",locations:[{start:{line:122,column:6},end:{line:130,column:7}},{start:{line:122,column:6},end:{line:130,column:7}}],line:122},"14":{loc:{start:{line:122,column:10},end:{line:122,column:93}},type:"binary-expr",locations:[{start:{line:122,column:10},end:{line:122,column:36}},{start:{line:122,column:40},end:{line:122,column:93}}],line:122},"15":{loc:{start:{line:125,column:8},end:{line:127,column:9}},type:"if",locations:[{start:{line:125,column:8},end:{line:127,column:9}},{start:{line:125,column:8},end:{line:127,column:9}}],line:125},"16":{loc:{start:{line:125,column:12},end:{line:125,column:55}},type:"binary-expr",locations:[{start:{line:125,column:12},end:{line:125,column:23}},{start:{line:125,column:27},end:{line:125,column:55}}],line:125},"17":{loc:{start:{line:129,column:8},end:{line:129,column:82}},type:"if",locations:[{start:{line:129,column:8},end:{line:129,column:82}},{start:{line:129,column:8},end:{line:129,column:82}}],line:129},"18":{loc:{start:{line:137,column:4},end:{line:139,column:5}},type:"if",locations:[{start:{line:137,column:4},end:{line:139,column:5}},{start:{line:137,column:4},end:{line:139,column:5}}],line:137},"19":{loc:{start:{line:137,column:8},end:{line:137,column:35}},type:"binary-expr",locations:[{start:{line:137,column:8},end:{line:137,column:21}},{start:{line:137,column:25},end:{line:137,column:35}}],line:137},"20":{loc:{start:{line:143,column:4},end:{line:145,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:145,column:5}},{start:{line:143,column:4},end:{line:145,column:5}}],line:143},"21":{loc:{start:{line:147,column:4},end:{line:149,column:5}},type:"if",locations:[{start:{line:147,column:4},end:{line:149,column:5}},{start:{line:147,column:4},end:{line:149,column:5}}],line:147},"22":{loc:{start:{line:153,column:6},end:{line:155,column:7}},type:"if",locations:[{start:{line:153,column:6},end:{line:155,column:7}},{start:{line:153,column:6},end:{line:155,column:7}}],line:153},"23":{loc:{start:{line:162,column:4},end:{line:164,column:5}},type:"if",locations:[{start:{line:162,column:4},end:{line:164,column:5}},{start:{line:162,column:4},end:{line:164,column:5}}],line:162},"24":{loc:{start:{line:177,column:6},end:{line:181,column:7}},type:"if",locations:[{start:{line:177,column:6},end:{line:181,column:7}},{start:{line:177,column:6},end:{line:181,column:7}}],line:177},"25":{loc:{start:{line:200,column:4},end:{line:202,column:5}},type:"if",locations:[{start:{line:200,column:4},end:{line:202,column:5}},{start:{line:200,column:4},end:{line:202,column:5}}],line:200},"26":{loc:{start:{line:200,column:8},end:{line:200,column:90}},type:"binary-expr",locations:[{start:{line:200,column:8},end:{line:200,column:38}},{start:{line:200,column:42},end:{line:200,column:90}}],line:200},"27":{loc:{start:{line:204,column:4},end:{line:206,column:5}},type:"if",locations:[{start:{line:204,column:4},end:{line:206,column:5}},{start:{line:204,column:4},end:{line:206,column:5}}],line:204},"28":{loc:{start:{line:204,column:8},end:{line:204,column:176}},type:"binary-expr",locations:[{start:{line:204,column:8},end:{line:204,column:48}},{start:{line:204,column:52},end:{line:204,column:96}},{start:{line:204,column:100},end:{line:204,column:119}},{start:{line:204,column:123},end:{line:204,column:176}}],line:204},"29":{loc:{start:{line:218,column:6},end:{line:220,column:7}},type:"if",locations:[{start:{line:218,column:6},end:{line:220,column:7}},{start:{line:218,column:6},end:{line:220,column:7}}],line:218},"30":{loc:{start:{line:218,column:10},end:{line:218,column:39}},type:"binary-expr",locations:[{start:{line:218,column:10},end:{line:218,column:16}},{start:{line:218,column:20},end:{line:218,column:39}}],line:218},"31":{loc:{start:{line:233,column:4},end:{line:235,column:5}},type:"if",locations:[{start:{line:233,column:4},end:{line:235,column:5}},{start:{line:233,column:4},end:{line:235,column:5}}],line:233},"32":{loc:{start:{line:233,column:8},end:{line:233,column:91}},type:"binary-expr",locations:[{start:{line:233,column:8},end:{line:233,column:34}},{start:{line:233,column:38},end:{line:233,column:91}}],line:233},"33":{loc:{start:{line:250,column:4},end:{line:252,column:5}},type:"if",locations:[{start:{line:250,column:4},end:{line:252,column:5}},{start:{line:250,column:4},end:{line:252,column:5}}],line:250},"34":{loc:{start:{line:256,column:4},end:{line:287,column:5}},type:"if",locations:[{start:{line:256,column:4},end:{line:287,column:5}},{start:{line:256,column:4},end:{line:287,column:5}}],line:256},"35":{loc:{start:{line:256,column:8},end:{line:256,column:144}},type:"binary-expr",locations:[{start:{line:256,column:8},end:{line:256,column:34}},{start:{line:256,column:38},end:{line:256,column:87}},{start:{line:256,column:91},end:{line:256,column:144}}],line:256},"36":{loc:{start:{line:276,column:6},end:{line:286,column:7}},type:"if",locations:[{start:{line:276,column:6},end:{line:286,column:7}},{start:{line:276,column:6},end:{line:286,column:7}}],line:276},"37":{loc:{start:{line:279,column:8},end:{line:281,column:9}},type:"if",locations:[{start:{line:279,column:8},end:{line:281,column:9}},{start:{line:279,column:8},end:{line:281,column:9}}],line:279},"38":{loc:{start:{line:279,column:12},end:{line:279,column:55}},type:"binary-expr",locations:[{start:{line:279,column:12},end:{line:279,column:23}},{start:{line:279,column:27},end:{line:279,column:55}}],line:279},"39":{loc:{start:{line:283,column:8},end:{line:285,column:9}},type:"if",locations:[{start:{line:283,column:8},end:{line:285,column:9}},{start:{line:283,column:8},end:{line:285,column:9}}],line:283},"40":{loc:{start:{line:289,column:4},end:{line:291,column:5}},type:"if",locations:[{start:{line:289,column:4},end:{line:291,column:5}},{start:{line:289,column:4},end:{line:291,column:5}}],line:289},"41":{loc:{start:{line:289,column:8},end:{line:289,column:40}},type:"binary-expr",locations:[{start:{line:289,column:8},end:{line:289,column:13}},{start:{line:289,column:17},end:{line:289,column:40}}],line:289},"42":{loc:{start:{line:302,column:4},end:{line:306,column:5}},type:"if",locations:[{start:{line:302,column:4},end:{line:306,column:5}},{start:{line:302,column:4},end:{line:306,column:5}}],line:302},"43":{loc:{start:{line:316,column:6},end:{line:321,column:7}},type:"if",locations:[{start:{line:316,column:6},end:{line:321,column:7}},{start:{line:316,column:6},end:{line:321,column:7}}],line:316},"44":{loc:{start:{line:316,column:10},end:{line:316,column:32}},type:"binary-expr",locations:[{start:{line:316,column:10},end:{line:316,column:15}},{start:{line:316,column:19},end:{line:316,column:32}}],line:316},"45":{loc:{start:{line:345,column:86},end:{line:345,column:166}},type:"cond-expr",locations:[{start:{line:345,column:109},end:{line:345,column:161}},{start:{line:345,column:164},end:{line:345,column:166}}],line:345},"46":{loc:{start:{line:346,column:15},end:{line:346,column:56}},type:"binary-expr",locations:[{start:{line:346,column:15},end:{line:346,column:32}},{start:{line:346,column:36},end:{line:346,column:56}}],line:346},"47":{loc:{start:{line:371,column:2},end:{line:376,column:3}},type:"if",locations:[{start:{line:371,column:2},end:{line:376,column:3}},{start:{line:371,column:2},end:{line:376,column:3}}],line:371}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},b:{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},inputSourceMap:{version:3,sources:["../../src/Controllers/UserController.js"],names:["RestQuery","require","Auth","UserController","AdaptableController","constructor","adapter","appId","options","config","Config","get","validateAdapter","shouldVerifyEmails","expectedAdapterType","MailAdapter","verifyUserEmails","setEmailVerifyToken","user","_email_verify_token","emailVerified","emailVerifyTokenValidityDuration","_email_verify_token_expires_at","Parse","_encode","generateEmailVerifyTokenExpiresAt","verifyEmail","username","token","undefined","query","updateFields","__op","$gt","Date","masterAuth","master","findUserForEmailVerification","execute","then","result","results","length","Promise","resolve","objectId","rest","update","checkResetTokenValidity","database","find","_perishable_token","limit","passwordPolicy","resetTokenValidityDuration","expiresDate","_perishable_token_expires_at","__type","iso","getUserIfNeeded","email","where","sendVerificationEmail","encodeURIComponent","link","buildEmailLink","verifyEmailURL","appName","sendMail","defaultVerificationEmail","regenerateEmailVerifyToken","emailVerifyTokenReuseIfValid","resendVerificationEmail","aUser","setPasswordResetToken","generatePasswordResetTokenExpiresAt","$or","$exists","sendPasswordResetEmail","resetTokenReuseIfValid","requestResetPasswordURL","defaultResetPasswordEmail","updatePassword","password","updateUserPassword","accountLockoutPolicy","AccountLockout","unlockAccount","catch","error","message","reject","text","to","subject","destination","usernameAndToken","parseFrameURL","destinationWithoutHost","replace","publicServerURL"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AAEO,MAAME,cAAN,SAA6BC,4BAA7B,CAAiD;AACtDC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAO,GAAG,EAA3B,EAA+B;AACxC,UAAMF,OAAN,EAAeC,KAAf,EAAsBC,OAAtB;AACD;;AAES,MAANC,MAAM,GAAG;AACX,WAAOC,gBAAOC,GAAP,CAAW,KAAKJ,KAAhB,CAAP;AACD;;AAEDK,EAAAA,eAAe,CAACN,OAAD,EAAU;AACvB;AACA,QAAI,CAACA,OAAD,IAAY,CAAC,KAAKO,kBAAtB,EAA0C;AACxC;AACD;;AACD,UAAMD,eAAN,CAAsBN,OAAtB;AACD;;AAEDQ,EAAAA,mBAAmB,GAAG;AACpB,WAAOC,oBAAP;AACD;;AAEqB,MAAlBF,kBAAkB,GAAG;AACvB,WAAO,KAAKL,OAAL,CAAaQ,gBAApB;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAAO;AACxB,QAAI,KAAKL,kBAAT,EAA6B;AAC3BK,MAAAA,IAAI,CAACC,mBAAL,GAA2B,+BAAa,EAAb,CAA3B;AACAD,MAAAA,IAAI,CAACE,aAAL,GAAqB,KAArB;;AAEA,UAAI,KAAKX,MAAL,CAAYY,gCAAhB,EAAkD;AAChDH,QAAAA,IAAI,CAACI,8BAAL,GAAsCC,cAAMC,OAAN,CACpC,KAAKf,MAAL,CAAYgB,iCAAZ,EADoC,CAAtC;AAGD;AACF;AACF;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;AAC3B,QAAI,CAAC,KAAKf,kBAAV,EAA8B;AAC5B;AACA;AACA,YAAMgB,SAAN;AACD;;AAED,UAAMC,KAAK,GAAG;AAAEH,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBR,MAAAA,mBAAmB,EAAES;AAA3C,KAAd;AACA,UAAMG,YAAY,GAAG;AACnBX,MAAAA,aAAa,EAAE,IADI;AAEnBD,MAAAA,mBAAmB,EAAE;AAAEa,QAAAA,IAAI,EAAE;AAAR;AAFF,KAArB,CAR2B,CAa3B;AACA;;AACA,QAAI,KAAKvB,MAAL,CAAYY,gCAAhB,EAAkD;AAChDS,MAAAA,KAAK,CAACV,aAAN,GAAsB,KAAtB;AACAU,MAAAA,KAAK,CAACR,8BAAN,GAAuC;AAAEW,QAAAA,GAAG,EAAEV,cAAMC,OAAN,CAAc,IAAIU,IAAJ,EAAd;AAAP,OAAvC;AAEAH,MAAAA,YAAY,CAACT,8BAAb,GAA8C;AAAEU,QAAAA,IAAI,EAAE;AAAR,OAA9C;AACD;;AACD,UAAMG,UAAU,GAAGjC,IAAI,CAACkC,MAAL,CAAY,KAAK3B,MAAjB,CAAnB;AACA,QAAI4B,4BAA4B,GAAG,IAAIrC,SAAJ,CACjC,KAAKS,MAD4B,EAEjCP,IAAI,CAACkC,MAAL,CAAY,KAAK3B,MAAjB,CAFiC,EAGjC,OAHiC,EAIjC;AAAEkB,MAAAA,QAAQ,EAAEA;AAAZ,KAJiC,CAAnC;AAMA,WAAOU,4BAA4B,CAACC,OAA7B,GAAuCC,IAAvC,CAA4CC,MAAM,IAAI;AAC3D,UAAIA,MAAM,CAACC,OAAP,CAAeC,MAAf,IAAyBF,MAAM,CAACC,OAAP,CAAe,CAAf,EAAkBrB,aAA/C,EAA8D;AAC5D,eAAOuB,OAAO,CAACC,OAAR,CAAgBJ,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsB,CAAtB,CAAhB,CAAP;AACD,OAFD,MAEO,IAAIF,MAAM,CAACC,OAAP,CAAeC,MAAnB,EAA2B;AAChCZ,QAAAA,KAAK,CAACe,QAAN,GAAiBL,MAAM,CAACC,OAAP,CAAe,CAAf,EAAkBI,QAAnC;AACD;;AACD,aAAOC,cAAKC,MAAL,CAAY,KAAKtC,MAAjB,EAAyB0B,UAAzB,EAAqC,OAArC,EAA8CL,KAA9C,EAAqDC,YAArD,CAAP;AACD,KAPM,CAAP;AAQD;;AAEDiB,EAAAA,uBAAuB,CAACrB,QAAD,EAAWC,KAAX,EAAkB;AACvC,WAAO,KAAKnB,MAAL,CAAYwC,QAAZ,CACJC,IADI,CAEH,OAFG,EAGH;AACEvB,MAAAA,QAAQ,EAAEA,QADZ;AAEEwB,MAAAA,iBAAiB,EAAEvB;AAFrB,KAHG,EAOH;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KAPG,EASJb,IATI,CASCE,OAAO,IAAI;AACf,UAAIA,OAAO,CAACC,MAAR,IAAkB,CAAtB,EAAyB;AACvB,cAAM,+DAAN;AACD;;AAED,UAAI,KAAKjC,MAAL,CAAY4C,cAAZ,IAA8B,KAAK5C,MAAL,CAAY4C,cAAZ,CAA2BC,0BAA7D,EAAyF;AACvF,YAAIC,WAAW,GAAGd,OAAO,CAAC,CAAD,CAAP,CAAWe,4BAA7B;;AACA,YAAID,WAAW,IAAIA,WAAW,CAACE,MAAZ,IAAsB,MAAzC,EAAiD;AAC/CF,UAAAA,WAAW,GAAG,IAAIrB,IAAJ,CAASqB,WAAW,CAACG,GAArB,CAAd;AACD;;AACD,YAAIH,WAAW,GAAG,IAAIrB,IAAJ,EAAlB,EAA8B,MAAM,qCAAN;AAC/B;;AACD,aAAOO,OAAO,CAAC,CAAD,CAAd;AACD,KAtBI,CAAP;AAuBD;;AAEDkB,EAAAA,eAAe,CAACzC,IAAD,EAAO;AACpB,QAAIA,IAAI,CAACS,QAAL,IAAiBT,IAAI,CAAC0C,KAA1B,EAAiC;AAC/B,aAAOjB,OAAO,CAACC,OAAR,CAAgB1B,IAAhB,CAAP;AACD;;AACD,QAAI2C,KAAK,GAAG,EAAZ;;AACA,QAAI3C,IAAI,CAACS,QAAT,EAAmB;AACjBkC,MAAAA,KAAK,CAAClC,QAAN,GAAiBT,IAAI,CAACS,QAAtB;AACD;;AACD,QAAIT,IAAI,CAAC0C,KAAT,EAAgB;AACdC,MAAAA,KAAK,CAACD,KAAN,GAAc1C,IAAI,CAAC0C,KAAnB;AACD;;AAED,QAAI9B,KAAK,GAAG,IAAI9B,SAAJ,CAAc,KAAKS,MAAnB,EAA2BP,IAAI,CAACkC,MAAL,CAAY,KAAK3B,MAAjB,CAA3B,EAAqD,OAArD,EAA8DoD,KAA9D,CAAZ;AACA,WAAO/B,KAAK,CAACQ,OAAN,GAAgBC,IAAhB,CAAqB,UAAUC,MAAV,EAAkB;AAC5C,UAAIA,MAAM,CAACC,OAAP,CAAeC,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,cAAMb,SAAN;AACD;;AACD,aAAOW,MAAM,CAACC,OAAP,CAAe,CAAf,CAAP;AACD,KALM,CAAP;AAMD;;AAEDqB,EAAAA,qBAAqB,CAAC5C,IAAD,EAAO;AAC1B,QAAI,CAAC,KAAKL,kBAAV,EAA8B;AAC5B;AACD;;AACD,UAAMe,KAAK,GAAGmC,kBAAkB,CAAC7C,IAAI,CAACC,mBAAN,CAAhC,CAJ0B,CAK1B;;AACA,SAAKwC,eAAL,CAAqBzC,IAArB,EAA2BqB,IAA3B,CAAgCrB,IAAI,IAAI;AACtC,YAAMS,QAAQ,GAAGoC,kBAAkB,CAAC7C,IAAI,CAACS,QAAN,CAAnC;AAEA,YAAMqC,IAAI,GAAGC,cAAc,CAAC,KAAKxD,MAAL,CAAYyD,cAAb,EAA6BvC,QAA7B,EAAuCC,KAAvC,EAA8C,KAAKnB,MAAnD,CAA3B;AACA,YAAMD,OAAO,GAAG;AACd2D,QAAAA,OAAO,EAAE,KAAK1D,MAAL,CAAY0D,OADP;AAEdH,QAAAA,IAAI,EAAEA,IAFQ;AAGd9C,QAAAA,IAAI,EAAE,uBAAQ,OAAR,EAAiBA,IAAjB;AAHQ,OAAhB;;AAKA,UAAI,KAAKZ,OAAL,CAAawD,qBAAjB,EAAwC;AACtC,aAAKxD,OAAL,CAAawD,qBAAb,CAAmCtD,OAAnC;AACD,OAFD,MAEO;AACL,aAAKF,OAAL,CAAa8D,QAAb,CAAsB,KAAKC,wBAAL,CAA8B7D,OAA9B,CAAtB;AACD;AACF,KAdD;AAeD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE8D,EAAAA,0BAA0B,CAACpD,IAAD,EAAO;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAA0BD,IAAhC;AACA,QAAI;AAAEI,MAAAA;AAAF,QAAqCJ,IAAzC;;AACA,QAAII,8BAA8B,IAAIA,8BAA8B,CAACmC,MAA/B,KAA0C,MAAhF,EAAwF;AACtFnC,MAAAA,8BAA8B,GAAGA,8BAA8B,CAACoC,GAAhE;AACD;;AACD,QACE,KAAKjD,MAAL,CAAY8D,4BAAZ,IACA,KAAK9D,MAAL,CAAYY,gCADZ,IAEAF,mBAFA,IAGA,IAAIe,IAAJ,KAAa,IAAIA,IAAJ,CAASZ,8BAAT,CAJf,EAKE;AACA,aAAOqB,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,SAAK3B,mBAAL,CAAyBC,IAAzB;AACA,WAAO,KAAKT,MAAL,CAAYwC,QAAZ,CAAqBF,MAArB,CAA4B,OAA5B,EAAqC;AAAEpB,MAAAA,QAAQ,EAAET,IAAI,CAACS;AAAjB,KAArC,EAAkET,IAAlE,CAAP;AACD;;AAEDsD,EAAAA,uBAAuB,CAAC7C,QAAD,EAAW;AAChC,WAAO,KAAKgC,eAAL,CAAqB;AAAEhC,MAAAA,QAAQ,EAAEA;AAAZ,KAArB,EAA6CY,IAA7C,CAAkDkC,KAAK,IAAI;AAChE,UAAI,CAACA,KAAD,IAAUA,KAAK,CAACrD,aAApB,EAAmC;AACjC,cAAMS,SAAN;AACD;;AACD,aAAO,KAAKyC,0BAAL,CAAgCG,KAAhC,EAAuClC,IAAvC,CAA4C,MAAM;AACvD,aAAKuB,qBAAL,CAA2BW,KAA3B;AACD,OAFM,CAAP;AAGD,KAPM,CAAP;AAQD;;AAEDC,EAAAA,qBAAqB,CAACd,KAAD,EAAQ;AAC3B,UAAMhC,KAAK,GAAG;AAAEuB,MAAAA,iBAAiB,EAAE,+BAAa,EAAb;AAArB,KAAd;;AAEA,QAAI,KAAK1C,MAAL,CAAY4C,cAAZ,IAA8B,KAAK5C,MAAL,CAAY4C,cAAZ,CAA2BC,0BAA7D,EAAyF;AACvF1B,MAAAA,KAAK,CAAC4B,4BAAN,GAAqCjC,cAAMC,OAAN,CACnC,KAAKf,MAAL,CAAYkE,mCAAZ,EADmC,CAArC;AAGD;;AAED,WAAO,KAAKlE,MAAL,CAAYwC,QAAZ,CAAqBF,MAArB,CACL,OADK,EAEL;AAAE6B,MAAAA,GAAG,EAAE,CAAC;AAAEhB,QAAAA;AAAF,OAAD,EAAY;AAAEjC,QAAAA,QAAQ,EAAEiC,KAAZ;AAAmBA,QAAAA,KAAK,EAAE;AAAEiB,UAAAA,OAAO,EAAE;AAAX;AAA1B,OAAZ;AAAP,KAFK,EAGLjD,KAHK,EAIL,EAJK,EAKL,IALK,CAAP;AAOD;;AAE2B,QAAtBkD,sBAAsB,CAAClB,KAAD,EAAQ;AAClC,QAAI,CAAC,KAAKtD,OAAV,EAAmB;AACjB,YAAM,uDAAN,CADiB,CAEjB;AACD;;AACD,QAAIY,IAAJ;;AACA,QACE,KAAKT,MAAL,CAAY4C,cAAZ,IACA,KAAK5C,MAAL,CAAY4C,cAAZ,CAA2B0B,sBAD3B,IAEA,KAAKtE,MAAL,CAAY4C,cAAZ,CAA2BC,0BAH7B,EAIE;AACA,YAAMb,OAAO,GAAG,MAAM,KAAKhC,MAAL,CAAYwC,QAAZ,CAAqBC,IAArB,CACpB,OADoB,EAEpB;AACE0B,QAAAA,GAAG,EAAE,CACH;AAAEhB,UAAAA,KAAF;AAAST,UAAAA,iBAAiB,EAAE;AAAE0B,YAAAA,OAAO,EAAE;AAAX;AAA5B,SADG,EAEH;AAAElD,UAAAA,QAAQ,EAAEiC,KAAZ;AAAmBA,UAAAA,KAAK,EAAE;AAAEiB,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAA8C1B,UAAAA,iBAAiB,EAAE;AAAE0B,YAAAA,OAAO,EAAE;AAAX;AAAjE,SAFG;AADP,OAFoB,EAQpB;AAAEzB,QAAAA,KAAK,EAAE;AAAT,OARoB,CAAtB;;AAUA,UAAIX,OAAO,CAACC,MAAR,IAAkB,CAAtB,EAAyB;AACvB,YAAIa,WAAW,GAAGd,OAAO,CAAC,CAAD,CAAP,CAAWe,4BAA7B;;AACA,YAAID,WAAW,IAAIA,WAAW,CAACE,MAAZ,IAAsB,MAAzC,EAAiD;AAC/CF,UAAAA,WAAW,GAAG,IAAIrB,IAAJ,CAASqB,WAAW,CAACG,GAArB,CAAd;AACD;;AACD,YAAIH,WAAW,GAAG,IAAIrB,IAAJ,EAAlB,EAA8B;AAC5BhB,UAAAA,IAAI,GAAGuB,OAAO,CAAC,CAAD,CAAd;AACD;AACF;AACF;;AACD,QAAI,CAACvB,IAAD,IAAS,CAACA,IAAI,CAACiC,iBAAnB,EAAsC;AACpCjC,MAAAA,IAAI,GAAG,MAAM,KAAKwD,qBAAL,CAA2Bd,KAA3B,CAAb;AACD;;AACD,UAAMhC,KAAK,GAAGmC,kBAAkB,CAAC7C,IAAI,CAACiC,iBAAN,CAAhC;AACA,UAAMxB,QAAQ,GAAGoC,kBAAkB,CAAC7C,IAAI,CAACS,QAAN,CAAnC;AAEA,UAAMqC,IAAI,GAAGC,cAAc,CAAC,KAAKxD,MAAL,CAAYuE,uBAAb,EAAsCrD,QAAtC,EAAgDC,KAAhD,EAAuD,KAAKnB,MAA5D,CAA3B;AACA,UAAMD,OAAO,GAAG;AACd2D,MAAAA,OAAO,EAAE,KAAK1D,MAAL,CAAY0D,OADP;AAEdH,MAAAA,IAAI,EAAEA,IAFQ;AAGd9C,MAAAA,IAAI,EAAE,uBAAQ,OAAR,EAAiBA,IAAjB;AAHQ,KAAhB;;AAMA,QAAI,KAAKZ,OAAL,CAAawE,sBAAjB,EAAyC;AACvC,WAAKxE,OAAL,CAAawE,sBAAb,CAAoCtE,OAApC;AACD,KAFD,MAEO;AACL,WAAKF,OAAL,CAAa8D,QAAb,CAAsB,KAAKa,yBAAL,CAA+BzE,OAA/B,CAAtB;AACD;;AAED,WAAOmC,OAAO,CAACC,OAAR,CAAgB1B,IAAhB,CAAP;AACD;;AAEDgE,EAAAA,cAAc,CAACvD,QAAD,EAAWC,KAAX,EAAkBuD,QAAlB,EAA4B;AACxC,WAAO,KAAKnC,uBAAL,CAA6BrB,QAA7B,EAAuCC,KAAvC,EACJW,IADI,CACCrB,IAAI,IAAIkE,kBAAkB,CAAClE,IAAD,EAAOiE,QAAP,EAAiB,KAAK1E,MAAtB,CAD3B,EAEJ8B,IAFI,CAECrB,IAAI,IAAI;AACZ,YAAMmE,oBAAoB,GAAG,IAAIC,uBAAJ,CAAmBpE,IAAnB,EAAyB,KAAKT,MAA9B,CAA7B;AACA,aAAO4E,oBAAoB,CAACE,aAArB,EAAP;AACD,KALI,EAMJC,KANI,CAMEC,KAAK,IAAI;AACd,UAAIA,KAAK,IAAIA,KAAK,CAACC,OAAnB,EAA4B;AAC1B;AACA,eAAO/C,OAAO,CAACgD,MAAR,CAAeF,KAAK,CAACC,OAArB,CAAP;AACD,OAHD,MAGO;AACL,eAAO/C,OAAO,CAACgD,MAAR,CAAeF,KAAf,CAAP;AACD;AACF,KAbI,CAAP;AAcD;;AAEDpB,EAAAA,wBAAwB,CAAC;AAAEL,IAAAA,IAAF;AAAQ9C,IAAAA,IAAR;AAAciD,IAAAA;AAAd,GAAD,EAA0B;AAChD,UAAMyB,IAAI,GACR,YACA,oDADA,GAEA1E,IAAI,CAACP,GAAL,CAAS,OAAT,CAFA,GAGA,QAHA,GAIAwD,OAJA,GAKA,MALA,GAMA,EANA,GAOA,6BAPA,GAQAH,IATF;AAUA,UAAM6B,EAAE,GAAG3E,IAAI,CAACP,GAAL,CAAS,OAAT,CAAX;AACA,UAAMmF,OAAO,GAAG,mCAAmC3B,OAAnD;AACA,WAAO;AAAEyB,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA;AAAZ,KAAP;AACD;;AAEDb,EAAAA,yBAAyB,CAAC;AAAEjB,IAAAA,IAAF;AAAQ9C,IAAAA,IAAR;AAAciD,IAAAA;AAAd,GAAD,EAA0B;AACjD,UAAMyB,IAAI,GACR,YACA,2CADA,GAEAzB,OAFA,IAGCjD,IAAI,CAACP,GAAL,CAAS,UAAT,IAAuB,yBAAyBO,IAAI,CAACP,GAAL,CAAS,UAAT,CAAzB,GAAgD,IAAvE,GAA8E,EAH/E,IAIA,OAJA,GAKA,EALA,GAMA,2BANA,GAOAqD,IARF;AASA,UAAM6B,EAAE,GAAG3E,IAAI,CAACP,GAAL,CAAS,OAAT,KAAqBO,IAAI,CAACP,GAAL,CAAS,UAAT,CAAhC;AACA,UAAMmF,OAAO,GAAG,wBAAwB3B,OAAxC;AACA,WAAO;AAAEyB,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA;AAAZ,KAAP;AACD;;AA1SqD,C,CA6SxD;;;;;AACA,SAASV,kBAAT,CAA4BlE,IAA5B,EAAkCiE,QAAlC,EAA4C1E,MAA5C,EAAoD;AAClD,SAAOqC,cACJC,MADI,CAEHtC,MAFG,EAGHP,IAAI,CAACkC,MAAL,CAAY3B,MAAZ,CAHG,EAIH,OAJG,EAKH;AAAEoC,IAAAA,QAAQ,EAAE3B,IAAI,CAAC2B;AAAjB,GALG,EAMH;AACEsC,IAAAA,QAAQ,EAAEA;AADZ,GANG,EAUJ5C,IAVI,CAUC,MAAMrB,IAVP,CAAP;AAWD;;AAED,SAAS+C,cAAT,CAAwB8B,WAAxB,EAAqCpE,QAArC,EAA+CC,KAA/C,EAAsDnB,MAAtD,EAA8D;AAC5D,QAAMuF,gBAAgB,GAAI,SAAQpE,KAAM,aAAYD,QAAS,EAA7D;;AAEA,MAAIlB,MAAM,CAACwF,aAAX,EAA0B;AACxB,UAAMC,sBAAsB,GAAGH,WAAW,CAACI,OAAZ,CAAoB1F,MAAM,CAAC2F,eAA3B,EAA4C,EAA5C,CAA/B;AAEA,WAAQ,GAAE3F,MAAM,CAACwF,aAAc,SAAQlC,kBAAkB,CACvDmC,sBADuD,CAEvD,IAAGF,gBAAiB,EAFtB;AAGD,GAND,MAMO;AACL,WAAQ,GAAED,WAAY,IAAGC,gBAAiB,EAA1C;AACD;AACF;;eAEc7F,c",sourcesContent:["import { randomString } from '../cryptoUtils';\nimport { inflate } from '../triggers';\nimport AdaptableController from './AdaptableController';\nimport MailAdapter from '../Adapters/Email/MailAdapter';\nimport rest from '../rest';\nimport Parse from 'parse/node';\nimport AccountLockout from '../AccountLockout';\nimport Config from '../Config';\n\nvar RestQuery = require('../RestQuery');\nvar Auth = require('../Auth');\n\nexport class UserController extends AdaptableController {\n  constructor(adapter, appId, options = {}) {\n    super(adapter, appId, options);\n  }\n\n  get config() {\n    return Config.get(this.appId);\n  }\n\n  validateAdapter(adapter) {\n    // Allow no adapter\n    if (!adapter && !this.shouldVerifyEmails) {\n      return;\n    }\n    super.validateAdapter(adapter);\n  }\n\n  expectedAdapterType() {\n    return MailAdapter;\n  }\n\n  get shouldVerifyEmails() {\n    return this.options.verifyUserEmails;\n  }\n\n  setEmailVerifyToken(user) {\n    if (this.shouldVerifyEmails) {\n      user._email_verify_token = randomString(25);\n      user.emailVerified = false;\n\n      if (this.config.emailVerifyTokenValidityDuration) {\n        user._email_verify_token_expires_at = Parse._encode(\n          this.config.generateEmailVerifyTokenExpiresAt()\n        );\n      }\n    }\n  }\n\n  verifyEmail(username, token) {\n    if (!this.shouldVerifyEmails) {\n      // Trying to verify email when not enabled\n      // TODO: Better error here.\n      throw undefined;\n    }\n\n    const query = { username: username, _email_verify_token: token };\n    const updateFields = {\n      emailVerified: true,\n      _email_verify_token: { __op: 'Delete' },\n    };\n\n    // if the email verify token needs to be validated then\n    // add additional query params and additional fields that need to be updated\n    if (this.config.emailVerifyTokenValidityDuration) {\n      query.emailVerified = false;\n      query._email_verify_token_expires_at = { $gt: Parse._encode(new Date()) };\n\n      updateFields._email_verify_token_expires_at = { __op: 'Delete' };\n    }\n    const masterAuth = Auth.master(this.config);\n    var findUserForEmailVerification = new RestQuery(\n      this.config,\n      Auth.master(this.config),\n      '_User',\n      { username: username }\n    );\n    return findUserForEmailVerification.execute().then(result => {\n      if (result.results.length && result.results[0].emailVerified) {\n        return Promise.resolve(result.results.length[0]);\n      } else if (result.results.length) {\n        query.objectId = result.results[0].objectId;\n      }\n      return rest.update(this.config, masterAuth, '_User', query, updateFields);\n    });\n  }\n\n  checkResetTokenValidity(username, token) {\n    return this.config.database\n      .find(\n        '_User',\n        {\n          username: username,\n          _perishable_token: token,\n        },\n        { limit: 1 }\n      )\n      .then(results => {\n        if (results.length != 1) {\n          throw 'Failed to reset password: username / email / token is invalid';\n        }\n\n        if (this.config.passwordPolicy && this.config.passwordPolicy.resetTokenValidityDuration) {\n          let expiresDate = results[0]._perishable_token_expires_at;\n          if (expiresDate && expiresDate.__type == 'Date') {\n            expiresDate = new Date(expiresDate.iso);\n          }\n          if (expiresDate < new Date()) throw 'The password reset link has expired';\n        }\n        return results[0];\n      });\n  }\n\n  getUserIfNeeded(user) {\n    if (user.username && user.email) {\n      return Promise.resolve(user);\n    }\n    var where = {};\n    if (user.username) {\n      where.username = user.username;\n    }\n    if (user.email) {\n      where.email = user.email;\n    }\n\n    var query = new RestQuery(this.config, Auth.master(this.config), '_User', where);\n    return query.execute().then(function (result) {\n      if (result.results.length != 1) {\n        throw undefined;\n      }\n      return result.results[0];\n    });\n  }\n\n  sendVerificationEmail(user) {\n    if (!this.shouldVerifyEmails) {\n      return;\n    }\n    const token = encodeURIComponent(user._email_verify_token);\n    // We may need to fetch the user in case of update email\n    this.getUserIfNeeded(user).then(user => {\n      const username = encodeURIComponent(user.username);\n\n      const link = buildEmailLink(this.config.verifyEmailURL, username, token, this.config);\n      const options = {\n        appName: this.config.appName,\n        link: link,\n        user: inflate('_User', user),\n      };\n      if (this.adapter.sendVerificationEmail) {\n        this.adapter.sendVerificationEmail(options);\n      } else {\n        this.adapter.sendMail(this.defaultVerificationEmail(options));\n      }\n    });\n  }\n\n  /**\n   * Regenerates the given user's email verification token\n   *\n   * @param user\n   * @returns {*}\n   */\n  regenerateEmailVerifyToken(user) {\n    const { _email_verify_token } = user;\n    let { _email_verify_token_expires_at } = user;\n    if (_email_verify_token_expires_at && _email_verify_token_expires_at.__type === 'Date') {\n      _email_verify_token_expires_at = _email_verify_token_expires_at.iso;\n    }\n    if (\n      this.config.emailVerifyTokenReuseIfValid &&\n      this.config.emailVerifyTokenValidityDuration &&\n      _email_verify_token &&\n      new Date() < new Date(_email_verify_token_expires_at)\n    ) {\n      return Promise.resolve();\n    }\n    this.setEmailVerifyToken(user);\n    return this.config.database.update('_User', { username: user.username }, user);\n  }\n\n  resendVerificationEmail(username) {\n    return this.getUserIfNeeded({ username: username }).then(aUser => {\n      if (!aUser || aUser.emailVerified) {\n        throw undefined;\n      }\n      return this.regenerateEmailVerifyToken(aUser).then(() => {\n        this.sendVerificationEmail(aUser);\n      });\n    });\n  }\n\n  setPasswordResetToken(email) {\n    const token = { _perishable_token: randomString(25) };\n\n    if (this.config.passwordPolicy && this.config.passwordPolicy.resetTokenValidityDuration) {\n      token._perishable_token_expires_at = Parse._encode(\n        this.config.generatePasswordResetTokenExpiresAt()\n      );\n    }\n\n    return this.config.database.update(\n      '_User',\n      { $or: [{ email }, { username: email, email: { $exists: false } }] },\n      token,\n      {},\n      true\n    );\n  }\n\n  async sendPasswordResetEmail(email) {\n    if (!this.adapter) {\n      throw 'Trying to send a reset password but no adapter is set';\n      //  TODO: No adapter?\n    }\n    let user;\n    if (\n      this.config.passwordPolicy &&\n      this.config.passwordPolicy.resetTokenReuseIfValid &&\n      this.config.passwordPolicy.resetTokenValidityDuration\n    ) {\n      const results = await this.config.database.find(\n        '_User',\n        {\n          $or: [\n            { email, _perishable_token: { $exists: true } },\n            { username: email, email: { $exists: false }, _perishable_token: { $exists: true } },\n          ],\n        },\n        { limit: 1 }\n      );\n      if (results.length == 1) {\n        let expiresDate = results[0]._perishable_token_expires_at;\n        if (expiresDate && expiresDate.__type == 'Date') {\n          expiresDate = new Date(expiresDate.iso);\n        }\n        if (expiresDate > new Date()) {\n          user = results[0];\n        }\n      }\n    }\n    if (!user || !user._perishable_token) {\n      user = await this.setPasswordResetToken(email);\n    }\n    const token = encodeURIComponent(user._perishable_token);\n    const username = encodeURIComponent(user.username);\n\n    const link = buildEmailLink(this.config.requestResetPasswordURL, username, token, this.config);\n    const options = {\n      appName: this.config.appName,\n      link: link,\n      user: inflate('_User', user),\n    };\n\n    if (this.adapter.sendPasswordResetEmail) {\n      this.adapter.sendPasswordResetEmail(options);\n    } else {\n      this.adapter.sendMail(this.defaultResetPasswordEmail(options));\n    }\n\n    return Promise.resolve(user);\n  }\n\n  updatePassword(username, token, password) {\n    return this.checkResetTokenValidity(username, token)\n      .then(user => updateUserPassword(user, password, this.config))\n      .then(user => {\n        const accountLockoutPolicy = new AccountLockout(user, this.config);\n        return accountLockoutPolicy.unlockAccount();\n      })\n      .catch(error => {\n        if (error && error.message) {\n          // in case of Parse.Error, fail with the error message only\n          return Promise.reject(error.message);\n        } else {\n          return Promise.reject(error);\n        }\n      });\n  }\n\n  defaultVerificationEmail({ link, user, appName }) {\n    const text =\n      'Hi,\\n\\n' +\n      'You are being asked to confirm the e-mail address ' +\n      user.get('email') +\n      ' with ' +\n      appName +\n      '\\n\\n' +\n      '' +\n      'Click here to confirm it:\\n' +\n      link;\n    const to = user.get('email');\n    const subject = 'Please verify your e-mail for ' + appName;\n    return { text, to, subject };\n  }\n\n  defaultResetPasswordEmail({ link, user, appName }) {\n    const text =\n      'Hi,\\n\\n' +\n      'You requested to reset your password for ' +\n      appName +\n      (user.get('username') ? \" (your username is '\" + user.get('username') + \"')\" : '') +\n      '.\\n\\n' +\n      '' +\n      'Click here to reset it:\\n' +\n      link;\n    const to = user.get('email') || user.get('username');\n    const subject = 'Password Reset for ' + appName;\n    return { text, to, subject };\n  }\n}\n\n// Mark this private\nfunction updateUserPassword(user, password, config) {\n  return rest\n    .update(\n      config,\n      Auth.master(config),\n      '_User',\n      { objectId: user.objectId },\n      {\n        password: password,\n      }\n    )\n    .then(() => user);\n}\n\nfunction buildEmailLink(destination, username, token, config) {\n  const usernameAndToken = `token=${token}&username=${username}`;\n\n  if (config.parseFrameURL) {\n    const destinationWithoutHost = destination.replace(config.publicServerURL, '');\n\n    return `${config.parseFrameURL}?link=${encodeURIComponent(\n      destinationWithoutHost\n    )}&${usernameAndToken}`;\n  } else {\n    return `${destination}?${usernameAndToken}`;\n  }\n}\n\nexport default UserController;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"53b3b6d12963421a030f35e530c20aaa7bdfac07"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1x1x4nkd57=function(){return actualCoverage;};}return actualCoverage;}cov_1x1x4nkd57();cov_1x1x4nkd57().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1x1x4nkd57().s[1]++;exports.default=exports.UserController=void 0;var _cryptoUtils=(cov_1x1x4nkd57().s[2]++,require("../cryptoUtils"));var _triggers=(cov_1x1x4nkd57().s[3]++,require("../triggers"));var _AdaptableController=(cov_1x1x4nkd57().s[4]++,_interopRequireDefault(require("./AdaptableController")));var _MailAdapter=(cov_1x1x4nkd57().s[5]++,_interopRequireDefault(require("../Adapters/Email/MailAdapter")));var _rest=(cov_1x1x4nkd57().s[6]++,_interopRequireDefault(require("../rest")));var _node=(cov_1x1x4nkd57().s[7]++,_interopRequireDefault(require("parse/node")));var _AccountLockout=(cov_1x1x4nkd57().s[8]++,_interopRequireDefault(require("../AccountLockout")));var _Config=(cov_1x1x4nkd57().s[9]++,_interopRequireDefault(require("../Config")));function _interopRequireDefault(obj){cov_1x1x4nkd57().f[0]++;cov_1x1x4nkd57().s[10]++;return(cov_1x1x4nkd57().b[1][0]++,obj)&&(cov_1x1x4nkd57().b[1][1]++,obj.__esModule)?(cov_1x1x4nkd57().b[0][0]++,obj):(cov_1x1x4nkd57().b[0][1]++,{default:obj});}var RestQuery=(cov_1x1x4nkd57().s[11]++,require('../RestQuery'));var Auth=(cov_1x1x4nkd57().s[12]++,require('../Auth'));class UserController extends(_AdaptableController.default){constructor(adapter,appId,options=(cov_1x1x4nkd57().b[2][0]++,{})){cov_1x1x4nkd57().f[1]++;cov_1x1x4nkd57().s[13]++;super(adapter,appId,options);}get config(){cov_1x1x4nkd57().f[2]++;cov_1x1x4nkd57().s[14]++;return _Config.default.get(this.appId);}validateAdapter(adapter){cov_1x1x4nkd57().f[3]++;cov_1x1x4nkd57().s[15]++;// Allow no adapter
if((cov_1x1x4nkd57().b[4][0]++,!adapter)&&(cov_1x1x4nkd57().b[4][1]++,!this.shouldVerifyEmails)){cov_1x1x4nkd57().b[3][0]++;cov_1x1x4nkd57().s[16]++;return;}else{cov_1x1x4nkd57().b[3][1]++;}cov_1x1x4nkd57().s[17]++;super.validateAdapter(adapter);}expectedAdapterType(){cov_1x1x4nkd57().f[4]++;cov_1x1x4nkd57().s[18]++;return _MailAdapter.default;}get shouldVerifyEmails(){cov_1x1x4nkd57().f[5]++;cov_1x1x4nkd57().s[19]++;return this.options.verifyUserEmails;}setEmailVerifyToken(user){cov_1x1x4nkd57().f[6]++;cov_1x1x4nkd57().s[20]++;if(this.shouldVerifyEmails){cov_1x1x4nkd57().b[5][0]++;cov_1x1x4nkd57().s[21]++;user._email_verify_token=(0,_cryptoUtils.randomString)(25);cov_1x1x4nkd57().s[22]++;user.emailVerified=false;cov_1x1x4nkd57().s[23]++;if(this.config.emailVerifyTokenValidityDuration){cov_1x1x4nkd57().b[6][0]++;cov_1x1x4nkd57().s[24]++;user._email_verify_token_expires_at=_node.default._encode(this.config.generateEmailVerifyTokenExpiresAt());}else{cov_1x1x4nkd57().b[6][1]++;}}else{cov_1x1x4nkd57().b[5][1]++;}}verifyEmail(username,token){cov_1x1x4nkd57().f[7]++;cov_1x1x4nkd57().s[25]++;if(!this.shouldVerifyEmails){cov_1x1x4nkd57().b[7][0]++;cov_1x1x4nkd57().s[26]++;// Trying to verify email when not enabled
// TODO: Better error here.
throw undefined;}else{cov_1x1x4nkd57().b[7][1]++;}const query=(cov_1x1x4nkd57().s[27]++,{username:username,_email_verify_token:token});const updateFields=(cov_1x1x4nkd57().s[28]++,{emailVerified:true,_email_verify_token:{__op:'Delete'}});// if the email verify token needs to be validated then
// add additional query params and additional fields that need to be updated
cov_1x1x4nkd57().s[29]++;if(this.config.emailVerifyTokenValidityDuration){cov_1x1x4nkd57().b[8][0]++;cov_1x1x4nkd57().s[30]++;query.emailVerified=false;cov_1x1x4nkd57().s[31]++;query._email_verify_token_expires_at={$gt:_node.default._encode(new Date())};cov_1x1x4nkd57().s[32]++;updateFields._email_verify_token_expires_at={__op:'Delete'};}else{cov_1x1x4nkd57().b[8][1]++;}const masterAuth=(cov_1x1x4nkd57().s[33]++,Auth.master(this.config));var findUserForEmailVerification=(cov_1x1x4nkd57().s[34]++,new RestQuery(this.config,Auth.master(this.config),'_User',{username:username}));cov_1x1x4nkd57().s[35]++;return findUserForEmailVerification.execute().then(result=>{cov_1x1x4nkd57().f[8]++;cov_1x1x4nkd57().s[36]++;if((cov_1x1x4nkd57().b[10][0]++,result.results.length)&&(cov_1x1x4nkd57().b[10][1]++,result.results[0].emailVerified)){cov_1x1x4nkd57().b[9][0]++;cov_1x1x4nkd57().s[37]++;return Promise.resolve(result.results.length[0]);}else{cov_1x1x4nkd57().b[9][1]++;cov_1x1x4nkd57().s[38]++;if(result.results.length){cov_1x1x4nkd57().b[11][0]++;cov_1x1x4nkd57().s[39]++;query.objectId=result.results[0].objectId;}else{cov_1x1x4nkd57().b[11][1]++;}}cov_1x1x4nkd57().s[40]++;return _rest.default.update(this.config,masterAuth,'_User',query,updateFields);});}checkResetTokenValidity(username,token){cov_1x1x4nkd57().f[9]++;cov_1x1x4nkd57().s[41]++;return this.config.database.find('_User',{username:username,_perishable_token:token},{limit:1}).then(results=>{cov_1x1x4nkd57().f[10]++;cov_1x1x4nkd57().s[42]++;if(results.length!=1){cov_1x1x4nkd57().b[12][0]++;cov_1x1x4nkd57().s[43]++;throw'Failed to reset password: username / email / token is invalid';}else{cov_1x1x4nkd57().b[12][1]++;}cov_1x1x4nkd57().s[44]++;if((cov_1x1x4nkd57().b[14][0]++,this.config.passwordPolicy)&&(cov_1x1x4nkd57().b[14][1]++,this.config.passwordPolicy.resetTokenValidityDuration)){cov_1x1x4nkd57().b[13][0]++;let expiresDate=(cov_1x1x4nkd57().s[45]++,results[0]._perishable_token_expires_at);cov_1x1x4nkd57().s[46]++;if((cov_1x1x4nkd57().b[16][0]++,expiresDate)&&(cov_1x1x4nkd57().b[16][1]++,expiresDate.__type=='Date')){cov_1x1x4nkd57().b[15][0]++;cov_1x1x4nkd57().s[47]++;expiresDate=new Date(expiresDate.iso);}else{cov_1x1x4nkd57().b[15][1]++;}cov_1x1x4nkd57().s[48]++;if(expiresDate<new Date()){cov_1x1x4nkd57().b[17][0]++;cov_1x1x4nkd57().s[49]++;throw'The password reset link has expired';}else{cov_1x1x4nkd57().b[17][1]++;}}else{cov_1x1x4nkd57().b[13][1]++;}cov_1x1x4nkd57().s[50]++;return results[0];});}getUserIfNeeded(user){cov_1x1x4nkd57().f[11]++;cov_1x1x4nkd57().s[51]++;if((cov_1x1x4nkd57().b[19][0]++,user.username)&&(cov_1x1x4nkd57().b[19][1]++,user.email)){cov_1x1x4nkd57().b[18][0]++;cov_1x1x4nkd57().s[52]++;return Promise.resolve(user);}else{cov_1x1x4nkd57().b[18][1]++;}var where=(cov_1x1x4nkd57().s[53]++,{});cov_1x1x4nkd57().s[54]++;if(user.username){cov_1x1x4nkd57().b[20][0]++;cov_1x1x4nkd57().s[55]++;where.username=user.username;}else{cov_1x1x4nkd57().b[20][1]++;}cov_1x1x4nkd57().s[56]++;if(user.email){cov_1x1x4nkd57().b[21][0]++;cov_1x1x4nkd57().s[57]++;where.email=user.email;}else{cov_1x1x4nkd57().b[21][1]++;}var query=(cov_1x1x4nkd57().s[58]++,new RestQuery(this.config,Auth.master(this.config),'_User',where));cov_1x1x4nkd57().s[59]++;return query.execute().then(function(result){cov_1x1x4nkd57().f[12]++;cov_1x1x4nkd57().s[60]++;if(result.results.length!=1){cov_1x1x4nkd57().b[22][0]++;cov_1x1x4nkd57().s[61]++;throw undefined;}else{cov_1x1x4nkd57().b[22][1]++;}cov_1x1x4nkd57().s[62]++;return result.results[0];});}sendVerificationEmail(user){cov_1x1x4nkd57().f[13]++;cov_1x1x4nkd57().s[63]++;if(!this.shouldVerifyEmails){cov_1x1x4nkd57().b[23][0]++;cov_1x1x4nkd57().s[64]++;return;}else{cov_1x1x4nkd57().b[23][1]++;}const token=(cov_1x1x4nkd57().s[65]++,encodeURIComponent(user._email_verify_token));// We may need to fetch the user in case of update email
cov_1x1x4nkd57().s[66]++;this.getUserIfNeeded(user).then(user=>{cov_1x1x4nkd57().f[14]++;const username=(cov_1x1x4nkd57().s[67]++,encodeURIComponent(user.username));const link=(cov_1x1x4nkd57().s[68]++,buildEmailLink(this.config.verifyEmailURL,username,token,this.config));const options=(cov_1x1x4nkd57().s[69]++,{appName:this.config.appName,link:link,user:(0,_triggers.inflate)('_User',user)});cov_1x1x4nkd57().s[70]++;if(this.adapter.sendVerificationEmail){cov_1x1x4nkd57().b[24][0]++;cov_1x1x4nkd57().s[71]++;this.adapter.sendVerificationEmail(options);}else{cov_1x1x4nkd57().b[24][1]++;cov_1x1x4nkd57().s[72]++;this.adapter.sendMail(this.defaultVerificationEmail(options));}});}/**
   * Regenerates the given user's email verification token
   *
   * @param user
   * @returns {*}
   */regenerateEmailVerifyToken(user){cov_1x1x4nkd57().f[15]++;const{_email_verify_token}=(cov_1x1x4nkd57().s[73]++,user);let{_email_verify_token_expires_at}=(cov_1x1x4nkd57().s[74]++,user);cov_1x1x4nkd57().s[75]++;if((cov_1x1x4nkd57().b[26][0]++,_email_verify_token_expires_at)&&(cov_1x1x4nkd57().b[26][1]++,_email_verify_token_expires_at.__type==='Date')){cov_1x1x4nkd57().b[25][0]++;cov_1x1x4nkd57().s[76]++;_email_verify_token_expires_at=_email_verify_token_expires_at.iso;}else{cov_1x1x4nkd57().b[25][1]++;}cov_1x1x4nkd57().s[77]++;if((cov_1x1x4nkd57().b[28][0]++,this.config.emailVerifyTokenReuseIfValid)&&(cov_1x1x4nkd57().b[28][1]++,this.config.emailVerifyTokenValidityDuration)&&(cov_1x1x4nkd57().b[28][2]++,_email_verify_token)&&(cov_1x1x4nkd57().b[28][3]++,new Date()<new Date(_email_verify_token_expires_at))){cov_1x1x4nkd57().b[27][0]++;cov_1x1x4nkd57().s[78]++;return Promise.resolve();}else{cov_1x1x4nkd57().b[27][1]++;}cov_1x1x4nkd57().s[79]++;this.setEmailVerifyToken(user);cov_1x1x4nkd57().s[80]++;return this.config.database.update('_User',{username:user.username},user);}resendVerificationEmail(username){cov_1x1x4nkd57().f[16]++;cov_1x1x4nkd57().s[81]++;return this.getUserIfNeeded({username:username}).then(aUser=>{cov_1x1x4nkd57().f[17]++;cov_1x1x4nkd57().s[82]++;if((cov_1x1x4nkd57().b[30][0]++,!aUser)||(cov_1x1x4nkd57().b[30][1]++,aUser.emailVerified)){cov_1x1x4nkd57().b[29][0]++;cov_1x1x4nkd57().s[83]++;throw undefined;}else{cov_1x1x4nkd57().b[29][1]++;}cov_1x1x4nkd57().s[84]++;return this.regenerateEmailVerifyToken(aUser).then(()=>{cov_1x1x4nkd57().f[18]++;cov_1x1x4nkd57().s[85]++;this.sendVerificationEmail(aUser);});});}setPasswordResetToken(email){cov_1x1x4nkd57().f[19]++;const token=(cov_1x1x4nkd57().s[86]++,{_perishable_token:(0,_cryptoUtils.randomString)(25)});cov_1x1x4nkd57().s[87]++;if((cov_1x1x4nkd57().b[32][0]++,this.config.passwordPolicy)&&(cov_1x1x4nkd57().b[32][1]++,this.config.passwordPolicy.resetTokenValidityDuration)){cov_1x1x4nkd57().b[31][0]++;cov_1x1x4nkd57().s[88]++;token._perishable_token_expires_at=_node.default._encode(this.config.generatePasswordResetTokenExpiresAt());}else{cov_1x1x4nkd57().b[31][1]++;}cov_1x1x4nkd57().s[89]++;return this.config.database.update('_User',{$or:[{email},{username:email,email:{$exists:false}}]},token,{},true);}async sendPasswordResetEmail(email){cov_1x1x4nkd57().f[20]++;cov_1x1x4nkd57().s[90]++;if(!this.adapter){cov_1x1x4nkd57().b[33][0]++;cov_1x1x4nkd57().s[91]++;throw'Trying to send a reset password but no adapter is set';//  TODO: No adapter?
}else{cov_1x1x4nkd57().b[33][1]++;}let user;cov_1x1x4nkd57().s[92]++;if((cov_1x1x4nkd57().b[35][0]++,this.config.passwordPolicy)&&(cov_1x1x4nkd57().b[35][1]++,this.config.passwordPolicy.resetTokenReuseIfValid)&&(cov_1x1x4nkd57().b[35][2]++,this.config.passwordPolicy.resetTokenValidityDuration)){cov_1x1x4nkd57().b[34][0]++;const results=(cov_1x1x4nkd57().s[93]++,await this.config.database.find('_User',{$or:[{email,_perishable_token:{$exists:true}},{username:email,email:{$exists:false},_perishable_token:{$exists:true}}]},{limit:1}));cov_1x1x4nkd57().s[94]++;if(results.length==1){cov_1x1x4nkd57().b[36][0]++;let expiresDate=(cov_1x1x4nkd57().s[95]++,results[0]._perishable_token_expires_at);cov_1x1x4nkd57().s[96]++;if((cov_1x1x4nkd57().b[38][0]++,expiresDate)&&(cov_1x1x4nkd57().b[38][1]++,expiresDate.__type=='Date')){cov_1x1x4nkd57().b[37][0]++;cov_1x1x4nkd57().s[97]++;expiresDate=new Date(expiresDate.iso);}else{cov_1x1x4nkd57().b[37][1]++;}cov_1x1x4nkd57().s[98]++;if(expiresDate>new Date()){cov_1x1x4nkd57().b[39][0]++;cov_1x1x4nkd57().s[99]++;user=results[0];}else{cov_1x1x4nkd57().b[39][1]++;}}else{cov_1x1x4nkd57().b[36][1]++;}}else{cov_1x1x4nkd57().b[34][1]++;}cov_1x1x4nkd57().s[100]++;if((cov_1x1x4nkd57().b[41][0]++,!user)||(cov_1x1x4nkd57().b[41][1]++,!user._perishable_token)){cov_1x1x4nkd57().b[40][0]++;cov_1x1x4nkd57().s[101]++;user=await this.setPasswordResetToken(email);}else{cov_1x1x4nkd57().b[40][1]++;}const token=(cov_1x1x4nkd57().s[102]++,encodeURIComponent(user._perishable_token));const username=(cov_1x1x4nkd57().s[103]++,encodeURIComponent(user.username));const link=(cov_1x1x4nkd57().s[104]++,buildEmailLink(this.config.requestResetPasswordURL,username,token,this.config));const options=(cov_1x1x4nkd57().s[105]++,{appName:this.config.appName,link:link,user:(0,_triggers.inflate)('_User',user)});cov_1x1x4nkd57().s[106]++;if(this.adapter.sendPasswordResetEmail){cov_1x1x4nkd57().b[42][0]++;cov_1x1x4nkd57().s[107]++;this.adapter.sendPasswordResetEmail(options);}else{cov_1x1x4nkd57().b[42][1]++;cov_1x1x4nkd57().s[108]++;this.adapter.sendMail(this.defaultResetPasswordEmail(options));}cov_1x1x4nkd57().s[109]++;return Promise.resolve(user);}updatePassword(username,token,password){cov_1x1x4nkd57().f[21]++;cov_1x1x4nkd57().s[110]++;return this.checkResetTokenValidity(username,token).then(user=>{cov_1x1x4nkd57().f[22]++;cov_1x1x4nkd57().s[111]++;return updateUserPassword(user,password,this.config);}).then(user=>{cov_1x1x4nkd57().f[23]++;const accountLockoutPolicy=(cov_1x1x4nkd57().s[112]++,new _AccountLockout.default(user,this.config));cov_1x1x4nkd57().s[113]++;return accountLockoutPolicy.unlockAccount();}).catch(error=>{cov_1x1x4nkd57().f[24]++;cov_1x1x4nkd57().s[114]++;if((cov_1x1x4nkd57().b[44][0]++,error)&&(cov_1x1x4nkd57().b[44][1]++,error.message)){cov_1x1x4nkd57().b[43][0]++;cov_1x1x4nkd57().s[115]++;// in case of Parse.Error, fail with the error message only
return Promise.reject(error.message);}else{cov_1x1x4nkd57().b[43][1]++;cov_1x1x4nkd57().s[116]++;return Promise.reject(error);}});}defaultVerificationEmail({link,user,appName}){cov_1x1x4nkd57().f[25]++;const text=(cov_1x1x4nkd57().s[117]++,'Hi,\n\n'+'You are being asked to confirm the e-mail address '+user.get('email')+' with '+appName+'\n\n'+''+'Click here to confirm it:\n'+link);const to=(cov_1x1x4nkd57().s[118]++,user.get('email'));const subject=(cov_1x1x4nkd57().s[119]++,'Please verify your e-mail for '+appName);cov_1x1x4nkd57().s[120]++;return{text,to,subject};}defaultResetPasswordEmail({link,user,appName}){cov_1x1x4nkd57().f[26]++;const text=(cov_1x1x4nkd57().s[121]++,'Hi,\n\n'+'You requested to reset your password for '+appName+(user.get('username')?(cov_1x1x4nkd57().b[45][0]++," (your username is '"+user.get('username')+"')"):(cov_1x1x4nkd57().b[45][1]++,''))+'.\n\n'+''+'Click here to reset it:\n'+link);const to=(cov_1x1x4nkd57().s[122]++,(cov_1x1x4nkd57().b[46][0]++,user.get('email'))||(cov_1x1x4nkd57().b[46][1]++,user.get('username')));const subject=(cov_1x1x4nkd57().s[123]++,'Password Reset for '+appName);cov_1x1x4nkd57().s[124]++;return{text,to,subject};}}// Mark this private
cov_1x1x4nkd57().s[125]++;exports.UserController=UserController;function updateUserPassword(user,password,config){cov_1x1x4nkd57().f[27]++;cov_1x1x4nkd57().s[126]++;return _rest.default.update(config,Auth.master(config),'_User',{objectId:user.objectId},{password:password}).then(()=>{cov_1x1x4nkd57().f[28]++;cov_1x1x4nkd57().s[127]++;return user;});}function buildEmailLink(destination,username,token,config){cov_1x1x4nkd57().f[29]++;const usernameAndToken=(cov_1x1x4nkd57().s[128]++,`token=${token}&username=${username}`);cov_1x1x4nkd57().s[129]++;if(config.parseFrameURL){cov_1x1x4nkd57().b[47][0]++;const destinationWithoutHost=(cov_1x1x4nkd57().s[130]++,destination.replace(config.publicServerURL,''));cov_1x1x4nkd57().s[131]++;return`${config.parseFrameURL}?link=${encodeURIComponent(destinationWithoutHost)}&${usernameAndToken}`;}else{cov_1x1x4nkd57().b[47][1]++;cov_1x1x4nkd57().s[132]++;return`${destination}?${usernameAndToken}`;}}var _default=(cov_1x1x4nkd57().s[133]++,UserController);cov_1x1x4nkd57().s[134]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,