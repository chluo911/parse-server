{"version":3,"sources":["../src/Config.js"],"names":["removeTrailingSlash","str","endsWith","substr","length","Config","get","applicationId","mount","cacheInfo","AppCache","config","Object","keys","forEach","key","database","DatabaseController","databaseController","adapter","generateSessionExpiresAt","bind","generateEmailVerifyTokenExpiresAt","put","serverConfiguration","validate","appId","setupPasswordValidator","passwordPolicy","verifyUserEmails","userController","appName","publicServerURL","revokeSessionOnPasswordReset","expireInactiveSessions","sessionLength","maxLimit","emailVerifyTokenValidityDuration","accountLockout","masterKeyIps","masterKey","readOnlyMasterKey","allowHeaders","idempotencyOptions","emailVerifyTokenReuseIfValid","fileUpload","pages","security","enforcePrivateUsers","schema","Error","emailAdapter","validateEmailConfiguration","validateAccountLockoutPolicy","validatePasswordPolicy","validateFileUploadOptions","startsWith","validateSessionConfiguration","validateMasterKeyIps","validateMaxLimit","validateAllowHeaders","validateIdempotencyOptions","validatePagesOptions","validateSecurityOptions","validateSchemaOptions","validateEnforcePrivateUsers","prototype","toString","call","enableCheck","undefined","SecurityOptions","default","enableCheckLog","definitions","SchemaOptions","Array","isArray","strict","deleteExtraFields","recreateModifiedFields","lockSchemas","beforeMigration","afterMigration","enableRouter","PagesOptions","enableLocalization","localizationJsonPath","localizationFallbackLocale","placeholders","forceRedirect","pagesPath","pagesEndpoint","customUrls","customRoutes","ttl","IdempotencyOptions","isNaN","paths","duration","Number","isInteger","threshold","unlockOnPasswordReset","AccountLockoutOptions","maxPasswordAge","resetTokenValidityDuration","validatorPattern","RegExp","validatorCallback","doNotAllowUsername","maxPasswordHistory","resetTokenReuseIfValid","patternValidator","value","test","e","ReferenceError","enableForAnonymousUser","FileUploadOptions","enableForPublic","enableForAuthenticatedUser","ip","net","isIP","_mount","newValue","includes","header","trim","now","Date","getTime","generatePasswordResetTokenExpiresAt","invalidLinkURL","customPages","invalidLink","invalidVerificationLinkURL","invalidVerificationLink","linkSendSuccessURL","linkSendSuccess","linkSendFailURL","linkSendFail","verifyEmailSuccessURL","verifyEmailSuccess","choosePasswordURL","choosePassword","requestResetPasswordURL","passwordResetSuccessURL","passwordResetSuccess","parseFrameURL","verifyEmailURL","module","exports"],"mappings":"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","sourcesContent":["// A Config object provides information about how a specific app is\n// configured.\n// mount is the URL for the root of the API; includes http, domain, etc.\n\nimport AppCache from './cache';\nimport DatabaseController from './Controllers/DatabaseController';\nimport net from 'net';\nimport {\n  IdempotencyOptions,\n  FileUploadOptions,\n  AccountLockoutOptions,\n  PagesOptions,\n  SecurityOptions,\n  SchemaOptions,\n} from './Options/Definitions';\nimport { isBoolean, isString } from 'lodash';\n\nfunction removeTrailingSlash(str) {\n  if (!str) {\n    return str;\n  }\n  if (str.endsWith('/')) {\n    str = str.substr(0, str.length - 1);\n  }\n  return str;\n}\n\nexport class Config {\n  static get(applicationId: string, mount: string) {\n    const cacheInfo = AppCache.get(applicationId);\n    if (!cacheInfo) {\n      return;\n    }\n    const config = new Config();\n    config.applicationId = applicationId;\n    Object.keys(cacheInfo).forEach(key => {\n      if (key == 'databaseController') {\n        config.database = new DatabaseController(cacheInfo.databaseController.adapter);\n      } else {\n        config[key] = cacheInfo[key];\n      }\n    });\n    config.mount = removeTrailingSlash(mount);\n    config.generateSessionExpiresAt = config.generateSessionExpiresAt.bind(config);\n    config.generateEmailVerifyTokenExpiresAt = config.generateEmailVerifyTokenExpiresAt.bind(\n      config\n    );\n    return config;\n  }\n\n  static put(serverConfiguration) {\n    Config.validate(serverConfiguration);\n    AppCache.put(serverConfiguration.appId, serverConfiguration);\n    Config.setupPasswordValidator(serverConfiguration.passwordPolicy);\n    return serverConfiguration;\n  }\n\n  static validate({\n    verifyUserEmails,\n    userController,\n    appName,\n    publicServerURL,\n    revokeSessionOnPasswordReset,\n    expireInactiveSessions,\n    sessionLength,\n    maxLimit,\n    emailVerifyTokenValidityDuration,\n    accountLockout,\n    passwordPolicy,\n    masterKeyIps,\n    masterKey,\n    readOnlyMasterKey,\n    allowHeaders,\n    idempotencyOptions,\n    emailVerifyTokenReuseIfValid,\n    fileUpload,\n    pages,\n    security,\n    enforcePrivateUsers,\n    schema,\n  }) {\n    if (masterKey === readOnlyMasterKey) {\n      throw new Error('masterKey and readOnlyMasterKey should be different');\n    }\n\n    const emailAdapter = userController.adapter;\n    if (verifyUserEmails) {\n      this.validateEmailConfiguration({\n        emailAdapter,\n        appName,\n        publicServerURL,\n        emailVerifyTokenValidityDuration,\n        emailVerifyTokenReuseIfValid,\n      });\n    }\n\n    this.validateAccountLockoutPolicy(accountLockout);\n    this.validatePasswordPolicy(passwordPolicy);\n    this.validateFileUploadOptions(fileUpload);\n\n    if (typeof revokeSessionOnPasswordReset !== 'boolean') {\n      throw 'revokeSessionOnPasswordReset must be a boolean value';\n    }\n\n    if (publicServerURL) {\n      if (!publicServerURL.startsWith('http://') && !publicServerURL.startsWith('https://')) {\n        throw 'publicServerURL should be a valid HTTPS URL starting with https://';\n      }\n    }\n    this.validateSessionConfiguration(sessionLength, expireInactiveSessions);\n    this.validateMasterKeyIps(masterKeyIps);\n    this.validateMaxLimit(maxLimit);\n    this.validateAllowHeaders(allowHeaders);\n    this.validateIdempotencyOptions(idempotencyOptions);\n    this.validatePagesOptions(pages);\n    this.validateSecurityOptions(security);\n    this.validateSchemaOptions(schema);\n    this.validateEnforcePrivateUsers(enforcePrivateUsers);\n  }\n\n  static validateEnforcePrivateUsers(enforcePrivateUsers) {\n    if (typeof enforcePrivateUsers !== 'boolean') {\n      throw 'Parse Server option enforcePrivateUsers must be a boolean.';\n    }\n  }\n\n  static validateSecurityOptions(security) {\n    if (Object.prototype.toString.call(security) !== '[object Object]') {\n      throw 'Parse Server option security must be an object.';\n    }\n    if (security.enableCheck === undefined) {\n      security.enableCheck = SecurityOptions.enableCheck.default;\n    } else if (!isBoolean(security.enableCheck)) {\n      throw 'Parse Server option security.enableCheck must be a boolean.';\n    }\n    if (security.enableCheckLog === undefined) {\n      security.enableCheckLog = SecurityOptions.enableCheckLog.default;\n    } else if (!isBoolean(security.enableCheckLog)) {\n      throw 'Parse Server option security.enableCheckLog must be a boolean.';\n    }\n  }\n\n  static validateSchemaOptions(schema: SchemaOptions) {\n    if (!schema) return;\n    if (Object.prototype.toString.call(schema) !== '[object Object]') {\n      throw 'Parse Server option schema must be an object.';\n    }\n    if (schema.definitions === undefined) {\n      schema.definitions = SchemaOptions.definitions.default;\n    } else if (!Array.isArray(schema.definitions)) {\n      throw 'Parse Server option schema.definitions must be an array.';\n    }\n    if (schema.strict === undefined) {\n      schema.strict = SchemaOptions.strict.default;\n    } else if (!isBoolean(schema.strict)) {\n      throw 'Parse Server option schema.strict must be a boolean.';\n    }\n    if (schema.deleteExtraFields === undefined) {\n      schema.deleteExtraFields = SchemaOptions.deleteExtraFields.default;\n    } else if (!isBoolean(schema.deleteExtraFields)) {\n      throw 'Parse Server option schema.deleteExtraFields must be a boolean.';\n    }\n    if (schema.recreateModifiedFields === undefined) {\n      schema.recreateModifiedFields = SchemaOptions.recreateModifiedFields.default;\n    } else if (!isBoolean(schema.recreateModifiedFields)) {\n      throw 'Parse Server option schema.recreateModifiedFields must be a boolean.';\n    }\n    if (schema.lockSchemas === undefined) {\n      schema.lockSchemas = SchemaOptions.lockSchemas.default;\n    } else if (!isBoolean(schema.lockSchemas)) {\n      throw 'Parse Server option schema.lockSchemas must be a boolean.';\n    }\n    if (schema.beforeMigration === undefined) {\n      schema.beforeMigration = null;\n    } else if (schema.beforeMigration !== null && typeof schema.beforeMigration !== 'function') {\n      throw 'Parse Server option schema.beforeMigration must be a function.';\n    }\n    if (schema.afterMigration === undefined) {\n      schema.afterMigration = null;\n    } else if (schema.afterMigration !== null && typeof schema.afterMigration !== 'function') {\n      throw 'Parse Server option schema.afterMigration must be a function.';\n    }\n  }\n\n  static validatePagesOptions(pages) {\n    if (Object.prototype.toString.call(pages) !== '[object Object]') {\n      throw 'Parse Server option pages must be an object.';\n    }\n    if (pages.enableRouter === undefined) {\n      pages.enableRouter = PagesOptions.enableRouter.default;\n    } else if (!isBoolean(pages.enableRouter)) {\n      throw 'Parse Server option pages.enableRouter must be a boolean.';\n    }\n    if (pages.enableLocalization === undefined) {\n      pages.enableLocalization = PagesOptions.enableLocalization.default;\n    } else if (!isBoolean(pages.enableLocalization)) {\n      throw 'Parse Server option pages.enableLocalization must be a boolean.';\n    }\n    if (pages.localizationJsonPath === undefined) {\n      pages.localizationJsonPath = PagesOptions.localizationJsonPath.default;\n    } else if (!isString(pages.localizationJsonPath)) {\n      throw 'Parse Server option pages.localizationJsonPath must be a string.';\n    }\n    if (pages.localizationFallbackLocale === undefined) {\n      pages.localizationFallbackLocale = PagesOptions.localizationFallbackLocale.default;\n    } else if (!isString(pages.localizationFallbackLocale)) {\n      throw 'Parse Server option pages.localizationFallbackLocale must be a string.';\n    }\n    if (pages.placeholders === undefined) {\n      pages.placeholders = PagesOptions.placeholders.default;\n    } else if (\n      Object.prototype.toString.call(pages.placeholders) !== '[object Object]' &&\n      typeof pages.placeholders !== 'function'\n    ) {\n      throw 'Parse Server option pages.placeholders must be an object or a function.';\n    }\n    if (pages.forceRedirect === undefined) {\n      pages.forceRedirect = PagesOptions.forceRedirect.default;\n    } else if (!isBoolean(pages.forceRedirect)) {\n      throw 'Parse Server option pages.forceRedirect must be a boolean.';\n    }\n    if (pages.pagesPath === undefined) {\n      pages.pagesPath = PagesOptions.pagesPath.default;\n    } else if (!isString(pages.pagesPath)) {\n      throw 'Parse Server option pages.pagesPath must be a string.';\n    }\n    if (pages.pagesEndpoint === undefined) {\n      pages.pagesEndpoint = PagesOptions.pagesEndpoint.default;\n    } else if (!isString(pages.pagesEndpoint)) {\n      throw 'Parse Server option pages.pagesEndpoint must be a string.';\n    }\n    if (pages.customUrls === undefined) {\n      pages.customUrls = PagesOptions.customUrls.default;\n    } else if (Object.prototype.toString.call(pages.customUrls) !== '[object Object]') {\n      throw 'Parse Server option pages.customUrls must be an object.';\n    }\n    if (pages.customRoutes === undefined) {\n      pages.customRoutes = PagesOptions.customRoutes.default;\n    } else if (!(pages.customRoutes instanceof Array)) {\n      throw 'Parse Server option pages.customRoutes must be an array.';\n    }\n  }\n\n  static validateIdempotencyOptions(idempotencyOptions) {\n    if (!idempotencyOptions) {\n      return;\n    }\n    if (idempotencyOptions.ttl === undefined) {\n      idempotencyOptions.ttl = IdempotencyOptions.ttl.default;\n    } else if (!isNaN(idempotencyOptions.ttl) && idempotencyOptions.ttl <= 0) {\n      throw 'idempotency TTL value must be greater than 0 seconds';\n    } else if (isNaN(idempotencyOptions.ttl)) {\n      throw 'idempotency TTL value must be a number';\n    }\n    if (!idempotencyOptions.paths) {\n      idempotencyOptions.paths = IdempotencyOptions.paths.default;\n    } else if (!(idempotencyOptions.paths instanceof Array)) {\n      throw 'idempotency paths must be of an array of strings';\n    }\n  }\n\n  static validateAccountLockoutPolicy(accountLockout) {\n    if (accountLockout) {\n      if (\n        typeof accountLockout.duration !== 'number' ||\n        accountLockout.duration <= 0 ||\n        accountLockout.duration > 99999\n      ) {\n        throw 'Account lockout duration should be greater than 0 and less than 100000';\n      }\n\n      if (\n        !Number.isInteger(accountLockout.threshold) ||\n        accountLockout.threshold < 1 ||\n        accountLockout.threshold > 999\n      ) {\n        throw 'Account lockout threshold should be an integer greater than 0 and less than 1000';\n      }\n\n      if (accountLockout.unlockOnPasswordReset === undefined) {\n        accountLockout.unlockOnPasswordReset = AccountLockoutOptions.unlockOnPasswordReset.default;\n      } else if (!isBoolean(accountLockout.unlockOnPasswordReset)) {\n        throw 'Parse Server option accountLockout.unlockOnPasswordReset must be a boolean.';\n      }\n    }\n  }\n\n  static validatePasswordPolicy(passwordPolicy) {\n    if (passwordPolicy) {\n      if (\n        passwordPolicy.maxPasswordAge !== undefined &&\n        (typeof passwordPolicy.maxPasswordAge !== 'number' || passwordPolicy.maxPasswordAge < 0)\n      ) {\n        throw 'passwordPolicy.maxPasswordAge must be a positive number';\n      }\n\n      if (\n        passwordPolicy.resetTokenValidityDuration !== undefined &&\n        (typeof passwordPolicy.resetTokenValidityDuration !== 'number' ||\n          passwordPolicy.resetTokenValidityDuration <= 0)\n      ) {\n        throw 'passwordPolicy.resetTokenValidityDuration must be a positive number';\n      }\n\n      if (passwordPolicy.validatorPattern) {\n        if (typeof passwordPolicy.validatorPattern === 'string') {\n          passwordPolicy.validatorPattern = new RegExp(passwordPolicy.validatorPattern);\n        } else if (!(passwordPolicy.validatorPattern instanceof RegExp)) {\n          throw 'passwordPolicy.validatorPattern must be a regex string or RegExp object.';\n        }\n      }\n\n      if (\n        passwordPolicy.validatorCallback &&\n        typeof passwordPolicy.validatorCallback !== 'function'\n      ) {\n        throw 'passwordPolicy.validatorCallback must be a function.';\n      }\n\n      if (\n        passwordPolicy.doNotAllowUsername &&\n        typeof passwordPolicy.doNotAllowUsername !== 'boolean'\n      ) {\n        throw 'passwordPolicy.doNotAllowUsername must be a boolean value.';\n      }\n\n      if (\n        passwordPolicy.maxPasswordHistory &&\n        (!Number.isInteger(passwordPolicy.maxPasswordHistory) ||\n          passwordPolicy.maxPasswordHistory <= 0 ||\n          passwordPolicy.maxPasswordHistory > 20)\n      ) {\n        throw 'passwordPolicy.maxPasswordHistory must be an integer ranging 0 - 20';\n      }\n\n      if (\n        passwordPolicy.resetTokenReuseIfValid &&\n        typeof passwordPolicy.resetTokenReuseIfValid !== 'boolean'\n      ) {\n        throw 'resetTokenReuseIfValid must be a boolean value';\n      }\n      if (passwordPolicy.resetTokenReuseIfValid && !passwordPolicy.resetTokenValidityDuration) {\n        throw 'You cannot use resetTokenReuseIfValid without resetTokenValidityDuration';\n      }\n    }\n  }\n\n  // if the passwordPolicy.validatorPattern is configured then setup a callback to process the pattern\n  static setupPasswordValidator(passwordPolicy) {\n    if (passwordPolicy && passwordPolicy.validatorPattern) {\n      passwordPolicy.patternValidator = value => {\n        return passwordPolicy.validatorPattern.test(value);\n      };\n    }\n  }\n\n  static validateEmailConfiguration({\n    emailAdapter,\n    appName,\n    publicServerURL,\n    emailVerifyTokenValidityDuration,\n    emailVerifyTokenReuseIfValid,\n  }) {\n    if (!emailAdapter) {\n      throw 'An emailAdapter is required for e-mail verification and password resets.';\n    }\n    if (typeof appName !== 'string') {\n      throw 'An app name is required for e-mail verification and password resets.';\n    }\n    if (typeof publicServerURL !== 'string') {\n      throw 'A public server url is required for e-mail verification and password resets.';\n    }\n    if (emailVerifyTokenValidityDuration) {\n      if (isNaN(emailVerifyTokenValidityDuration)) {\n        throw 'Email verify token validity duration must be a valid number.';\n      } else if (emailVerifyTokenValidityDuration <= 0) {\n        throw 'Email verify token validity duration must be a value greater than 0.';\n      }\n    }\n    if (emailVerifyTokenReuseIfValid && typeof emailVerifyTokenReuseIfValid !== 'boolean') {\n      throw 'emailVerifyTokenReuseIfValid must be a boolean value';\n    }\n    if (emailVerifyTokenReuseIfValid && !emailVerifyTokenValidityDuration) {\n      throw 'You cannot use emailVerifyTokenReuseIfValid without emailVerifyTokenValidityDuration';\n    }\n  }\n\n  static validateFileUploadOptions(fileUpload) {\n    try {\n      if (fileUpload == null || typeof fileUpload !== 'object' || fileUpload instanceof Array) {\n        throw 'fileUpload must be an object value.';\n      }\n    } catch (e) {\n      if (e instanceof ReferenceError) {\n        return;\n      }\n      throw e;\n    }\n    if (fileUpload.enableForAnonymousUser === undefined) {\n      fileUpload.enableForAnonymousUser = FileUploadOptions.enableForAnonymousUser.default;\n    } else if (typeof fileUpload.enableForAnonymousUser !== 'boolean') {\n      throw 'fileUpload.enableForAnonymousUser must be a boolean value.';\n    }\n    if (fileUpload.enableForPublic === undefined) {\n      fileUpload.enableForPublic = FileUploadOptions.enableForPublic.default;\n    } else if (typeof fileUpload.enableForPublic !== 'boolean') {\n      throw 'fileUpload.enableForPublic must be a boolean value.';\n    }\n    if (fileUpload.enableForAuthenticatedUser === undefined) {\n      fileUpload.enableForAuthenticatedUser = FileUploadOptions.enableForAuthenticatedUser.default;\n    } else if (typeof fileUpload.enableForAuthenticatedUser !== 'boolean') {\n      throw 'fileUpload.enableForAuthenticatedUser must be a boolean value.';\n    }\n  }\n\n  static validateMasterKeyIps(masterKeyIps) {\n    for (const ip of masterKeyIps) {\n      if (!net.isIP(ip)) {\n        throw `Invalid ip in masterKeyIps: ${ip}`;\n      }\n    }\n  }\n\n  get mount() {\n    var mount = this._mount;\n    if (this.publicServerURL) {\n      mount = this.publicServerURL;\n    }\n    return mount;\n  }\n\n  set mount(newValue) {\n    this._mount = newValue;\n  }\n\n  static validateSessionConfiguration(sessionLength, expireInactiveSessions) {\n    if (expireInactiveSessions) {\n      if (isNaN(sessionLength)) {\n        throw 'Session length must be a valid number.';\n      } else if (sessionLength <= 0) {\n        throw 'Session length must be a value greater than 0.';\n      }\n    }\n  }\n\n  static validateMaxLimit(maxLimit) {\n    if (maxLimit <= 0) {\n      throw 'Max limit must be a value greater than 0.';\n    }\n  }\n\n  static validateAllowHeaders(allowHeaders) {\n    if (![null, undefined].includes(allowHeaders)) {\n      if (Array.isArray(allowHeaders)) {\n        allowHeaders.forEach(header => {\n          if (typeof header !== 'string') {\n            throw 'Allow headers must only contain strings';\n          } else if (!header.trim().length) {\n            throw 'Allow headers must not contain empty strings';\n          }\n        });\n      } else {\n        throw 'Allow headers must be an array';\n      }\n    }\n  }\n\n  generateEmailVerifyTokenExpiresAt() {\n    if (!this.verifyUserEmails || !this.emailVerifyTokenValidityDuration) {\n      return undefined;\n    }\n    var now = new Date();\n    return new Date(now.getTime() + this.emailVerifyTokenValidityDuration * 1000);\n  }\n\n  generatePasswordResetTokenExpiresAt() {\n    if (!this.passwordPolicy || !this.passwordPolicy.resetTokenValidityDuration) {\n      return undefined;\n    }\n    const now = new Date();\n    return new Date(now.getTime() + this.passwordPolicy.resetTokenValidityDuration * 1000);\n  }\n\n  generateSessionExpiresAt() {\n    if (!this.expireInactiveSessions) {\n      return undefined;\n    }\n    var now = new Date();\n    return new Date(now.getTime() + this.sessionLength * 1000);\n  }\n\n  get invalidLinkURL() {\n    return this.customPages.invalidLink || `${this.publicServerURL}/apps/invalid_link.html`;\n  }\n\n  get invalidVerificationLinkURL() {\n    return (\n      this.customPages.invalidVerificationLink ||\n      `${this.publicServerURL}/apps/invalid_verification_link.html`\n    );\n  }\n\n  get linkSendSuccessURL() {\n    return (\n      this.customPages.linkSendSuccess || `${this.publicServerURL}/apps/link_send_success.html`\n    );\n  }\n\n  get linkSendFailURL() {\n    return this.customPages.linkSendFail || `${this.publicServerURL}/apps/link_send_fail.html`;\n  }\n\n  get verifyEmailSuccessURL() {\n    return (\n      this.customPages.verifyEmailSuccess ||\n      `${this.publicServerURL}/apps/verify_email_success.html`\n    );\n  }\n\n  get choosePasswordURL() {\n    return this.customPages.choosePassword || `${this.publicServerURL}/apps/choose_password`;\n  }\n\n  get requestResetPasswordURL() {\n    return `${this.publicServerURL}/${this.pagesEndpoint}/${this.applicationId}/request_password_reset`;\n  }\n\n  get passwordResetSuccessURL() {\n    return (\n      this.customPages.passwordResetSuccess ||\n      `${this.publicServerURL}/apps/password_reset_success.html`\n    );\n  }\n\n  get parseFrameURL() {\n    return this.customPages.parseFrameURL;\n  }\n\n  get verifyEmailURL() {\n    return `${this.publicServerURL}/${this.pagesEndpoint}/${this.applicationId}/verify_email`;\n  }\n\n  // TODO: Remove this function once PagesRouter replaces the PublicAPIRouter;\n  // the (default) endpoint has to be defined in PagesRouter only.\n  get pagesEndpoint() {\n    return this.pages && this.pages.enableRouter && this.pages.pagesEndpoint\n      ? this.pages.pagesEndpoint\n      : 'apps';\n  }\n}\n\nexport default Config;\nmodule.exports = Config;\n"]}