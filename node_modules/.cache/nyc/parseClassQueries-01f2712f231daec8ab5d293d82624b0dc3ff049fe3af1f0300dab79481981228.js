"use strict";function cov_wlp0cme8o(){var path="/parse-server/lib/GraphQL/loaders/parseClassQueries.js";var hash="cbfa164e1e5ba8ed83d230491e3b7bf4671995ec";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/GraphQL/loaders/parseClassQueries.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:22}},"2":{start:{line:8,column:15},end:{line:8,column:33}},"3":{start:{line:10,column:20},end:{line:10,column:44}},"4":{start:{line:12,column:25},end:{line:12,column:79}},"5":{start:{line:14,column:16},end:{line:14,column:59}},"6":{start:{line:16,column:17},end:{line:16,column:61}},"7":{start:{line:18,column:26},end:{line:18,column:83}},"8":{start:{line:20,column:21},end:{line:20,column:82}},"9":{start:{line:22,column:30},end:{line:22,column:81}},"10":{start:{line:24,column:17},end:{line:24,column:53}},"11":{start:{line:26,column:25},end:{line:26,column:56}},"12":{start:{line:28,column:49},end:{line:28,column:96}},"13":{start:{line:28,column:84},end:{line:28,column:96}},"14":{start:{line:28,column:121},end:{line:28,column:134}},"15":{start:{line:28,column:159},end:{line:28,column:172}},"16":{start:{line:28,column:174},end:{line:28,column:309}},"17":{start:{line:28,column:234},end:{line:28,column:292}},"18":{start:{line:30,column:53},end:{line:30,column:111}},"19":{start:{line:30,column:98},end:{line:30,column:109}},"20":{start:{line:30,column:112},end:{line:30,column:214}},"21":{start:{line:30,column:188},end:{line:30,column:212}},"22":{start:{line:30,column:227},end:{line:30,column:264}},"23":{start:{line:30,column:266},end:{line:30,column:321}},"24":{start:{line:30,column:297},end:{line:30,column:319}},"25":{start:{line:30,column:335},end:{line:30,column:337}},"26":{start:{line:30,column:367},end:{line:30,column:423}},"27":{start:{line:30,column:425},end:{line:30,column:726}},"28":{start:{line:30,column:448},end:{line:30,column:724}},"29":{start:{line:30,column:534},end:{line:30,column:606}},"30":{start:{line:30,column:608},end:{line:30,column:722}},"31":{start:{line:30,column:646},end:{line:30,column:687}},"32":{start:{line:30,column:697},end:{line:30,column:720}},"33":{start:{line:30,column:727},end:{line:30,column:748}},"34":{start:{line:30,column:749},end:{line:30,column:787}},"35":{start:{line:30,column:762},end:{line:30,column:785}},"36":{start:{line:30,column:788},end:{line:30,column:802}},"37":{start:{line:32,column:39},end:{line:32,column:93}},"38":{start:{line:34,column:33},end:{line:36,column:1}},"39":{start:{line:35,column:2},end:{line:35,column:58}},"40":{start:{line:38,column:17},end:{line:66,column:1}},"41":{start:{line:41,column:6},end:{line:41,column:10}},"42":{start:{line:44,column:6},end:{line:44,column:10}},"43":{start:{line:48,column:6},end:{line:48,column:19}},"44":{start:{line:53,column:6},end:{line:53,column:13}},"45":{start:{line:54,column:25},end:{line:54,column:67}},"46":{start:{line:55,column:25},end:{line:55,column:60}},"47":{start:{line:57,column:2},end:{line:59,column:3}},"48":{start:{line:58,column:4},end:{line:58,column:27}},"49":{start:{line:64,column:6},end:{line:64,column:67}},"50":{start:{line:65,column:2},end:{line:65,column:154}},"51":{start:{line:68,column:13},end:{line:150,column:1}},"52":{start:{line:69,column:20},end:{line:69,column:40}},"53":{start:{line:70,column:27},end:{line:70,column:81}},"54":{start:{line:76,column:6},end:{line:76,column:48}},"55":{start:{line:81,column:6},end:{line:81,column:51}},"56":{start:{line:83,column:2},end:{line:103,column:3}},"57":{start:{line:84,column:31},end:{line:84,column:99}},"58":{start:{line:85,column:32},end:{line:85,column:62}},"59":{start:{line:86,column:4},end:{line:102,column:7}},"60":{start:{line:95,column:8},end:{line:99,column:9}},"61":{start:{line:96,column:10},end:{line:96,column:136}},"62":{start:{line:98,column:10},end:{line:98,column:44}},"63":{start:{line:105,column:2},end:{line:149,column:3}},"64":{start:{line:106,column:31},end:{line:106,column:99}},"65":{start:{line:107,column:33},end:{line:107,column:89}},"66":{start:{line:108,column:4},end:{line:148,column:7}},"67":{start:{line:114,column:8},end:{line:145,column:9}},"68":{start:{line:125,column:14},end:{line:125,column:42}},"69":{start:{line:130,column:14},end:{line:130,column:27}},"70":{start:{line:135,column:14},end:{line:135,column:21}},"71":{start:{line:136,column:33},end:{line:136,column:75}},"72":{start:{line:140,column:14},end:{line:140,column:220}},"73":{start:{line:140,column:91},end:{line:140,column:122}},"74":{start:{line:140,column:137},end:{line:140,column:169}},"75":{start:{line:140,column:187},end:{line:140,column:218}},"76":{start:{line:141,column:29},end:{line:141,column:53}},"77":{start:{line:142,column:10},end:{line:142,column:268}},"78":{start:{line:144,column:10},end:{line:144,column:44}},"79":{start:{line:152,column:0},end:{line:152,column:20}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:28,column:9},end:{line:28,column:33}},loc:{start:{line:28,column:47},end:{line:28,column:311}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:209},end:{line:28,column:210}},loc:{start:{line:28,column:232},end:{line:28,column:294}},line:28},"2":{name:"_interopRequireWildcard",decl:{start:{line:30,column:9},end:{line:30,column:32}},loc:{start:{line:30,column:51},end:{line:30,column:804}},line:30},"3":{name:"_interopRequireDefault",decl:{start:{line:32,column:9},end:{line:32,column:31}},loc:{start:{line:32,column:37},end:{line:32,column:95}},line:32},"4":{name:"(anonymous_4)",decl:{start:{line:34,column:33},end:{line:34,column:34}},loc:{start:{line:34,column:61},end:{line:36,column:1}},line:34},"5":{name:"(anonymous_5)",decl:{start:{line:38,column:17},end:{line:38,column:18}},loc:{start:{line:38,column:88},end:{line:66,column:1}},line:38},"6":{name:"(anonymous_6)",decl:{start:{line:68,column:13},end:{line:68,column:14}},loc:{start:{line:68,column:73},end:{line:150,column:1}},line:68},"7":{name:"(anonymous_7)",decl:{start:{line:94,column:6},end:{line:94,column:7}},loc:{start:{line:94,column:55},end:{line:100,column:7}},line:94},"8":{name:"(anonymous_8)",decl:{start:{line:113,column:6},end:{line:113,column:7}},loc:{start:{line:113,column:55},end:{line:146,column:7}},line:113},"9":{name:"(anonymous_9)",decl:{start:{line:140,column:82},end:{line:140,column:83}},loc:{start:{line:140,column:91},end:{line:140,column:122}},line:140},"10":{name:"(anonymous_10)",decl:{start:{line:140,column:128},end:{line:140,column:129}},loc:{start:{line:140,column:137},end:{line:140,column:169}},line:140},"11":{name:"(anonymous_11)",decl:{start:{line:140,column:178},end:{line:140,column:179}},loc:{start:{line:140,column:187},end:{line:140,column:218}},line:140}},branchMap:{"0":{loc:{start:{line:28,column:49},end:{line:28,column:96}},type:"if",locations:[{start:{line:28,column:49},end:{line:28,column:96}},{start:{line:28,column:49},end:{line:28,column:96}}],line:28},"1":{loc:{start:{line:28,column:241},end:{line:28,column:291}},type:"cond-expr",locations:[{start:{line:28,column:255},end:{line:28,column:271}},{start:{line:28,column:274},end:{line:28,column:291}}],line:28},"2":{loc:{start:{line:30,column:53},end:{line:30,column:111}},type:"if",locations:[{start:{line:30,column:53},end:{line:30,column:111}},{start:{line:30,column:53},end:{line:30,column:111}}],line:30},"3":{loc:{start:{line:30,column:57},end:{line:30,column:94}},type:"binary-expr",locations:[{start:{line:30,column:57},end:{line:30,column:69}},{start:{line:30,column:73},end:{line:30,column:76}},{start:{line:30,column:80},end:{line:30,column:94}}],line:30},"4":{loc:{start:{line:30,column:112},end:{line:30,column:214}},type:"if",locations:[{start:{line:30,column:112},end:{line:30,column:214}},{start:{line:30,column:112},end:{line:30,column:214}}],line:30},"5":{loc:{start:{line:30,column:116},end:{line:30,column:184}},type:"binary-expr",locations:[{start:{line:30,column:116},end:{line:30,column:128}},{start:{line:30,column:132},end:{line:30,column:155}},{start:{line:30,column:159},end:{line:30,column:184}}],line:30},"6":{loc:{start:{line:30,column:266},end:{line:30,column:321}},type:"if",locations:[{start:{line:30,column:266},end:{line:30,column:321}},{start:{line:30,column:266},end:{line:30,column:321}}],line:30},"7":{loc:{start:{line:30,column:270},end:{line:30,column:293}},type:"binary-expr",locations:[{start:{line:30,column:270},end:{line:30,column:275}},{start:{line:30,column:279},end:{line:30,column:293}}],line:30},"8":{loc:{start:{line:30,column:367},end:{line:30,column:423}},type:"binary-expr",locations:[{start:{line:30,column:367},end:{line:30,column:388}},{start:{line:30,column:392},end:{line:30,column:423}}],line:30},"9":{loc:{start:{line:30,column:448},end:{line:30,column:724}},type:"if",locations:[{start:{line:30,column:448},end:{line:30,column:724}},{start:{line:30,column:448},end:{line:30,column:724}}],line:30},"10":{loc:{start:{line:30,column:452},end:{line:30,column:519}},type:"binary-expr",locations:[{start:{line:30,column:452},end:{line:30,column:469}},{start:{line:30,column:473},end:{line:30,column:519}}],line:30},"11":{loc:{start:{line:30,column:534},end:{line:30,column:606}},type:"cond-expr",locations:[{start:{line:30,column:558},end:{line:30,column:599}},{start:{line:30,column:602},end:{line:30,column:606}}],line:30},"12":{loc:{start:{line:30,column:608},end:{line:30,column:722}},type:"if",locations:[{start:{line:30,column:608},end:{line:30,column:722}},{start:{line:30,column:608},end:{line:30,column:722}}],line:30},"13":{loc:{start:{line:30,column:612},end:{line:30,column:642}},type:"binary-expr",locations:[{start:{line:30,column:612},end:{line:30,column:616}},{start:{line:30,column:621},end:{line:30,column:629}},{start:{line:30,column:633},end:{line:30,column:641}}],line:30},"14":{loc:{start:{line:30,column:749},end:{line:30,column:787}},type:"if",locations:[{start:{line:30,column:749},end:{line:30,column:787}},{start:{line:30,column:749},end:{line:30,column:787}}],line:30},"15":{loc:{start:{line:32,column:46},end:{line:32,column:92}},type:"cond-expr",locations:[{start:{line:32,column:70},end:{line:32,column:73}},{start:{line:32,column:76},end:{line:32,column:92}}],line:32},"16":{loc:{start:{line:32,column:46},end:{line:32,column:67}},type:"binary-expr",locations:[{start:{line:32,column:46},end:{line:32,column:49}},{start:{line:32,column:53},end:{line:32,column:67}}],line:32},"17":{loc:{start:{line:35,column:9},end:{line:35,column:57}},type:"binary-expr",locations:[{start:{line:35,column:9},end:{line:35,column:25}},{start:{line:35,column:29},end:{line:35,column:51}},{start:{line:35,column:55},end:{line:35,column:57}}],line:35},"18":{loc:{start:{line:48,column:6},end:{line:48,column:19}},type:"binary-expr",locations:[{start:{line:48,column:6},end:{line:48,column:13}},{start:{line:48,column:17},end:{line:48,column:19}}],line:48},"19":{loc:{start:{line:57,column:2},end:{line:59,column:3}},type:"if",locations:[{start:{line:57,column:2},end:{line:59,column:3}},{start:{line:57,column:2},end:{line:59,column:3}}],line:57},"20":{loc:{start:{line:72,column:9},end:{line:72,column:28}},type:"default-arg",locations:[{start:{line:72,column:24},end:{line:72,column:28}}],line:72},"21":{loc:{start:{line:73,column:10},end:{line:73,column:30}},type:"default-arg",locations:[{start:{line:73,column:26},end:{line:73,column:30}}],line:73},"22":{loc:{start:{line:74,column:4},end:{line:74,column:17}},type:"default-arg",locations:[{start:{line:74,column:15},end:{line:74,column:17}}],line:74},"23":{loc:{start:{line:75,column:4},end:{line:75,column:18}},type:"default-arg",locations:[{start:{line:75,column:16},end:{line:75,column:18}}],line:75},"24":{loc:{start:{line:83,column:2},end:{line:103,column:3}},type:"if",locations:[{start:{line:83,column:2},end:{line:103,column:3}},{start:{line:83,column:2},end:{line:103,column:3}}],line:83},"25":{loc:{start:{line:85,column:32},end:{line:85,column:62}},type:"binary-expr",locations:[{start:{line:85,column:32},end:{line:85,column:40}},{start:{line:85,column:44},end:{line:85,column:62}}],line:85},"26":{loc:{start:{line:92,column:40},end:{line:92,column:92}},type:"binary-expr",locations:[{start:{line:92,column:40},end:{line:92,column:62}},{start:{line:92,column:66},end:{line:92,column:92}}],line:92},"27":{loc:{start:{line:105,column:2},end:{line:149,column:3}},type:"if",locations:[{start:{line:105,column:2},end:{line:149,column:3}},{start:{line:105,column:2},end:{line:149,column:3}}],line:105},"28":{loc:{start:{line:107,column:33},end:{line:107,column:89}},type:"binary-expr",locations:[{start:{line:107,column:33},end:{line:107,column:42}},{start:{line:107,column:46},end:{line:107,column:89}}],line:107},"29":{loc:{start:{line:111,column:40},end:{line:111,column:96}},type:"binary-expr",locations:[{start:{line:111,column:40},end:{line:111,column:66}},{start:{line:111,column:70},end:{line:111,column:96}}],line:111},"30":{loc:{start:{line:130,column:14},end:{line:130,column:27}},type:"binary-expr",locations:[{start:{line:130,column:14},end:{line:130,column:21}},{start:{line:130,column:25},end:{line:130,column:27}}],line:130},"31":{loc:{start:{line:141,column:29},end:{line:141,column:53}},type:"binary-expr",locations:[{start:{line:141,column:29},end:{line:141,column:34}},{start:{line:141,column:38},end:{line:141,column:53}}],line:141}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0],"21":[0],"22":[0],"23":[0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},inputSourceMap:{version:3,sources:["../../../src/GraphQL/loaders/parseClassQueries.js"],names:["getParseClassQueryConfig","parseClassConfig","query","getQuery","parseClass","_source","args","context","queryInfo","parseClasses","id","options","readPreference","includeReadPreference","config","auth","info","selectedFields","globalIdObject","type","className","keys","include","objectsQueries","getObject","load","parseGraphQLSchema","graphQLClassName","get","isGetEnabled","find","isFindEnabled","getAlias","findAlias","classGraphQLOutputType","classGraphQLFindArgs","classGraphQLFindResultType","parseClassTypes","lowerCaseClassName","charAt","toLowerCase","slice","getGraphQLQueryName","addGraphQLQuery","description","defaultGraphQLTypes","GLOBAL_OR_OBJECT_ID_ATT","READ_OPTIONS_ATT","GraphQLNonNull","OBJECT","resolve","e","handleError","findGraphQLQueryName","where","order","skip","first","after","last","before","subqueryReadPreference","filter","field","startsWith","map","replace","indexOf","parseOrder","join","findObjects"],mappings:"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",sourcesContent:["import { GraphQLNonNull } from 'graphql';\nimport { fromGlobalId } from 'graphql-relay';\nimport getFieldNames from 'graphql-list-fields';\nimport deepcopy from 'deepcopy';\nimport pluralize from 'pluralize';\nimport * as defaultGraphQLTypes from './defaultGraphQLTypes';\nimport * as objectsQueries from '../helpers/objectsQueries';\nimport { ParseGraphQLClassConfig } from '../../Controllers/ParseGraphQLController';\nimport { transformClassNameToGraphQL } from '../transformers/className';\nimport { extractKeysAndInclude } from '../parseGraphQLUtils';\n\nconst getParseClassQueryConfig = function (parseClassConfig: ?ParseGraphQLClassConfig) {\n  return (parseClassConfig && parseClassConfig.query) || {};\n};\n\nconst getQuery = async (parseClass, _source, args, context, queryInfo, parseClasses) => {\n  let { id } = args;\n  const { options } = args;\n  const { readPreference, includeReadPreference } = options || {};\n  const { config, auth, info } = context;\n  const selectedFields = getFieldNames(queryInfo);\n\n  const globalIdObject = fromGlobalId(id);\n\n  if (globalIdObject.type === parseClass.className) {\n    id = globalIdObject.id;\n  }\n\n  const { keys, include } = extractKeysAndInclude(selectedFields);\n\n  return await objectsQueries.getObject(\n    parseClass.className,\n    id,\n    keys,\n    include,\n    readPreference,\n    includeReadPreference,\n    config,\n    auth,\n    info,\n    parseClasses\n  );\n};\n\nconst load = function (parseGraphQLSchema, parseClass, parseClassConfig: ?ParseGraphQLClassConfig) {\n  const className = parseClass.className;\n  const graphQLClassName = transformClassNameToGraphQL(className);\n  const {\n    get: isGetEnabled = true,\n    find: isFindEnabled = true,\n    getAlias: getAlias = '',\n    findAlias: findAlias = '',\n  } = getParseClassQueryConfig(parseClassConfig);\n\n  const {\n    classGraphQLOutputType,\n    classGraphQLFindArgs,\n    classGraphQLFindResultType,\n  } = parseGraphQLSchema.parseClassTypes[className];\n\n  if (isGetEnabled) {\n    const lowerCaseClassName = graphQLClassName.charAt(0).toLowerCase() + graphQLClassName.slice(1);\n\n    const getGraphQLQueryName = getAlias || lowerCaseClassName;\n\n    parseGraphQLSchema.addGraphQLQuery(getGraphQLQueryName, {\n      description: `The ${getGraphQLQueryName} query can be used to get an object of the ${graphQLClassName} class by its id.`,\n      args: {\n        id: defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT,\n        options: defaultGraphQLTypes.READ_OPTIONS_ATT,\n      },\n      type: new GraphQLNonNull(classGraphQLOutputType || defaultGraphQLTypes.OBJECT),\n      async resolve(_source, args, context, queryInfo) {\n        try {\n          return await getQuery(\n            parseClass,\n            _source,\n            deepcopy(args),\n            context,\n            queryInfo,\n            parseGraphQLSchema.parseClasses\n          );\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      },\n    });\n  }\n\n  if (isFindEnabled) {\n    const lowerCaseClassName = graphQLClassName.charAt(0).toLowerCase() + graphQLClassName.slice(1);\n\n    const findGraphQLQueryName = findAlias || pluralize(lowerCaseClassName);\n\n    parseGraphQLSchema.addGraphQLQuery(findGraphQLQueryName, {\n      description: `The ${findGraphQLQueryName} query can be used to find objects of the ${graphQLClassName} class.`,\n      args: classGraphQLFindArgs,\n      type: new GraphQLNonNull(classGraphQLFindResultType || defaultGraphQLTypes.OBJECT),\n      async resolve(_source, args, context, queryInfo) {\n        try {\n          // Deep copy args to avoid internal re assign issue\n          const { where, order, skip, first, after, last, before, options } = deepcopy(args);\n          const { readPreference, includeReadPreference, subqueryReadPreference } = options || {};\n          const { config, auth, info } = context;\n          const selectedFields = getFieldNames(queryInfo);\n\n          const { keys, include } = extractKeysAndInclude(\n            selectedFields\n              .filter(field => field.startsWith('edges.node.'))\n              .map(field => field.replace('edges.node.', ''))\n              .filter(field => field.indexOf('edges.node') < 0)\n          );\n          const parseOrder = order && order.join(',');\n\n          return await objectsQueries.findObjects(\n            className,\n            where,\n            parseOrder,\n            skip,\n            first,\n            after,\n            last,\n            before,\n            keys,\n            include,\n            false,\n            readPreference,\n            includeReadPreference,\n            subqueryReadPreference,\n            config,\n            auth,\n            info,\n            selectedFields,\n            parseGraphQLSchema.parseClasses\n          );\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      },\n    });\n  }\n};\n\nexport { load };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cbfa164e1e5ba8ed83d230491e3b7bf4671995ec"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_wlp0cme8o=function(){return actualCoverage;};}return actualCoverage;}cov_wlp0cme8o();cov_wlp0cme8o().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_wlp0cme8o().s[1]++;exports.load=void 0;var _graphql=(cov_wlp0cme8o().s[2]++,require("graphql"));var _graphqlRelay=(cov_wlp0cme8o().s[3]++,require("graphql-relay"));var _graphqlListFields=(cov_wlp0cme8o().s[4]++,_interopRequireDefault(require("graphql-list-fields")));var _deepcopy=(cov_wlp0cme8o().s[5]++,_interopRequireDefault(require("deepcopy")));var _pluralize=(cov_wlp0cme8o().s[6]++,_interopRequireDefault(require("pluralize")));var defaultGraphQLTypes=(cov_wlp0cme8o().s[7]++,_interopRequireWildcard(require("./defaultGraphQLTypes")));var objectsQueries=(cov_wlp0cme8o().s[8]++,_interopRequireWildcard(require("../helpers/objectsQueries")));var _ParseGraphQLController=(cov_wlp0cme8o().s[9]++,require("../../Controllers/ParseGraphQLController"));var _className=(cov_wlp0cme8o().s[10]++,require("../transformers/className"));var _parseGraphQLUtils=(cov_wlp0cme8o().s[11]++,require("../parseGraphQLUtils"));function _getRequireWildcardCache(nodeInterop){cov_wlp0cme8o().f[0]++;cov_wlp0cme8o().s[12]++;if(typeof WeakMap!=="function"){cov_wlp0cme8o().b[0][0]++;cov_wlp0cme8o().s[13]++;return null;}else{cov_wlp0cme8o().b[0][1]++;}var cacheBabelInterop=(cov_wlp0cme8o().s[14]++,new WeakMap());var cacheNodeInterop=(cov_wlp0cme8o().s[15]++,new WeakMap());cov_wlp0cme8o().s[16]++;return(_getRequireWildcardCache=function(nodeInterop){cov_wlp0cme8o().f[1]++;cov_wlp0cme8o().s[17]++;return nodeInterop?(cov_wlp0cme8o().b[1][0]++,cacheNodeInterop):(cov_wlp0cme8o().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_wlp0cme8o().f[2]++;cov_wlp0cme8o().s[18]++;if((cov_wlp0cme8o().b[3][0]++,!nodeInterop)&&(cov_wlp0cme8o().b[3][1]++,obj)&&(cov_wlp0cme8o().b[3][2]++,obj.__esModule)){cov_wlp0cme8o().b[2][0]++;cov_wlp0cme8o().s[19]++;return obj;}else{cov_wlp0cme8o().b[2][1]++;}cov_wlp0cme8o().s[20]++;if((cov_wlp0cme8o().b[5][0]++,obj===null)||(cov_wlp0cme8o().b[5][1]++,typeof obj!=="object")&&(cov_wlp0cme8o().b[5][2]++,typeof obj!=="function")){cov_wlp0cme8o().b[4][0]++;cov_wlp0cme8o().s[21]++;return{default:obj};}else{cov_wlp0cme8o().b[4][1]++;}var cache=(cov_wlp0cme8o().s[22]++,_getRequireWildcardCache(nodeInterop));cov_wlp0cme8o().s[23]++;if((cov_wlp0cme8o().b[7][0]++,cache)&&(cov_wlp0cme8o().b[7][1]++,cache.has(obj))){cov_wlp0cme8o().b[6][0]++;cov_wlp0cme8o().s[24]++;return cache.get(obj);}else{cov_wlp0cme8o().b[6][1]++;}var newObj=(cov_wlp0cme8o().s[25]++,{});var hasPropertyDescriptor=(cov_wlp0cme8o().s[26]++,(cov_wlp0cme8o().b[8][0]++,Object.defineProperty)&&(cov_wlp0cme8o().b[8][1]++,Object.getOwnPropertyDescriptor));cov_wlp0cme8o().s[27]++;for(var key in obj){cov_wlp0cme8o().s[28]++;if((cov_wlp0cme8o().b[10][0]++,key!=="default")&&(cov_wlp0cme8o().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_wlp0cme8o().b[9][0]++;var desc=(cov_wlp0cme8o().s[29]++,hasPropertyDescriptor?(cov_wlp0cme8o().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_wlp0cme8o().b[11][1]++,null));cov_wlp0cme8o().s[30]++;if((cov_wlp0cme8o().b[13][0]++,desc)&&((cov_wlp0cme8o().b[13][1]++,desc.get)||(cov_wlp0cme8o().b[13][2]++,desc.set))){cov_wlp0cme8o().b[12][0]++;cov_wlp0cme8o().s[31]++;Object.defineProperty(newObj,key,desc);}else{cov_wlp0cme8o().b[12][1]++;cov_wlp0cme8o().s[32]++;newObj[key]=obj[key];}}else{cov_wlp0cme8o().b[9][1]++;}}cov_wlp0cme8o().s[33]++;newObj.default=obj;cov_wlp0cme8o().s[34]++;if(cache){cov_wlp0cme8o().b[14][0]++;cov_wlp0cme8o().s[35]++;cache.set(obj,newObj);}else{cov_wlp0cme8o().b[14][1]++;}cov_wlp0cme8o().s[36]++;return newObj;}function _interopRequireDefault(obj){cov_wlp0cme8o().f[3]++;cov_wlp0cme8o().s[37]++;return(cov_wlp0cme8o().b[16][0]++,obj)&&(cov_wlp0cme8o().b[16][1]++,obj.__esModule)?(cov_wlp0cme8o().b[15][0]++,obj):(cov_wlp0cme8o().b[15][1]++,{default:obj});}cov_wlp0cme8o().s[38]++;const getParseClassQueryConfig=function(parseClassConfig){cov_wlp0cme8o().f[4]++;cov_wlp0cme8o().s[39]++;return(cov_wlp0cme8o().b[17][0]++,parseClassConfig)&&(cov_wlp0cme8o().b[17][1]++,parseClassConfig.query)||(cov_wlp0cme8o().b[17][2]++,{});};cov_wlp0cme8o().s[40]++;const getQuery=async(parseClass,_source,args,context,queryInfo,parseClasses)=>{cov_wlp0cme8o().f[5]++;let{id}=(cov_wlp0cme8o().s[41]++,args);const{options}=(cov_wlp0cme8o().s[42]++,args);const{readPreference,includeReadPreference}=(cov_wlp0cme8o().s[43]++,(cov_wlp0cme8o().b[18][0]++,options)||(cov_wlp0cme8o().b[18][1]++,{}));const{config,auth,info}=(cov_wlp0cme8o().s[44]++,context);const selectedFields=(cov_wlp0cme8o().s[45]++,(0,_graphqlListFields.default)(queryInfo));const globalIdObject=(cov_wlp0cme8o().s[46]++,(0,_graphqlRelay.fromGlobalId)(id));cov_wlp0cme8o().s[47]++;if(globalIdObject.type===parseClass.className){cov_wlp0cme8o().b[19][0]++;cov_wlp0cme8o().s[48]++;id=globalIdObject.id;}else{cov_wlp0cme8o().b[19][1]++;}const{keys,include}=(cov_wlp0cme8o().s[49]++,(0,_parseGraphQLUtils.extractKeysAndInclude)(selectedFields));cov_wlp0cme8o().s[50]++;return await objectsQueries.getObject(parseClass.className,id,keys,include,readPreference,includeReadPreference,config,auth,info,parseClasses);};cov_wlp0cme8o().s[51]++;const load=function(parseGraphQLSchema,parseClass,parseClassConfig){cov_wlp0cme8o().f[6]++;const className=(cov_wlp0cme8o().s[52]++,parseClass.className);const graphQLClassName=(cov_wlp0cme8o().s[53]++,(0,_className.transformClassNameToGraphQL)(className));const{get:isGetEnabled=(cov_wlp0cme8o().b[20][0]++,true),find:isFindEnabled=(cov_wlp0cme8o().b[21][0]++,true),getAlias=(cov_wlp0cme8o().b[22][0]++,''),findAlias=(cov_wlp0cme8o().b[23][0]++,'')}=(cov_wlp0cme8o().s[54]++,getParseClassQueryConfig(parseClassConfig));const{classGraphQLOutputType,classGraphQLFindArgs,classGraphQLFindResultType}=(cov_wlp0cme8o().s[55]++,parseGraphQLSchema.parseClassTypes[className]);cov_wlp0cme8o().s[56]++;if(isGetEnabled){cov_wlp0cme8o().b[24][0]++;const lowerCaseClassName=(cov_wlp0cme8o().s[57]++,graphQLClassName.charAt(0).toLowerCase()+graphQLClassName.slice(1));const getGraphQLQueryName=(cov_wlp0cme8o().s[58]++,(cov_wlp0cme8o().b[25][0]++,getAlias)||(cov_wlp0cme8o().b[25][1]++,lowerCaseClassName));cov_wlp0cme8o().s[59]++;parseGraphQLSchema.addGraphQLQuery(getGraphQLQueryName,{description:`The ${getGraphQLQueryName} query can be used to get an object of the ${graphQLClassName} class by its id.`,args:{id:defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT,options:defaultGraphQLTypes.READ_OPTIONS_ATT},type:new _graphql.GraphQLNonNull((cov_wlp0cme8o().b[26][0]++,classGraphQLOutputType)||(cov_wlp0cme8o().b[26][1]++,defaultGraphQLTypes.OBJECT)),async resolve(_source,args,context,queryInfo){cov_wlp0cme8o().f[7]++;cov_wlp0cme8o().s[60]++;try{cov_wlp0cme8o().s[61]++;return await getQuery(parseClass,_source,(0,_deepcopy.default)(args),context,queryInfo,parseGraphQLSchema.parseClasses);}catch(e){cov_wlp0cme8o().s[62]++;parseGraphQLSchema.handleError(e);}}});}else{cov_wlp0cme8o().b[24][1]++;}cov_wlp0cme8o().s[63]++;if(isFindEnabled){cov_wlp0cme8o().b[27][0]++;const lowerCaseClassName=(cov_wlp0cme8o().s[64]++,graphQLClassName.charAt(0).toLowerCase()+graphQLClassName.slice(1));const findGraphQLQueryName=(cov_wlp0cme8o().s[65]++,(cov_wlp0cme8o().b[28][0]++,findAlias)||(cov_wlp0cme8o().b[28][1]++,(0,_pluralize.default)(lowerCaseClassName)));cov_wlp0cme8o().s[66]++;parseGraphQLSchema.addGraphQLQuery(findGraphQLQueryName,{description:`The ${findGraphQLQueryName} query can be used to find objects of the ${graphQLClassName} class.`,args:classGraphQLFindArgs,type:new _graphql.GraphQLNonNull((cov_wlp0cme8o().b[29][0]++,classGraphQLFindResultType)||(cov_wlp0cme8o().b[29][1]++,defaultGraphQLTypes.OBJECT)),async resolve(_source,args,context,queryInfo){cov_wlp0cme8o().f[8]++;cov_wlp0cme8o().s[67]++;try{// Deep copy args to avoid internal re assign issue
const{where,order,skip,first,after,last,before,options}=(cov_wlp0cme8o().s[68]++,(0,_deepcopy.default)(args));const{readPreference,includeReadPreference,subqueryReadPreference}=(cov_wlp0cme8o().s[69]++,(cov_wlp0cme8o().b[30][0]++,options)||(cov_wlp0cme8o().b[30][1]++,{}));const{config,auth,info}=(cov_wlp0cme8o().s[70]++,context);const selectedFields=(cov_wlp0cme8o().s[71]++,(0,_graphqlListFields.default)(queryInfo));const{keys,include}=(cov_wlp0cme8o().s[72]++,(0,_parseGraphQLUtils.extractKeysAndInclude)(selectedFields.filter(field=>{cov_wlp0cme8o().f[9]++;cov_wlp0cme8o().s[73]++;return field.startsWith('edges.node.');}).map(field=>{cov_wlp0cme8o().f[10]++;cov_wlp0cme8o().s[74]++;return field.replace('edges.node.','');}).filter(field=>{cov_wlp0cme8o().f[11]++;cov_wlp0cme8o().s[75]++;return field.indexOf('edges.node')<0;})));const parseOrder=(cov_wlp0cme8o().s[76]++,(cov_wlp0cme8o().b[31][0]++,order)&&(cov_wlp0cme8o().b[31][1]++,order.join(',')));cov_wlp0cme8o().s[77]++;return await objectsQueries.findObjects(className,where,parseOrder,skip,first,after,last,before,keys,include,false,readPreference,includeReadPreference,subqueryReadPreference,config,auth,info,selectedFields,parseGraphQLSchema.parseClasses);}catch(e){cov_wlp0cme8o().s[78]++;parseGraphQLSchema.handleError(e);}}});}else{cov_wlp0cme8o().b[27][1]++;}};cov_wlp0cme8o().s[79]++;exports.load=load;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,