{"version":3,"sources":["../src/triggers.js"],"names":["Types","beforeLogin","afterLogin","afterLogout","beforeSave","afterSave","beforeDelete","afterDelete","beforeFind","afterFind","beforeSaveFile","afterSaveFile","beforeDeleteFile","afterDeleteFile","beforeConnect","beforeSubscribe","afterEvent","FileClassName","ConnectClassName","baseStore","Validators","Object","keys","reduce","base","key","Functions","Jobs","LiveQuery","Triggers","freeze","getClassName","parseClass","className","validateClassNameForTriggers","type","_triggerStore","Category","getStore","category","name","applicationId","path","split","splice","Parse","store","component","undefined","add","handler","lastComponent","logger","warn","remove","get","addFunction","functionName","validationHandler","addJob","jobName","addTrigger","addFileTrigger","addConnectTrigger","addLiveQueryEventHandler","push","removeFunction","removeTrigger","_unregisterAll","forEach","appId","toJSONwithObjects","object","toJSON","stateController","CoreManager","getObjectStateController","pending","getPendingOps","_getStateIdentifier","val","_toFullJSON","getTrigger","triggerType","runTrigger","trigger","request","auth","maybeRunValidator","skipWithMasterKey","getFileTrigger","triggerExists","getFunction","getFunctionNames","functionNames","extractFunctionNames","namespace","value","getJob","getJobs","manager","getValidator","getRequestObject","parseObject","originalParseObject","config","context","triggerName","master","log","loggerController","headers","ip","original","assign","isMaster","user","installationId","getRequestQueryObject","query","count","isGet","getResponseObject","resolve","reject","success","response","objects","map","equals","_getSaveJSON","id","error","e","resolveError","code","Error","SCRIPT_FAILED","message","userIdForLog","logTriggerAfterHook","input","cleanInput","truncateLogMessage","JSON","stringify","info","logTriggerSuccessBeforeHook","result","cleanResult","logTriggerErrorBeforeHook","maybeRunAfterFindTrigger","Promise","fromJSON","then","results","maybeRunQueryTrigger","restWhere","restOptions","json","where","parseQuery","Query","withJSON","requestObject","queryResult","jsonQuery","limit","skip","include","excludeKeys","explain","order","hint","readPreference","includeReadPreference","subqueryReadPreference","err","defaultOpts","stack","theValidator","builtInTriggerValidator","catch","VALIDATION_ERROR","options","validateMasterKey","reqUser","existed","requireUser","requireAnyUserRoles","requireAllUserRoles","requireMaster","params","requiredParam","validateOptions","opt","opts","Array","isArray","includes","join","getType","fn","match","toString","toLowerCase","fields","optionPromises","default","set","constant","required","optional","valType","all","userRoles","requireAllRoles","promises","getUserRoles","roles","resolvedUserRoles","resolvedRequireAll","hasRole","some","requiredRole","userKeys","requireUserKeys","maybeRunTrigger","promise","inflate","data","restObject","copy","runLiveQueryEventHandlers","getRequestFileObject","fileObject","maybeRunFileTrigger","fileTrigger","file","fileSize"],"mappings":"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","sourcesContent":["// triggers.js\nimport Parse from 'parse/node';\nimport { logger } from './logger';\n\nexport const Types = {\n  beforeLogin: 'beforeLogin',\n  afterLogin: 'afterLogin',\n  afterLogout: 'afterLogout',\n  beforeSave: 'beforeSave',\n  afterSave: 'afterSave',\n  beforeDelete: 'beforeDelete',\n  afterDelete: 'afterDelete',\n  beforeFind: 'beforeFind',\n  afterFind: 'afterFind',\n  beforeSaveFile: 'beforeSaveFile',\n  afterSaveFile: 'afterSaveFile',\n  beforeDeleteFile: 'beforeDeleteFile',\n  afterDeleteFile: 'afterDeleteFile',\n  beforeConnect: 'beforeConnect',\n  beforeSubscribe: 'beforeSubscribe',\n  afterEvent: 'afterEvent',\n};\n\nconst FileClassName = '@File';\nconst ConnectClassName = '@Connect';\n\nconst baseStore = function () {\n  const Validators = Object.keys(Types).reduce(function (base, key) {\n    base[key] = {};\n    return base;\n  }, {});\n  const Functions = {};\n  const Jobs = {};\n  const LiveQuery = [];\n  const Triggers = Object.keys(Types).reduce(function (base, key) {\n    base[key] = {};\n    return base;\n  }, {});\n\n  return Object.freeze({\n    Functions,\n    Jobs,\n    Validators,\n    Triggers,\n    LiveQuery,\n  });\n};\n\nexport function getClassName(parseClass) {\n  if (parseClass && parseClass.className) {\n    return parseClass.className;\n  }\n  return parseClass;\n}\n\nfunction validateClassNameForTriggers(className, type) {\n  if (type == Types.beforeSave && className === '_PushStatus') {\n    // _PushStatus uses undocumented nested key increment ops\n    // allowing beforeSave would mess up the objects big time\n    // TODO: Allow proper documented way of using nested increment ops\n    throw 'Only afterSave is allowed on _PushStatus';\n  }\n  if ((type === Types.beforeLogin || type === Types.afterLogin) && className !== '_User') {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the _User class is allowed for the beforeLogin and afterLogin triggers';\n  }\n  if (type === Types.afterLogout && className !== '_Session') {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the _Session class is allowed for the afterLogout trigger.';\n  }\n  if (className === '_Session' && type !== Types.afterLogout) {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the afterLogout trigger is allowed for the _Session class.';\n  }\n  return className;\n}\n\nconst _triggerStore = {};\n\nconst Category = {\n  Functions: 'Functions',\n  Validators: 'Validators',\n  Jobs: 'Jobs',\n  Triggers: 'Triggers',\n};\n\nfunction getStore(category, name, applicationId) {\n  const path = name.split('.');\n  path.splice(-1); // remove last component\n  applicationId = applicationId || Parse.applicationId;\n  _triggerStore[applicationId] = _triggerStore[applicationId] || baseStore();\n  let store = _triggerStore[applicationId][category];\n  for (const component of path) {\n    store = store[component];\n    if (!store) {\n      return undefined;\n    }\n  }\n  return store;\n}\n\nfunction add(category, name, handler, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  if (store[lastComponent]) {\n    logger.warn(\n      `Warning: Duplicate cloud functions exist for ${lastComponent}. Only the last one will be used and the others will be ignored.`\n    );\n  }\n  store[lastComponent] = handler;\n}\n\nfunction remove(category, name, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  delete store[lastComponent];\n}\n\nfunction get(category, name, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  return store[lastComponent];\n}\n\nexport function addFunction(functionName, handler, validationHandler, applicationId) {\n  add(Category.Functions, functionName, handler, applicationId);\n  add(Category.Validators, functionName, validationHandler, applicationId);\n}\n\nexport function addJob(jobName, handler, applicationId) {\n  add(Category.Jobs, jobName, handler, applicationId);\n}\n\nexport function addTrigger(type, className, handler, applicationId, validationHandler) {\n  validateClassNameForTriggers(className, type);\n  add(Category.Triggers, `${type}.${className}`, handler, applicationId);\n  add(Category.Validators, `${type}.${className}`, validationHandler, applicationId);\n}\n\nexport function addFileTrigger(type, handler, applicationId, validationHandler) {\n  add(Category.Triggers, `${type}.${FileClassName}`, handler, applicationId);\n  add(Category.Validators, `${type}.${FileClassName}`, validationHandler, applicationId);\n}\n\nexport function addConnectTrigger(type, handler, applicationId, validationHandler) {\n  add(Category.Triggers, `${type}.${ConnectClassName}`, handler, applicationId);\n  add(Category.Validators, `${type}.${ConnectClassName}`, validationHandler, applicationId);\n}\n\nexport function addLiveQueryEventHandler(handler, applicationId) {\n  applicationId = applicationId || Parse.applicationId;\n  _triggerStore[applicationId] = _triggerStore[applicationId] || baseStore();\n  _triggerStore[applicationId].LiveQuery.push(handler);\n}\n\nexport function removeFunction(functionName, applicationId) {\n  remove(Category.Functions, functionName, applicationId);\n}\n\nexport function removeTrigger(type, className, applicationId) {\n  remove(Category.Triggers, `${type}.${className}`, applicationId);\n}\n\nexport function _unregisterAll() {\n  Object.keys(_triggerStore).forEach(appId => delete _triggerStore[appId]);\n}\n\nexport function toJSONwithObjects(object, className) {\n  if (!object || !object.toJSON) {\n    return {};\n  }\n  const toJSON = object.toJSON();\n  const stateController = Parse.CoreManager.getObjectStateController();\n  const [pending] = stateController.getPendingOps(object._getStateIdentifier());\n  for (const key in pending) {\n    const val = object.get(key);\n    if (!val || !val._toFullJSON) {\n      toJSON[key] = val;\n      continue;\n    }\n    toJSON[key] = val._toFullJSON();\n  }\n  if (className) {\n    toJSON.className = className;\n  }\n  return toJSON;\n}\n\nexport function getTrigger(className, triggerType, applicationId) {\n  if (!applicationId) {\n    throw 'Missing ApplicationID';\n  }\n  return get(Category.Triggers, `${triggerType}.${className}`, applicationId);\n}\n\nexport async function runTrigger(trigger, name, request, auth) {\n  if (!trigger) {\n    return;\n  }\n  await maybeRunValidator(request, name, auth);\n  if (request.skipWithMasterKey) {\n    return;\n  }\n  return await trigger(request);\n}\n\nexport function getFileTrigger(type, applicationId) {\n  return getTrigger(FileClassName, type, applicationId);\n}\n\nexport function triggerExists(className: string, type: string, applicationId: string): boolean {\n  return getTrigger(className, type, applicationId) != undefined;\n}\n\nexport function getFunction(functionName, applicationId) {\n  return get(Category.Functions, functionName, applicationId);\n}\n\nexport function getFunctionNames(applicationId) {\n  const store =\n    (_triggerStore[applicationId] && _triggerStore[applicationId][Category.Functions]) || {};\n  const functionNames = [];\n  const extractFunctionNames = (namespace, store) => {\n    Object.keys(store).forEach(name => {\n      const value = store[name];\n      if (namespace) {\n        name = `${namespace}.${name}`;\n      }\n      if (typeof value === 'function') {\n        functionNames.push(name);\n      } else {\n        extractFunctionNames(name, value);\n      }\n    });\n  };\n  extractFunctionNames(null, store);\n  return functionNames;\n}\n\nexport function getJob(jobName, applicationId) {\n  return get(Category.Jobs, jobName, applicationId);\n}\n\nexport function getJobs(applicationId) {\n  var manager = _triggerStore[applicationId];\n  if (manager && manager.Jobs) {\n    return manager.Jobs;\n  }\n  return undefined;\n}\n\nexport function getValidator(functionName, applicationId) {\n  return get(Category.Validators, functionName, applicationId);\n}\n\nexport function getRequestObject(\n  triggerType,\n  auth,\n  parseObject,\n  originalParseObject,\n  config,\n  context\n) {\n  const request = {\n    triggerName: triggerType,\n    object: parseObject,\n    master: false,\n    log: config.loggerController,\n    headers: config.headers,\n    ip: config.ip,\n  };\n\n  if (originalParseObject) {\n    request.original = originalParseObject;\n  }\n  if (\n    triggerType === Types.beforeSave ||\n    triggerType === Types.afterSave ||\n    triggerType === Types.beforeDelete ||\n    triggerType === Types.afterDelete ||\n    triggerType === Types.afterFind\n  ) {\n    // Set a copy of the context on the request object.\n    request.context = Object.assign({}, context);\n  }\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\nexport function getRequestQueryObject(triggerType, auth, query, count, config, context, isGet) {\n  isGet = !!isGet;\n\n  var request = {\n    triggerName: triggerType,\n    query,\n    master: false,\n    count,\n    log: config.loggerController,\n    isGet,\n    headers: config.headers,\n    ip: config.ip,\n    context: context || {},\n  };\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\n// Creates the response object, and uses the request object to pass data\n// The API will call this with REST API formatted objects, this will\n// transform them to Parse.Object instances expected by Cloud Code.\n// Any changes made to the object in a beforeSave will be included.\nexport function getResponseObject(request, resolve, reject) {\n  return {\n    success: function (response) {\n      if (request.triggerName === Types.afterFind) {\n        if (!response) {\n          response = request.objects;\n        }\n        response = response.map(object => {\n          return toJSONwithObjects(object);\n        });\n        return resolve(response);\n      }\n      // Use the JSON response\n      if (\n        response &&\n        typeof response === 'object' &&\n        !request.object.equals(response) &&\n        request.triggerName === Types.beforeSave\n      ) {\n        return resolve(response);\n      }\n      if (response && typeof response === 'object' && request.triggerName === Types.afterSave) {\n        return resolve(response);\n      }\n      if (request.triggerName === Types.afterSave) {\n        return resolve();\n      }\n      response = {};\n      if (request.triggerName === Types.beforeSave) {\n        response['object'] = request.object._getSaveJSON();\n        response['object']['objectId'] = request.object.id;\n      }\n      return resolve(response);\n    },\n    error: function (error) {\n      const e = resolveError(error, {\n        code: Parse.Error.SCRIPT_FAILED,\n        message: 'Script failed. Unknown error.',\n      });\n      reject(e);\n    },\n  };\n}\n\nfunction userIdForLog(auth) {\n  return auth && auth.user ? auth.user.id : undefined;\n}\n\nfunction logTriggerAfterHook(triggerType, className, input, auth) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  logger.info(\n    `${triggerType} triggered for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}`,\n    {\n      className,\n      triggerType,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nfunction logTriggerSuccessBeforeHook(triggerType, className, input, result, auth) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  const cleanResult = logger.truncateLogMessage(JSON.stringify(result));\n  logger.info(\n    `${triggerType} triggered for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}\\n  Result: ${cleanResult}`,\n    {\n      className,\n      triggerType,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nfunction logTriggerErrorBeforeHook(triggerType, className, input, auth, error) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  logger.error(\n    `${triggerType} failed for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}\\n  Error: ${JSON.stringify(error)}`,\n    {\n      className,\n      triggerType,\n      error,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nexport function maybeRunAfterFindTrigger(\n  triggerType,\n  auth,\n  className,\n  objects,\n  config,\n  query,\n  context\n) {\n  return new Promise((resolve, reject) => {\n    const trigger = getTrigger(className, triggerType, config.applicationId);\n    if (!trigger) {\n      return resolve();\n    }\n    const request = getRequestObject(triggerType, auth, null, null, config, context);\n    if (query) {\n      request.query = query;\n    }\n    const { success, error } = getResponseObject(\n      request,\n      object => {\n        resolve(object);\n      },\n      error => {\n        reject(error);\n      }\n    );\n    logTriggerSuccessBeforeHook(triggerType, className, 'AfterFind', JSON.stringify(objects), auth);\n    request.objects = objects.map(object => {\n      //setting the class name to transform into parse object\n      object.className = className;\n      return Parse.Object.fromJSON(object);\n    });\n    return Promise.resolve()\n      .then(() => {\n        return maybeRunValidator(request, `${triggerType}.${className}`, auth);\n      })\n      .then(() => {\n        if (request.skipWithMasterKey) {\n          return request.objects;\n        }\n        const response = trigger(request);\n        if (response && typeof response.then === 'function') {\n          return response.then(results => {\n            return results;\n          });\n        }\n        return response;\n      })\n      .then(success, error);\n  }).then(results => {\n    logTriggerAfterHook(triggerType, className, JSON.stringify(results), auth);\n    return results;\n  });\n}\n\nexport function maybeRunQueryTrigger(\n  triggerType,\n  className,\n  restWhere,\n  restOptions,\n  config,\n  auth,\n  context,\n  isGet\n) {\n  const trigger = getTrigger(className, triggerType, config.applicationId);\n  if (!trigger) {\n    return Promise.resolve({\n      restWhere,\n      restOptions,\n    });\n  }\n  const json = Object.assign({}, restOptions);\n  json.where = restWhere;\n\n  const parseQuery = new Parse.Query(className);\n  parseQuery.withJSON(json);\n\n  let count = false;\n  if (restOptions) {\n    count = !!restOptions.count;\n  }\n  const requestObject = getRequestQueryObject(\n    triggerType,\n    auth,\n    parseQuery,\n    count,\n    config,\n    context,\n    isGet\n  );\n  return Promise.resolve()\n    .then(() => {\n      return maybeRunValidator(requestObject, `${triggerType}.${className}`, auth);\n    })\n    .then(() => {\n      if (requestObject.skipWithMasterKey) {\n        return requestObject.query;\n      }\n      return trigger(requestObject);\n    })\n    .then(\n      result => {\n        let queryResult = parseQuery;\n        if (result && result instanceof Parse.Query) {\n          queryResult = result;\n        }\n        const jsonQuery = queryResult.toJSON();\n        if (jsonQuery.where) {\n          restWhere = jsonQuery.where;\n        }\n        if (jsonQuery.limit) {\n          restOptions = restOptions || {};\n          restOptions.limit = jsonQuery.limit;\n        }\n        if (jsonQuery.skip) {\n          restOptions = restOptions || {};\n          restOptions.skip = jsonQuery.skip;\n        }\n        if (jsonQuery.include) {\n          restOptions = restOptions || {};\n          restOptions.include = jsonQuery.include;\n        }\n        if (jsonQuery.excludeKeys) {\n          restOptions = restOptions || {};\n          restOptions.excludeKeys = jsonQuery.excludeKeys;\n        }\n        if (jsonQuery.explain) {\n          restOptions = restOptions || {};\n          restOptions.explain = jsonQuery.explain;\n        }\n        if (jsonQuery.keys) {\n          restOptions = restOptions || {};\n          restOptions.keys = jsonQuery.keys;\n        }\n        if (jsonQuery.order) {\n          restOptions = restOptions || {};\n          restOptions.order = jsonQuery.order;\n        }\n        if (jsonQuery.hint) {\n          restOptions = restOptions || {};\n          restOptions.hint = jsonQuery.hint;\n        }\n        if (requestObject.readPreference) {\n          restOptions = restOptions || {};\n          restOptions.readPreference = requestObject.readPreference;\n        }\n        if (requestObject.includeReadPreference) {\n          restOptions = restOptions || {};\n          restOptions.includeReadPreference = requestObject.includeReadPreference;\n        }\n        if (requestObject.subqueryReadPreference) {\n          restOptions = restOptions || {};\n          restOptions.subqueryReadPreference = requestObject.subqueryReadPreference;\n        }\n        return {\n          restWhere,\n          restOptions,\n        };\n      },\n      err => {\n        const error = resolveError(err, {\n          code: Parse.Error.SCRIPT_FAILED,\n          message: 'Script failed. Unknown error.',\n        });\n        throw error;\n      }\n    );\n}\n\nexport function resolveError(message, defaultOpts) {\n  if (!defaultOpts) {\n    defaultOpts = {};\n  }\n  if (!message) {\n    return new Parse.Error(\n      defaultOpts.code || Parse.Error.SCRIPT_FAILED,\n      defaultOpts.message || 'Script failed.'\n    );\n  }\n  if (message instanceof Parse.Error) {\n    return message;\n  }\n\n  const code = defaultOpts.code || Parse.Error.SCRIPT_FAILED;\n  // If it's an error, mark it as a script failed\n  if (typeof message === 'string') {\n    return new Parse.Error(code, message);\n  }\n  const error = new Parse.Error(code, message.message || message);\n  if (message instanceof Error) {\n    error.stack = message.stack;\n  }\n  return error;\n}\nexport function maybeRunValidator(request, functionName, auth) {\n  const theValidator = getValidator(functionName, Parse.applicationId);\n  if (!theValidator) {\n    return;\n  }\n  if (typeof theValidator === 'object' && theValidator.skipWithMasterKey && request.master) {\n    request.skipWithMasterKey = true;\n  }\n  return new Promise((resolve, reject) => {\n    return Promise.resolve()\n      .then(() => {\n        return typeof theValidator === 'object'\n          ? builtInTriggerValidator(theValidator, request, auth)\n          : theValidator(request);\n      })\n      .then(() => {\n        resolve();\n      })\n      .catch(e => {\n        const error = resolveError(e, {\n          code: Parse.Error.VALIDATION_ERROR,\n          message: 'Validation failed.',\n        });\n        reject(error);\n      });\n  });\n}\nasync function builtInTriggerValidator(options, request, auth) {\n  if (request.master && !options.validateMasterKey) {\n    return;\n  }\n  let reqUser = request.user;\n  if (\n    !reqUser &&\n    request.object &&\n    request.object.className === '_User' &&\n    !request.object.existed()\n  ) {\n    reqUser = request.object;\n  }\n  if (\n    (options.requireUser || options.requireAnyUserRoles || options.requireAllUserRoles) &&\n    !reqUser\n  ) {\n    throw 'Validation failed. Please login to continue.';\n  }\n  if (options.requireMaster && !request.master) {\n    throw 'Validation failed. Master key is required to complete this request.';\n  }\n  let params = request.params || {};\n  if (request.object) {\n    params = request.object.toJSON();\n  }\n  const requiredParam = key => {\n    const value = params[key];\n    if (value == null) {\n      throw `Validation failed. Please specify data for ${key}.`;\n    }\n  };\n\n  const validateOptions = async (opt, key, val) => {\n    let opts = opt.options;\n    if (typeof opts === 'function') {\n      try {\n        const result = await opts(val);\n        if (!result && result != null) {\n          throw opt.error || `Validation failed. Invalid value for ${key}.`;\n        }\n      } catch (e) {\n        if (!e) {\n          throw opt.error || `Validation failed. Invalid value for ${key}.`;\n        }\n\n        throw opt.error || e.message || e;\n      }\n      return;\n    }\n    if (!Array.isArray(opts)) {\n      opts = [opt.options];\n    }\n\n    if (!opts.includes(val)) {\n      throw (\n        opt.error || `Validation failed. Invalid option for ${key}. Expected: ${opts.join(', ')}`\n      );\n    }\n  };\n\n  const getType = fn => {\n    const match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n    return (match ? match[1] : '').toLowerCase();\n  };\n  if (Array.isArray(options.fields)) {\n    for (const key of options.fields) {\n      requiredParam(key);\n    }\n  } else {\n    const optionPromises = [];\n    for (const key in options.fields) {\n      const opt = options.fields[key];\n      let val = params[key];\n      if (typeof opt === 'string') {\n        requiredParam(opt);\n      }\n      if (typeof opt === 'object') {\n        if (opt.default != null && val == null) {\n          val = opt.default;\n          params[key] = val;\n          if (request.object) {\n            request.object.set(key, val);\n          }\n        }\n        if (opt.constant && request.object) {\n          if (request.original) {\n            request.object.set(key, request.original.get(key));\n          } else if (opt.default != null) {\n            request.object.set(key, opt.default);\n          }\n        }\n        if (opt.required) {\n          requiredParam(key);\n        }\n        const optional = !opt.required && val === undefined;\n        if (!optional) {\n          if (opt.type) {\n            const type = getType(opt.type);\n            const valType = Array.isArray(val) ? 'array' : typeof val;\n            if (valType !== type) {\n              throw `Validation failed. Invalid type for ${key}. Expected: ${type}`;\n            }\n          }\n          if (opt.options) {\n            optionPromises.push(validateOptions(opt, key, val));\n          }\n        }\n      }\n    }\n    await Promise.all(optionPromises);\n  }\n  let userRoles = options.requireAnyUserRoles;\n  let requireAllRoles = options.requireAllUserRoles;\n  const promises = [Promise.resolve(), Promise.resolve(), Promise.resolve()];\n  if (userRoles || requireAllRoles) {\n    promises[0] = auth.getUserRoles();\n  }\n  if (typeof userRoles === 'function') {\n    promises[1] = userRoles();\n  }\n  if (typeof requireAllRoles === 'function') {\n    promises[2] = requireAllRoles();\n  }\n  const [roles, resolvedUserRoles, resolvedRequireAll] = await Promise.all(promises);\n  if (resolvedUserRoles && Array.isArray(resolvedUserRoles)) {\n    userRoles = resolvedUserRoles;\n  }\n  if (resolvedRequireAll && Array.isArray(resolvedRequireAll)) {\n    requireAllRoles = resolvedRequireAll;\n  }\n  if (userRoles) {\n    const hasRole = userRoles.some(requiredRole => roles.includes(`role:${requiredRole}`));\n    if (!hasRole) {\n      throw `Validation failed. User does not match the required roles.`;\n    }\n  }\n  if (requireAllRoles) {\n    for (const requiredRole of requireAllRoles) {\n      if (!roles.includes(`role:${requiredRole}`)) {\n        throw `Validation failed. User does not match all the required roles.`;\n      }\n    }\n  }\n  const userKeys = options.requireUserKeys || [];\n  if (Array.isArray(userKeys)) {\n    for (const key of userKeys) {\n      if (!reqUser) {\n        throw 'Please login to make this request.';\n      }\n\n      if (reqUser.get(key) == null) {\n        throw `Validation failed. Please set data for ${key} on your account.`;\n      }\n    }\n  } else if (typeof userKeys === 'object') {\n    const optionPromises = [];\n    for (const key in options.requireUserKeys) {\n      const opt = options.requireUserKeys[key];\n      if (opt.options) {\n        optionPromises.push(validateOptions(opt, key, reqUser.get(key)));\n      }\n    }\n    await Promise.all(optionPromises);\n  }\n}\n\n// To be used as part of the promise chain when saving/deleting an object\n// Will resolve successfully if no trigger is configured\n// Resolves to an object, empty or containing an object key. A beforeSave\n// trigger will set the object key to the rest format object to save.\n// originalParseObject is optional, we only need that for before/afterSave functions\nexport function maybeRunTrigger(\n  triggerType,\n  auth,\n  parseObject,\n  originalParseObject,\n  config,\n  context\n) {\n  if (!parseObject) {\n    return Promise.resolve({});\n  }\n  return new Promise(function (resolve, reject) {\n    var trigger = getTrigger(parseObject.className, triggerType, config.applicationId);\n    if (!trigger) return resolve();\n    var request = getRequestObject(\n      triggerType,\n      auth,\n      parseObject,\n      originalParseObject,\n      config,\n      context\n    );\n    var { success, error } = getResponseObject(\n      request,\n      object => {\n        logTriggerSuccessBeforeHook(\n          triggerType,\n          parseObject.className,\n          parseObject.toJSON(),\n          object,\n          auth\n        );\n        if (\n          triggerType === Types.beforeSave ||\n          triggerType === Types.afterSave ||\n          triggerType === Types.beforeDelete ||\n          triggerType === Types.afterDelete\n        ) {\n          Object.assign(context, request.context);\n        }\n        resolve(object);\n      },\n      error => {\n        logTriggerErrorBeforeHook(\n          triggerType,\n          parseObject.className,\n          parseObject.toJSON(),\n          auth,\n          error\n        );\n        reject(error);\n      }\n    );\n\n    // AfterSave and afterDelete triggers can return a promise, which if they\n    // do, needs to be resolved before this promise is resolved,\n    // so trigger execution is synced with RestWrite.execute() call.\n    // If triggers do not return a promise, they can run async code parallel\n    // to the RestWrite.execute() call.\n    return Promise.resolve()\n      .then(() => {\n        return maybeRunValidator(request, `${triggerType}.${parseObject.className}`, auth);\n      })\n      .then(() => {\n        if (request.skipWithMasterKey) {\n          return Promise.resolve();\n        }\n        const promise = trigger(request);\n        if (\n          triggerType === Types.afterSave ||\n          triggerType === Types.afterDelete ||\n          triggerType === Types.afterLogin\n        ) {\n          logTriggerAfterHook(triggerType, parseObject.className, parseObject.toJSON(), auth);\n        }\n        // beforeSave is expected to return null (nothing)\n        if (triggerType === Types.beforeSave) {\n          if (promise && typeof promise.then === 'function') {\n            return promise.then(response => {\n              // response.object may come from express routing before hook\n              if (response && response.object) {\n                return response;\n              }\n              return null;\n            });\n          }\n          return null;\n        }\n\n        return promise;\n      })\n      .then(success, error);\n  });\n}\n\n// Converts a REST-format object to a Parse.Object\n// data is either className or an object\nexport function inflate(data, restObject) {\n  var copy = typeof data == 'object' ? data : { className: data };\n  for (var key in restObject) {\n    copy[key] = restObject[key];\n  }\n  return Parse.Object.fromJSON(copy);\n}\n\nexport function runLiveQueryEventHandlers(data, applicationId = Parse.applicationId) {\n  if (!_triggerStore || !_triggerStore[applicationId] || !_triggerStore[applicationId].LiveQuery) {\n    return;\n  }\n  _triggerStore[applicationId].LiveQuery.forEach(handler => handler(data));\n}\n\nexport function getRequestFileObject(triggerType, auth, fileObject, config) {\n  const request = {\n    ...fileObject,\n    triggerName: triggerType,\n    master: false,\n    log: config.loggerController,\n    headers: config.headers,\n    ip: config.ip,\n  };\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\nexport async function maybeRunFileTrigger(triggerType, fileObject, config, auth) {\n  const fileTrigger = getFileTrigger(triggerType, config.applicationId);\n  if (typeof fileTrigger === 'function') {\n    try {\n      const request = getRequestFileObject(triggerType, auth, fileObject, config);\n      await maybeRunValidator(request, `${triggerType}.${FileClassName}`, auth);\n      if (request.skipWithMasterKey) {\n        return fileObject;\n      }\n      const result = await fileTrigger(request);\n      logTriggerSuccessBeforeHook(\n        triggerType,\n        'Parse.File',\n        { ...fileObject.file.toJSON(), fileSize: fileObject.fileSize },\n        result,\n        auth\n      );\n      return result || fileObject;\n    } catch (error) {\n      logTriggerErrorBeforeHook(\n        triggerType,\n        'Parse.File',\n        { ...fileObject.file.toJSON(), fileSize: fileObject.fileSize },\n        auth,\n        error\n      );\n      throw error;\n    }\n  }\n  return fileObject;\n}\n"]}