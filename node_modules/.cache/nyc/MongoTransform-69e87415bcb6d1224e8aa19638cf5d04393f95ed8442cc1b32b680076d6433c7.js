"use strict";function cov_2guvsetmr5(){var path="/parse-server/lib/Adapters/Storage/Mongo/MongoTransform.js";var hash="66470883f06e181fb49b9520f963445c79d89233";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Storage/Mongo/MongoTransform.js",statementMap:{"0":{start:{line:3,column:14},end:{line:3,column:64}},"1":{start:{line:5,column:14},end:{line:5,column:55}},"2":{start:{line:7,column:39},end:{line:7,column:93}},"3":{start:{line:9,column:54},end:{line:9,column:73}},"4":{start:{line:9,column:75},end:{line:9,column:330}},"5":{start:{line:9,column:125},end:{line:9,column:161}},"6":{start:{line:9,column:163},end:{line:9,column:296}},"7":{start:{line:9,column:185},end:{line:9,column:294}},"8":{start:{line:9,column:227},end:{line:9,column:290}},"9":{start:{line:9,column:297},end:{line:9,column:328}},"10":{start:{line:9,column:331},end:{line:9,column:343}},"11":{start:{line:11,column:33},end:{line:11,column:517}},"12":{start:{line:11,column:46},end:{line:11,column:47}},"13":{start:{line:11,column:91},end:{line:11,column:131}},"14":{start:{line:11,column:133},end:{line:11,column:515}},"15":{start:{line:11,column:146},end:{line:11,column:247}},"16":{start:{line:11,column:201},end:{line:11,column:243}},"17":{start:{line:11,column:255},end:{line:11,column:515}},"18":{start:{line:11,column:295},end:{line:11,column:369}},"19":{start:{line:11,column:379},end:{line:11,column:513}},"20":{start:{line:11,column:428},end:{line:11,column:509}},"21":{start:{line:11,column:518},end:{line:11,column:532}},"22":{start:{line:13,column:44},end:{line:13,column:195}},"23":{start:{line:13,column:62},end:{line:13,column:166}},"24":{start:{line:13,column:176},end:{line:13,column:193}},"25":{start:{line:13,column:196},end:{line:13,column:207}},"26":{start:{line:15,column:14},end:{line:15,column:32}},"27":{start:{line:17,column:12},end:{line:17,column:39}},"28":{start:{line:19,column:21},end:{line:48,column:1}},"29":{start:{line:21,column:2},end:{line:39,column:3}},"30":{start:{line:23,column:6},end:{line:23,column:19}},"31":{start:{line:26,column:6},end:{line:26,column:27}},"32":{start:{line:29,column:6},end:{line:29,column:27}},"33":{start:{line:32,column:6},end:{line:32,column:30}},"34":{start:{line:35,column:6},end:{line:35,column:26}},"35":{start:{line:38,column:6},end:{line:38,column:26}},"36":{start:{line:41,column:2},end:{line:45,column:3}},"37":{start:{line:42,column:4},end:{line:42,column:34}},"38":{start:{line:43,column:9},end:{line:45,column:3}},"39":{start:{line:44,column:4},end:{line:44,column:34}},"40":{start:{line:47,column:2},end:{line:47,column:19}},"41":{start:{line:50,column:35},end:{line:184,column:1}},"42":{start:{line:52,column:12},end:{line:52,column:19}},"43":{start:{line:53,column:18},end:{line:53,column:23}},"44":{start:{line:55,column:2},end:{line:133,column:3}},"45":{start:{line:58,column:6},end:{line:63,column:7}},"46":{start:{line:59,column:8},end:{line:62,column:10}},"47":{start:{line:65,column:6},end:{line:65,column:18}},"48":{start:{line:66,column:6},end:{line:66,column:12}},"49":{start:{line:70,column:6},end:{line:70,column:26}},"50":{start:{line:71,column:6},end:{line:71,column:23}},"51":{start:{line:72,column:6},end:{line:72,column:12}},"52":{start:{line:76,column:6},end:{line:76,column:26}},"53":{start:{line:77,column:6},end:{line:77,column:23}},"54":{start:{line:78,column:6},end:{line:78,column:12}},"55":{start:{line:82,column:6},end:{line:82,column:29}},"56":{start:{line:83,column:6},end:{line:83,column:12}},"57":{start:{line:87,column:6},end:{line:87,column:24}},"58":{start:{line:88,column:6},end:{line:88,column:23}},"59":{start:{line:89,column:6},end:{line:89,column:12}},"60":{start:{line:92,column:6},end:{line:92,column:45}},"61":{start:{line:93,column:6},end:{line:93,column:23}},"62":{start:{line:94,column:6},end:{line:94,column:12}},"63":{start:{line:97,column:6},end:{line:97,column:42}},"64":{start:{line:98,column:6},end:{line:98,column:23}},"65":{start:{line:99,column:6},end:{line:99,column:12}},"66":{start:{line:102,column:6},end:{line:102,column:34}},"67":{start:{line:103,column:6},end:{line:103,column:12}},"68":{start:{line:106,column:6},end:{line:106,column:43}},"69":{start:{line:107,column:6},end:{line:107,column:23}},"70":{start:{line:108,column:6},end:{line:108,column:12}},"71":{start:{line:111,column:6},end:{line:111,column:35}},"72":{start:{line:112,column:6},end:{line:112,column:23}},"73":{start:{line:113,column:6},end:{line:113,column:12}},"74":{start:{line:117,column:6},end:{line:120,column:8}},"75":{start:{line:124,column:6},end:{line:124,column:25}},"76":{start:{line:125,column:6},end:{line:125,column:23}},"77":{start:{line:126,column:6},end:{line:126,column:12}},"78":{start:{line:130,column:6},end:{line:130,column:25}},"79":{start:{line:131,column:6},end:{line:131,column:23}},"80":{start:{line:132,column:6},end:{line:132,column:12}},"81":{start:{line:135,column:2},end:{line:138,column:3}},"82":{start:{line:137,column:4},end:{line:137,column:22}},"83":{start:{line:141,column:14},end:{line:141,column:46}},"84":{start:{line:143,column:2},end:{line:159,column:3}},"85":{start:{line:144,column:4},end:{line:146,column:5}},"86":{start:{line:145,column:6},end:{line:145,column:30}},"87":{start:{line:148,column:4},end:{line:153,column:5}},"88":{start:{line:149,column:6},end:{line:152,column:8}},"89":{start:{line:155,column:4},end:{line:158,column:6}},"90":{start:{line:162,column:2},end:{line:168,column:3}},"91":{start:{line:163,column:4},end:{line:163,column:50}},"92":{start:{line:164,column:4},end:{line:167,column:6}},"93":{start:{line:171,column:2},end:{line:176,column:3}},"94":{start:{line:172,column:4},end:{line:175,column:6}},"95":{start:{line:179,column:2},end:{line:179,column:55}},"96":{start:{line:180,column:2},end:{line:183,column:4}},"97":{start:{line:186,column:16},end:{line:188,column:1}},"98":{start:{line:187,column:2},end:{line:187,column:42}},"99":{start:{line:190,column:26},end:{line:197,column:1}},"100":{start:{line:191,column:2},end:{line:193,column:3}},"101":{start:{line:192,column:4},end:{line:192,column:17}},"102":{start:{line:195,column:18},end:{line:195,column:58}},"103":{start:{line:196,column:2},end:{line:196,column:19}},"104":{start:{line:199,column:31},end:{line:217,column:1}},"105":{start:{line:200,column:2},end:{line:202,column:3}},"106":{start:{line:201,column:4},end:{line:201,column:16}},"107":{start:{line:204,column:29},end:{line:204,column:57}},"108":{start:{line:206,column:2},end:{line:208,column:3}},"109":{start:{line:207,column:4},end:{line:207,column:30}},"110":{start:{line:210,column:2},end:{line:214,column:3}},"111":{start:{line:210,column:15},end:{line:210,column:16}},"112":{start:{line:210,column:27},end:{line:210,column:40}},"113":{start:{line:211,column:4},end:{line:213,column:5}},"114":{start:{line:212,column:6},end:{line:212,column:19}},"115":{start:{line:216,column:2},end:{line:216,column:14}},"116":{start:{line:219,column:24},end:{line:223,column:1}},"117":{start:{line:220,column:2},end:{line:222,column:5}},"118":{start:{line:221,column:4},end:{line:221,column:26}},"119":{start:{line:225,column:31},end:{line:249,column:1}},"120":{start:{line:226,column:2},end:{line:228,column:3}},"121":{start:{line:226,column:96},end:{line:226,column:134}},"122":{start:{line:227,column:4},end:{line:227,column:118}},"123":{start:{line:231,column:14},end:{line:231,column:46}},"124":{start:{line:233,column:2},end:{line:235,column:3}},"125":{start:{line:234,column:4},end:{line:234,column:17}},"126":{start:{line:238,column:2},end:{line:240,column:3}},"127":{start:{line:239,column:4},end:{line:239,column:49}},"128":{start:{line:243,column:2},end:{line:245,column:3}},"129":{start:{line:244,column:4},end:{line:244,column:52}},"130":{start:{line:248,column:2},end:{line:248,column:54}},"131":{start:{line:251,column:20},end:{line:259,column:1}},"132":{start:{line:252,column:2},end:{line:256,column:3}},"133":{start:{line:253,column:4},end:{line:253,column:27}},"134":{start:{line:254,column:9},end:{line:256,column:3}},"135":{start:{line:255,column:4},end:{line:255,column:17}},"136":{start:{line:258,column:2},end:{line:258,column:15}},"137":{start:{line:262,column:2},end:{line:407,column:3}},"138":{start:{line:264,column:6},end:{line:269,column:7}},"139":{start:{line:265,column:8},end:{line:268,column:10}},"140":{start:{line:271,column:6},end:{line:271,column:26}},"141":{start:{line:272,column:6},end:{line:272,column:12}},"142":{start:{line:275,column:6},end:{line:280,column:7}},"143":{start:{line:276,column:8},end:{line:279,column:10}},"144":{start:{line:282,column:6},end:{line:282,column:26}},"145":{start:{line:283,column:6},end:{line:283,column:12}},"146":{start:{line:286,column:6},end:{line:291,column:7}},"147":{start:{line:287,column:8},end:{line:290,column:10}},"148":{start:{line:293,column:6},end:{line:293,column:12}},"149":{start:{line:296,column:6},end:{line:301,column:7}},"150":{start:{line:297,column:8},end:{line:300,column:10}},"151":{start:{line:303,column:6},end:{line:303,column:12}},"152":{start:{line:307,column:8},end:{line:309,column:9}},"153":{start:{line:308,column:10},end:{line:308,column:34}},"154":{start:{line:311,column:8},end:{line:314,column:10}},"155":{start:{line:318,column:6},end:{line:323,column:7}},"156":{start:{line:319,column:8},end:{line:322,column:10}},"157":{start:{line:325,column:6},end:{line:325,column:12}},"158":{start:{line:328,column:6},end:{line:331,column:8}},"159":{start:{line:334,column:6},end:{line:337,column:8}},"160":{start:{line:340,column:6},end:{line:345,column:7}},"161":{start:{line:341,column:8},end:{line:344,column:10}},"162":{start:{line:347,column:6},end:{line:347,column:12}},"163":{start:{line:350,column:6},end:{line:355,column:7}},"164":{start:{line:351,column:8},end:{line:354,column:10}},"165":{start:{line:357,column:6},end:{line:357,column:12}},"166":{start:{line:363,column:6},end:{line:366,column:8}},"167":{start:{line:371,column:6},end:{line:374,column:8}},"168":{start:{line:373,column:37},end:{line:373,column:87}},"169":{start:{line:377,column:6},end:{line:382,column:7}},"170":{start:{line:378,column:8},end:{line:381,column:10}},"171":{start:{line:384,column:6},end:{line:384,column:25}},"172":{start:{line:385,column:6},end:{line:385,column:12}},"173":{start:{line:388,column:6},end:{line:391,column:8}},"174":{start:{line:396,column:30},end:{line:396,column:74}},"175":{start:{line:398,column:8},end:{line:405,column:9}},"176":{start:{line:399,column:27},end:{line:399,column:43}},"177":{start:{line:401,column:10},end:{line:404,column:12}},"178":{start:{line:409,column:30},end:{line:409,column:97}},"179":{start:{line:410,column:32},end:{line:410,column:101}},"180":{start:{line:411,column:16},end:{line:411,column:44}},"181":{start:{line:413,column:2},end:{line:415,column:3}},"182":{start:{line:414,column:4},end:{line:414,column:22}},"183":{start:{line:418,column:32},end:{line:418,column:72}},"184":{start:{line:420,column:2},end:{line:441,column:3}},"185":{start:{line:421,column:4},end:{line:426,column:5}},"186":{start:{line:422,column:6},end:{line:425,column:8}},"187":{start:{line:428,column:4},end:{line:435,column:5}},"188":{start:{line:429,column:6},end:{line:434,column:8}},"189":{start:{line:437,column:4},end:{line:440,column:6}},"190":{start:{line:443,column:2},end:{line:450,column:3}},"191":{start:{line:444,column:4},end:{line:449,column:6}},"192":{start:{line:453,column:23},end:{line:453,column:102}},"193":{start:{line:455,column:2},end:{line:462,column:3}},"194":{start:{line:456,column:4},end:{line:459,column:6}},"195":{start:{line:461,column:4},end:{line:461,column:101}},"196":{start:{line:469,column:21},end:{line:469,column:23}},"197":{start:{line:471,column:2},end:{line:474,column:3}},"198":{start:{line:472,column:16},end:{line:472,column:93}},"199":{start:{line:473,column:4},end:{line:473,column:36}},"200":{start:{line:476,column:2},end:{line:476,column:20}},"201":{start:{line:479,column:49},end:{line:608,column:1}},"202":{start:{line:484,column:2},end:{line:562,column:3}},"203":{start:{line:486,column:6},end:{line:489,column:8}},"204":{start:{line:492,column:6},end:{line:492,column:58}},"205":{start:{line:493,column:6},end:{line:493,column:107}},"206":{start:{line:494,column:6},end:{line:497,column:8}},"207":{start:{line:500,column:6},end:{line:500,column:58}},"208":{start:{line:501,column:6},end:{line:501,column:107}},"209":{start:{line:502,column:6},end:{line:505,column:8}},"210":{start:{line:508,column:6},end:{line:508,column:58}},"211":{start:{line:509,column:6},end:{line:509,column:107}},"212":{start:{line:510,column:6},end:{line:513,column:8}},"213":{start:{line:516,column:6},end:{line:516,column:58}},"214":{start:{line:517,column:6},end:{line:517,column:107}},"215":{start:{line:518,column:6},end:{line:521,column:8}},"216":{start:{line:524,column:6},end:{line:524,column:58}},"217":{start:{line:525,column:6},end:{line:525,column:107}},"218":{start:{line:526,column:6},end:{line:529,column:8}},"219":{start:{line:537,column:6},end:{line:540,column:8}},"220":{start:{line:543,column:6},end:{line:546,column:8}},"221":{start:{line:550,column:6},end:{line:552,column:7}},"222":{start:{line:551,column:8},end:{line:551,column:92}},"223":{start:{line:555,column:6},end:{line:560,column:7}},"224":{start:{line:556,column:8},end:{line:559,column:10}},"225":{start:{line:565,column:2},end:{line:571,column:3}},"226":{start:{line:568,column:4},end:{line:570,column:5}},"227":{start:{line:569,column:6},end:{line:569,column:32}},"228":{start:{line:574,column:14},end:{line:574,column:46}},"229":{start:{line:576,column:2},end:{line:581,column:3}},"230":{start:{line:577,column:4},end:{line:580,column:6}},"231":{start:{line:585,column:2},end:{line:587,column:3}},"232":{start:{line:586,column:4},end:{line:586,column:53}},"233":{start:{line:590,column:2},end:{line:596,column:3}},"234":{start:{line:591,column:4},end:{line:591,column:50}},"235":{start:{line:592,column:4},end:{line:595,column:6}},"236":{start:{line:599,column:2},end:{line:601,column:3}},"237":{start:{line:599,column:41},end:{line:599,column:79}},"238":{start:{line:600,column:4},end:{line:600,column:118}},"239":{start:{line:603,column:2},end:{line:603,column:55}},"240":{start:{line:604,column:2},end:{line:607,column:4}},"241":{start:{line:610,column:42},end:{line:641,column:1}},"242":{start:{line:611,column:2},end:{line:611,column:40}},"243":{start:{line:612,column:22},end:{line:612,column:24}},"244":{start:{line:614,column:2},end:{line:627,column:3}},"245":{start:{line:615,column:4},end:{line:617,column:5}},"246":{start:{line:616,column:6},end:{line:616,column:15}},"247":{start:{line:622,column:8},end:{line:622,column:86}},"248":{start:{line:624,column:4},end:{line:626,column:5}},"249":{start:{line:625,column:6},end:{line:625,column:31}},"250":{start:{line:630,column:2},end:{line:633,column:3}},"251":{start:{line:631,column:4},end:{line:631,column:91}},"252":{start:{line:632,column:4},end:{line:632,column:33}},"253":{start:{line:635,column:2},end:{line:638,column:3}},"254":{start:{line:636,column:4},end:{line:636,column:91}},"255":{start:{line:637,column:4},end:{line:637,column:33}},"256":{start:{line:640,column:2},end:{line:640,column:21}},"257":{start:{line:644,column:24},end:{line:683,column:1}},"258":{start:{line:645,column:22},end:{line:645,column:24}},"259":{start:{line:646,column:14},end:{line:646,column:38}},"260":{start:{line:648,column:2},end:{line:662,column:3}},"261":{start:{line:649,column:4},end:{line:649,column:26}},"262":{start:{line:651,column:4},end:{line:653,column:5}},"263":{start:{line:652,column:6},end:{line:652,column:43}},"264":{start:{line:655,column:4},end:{line:657,column:5}},"265":{start:{line:656,column:6},end:{line:656,column:43}},"266":{start:{line:659,column:4},end:{line:661,column:5}},"267":{start:{line:660,column:6},end:{line:660,column:39}},"268":{start:{line:664,column:2},end:{line:680,column:3}},"269":{start:{line:665,column:4},end:{line:667,column:5}},"270":{start:{line:666,column:6},end:{line:666,column:15}},"271":{start:{line:669,column:14},end:{line:669,column:100}},"272":{start:{line:673,column:4},end:{line:679,column:5}},"273":{start:{line:674,column:6},end:{line:674,column:70}},"274":{start:{line:675,column:6},end:{line:675,column:59}},"275":{start:{line:677,column:6},end:{line:677,column:54}},"276":{start:{line:678,column:6},end:{line:678,column:47}},"277":{start:{line:682,column:2},end:{line:682,column:21}},"278":{start:{line:686,column:21},end:{line:716,column:1}},"279":{start:{line:687,column:25},end:{line:687,column:54}},"280":{start:{line:689,column:15},end:{line:689,column:17}},"281":{start:{line:691,column:2},end:{line:699,column:3}},"282":{start:{line:692,column:4},end:{line:696,column:7}},"283":{start:{line:693,column:6},end:{line:695,column:8}},"284":{start:{line:698,column:4},end:{line:698,column:31}},"285":{start:{line:701,column:2},end:{line:713,column:3}},"286":{start:{line:702,column:4},end:{line:710,column:7}},"287":{start:{line:703,column:6},end:{line:709,column:7}},"288":{start:{line:704,column:8},end:{line:706,column:10}},"289":{start:{line:708,column:8},end:{line:708,column:29}},"290":{start:{line:712,column:4},end:{line:712,column:31}},"291":{start:{line:715,column:2},end:{line:715,column:24}},"292":{start:{line:722,column:30},end:{line:741,column:1}},"293":{start:{line:724,column:2},end:{line:740,column:3}},"294":{start:{line:725,column:4},end:{line:729,column:6}},"295":{start:{line:730,column:9},end:{line:740,column:3}},"296":{start:{line:731,column:4},end:{line:731,column:87}},"297":{start:{line:732,column:9},end:{line:740,column:3}},"298":{start:{line:733,column:4},end:{line:733,column:42}},"299":{start:{line:734,column:9},end:{line:740,column:3}},"300":{start:{line:735,column:4},end:{line:735,column:43}},"301":{start:{line:736,column:9},end:{line:740,column:3}},"302":{start:{line:737,column:4},end:{line:737,column:35}},"303":{start:{line:739,column:4},end:{line:739,column:16}},"304":{start:{line:751,column:2},end:{line:809,column:3}},"305":{start:{line:755,column:6},end:{line:755,column:18}},"306":{start:{line:758,column:6},end:{line:760,column:7}},"307":{start:{line:759,column:8},end:{line:759,column:46}},"308":{start:{line:762,column:6},end:{line:762,column:18}},"309":{start:{line:766,column:6},end:{line:766,column:89}},"310":{start:{line:769,column:6},end:{line:773,column:7}},"311":{start:{line:772,column:8},end:{line:772,column:20}},"312":{start:{line:775,column:6},end:{line:777,column:7}},"313":{start:{line:776,column:8},end:{line:776,column:20}},"314":{start:{line:780,column:6},end:{line:782,column:7}},"315":{start:{line:781,column:8},end:{line:781,column:52}},"316":{start:{line:784,column:6},end:{line:786,column:7}},"317":{start:{line:785,column:8},end:{line:785,column:46}},"318":{start:{line:788,column:6},end:{line:790,column:7}},"319":{start:{line:789,column:8},end:{line:789,column:47}},"320":{start:{line:792,column:6},end:{line:794,column:7}},"321":{start:{line:793,column:8},end:{line:793,column:50}},"322":{start:{line:796,column:6},end:{line:798,column:7}},"323":{start:{line:797,column:8},end:{line:797,column:49}},"324":{start:{line:800,column:6},end:{line:802,column:7}},"325":{start:{line:801,column:8},end:{line:801,column:46}},"326":{start:{line:804,column:6},end:{line:804,column:29}},"327":{start:{line:808,column:6},end:{line:808,column:103}},"328":{start:{line:813,column:2},end:{line:813,column:28}},"329":{start:{line:814,column:14},end:{line:814,column:29}},"330":{start:{line:816,column:2},end:{line:816,column:44}},"331":{start:{line:816,column:31},end:{line:816,column:42}},"332":{start:{line:817,column:17},end:{line:817,column:34}},"333":{start:{line:818,column:15},end:{line:818,column:48}},"334":{start:{line:820,column:2},end:{line:825,column:3}},"335":{start:{line:821,column:4},end:{line:824,column:6}},"336":{start:{line:827,column:2},end:{line:832,column:3}},"337":{start:{line:828,column:4},end:{line:831,column:6}},"338":{start:{line:835,column:2},end:{line:840,column:3}},"339":{start:{line:836,column:4},end:{line:836,column:27}},"340":{start:{line:839,column:4},end:{line:839,column:45}},"341":{start:{line:842,column:2},end:{line:847,column:3}},"342":{start:{line:843,column:4},end:{line:846,column:6}},"343":{start:{line:849,column:16},end:{line:849,column:18}},"344":{start:{line:851,column:2},end:{line:853,column:3}},"345":{start:{line:852,column:4},end:{line:852,column:47}},"346":{start:{line:855,column:16},end:{line:855,column:17}},"347":{start:{line:857,column:2},end:{line:919,column:3}},"348":{start:{line:858,column:16},end:{line:858,column:27}},"349":{start:{line:860,column:4},end:{line:865,column:5}},"350":{start:{line:861,column:6},end:{line:864,column:8}},"351":{start:{line:867,column:4},end:{line:918,column:5}},"352":{start:{line:872,column:8},end:{line:872,column:34}},"353":{start:{line:874,column:8},end:{line:874,column:14}},"354":{start:{line:880,column:8},end:{line:880,column:32}},"355":{start:{line:882,column:8},end:{line:882,column:14}},"356":{start:{line:887,column:8},end:{line:887,column:31}},"357":{start:{line:889,column:8},end:{line:889,column:14}},"358":{start:{line:895,column:8},end:{line:895,column:30}},"359":{start:{line:897,column:8},end:{line:897,column:14}},"360":{start:{line:903,column:8},end:{line:903,column:28}},"361":{start:{line:904,column:8},end:{line:904,column:14}},"362":{start:{line:910,column:8},end:{line:910,column:23}},"363":{start:{line:911,column:8},end:{line:911,column:14}},"364":{start:{line:914,column:8},end:{line:917,column:10}},"365":{start:{line:921,column:23},end:{line:921,column:37}},"366":{start:{line:923,column:2},end:{line:941,column:3}},"367":{start:{line:924,column:4},end:{line:928,column:6}},"368":{start:{line:929,column:9},end:{line:941,column:3}},"369":{start:{line:930,column:4},end:{line:934,column:6}},"370":{start:{line:936,column:4},end:{line:940,column:6}},"371":{start:{line:950,column:18},end:{line:950,column:63}},"372":{start:{line:952,column:2},end:{line:954,column:3}},"373":{start:{line:953,column:4},end:{line:953,column:27}},"374":{start:{line:956,column:28},end:{line:956,column:83}},"375":{start:{line:958,column:22},end:{line:966,column:3}},"376":{start:{line:959,column:19},end:{line:959,column:49}},"377":{start:{line:961,column:4},end:{line:963,column:5}},"378":{start:{line:962,column:6},end:{line:962,column:91}},"379":{start:{line:965,column:4},end:{line:965,column:18}},"380":{start:{line:972,column:13},end:{line:972,column:53}},"381":{start:{line:973,column:15},end:{line:973,column:17}},"382":{start:{line:975,column:2},end:{line:1273,column:3}},"383":{start:{line:976,column:4},end:{line:1272,column:5}},"384":{start:{line:985,column:22},end:{line:985,column:37}},"385":{start:{line:987,column:10},end:{line:1009,column:11}},"386":{start:{line:988,column:12},end:{line:990,column:13}},"387":{start:{line:989,column:14},end:{line:989,column:112}},"388":{start:{line:992,column:12},end:{line:997,column:13}},"389":{start:{line:996,column:16},end:{line:996,column:142}},"390":{start:{line:999,column:33},end:{line:999,column:70}},"391":{start:{line:1001,column:12},end:{line:1004,column:13}},"392":{start:{line:1002,column:14},end:{line:1002,column:48}},"393":{start:{line:1003,column:14},end:{line:1003,column:20}},"394":{start:{line:1006,column:12},end:{line:1006,column:84}},"395":{start:{line:1008,column:12},end:{line:1008,column:118}},"396":{start:{line:1011,column:10},end:{line:1011,column:41}},"397":{start:{line:1012,column:10},end:{line:1012,column:16}},"398":{start:{line:1018,column:22},end:{line:1018,column:37}},"399":{start:{line:1020,column:10},end:{line:1022,column:11}},"400":{start:{line:1021,column:12},end:{line:1021,column:85}},"401":{start:{line:1024,column:10},end:{line:1032,column:13}},"402":{start:{line:1025,column:12},end:{line:1031,column:22}},"403":{start:{line:1026,column:14},end:{line:1030,column:15}},"404":{start:{line:1027,column:16},end:{line:1027,column:46}},"405":{start:{line:1029,column:16},end:{line:1029,column:41}},"406":{start:{line:1033,column:10},end:{line:1033,column:16}},"407":{start:{line:1038,column:22},end:{line:1038,column:37}},"408":{start:{line:1040,column:10},end:{line:1042,column:11}},"409":{start:{line:1041,column:12},end:{line:1041,column:85}},"410":{start:{line:1044,column:10},end:{line:1044,column:55}},"411":{start:{line:1045,column:25},end:{line:1045,column:36}},"412":{start:{line:1047,column:10},end:{line:1049,column:11}},"413":{start:{line:1048,column:12},end:{line:1048,column:120}},"414":{start:{line:1051,column:10},end:{line:1051,column:16}},"415":{start:{line:1055,column:16},end:{line:1055,column:31}},"416":{start:{line:1057,column:8},end:{line:1059,column:9}},"417":{start:{line:1058,column:10},end:{line:1058,column:77}},"418":{start:{line:1061,column:8},end:{line:1061,column:24}},"419":{start:{line:1062,column:8},end:{line:1062,column:14}},"420":{start:{line:1066,column:22},end:{line:1066,column:37}},"421":{start:{line:1068,column:10},end:{line:1070,column:11}},"422":{start:{line:1069,column:12},end:{line:1069,column:100}},"423":{start:{line:1072,column:10},end:{line:1074,column:12}},"424":{start:{line:1075,column:10},end:{line:1075,column:16}},"425":{start:{line:1079,column:8},end:{line:1079,column:38}},"426":{start:{line:1080,column:8},end:{line:1080,column:14}},"427":{start:{line:1084,column:25},end:{line:1084,column:48}},"428":{start:{line:1086,column:10},end:{line:1088,column:11}},"429":{start:{line:1087,column:12},end:{line:1087,column:100}},"430":{start:{line:1090,column:10},end:{line:1096,column:11}},"431":{start:{line:1091,column:12},end:{line:1091,column:98}},"432":{start:{line:1093,column:12},end:{line:1095,column:14}},"433":{start:{line:1098,column:10},end:{line:1102,column:11}},"434":{start:{line:1099,column:12},end:{line:1099,column:102}},"435":{start:{line:1100,column:17},end:{line:1102,column:11}},"436":{start:{line:1101,column:12},end:{line:1101,column:53}},"437":{start:{line:1104,column:10},end:{line:1108,column:11}},"438":{start:{line:1105,column:12},end:{line:1105,column:108}},"439":{start:{line:1106,column:17},end:{line:1108,column:11}},"440":{start:{line:1107,column:12},end:{line:1107,column:63}},"441":{start:{line:1110,column:10},end:{line:1114,column:11}},"442":{start:{line:1111,column:12},end:{line:1111,column:113}},"443":{start:{line:1112,column:17},end:{line:1114,column:11}},"444":{start:{line:1113,column:12},end:{line:1113,column:73}},"445":{start:{line:1116,column:10},end:{line:1116,column:16}},"446":{start:{line:1121,column:24},end:{line:1121,column:39}},"447":{start:{line:1123,column:10},end:{line:1129,column:11}},"448":{start:{line:1124,column:12},end:{line:1126,column:14}},"449":{start:{line:1128,column:12},end:{line:1128,column:60}},"450":{start:{line:1131,column:10},end:{line:1131,column:16}},"451":{start:{line:1136,column:10},end:{line:1138,column:11}},"452":{start:{line:1137,column:12},end:{line:1137,column:18}},"453":{start:{line:1140,column:10},end:{line:1140,column:40}},"454":{start:{line:1141,column:10},end:{line:1141,column:16}},"455":{start:{line:1147,column:8},end:{line:1147,column:49}},"456":{start:{line:1148,column:8},end:{line:1148,column:14}},"457":{start:{line:1151,column:8},end:{line:1151,column:56}},"458":{start:{line:1152,column:8},end:{line:1152,column:14}},"459":{start:{line:1155,column:8},end:{line:1155,column:56}},"460":{start:{line:1156,column:8},end:{line:1156,column:14}},"461":{start:{line:1160,column:8},end:{line:1160,column:114}},"462":{start:{line:1163,column:18},end:{line:1163,column:41}},"463":{start:{line:1165,column:8},end:{line:1167,column:9}},"464":{start:{line:1166,column:10},end:{line:1166,column:86}},"465":{start:{line:1169,column:8},end:{line:1171,column:10}},"466":{start:{line:1172,column:8},end:{line:1172,column:14}},"467":{start:{line:1176,column:26},end:{line:1176,column:53}},"468":{start:{line:1177,column:31},end:{line:1177,column:63}},"469":{start:{line:1179,column:10},end:{line:1242,column:11}},"470":{start:{line:1182,column:12},end:{line:1196,column:13}},"471":{start:{line:1183,column:14},end:{line:1185,column:15}},"472":{start:{line:1184,column:16},end:{line:1184,column:149}},"473":{start:{line:1187,column:14},end:{line:1187,column:43}},"474":{start:{line:1188,column:19},end:{line:1196,column:13}},"475":{start:{line:1189,column:14},end:{line:1191,column:15}},"476":{start:{line:1190,column:16},end:{line:1190,column:134}},"477":{start:{line:1193,column:14},end:{line:1193,column:31}},"478":{start:{line:1195,column:14},end:{line:1195,column:150}},"479":{start:{line:1198,column:12},end:{line:1212,column:15}},"480":{start:{line:1199,column:14},end:{line:1203,column:15}},"481":{start:{line:1200,column:16},end:{line:1200,column:61}},"482":{start:{line:1202,column:16},end:{line:1202,column:29}},"483":{start:{line:1205,column:14},end:{line:1209,column:15}},"484":{start:{line:1206,column:16},end:{line:1206,column:88}},"485":{start:{line:1208,column:16},end:{line:1208,column:74}},"486":{start:{line:1211,column:14},end:{line:1211,column:55}},"487":{start:{line:1213,column:12},end:{line:1215,column:14}},"488":{start:{line:1216,column:17},end:{line:1242,column:11}},"489":{start:{line:1217,column:12},end:{line:1219,column:13}},"490":{start:{line:1218,column:14},end:{line:1218,column:151}},"491":{start:{line:1222,column:24},end:{line:1222,column:39}},"492":{start:{line:1224,column:12},end:{line:1228,column:13}},"493":{start:{line:1225,column:14},end:{line:1225,column:61}},"494":{start:{line:1226,column:19},end:{line:1228,column:13}},"495":{start:{line:1227,column:14},end:{line:1227,column:119}},"496":{start:{line:1230,column:12},end:{line:1230,column:70}},"497":{start:{line:1233,column:29},end:{line:1233,column:44}},"498":{start:{line:1235,column:12},end:{line:1237,column:13}},"499":{start:{line:1236,column:14},end:{line:1236,column:118}},"500":{start:{line:1239,column:12},end:{line:1241,column:14}},"501":{start:{line:1244,column:10},end:{line:1244,column:16}},"502":{start:{line:1249,column:24},end:{line:1249,column:49}},"503":{start:{line:1251,column:10},end:{line:1255,column:11}},"504":{start:{line:1252,column:12},end:{line:1252,column:114}},"505":{start:{line:1254,column:12},end:{line:1254,column:70}},"506":{start:{line:1257,column:10},end:{line:1262,column:12}},"507":{start:{line:1263,column:10},end:{line:1263,column:16}},"508":{start:{line:1267,column:8},end:{line:1269,column:9}},"509":{start:{line:1268,column:10},end:{line:1268,column:84}},"510":{start:{line:1271,column:8},end:{line:1271,column:31}},"511":{start:{line:1275,column:2},end:{line:1275,column:16}},"512":{start:{line:1292,column:2},end:{line:1358,column:3}},"513":{start:{line:1294,column:6},end:{line:1301,column:7}},"514":{start:{line:1295,column:8},end:{line:1295,column:25}},"515":{start:{line:1297,column:8},end:{line:1300,column:10}},"516":{start:{line:1304,column:6},end:{line:1306,column:7}},"517":{start:{line:1305,column:8},end:{line:1305,column:94}},"518":{start:{line:1308,column:6},end:{line:1315,column:7}},"519":{start:{line:1309,column:8},end:{line:1309,column:22}},"520":{start:{line:1311,column:8},end:{line:1314,column:10}},"521":{start:{line:1319,column:6},end:{line:1321,column:7}},"522":{start:{line:1320,column:8},end:{line:1320,column:91}},"523":{start:{line:1323,column:18},end:{line:1323,column:52}},"524":{start:{line:1325,column:6},end:{line:1338,column:7}},"525":{start:{line:1326,column:8},end:{line:1326,column:21}},"526":{start:{line:1328,column:22},end:{line:1331,column:15}},"527":{start:{line:1332,column:8},end:{line:1337,column:10}},"528":{start:{line:1341,column:6},end:{line:1343,column:7}},"529":{start:{line:1342,column:8},end:{line:1342,column:94}},"530":{start:{line:1345,column:21},end:{line:1345,column:55}},"531":{start:{line:1347,column:6},end:{line:1354,column:7}},"532":{start:{line:1348,column:8},end:{line:1348,column:18}},"533":{start:{line:1350,column:8},end:{line:1353,column:10}},"534":{start:{line:1357,column:6},end:{line:1357,column:107}},"535":{start:{line:1362,column:17},end:{line:1362,column:19}},"536":{start:{line:1363,column:2},end:{line:1365,column:5}},"537":{start:{line:1364,column:4},end:{line:1364,column:40}},"538":{start:{line:1366,column:2},end:{line:1366,column:16}},"539":{start:{line:1369,column:45},end:{line:1416,column:1}},"540":{start:{line:1370,column:2},end:{line:1415,column:3}},"541":{start:{line:1375,column:6},end:{line:1375,column:25}},"542":{start:{line:1379,column:6},end:{line:1379,column:64}},"543":{start:{line:1382,column:6},end:{line:1384,column:7}},"544":{start:{line:1383,column:8},end:{line:1383,column:20}},"545":{start:{line:1386,column:6},end:{line:1388,column:7}},"546":{start:{line:1387,column:8},end:{line:1387,column:69}},"547":{start:{line:1390,column:6},end:{line:1392,column:7}},"548":{start:{line:1391,column:8},end:{line:1391,column:42}},"549":{start:{line:1394,column:6},end:{line:1396,column:7}},"550":{start:{line:1395,column:8},end:{line:1395,column:38}},"551":{start:{line:1398,column:6},end:{line:1400,column:7}},"552":{start:{line:1399,column:8},end:{line:1399,column:33}},"553":{start:{line:1402,column:6},end:{line:1404,column:7}},"554":{start:{line:1403,column:8},end:{line:1403,column:54}},"555":{start:{line:1406,column:6},end:{line:1409,column:7}},"556":{start:{line:1407,column:8},end:{line:1407,column:51}},"557":{start:{line:1408,column:8},end:{line:1408,column:27}},"558":{start:{line:1411,column:6},end:{line:1411,column:74}},"559":{start:{line:1414,column:6},end:{line:1414,column:30}},"560":{start:{line:1418,column:31},end:{line:1430,column:1}},"561":{start:{line:1419,column:18},end:{line:1419,column:42}},"562":{start:{line:1421,column:2},end:{line:1423,column:3}},"563":{start:{line:1422,column:4},end:{line:1422,column:43}},"564":{start:{line:1425,column:2},end:{line:1429,column:4}},"565":{start:{line:1434,column:33},end:{line:1621,column:1}},"566":{start:{line:1435,column:2},end:{line:1620,column:3}},"567":{start:{line:1440,column:6},end:{line:1440,column:25}},"568":{start:{line:1444,column:6},end:{line:1444,column:52}},"569":{start:{line:1448,column:8},end:{line:1450,column:9}},"570":{start:{line:1449,column:10},end:{line:1449,column:22}},"571":{start:{line:1452,column:8},end:{line:1454,column:9}},"572":{start:{line:1453,column:10},end:{line:1453,column:71}},"573":{start:{line:1456,column:8},end:{line:1458,column:9}},"574":{start:{line:1457,column:10},end:{line:1457,column:44}},"575":{start:{line:1460,column:8},end:{line:1462,column:9}},"576":{start:{line:1461,column:10},end:{line:1461,column:40}},"577":{start:{line:1464,column:8},end:{line:1466,column:9}},"578":{start:{line:1465,column:10},end:{line:1465,column:35}},"579":{start:{line:1468,column:8},end:{line:1470,column:9}},"580":{start:{line:1469,column:10},end:{line:1469,column:56}},"581":{start:{line:1472,column:27},end:{line:1472,column:29}},"582":{start:{line:1474,column:8},end:{line:1479,column:9}},"583":{start:{line:1475,column:10},end:{line:1475,column:55}},"584":{start:{line:1476,column:10},end:{line:1476,column:55}},"585":{start:{line:1477,column:10},end:{line:1477,column:36}},"586":{start:{line:1478,column:10},end:{line:1478,column:36}},"587":{start:{line:1481,column:8},end:{line:1605,column:9}},"588":{start:{line:1482,column:10},end:{line:1604,column:11}},"589":{start:{line:1484,column:14},end:{line:1484,column:61}},"590":{start:{line:1485,column:14},end:{line:1485,column:20}},"591":{start:{line:1488,column:14},end:{line:1488,column:61}},"592":{start:{line:1489,column:14},end:{line:1489,column:20}},"593":{start:{line:1492,column:14},end:{line:1492,column:20}},"594":{start:{line:1504,column:14},end:{line:1504,column:49}},"595":{start:{line:1505,column:14},end:{line:1505,column:20}},"596":{start:{line:1508,column:14},end:{line:1508,column:60}},"597":{start:{line:1509,column:14},end:{line:1509,column:20}},"598":{start:{line:1513,column:14},end:{line:1513,column:86}},"599":{start:{line:1514,column:14},end:{line:1514,column:20}},"600":{start:{line:1518,column:14},end:{line:1518,column:86}},"601":{start:{line:1519,column:14},end:{line:1519,column:20}},"602":{start:{line:1523,column:14},end:{line:1523,column:82}},"603":{start:{line:1524,column:14},end:{line:1524,column:20}},"604":{start:{line:1528,column:14},end:{line:1528,column:85}},"605":{start:{line:1529,column:14},end:{line:1529,column:20}},"606":{start:{line:1533,column:14},end:{line:1533,column:57}},"607":{start:{line:1534,column:14},end:{line:1534,column:20}},"608":{start:{line:1537,column:14},end:{line:1541,column:15}},"609":{start:{line:1538,column:16},end:{line:1538,column:132}},"610":{start:{line:1540,column:16},end:{line:1540,column:58}},"611":{start:{line:1543,column:14},end:{line:1543,column:20}},"612":{start:{line:1547,column:34},end:{line:1547,column:75}},"613":{start:{line:1549,column:14},end:{line:1554,column:15}},"614":{start:{line:1550,column:31},end:{line:1550,column:47}},"615":{start:{line:1551,column:16},end:{line:1551,column:70}},"616":{start:{line:1552,column:16},end:{line:1552,column:68}},"617":{start:{line:1553,column:16},end:{line:1553,column:22}},"618":{start:{line:1556,column:14},end:{line:1601,column:15}},"619":{start:{line:1557,column:29},end:{line:1557,column:45}},"620":{start:{line:1559,column:16},end:{line:1563,column:17}},"621":{start:{line:1560,column:18},end:{line:1560,column:132}},"622":{start:{line:1562,column:18},end:{line:1562,column:24}},"623":{start:{line:1565,column:16},end:{line:1569,column:17}},"624":{start:{line:1566,column:18},end:{line:1566,column:128}},"625":{start:{line:1568,column:18},end:{line:1568,column:24}},"626":{start:{line:1571,column:16},end:{line:1573,column:17}},"627":{start:{line:1572,column:18},end:{line:1572,column:24}},"628":{start:{line:1575,column:16},end:{line:1575,column:94}},"629":{start:{line:1576,column:16},end:{line:1576,column:22}},"630":{start:{line:1577,column:21},end:{line:1601,column:15}},"631":{start:{line:1578,column:16},end:{line:1578,column:55}},"632":{start:{line:1580,column:28},end:{line:1580,column:44}},"633":{start:{line:1582,column:16},end:{line:1585,column:17}},"634":{start:{line:1583,column:18},end:{line:1583,column:68}},"635":{start:{line:1584,column:18},end:{line:1584,column:24}},"636":{start:{line:1587,column:16},end:{line:1590,column:17}},"637":{start:{line:1588,column:18},end:{line:1588,column:72}},"638":{start:{line:1589,column:18},end:{line:1589,column:24}},"639":{start:{line:1592,column:16},end:{line:1595,column:17}},"640":{start:{line:1593,column:18},end:{line:1593,column:71}},"641":{start:{line:1594,column:18},end:{line:1594,column:24}},"642":{start:{line:1597,column:16},end:{line:1600,column:17}},"643":{start:{line:1598,column:18},end:{line:1598,column:69}},"644":{start:{line:1599,column:18},end:{line:1599,column:24}},"645":{start:{line:1603,column:14},end:{line:1603,column:87}},"646":{start:{line:1607,column:35},end:{line:1607,column:127}},"647":{start:{line:1607,column:82},end:{line:1607,column:126}},"648":{start:{line:1608,column:31},end:{line:1608,column:33}},"649":{start:{line:1609,column:8},end:{line:1614,column:11}},"650":{start:{line:1610,column:10},end:{line:1613,column:12}},"651":{start:{line:1615,column:8},end:{line:1615,column:76}},"652":{start:{line:1619,column:6},end:{line:1619,column:30}},"653":{start:{line:1623,column:16},end:{line:1632,column:1}},"654":{start:{line:1625,column:4},end:{line:1625,column:30}},"655":{start:{line:1629,column:4},end:{line:1629,column:82}},"656":{start:{line:1633,column:17},end:{line:1671,column:1}},"657":{start:{line:1637,column:4},end:{line:1639,column:5}},"658":{start:{line:1638,column:6},end:{line:1638,column:19}},"659":{start:{line:1641,column:4},end:{line:1641,column:43}},"660":{start:{line:1647,column:4},end:{line:1651,column:5}},"661":{start:{line:1648,column:6},end:{line:1648,column:21}},"662":{start:{line:1650,column:6},end:{line:1650,column:47}},"663":{start:{line:1653,column:4},end:{line:1656,column:6}},"664":{start:{line:1660,column:4},end:{line:1660,column:74}},"665":{start:{line:1664,column:4},end:{line:1664,column:66}},"666":{start:{line:1668,column:4},end:{line:1668,column:83}},"667":{start:{line:1672,column:20},end:{line:1693,column:1}},"668":{start:{line:1674,column:4},end:{line:1678,column:6}},"669":{start:{line:1682,column:4},end:{line:1682,column:57}},"670":{start:{line:1686,column:4},end:{line:1686,column:43}},"671":{start:{line:1690,column:4},end:{line:1690,column:86}},"672":{start:{line:1694,column:19},end:{line:1766,column:1}},"673":{start:{line:1697,column:19},end:{line:1699,column:6}},"674":{start:{line:1698,column:6},end:{line:1698,column:34}},"675":{start:{line:1700,column:4},end:{line:1703,column:6}},"676":{start:{line:1707,column:19},end:{line:1707,column:40}},"677":{start:{line:1709,column:4},end:{line:1711,column:5}},"678":{start:{line:1710,column:6},end:{line:1710,column:19}},"679":{start:{line:1713,column:4},end:{line:1721,column:5}},"680":{start:{line:1713,column:17},end:{line:1713,column:18}},"681":{start:{line:1714,column:20},end:{line:1714,column:29}},"682":{start:{line:1716,column:6},end:{line:1718,column:7}},"683":{start:{line:1717,column:8},end:{line:1717,column:21}},"684":{start:{line:1720,column:6},end:{line:1720,column:75}},"685":{start:{line:1723,column:4},end:{line:1723,column:16}},"686":{start:{line:1727,column:17},end:{line:1727,column:33}},"687":{start:{line:1729,column:4},end:{line:1731,column:5}},"688":{start:{line:1730,column:6},end:{line:1730,column:29}},"689":{start:{line:1733,column:19},end:{line:1746,column:6}},"690":{start:{line:1734,column:23},end:{line:1734,column:25}},"691":{start:{line:1736,column:6},end:{line:1743,column:7}},"692":{start:{line:1736,column:19},end:{line:1736,column:20}},"693":{start:{line:1737,column:19},end:{line:1737,column:24}},"694":{start:{line:1739,column:8},end:{line:1742,column:9}},"695":{start:{line:1740,column:10},end:{line:1740,column:25}},"696":{start:{line:1741,column:10},end:{line:1741,column:16}},"697":{start:{line:1745,column:6},end:{line:1745,column:34}},"698":{start:{line:1748,column:4},end:{line:1750,column:5}},"699":{start:{line:1749,column:6},end:{line:1749,column:120}},"700":{start:{line:1753,column:4},end:{line:1755,column:7}},"701":{start:{line:1754,column:6},end:{line:1754,column:34}},"702":{start:{line:1756,column:4},end:{line:1759,column:6}},"703":{start:{line:1763,column:4},end:{line:1763,column:85}},"704":{start:{line:1767,column:16},end:{line:1787,column:1}},"705":{start:{line:1769,column:4},end:{line:1772,column:6}},"706":{start:{line:1776,column:4},end:{line:1776,column:38}},"707":{start:{line:1780,column:4},end:{line:1780,column:21}},"708":{start:{line:1784,column:4},end:{line:1784,column:82}},"709":{start:{line:1788,column:0},end:{line:1797,column:2}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:7,column:9},end:{line:7,column:31}},loc:{start:{line:7,column:37},end:{line:7,column:95}},line:7},"1":{name:"ownKeys",decl:{start:{line:9,column:9},end:{line:9,column:16}},loc:{start:{line:9,column:41},end:{line:9,column:345}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:210},end:{line:9,column:211}},loc:{start:{line:9,column:225},end:{line:9,column:292}},line:9},"3":{name:"_objectSpread",decl:{start:{line:11,column:9},end:{line:11,column:22}},loc:{start:{line:11,column:31},end:{line:11,column:534}},line:11},"4":{name:"(anonymous_4)",decl:{start:{line:11,column:184},end:{line:11,column:185}},loc:{start:{line:11,column:199},end:{line:11,column:245}},line:11},"5":{name:"(anonymous_5)",decl:{start:{line:11,column:411},end:{line:11,column:412}},loc:{start:{line:11,column:426},end:{line:11,column:511}},line:11},"6":{name:"_defineProperty",decl:{start:{line:13,column:9},end:{line:13,column:24}},loc:{start:{line:13,column:42},end:{line:13,column:209}},line:13},"7":{name:"(anonymous_7)",decl:{start:{line:19,column:21},end:{line:19,column:22}},loc:{start:{line:19,column:55},end:{line:48,column:1}},line:19},"8":{name:"(anonymous_8)",decl:{start:{line:50,column:35},end:{line:50,column:36}},loc:{start:{line:50,column:89},end:{line:184,column:1}},line:50},"9":{name:"(anonymous_9)",decl:{start:{line:186,column:16},end:{line:186,column:17}},loc:{start:{line:186,column:25},end:{line:188,column:1}},line:186},"10":{name:"(anonymous_10)",decl:{start:{line:190,column:26},end:{line:190,column:27}},loc:{start:{line:190,column:35},end:{line:197,column:1}},line:190},"11":{name:"(anonymous_11)",decl:{start:{line:199,column:31},end:{line:199,column:32}},loc:{start:{line:199,column:41},end:{line:217,column:1}},line:199},"12":{name:"(anonymous_12)",decl:{start:{line:219,column:24},end:{line:219,column:25}},loc:{start:{line:219,column:34},end:{line:223,column:1}},line:219},"13":{name:"(anonymous_13)",decl:{start:{line:220,column:21},end:{line:220,column:22}},loc:{start:{line:220,column:38},end:{line:222,column:3}},line:220},"14":{name:"(anonymous_14)",decl:{start:{line:225,column:31},end:{line:225,column:32}},loc:{start:{line:225,column:44},end:{line:249,column:1}},line:225},"15":{name:"(anonymous_15)",decl:{start:{line:226,column:89},end:{line:226,column:90}},loc:{start:{line:226,column:96},end:{line:226,column:134}},line:226},"16":{name:"(anonymous_16)",decl:{start:{line:251,column:20},end:{line:251,column:21}},loc:{start:{line:251,column:29},end:{line:259,column:1}},line:251},"17":{name:"transformQueryKeyValue",decl:{start:{line:261,column:9},end:{line:261,column:31}},loc:{start:{line:261,column:78},end:{line:463,column:1}},line:261},"18":{name:"(anonymous_18)",decl:{start:{line:373,column:25},end:{line:373,column:26}},loc:{start:{line:373,column:37},end:{line:373,column:87}},line:373},"19":{name:"transformWhere",decl:{start:{line:468,column:9},end:{line:468,column:23}},loc:{start:{line:468,column:69},end:{line:477,column:1}},line:468},"20":{name:"(anonymous_20)",decl:{start:{line:479,column:49},end:{line:479,column:50}},loc:{start:{line:479,column:81},end:{line:608,column:1}},line:479},"21":{name:"(anonymous_21)",decl:{start:{line:599,column:34},end:{line:599,column:35}},loc:{start:{line:599,column:41},end:{line:599,column:79}},line:599},"22":{name:"(anonymous_22)",decl:{start:{line:610,column:42},end:{line:610,column:43}},loc:{start:{line:610,column:77},end:{line:641,column:1}},line:610},"23":{name:"(anonymous_23)",decl:{start:{line:644,column:24},end:{line:644,column:25}},loc:{start:{line:644,column:70},end:{line:683,column:1}},line:644},"24":{name:"(anonymous_24)",decl:{start:{line:686,column:21},end:{line:686,column:22}},loc:{start:{line:686,column:35},end:{line:716,column:1}},line:686},"25":{name:"(anonymous_25)",decl:{start:{line:692,column:30},end:{line:692,column:31}},loc:{start:{line:692,column:39},end:{line:696,column:5}},line:692},"26":{name:"(anonymous_26)",decl:{start:{line:702,column:30},end:{line:702,column:31}},loc:{start:{line:702,column:39},end:{line:710,column:5}},line:702},"27":{name:"CannotTransform",decl:{start:{line:720,column:9},end:{line:720,column:24}},loc:{start:{line:720,column:27},end:{line:720,column:29}},line:720},"28":{name:"(anonymous_28)",decl:{start:{line:722,column:30},end:{line:722,column:31}},loc:{start:{line:722,column:38},end:{line:741,column:1}},line:722},"29":{name:"transformTopLevelAtom",decl:{start:{line:750,column:9},end:{line:750,column:30}},loc:{start:{line:750,column:44},end:{line:810,column:1}},line:750},"30":{name:"relativeTimeToDate",decl:{start:{line:812,column:9},end:{line:812,column:27}},loc:{start:{line:812,column:52},end:{line:942,column:1}},line:812},"31":{name:"(anonymous_31)",decl:{start:{line:816,column:23},end:{line:816,column:24}},loc:{start:{line:816,column:31},end:{line:816,column:42}},line:816},"32":{name:"transformConstraint",decl:{start:{line:949,column:9},end:{line:949,column:28}},loc:{start:{line:949,column:63},end:{line:1276,column:1}},line:949},"33":{name:"(anonymous_33)",decl:{start:{line:958,column:22},end:{line:958,column:23}},loc:{start:{line:958,column:30},end:{line:966,column:3}},line:958},"34":{name:"(anonymous_34)",decl:{start:{line:1024,column:53},end:{line:1024,column:54}},loc:{start:{line:1024,column:62},end:{line:1032,column:11}},line:1024},"35":{name:"(anonymous_35)",decl:{start:{line:1025,column:20},end:{line:1025,column:21}},loc:{start:{line:1025,column:28},end:{line:1031,column:13}},line:1025},"36":{name:"(anonymous_36)",decl:{start:{line:1198,column:32},end:{line:1198,column:33}},loc:{start:{line:1198,column:41},end:{line:1212,column:13}},line:1198},"37":{name:"transformUpdateOperator",decl:{start:{line:1287,column:9},end:{line:1287,column:32}},loc:{start:{line:1291,column:12},end:{line:1359,column:1}},line:1291},"38":{name:"mapValues",decl:{start:{line:1361,column:9},end:{line:1361,column:18}},loc:{start:{line:1361,column:37},end:{line:1367,column:1}},line:1361},"39":{name:"(anonymous_39)",decl:{start:{line:1363,column:30},end:{line:1363,column:31}},loc:{start:{line:1363,column:37},end:{line:1365,column:3}},line:1363},"40":{name:"(anonymous_40)",decl:{start:{line:1369,column:45},end:{line:1369,column:46}},loc:{start:{line:1369,column:60},end:{line:1416,column:1}},line:1369},"41":{name:"(anonymous_41)",decl:{start:{line:1418,column:31},end:{line:1418,column:32}},loc:{start:{line:1418,column:65},end:{line:1430,column:1}},line:1418},"42":{name:"(anonymous_42)",decl:{start:{line:1434,column:33},end:{line:1434,column:34}},loc:{start:{line:1434,column:69},end:{line:1621,column:1}},line:1434},"43":{name:"(anonymous_43)",decl:{start:{line:1607,column:69},end:{line:1607,column:70}},loc:{start:{line:1607,column:82},end:{line:1607,column:126}},line:1607},"44":{name:"(anonymous_44)",decl:{start:{line:1609,column:35},end:{line:1609,column:36}},loc:{start:{line:1609,column:56},end:{line:1614,column:9}},line:1609},"45":{name:"(anonymous_45)",decl:{start:{line:1624,column:2},end:{line:1624,column:3}},loc:{start:{line:1624,column:23},end:{line:1626,column:3}},line:1624},"46":{name:"(anonymous_46)",decl:{start:{line:1628,column:2},end:{line:1628,column:3}},loc:{start:{line:1628,column:21},end:{line:1630,column:3}},line:1628},"47":{name:"(anonymous_47)",decl:{start:{line:1636,column:2},end:{line:1636,column:3}},loc:{start:{line:1636,column:24},end:{line:1642,column:3}},line:1636},"48":{name:"(anonymous_48)",decl:{start:{line:1644,column:2},end:{line:1644,column:3}},loc:{start:{line:1644,column:25},end:{line:1657,column:3}},line:1644},"49":{name:"(anonymous_49)",decl:{start:{line:1659,column:2},end:{line:1659,column:3}},loc:{start:{line:1659,column:32},end:{line:1661,column:3}},line:1659},"50":{name:"(anonymous_50)",decl:{start:{line:1663,column:2},end:{line:1663,column:3}},loc:{start:{line:1663,column:23},end:{line:1665,column:3}},line:1663},"51":{name:"(anonymous_51)",decl:{start:{line:1667,column:2},end:{line:1667,column:3}},loc:{start:{line:1667,column:21},end:{line:1669,column:3}},line:1667},"52":{name:"(anonymous_52)",decl:{start:{line:1673,column:2},end:{line:1673,column:3}},loc:{start:{line:1673,column:25},end:{line:1679,column:3}},line:1673},"53":{name:"(anonymous_53)",decl:{start:{line:1681,column:2},end:{line:1681,column:3}},loc:{start:{line:1681,column:32},end:{line:1683,column:3}},line:1681},"54":{name:"(anonymous_54)",decl:{start:{line:1685,column:2},end:{line:1685,column:3}},loc:{start:{line:1685,column:23},end:{line:1687,column:3}},line:1685},"55":{name:"(anonymous_55)",decl:{start:{line:1689,column:2},end:{line:1689,column:3}},loc:{start:{line:1689,column:21},end:{line:1691,column:3}},line:1689},"56":{name:"(anonymous_56)",decl:{start:{line:1695,column:2},end:{line:1695,column:3}},loc:{start:{line:1695,column:25},end:{line:1704,column:3}},line:1695},"57":{name:"(anonymous_57)",decl:{start:{line:1697,column:45},end:{line:1697,column:46}},loc:{start:{line:1697,column:54},end:{line:1699,column:5}},line:1697},"58":{name:"(anonymous_58)",decl:{start:{line:1706,column:2},end:{line:1706,column:3}},loc:{start:{line:1706,column:32},end:{line:1724,column:3}},line:1706},"59":{name:"(anonymous_59)",decl:{start:{line:1726,column:2},end:{line:1726,column:3}},loc:{start:{line:1726,column:23},end:{line:1760,column:3}},line:1726},"60":{name:"(anonymous_60)",decl:{start:{line:1733,column:33},end:{line:1733,column:34}},loc:{start:{line:1733,column:54},end:{line:1746,column:5}},line:1733},"61":{name:"(anonymous_61)",decl:{start:{line:1753,column:24},end:{line:1753,column:25}},loc:{start:{line:1753,column:33},end:{line:1755,column:5}},line:1753},"62":{name:"(anonymous_62)",decl:{start:{line:1762,column:2},end:{line:1762,column:3}},loc:{start:{line:1762,column:21},end:{line:1764,column:3}},line:1762},"63":{name:"(anonymous_63)",decl:{start:{line:1768,column:2},end:{line:1768,column:3}},loc:{start:{line:1768,column:25},end:{line:1773,column:3}},line:1768},"64":{name:"(anonymous_64)",decl:{start:{line:1775,column:2},end:{line:1775,column:3}},loc:{start:{line:1775,column:32},end:{line:1777,column:3}},line:1775},"65":{name:"(anonymous_65)",decl:{start:{line:1779,column:2},end:{line:1779,column:3}},loc:{start:{line:1779,column:23},end:{line:1781,column:3}},line:1779},"66":{name:"(anonymous_66)",decl:{start:{line:1783,column:2},end:{line:1783,column:3}},loc:{start:{line:1783,column:21},end:{line:1785,column:3}},line:1783}},branchMap:{"0":{loc:{start:{line:7,column:46},end:{line:7,column:92}},type:"cond-expr",locations:[{start:{line:7,column:70},end:{line:7,column:73}},{start:{line:7,column:76},end:{line:7,column:92}}],line:7},"1":{loc:{start:{line:7,column:46},end:{line:7,column:67}},type:"binary-expr",locations:[{start:{line:7,column:46},end:{line:7,column:49}},{start:{line:7,column:53},end:{line:7,column:67}}],line:7},"2":{loc:{start:{line:9,column:75},end:{line:9,column:330}},type:"if",locations:[{start:{line:9,column:75},end:{line:9,column:330}},{start:{line:9,column:75},end:{line:9,column:330}}],line:9},"3":{loc:{start:{line:9,column:163},end:{line:9,column:296}},type:"if",locations:[{start:{line:9,column:163},end:{line:9,column:296}},{start:{line:9,column:163},end:{line:9,column:296}}],line:9},"4":{loc:{start:{line:11,column:91},end:{line:11,column:131}},type:"cond-expr",locations:[{start:{line:11,column:114},end:{line:11,column:126}},{start:{line:11,column:129},end:{line:11,column:131}}],line:11},"5":{loc:{start:{line:11,column:133},end:{line:11,column:515}},type:"if",locations:[{start:{line:11,column:133},end:{line:11,column:515}},{start:{line:11,column:133},end:{line:11,column:515}}],line:11},"6":{loc:{start:{line:11,column:255},end:{line:11,column:515}},type:"if",locations:[{start:{line:11,column:255},end:{line:11,column:515}},{start:{line:11,column:255},end:{line:11,column:515}}],line:11},"7":{loc:{start:{line:13,column:44},end:{line:13,column:195}},type:"if",locations:[{start:{line:13,column:44},end:{line:13,column:195}},{start:{line:13,column:44},end:{line:13,column:195}}],line:13},"8":{loc:{start:{line:21,column:2},end:{line:39,column:3}},type:"switch",locations:[{start:{line:22,column:4},end:{line:23,column:19}},{start:{line:25,column:4},end:{line:26,column:27}},{start:{line:28,column:4},end:{line:29,column:27}},{start:{line:31,column:4},end:{line:32,column:30}},{start:{line:34,column:4},end:{line:35,column:26}},{start:{line:37,column:4},end:{line:38,column:26}}],line:21},"9":{loc:{start:{line:41,column:2},end:{line:45,column:3}},type:"if",locations:[{start:{line:41,column:2},end:{line:45,column:3}},{start:{line:41,column:2},end:{line:45,column:3}}],line:41},"10":{loc:{start:{line:41,column:6},end:{line:41,column:78}},type:"binary-expr",locations:[{start:{line:41,column:6},end:{line:41,column:30}},{start:{line:41,column:34},end:{line:41,column:78}}],line:41},"11":{loc:{start:{line:43,column:9},end:{line:45,column:3}},type:"if",locations:[{start:{line:43,column:9},end:{line:45,column:3}},{start:{line:43,column:9},end:{line:45,column:3}}],line:43},"12":{loc:{start:{line:43,column:13},end:{line:43,column:83}},type:"binary-expr",locations:[{start:{line:43,column:13},end:{line:43,column:37}},{start:{line:43,column:41},end:{line:43,column:83}}],line:43},"13":{loc:{start:{line:55,column:2},end:{line:133,column:3}},type:"switch",locations:[{start:{line:56,column:4},end:{line:56,column:20}},{start:{line:57,column:4},end:{line:66,column:12}},{start:{line:68,column:4},end:{line:68,column:21}},{start:{line:69,column:4},end:{line:72,column:12}},{start:{line:74,column:4},end:{line:74,column:21}},{start:{line:75,column:4},end:{line:78,column:12}},{start:{line:80,column:4},end:{line:80,column:24}},{start:{line:81,column:4},end:{line:83,column:12}},{start:{line:85,column:4},end:{line:85,column:21}},{start:{line:86,column:4},end:{line:89,column:12}},{start:{line:91,column:4},end:{line:94,column:12}},{start:{line:96,column:4},end:{line:99,column:12}},{start:{line:101,column:4},end:{line:103,column:12}},{start:{line:105,column:4},end:{line:108,column:12}},{start:{line:110,column:4},end:{line:113,column:12}},{start:{line:115,column:4},end:{line:115,column:18}},{start:{line:116,column:4},end:{line:120,column:8}},{start:{line:122,column:4},end:{line:122,column:20}},{start:{line:123,column:4},end:{line:126,column:12}},{start:{line:128,column:4},end:{line:128,column:21}},{start:{line:129,column:4},end:{line:132,column:12}}],line:55},"14":{loc:{start:{line:58,column:6},end:{line:63,column:7}},type:"if",locations:[{start:{line:58,column:6},end:{line:63,column:7}},{start:{line:58,column:6},end:{line:63,column:7}}],line:58},"15":{loc:{start:{line:135,column:2},end:{line:138,column:3}},type:"if",locations:[{start:{line:135,column:2},end:{line:138,column:3}},{start:{line:135,column:2},end:{line:138,column:3}}],line:135},"16":{loc:{start:{line:135,column:6},end:{line:135,column:189}},type:"binary-expr",locations:[{start:{line:135,column:6},end:{line:135,column:35}},{start:{line:135,column:39},end:{line:135,column:87}},{start:{line:135,column:91},end:{line:135,column:109}},{start:{line:135,column:113},end:{line:135,column:143}},{start:{line:135,column:147},end:{line:135,column:156}},{start:{line:135,column:160},end:{line:135,column:189}}],line:135},"17":{loc:{start:{line:143,column:2},end:{line:159,column:3}},type:"if",locations:[{start:{line:143,column:2},end:{line:159,column:3}},{start:{line:143,column:2},end:{line:159,column:3}}],line:143},"18":{loc:{start:{line:144,column:4},end:{line:146,column:5}},type:"if",locations:[{start:{line:144,column:4},end:{line:146,column:5}},{start:{line:144,column:4},end:{line:146,column:5}}],line:144},"19":{loc:{start:{line:144,column:8},end:{line:144,column:46}},type:"binary-expr",locations:[{start:{line:144,column:8},end:{line:144,column:17}},{start:{line:144,column:21},end:{line:144,column:46}}],line:144},"20":{loc:{start:{line:148,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:148,column:4},end:{line:153,column:5}},{start:{line:148,column:4},end:{line:153,column:5}}],line:148},"21":{loc:{start:{line:162,column:2},end:{line:168,column:3}},type:"if",locations:[{start:{line:162,column:2},end:{line:168,column:3}},{start:{line:162,column:2},end:{line:168,column:3}}],line:162},"22":{loc:{start:{line:171,column:2},end:{line:176,column:3}},type:"if",locations:[{start:{line:171,column:2},end:{line:176,column:3}},{start:{line:171,column:2},end:{line:176,column:3}}],line:171},"23":{loc:{start:{line:171,column:6},end:{line:171,column:58}},type:"binary-expr",locations:[{start:{line:171,column:6},end:{line:171,column:35}},{start:{line:171,column:39},end:{line:171,column:58}}],line:171},"24":{loc:{start:{line:187,column:9},end:{line:187,column:41}},type:"binary-expr",locations:[{start:{line:187,column:9},end:{line:187,column:14}},{start:{line:187,column:18},end:{line:187,column:41}}],line:187},"25":{loc:{start:{line:191,column:2},end:{line:193,column:3}},type:"if",locations:[{start:{line:191,column:2},end:{line:193,column:3}},{start:{line:191,column:2},end:{line:193,column:3}}],line:191},"26":{loc:{start:{line:200,column:2},end:{line:202,column:3}},type:"if",locations:[{start:{line:200,column:2},end:{line:202,column:3}},{start:{line:200,column:2},end:{line:202,column:3}}],line:200},"27":{loc:{start:{line:200,column:6},end:{line:200,column:62}},type:"binary-expr",locations:[{start:{line:200,column:6},end:{line:200,column:13}},{start:{line:200,column:17},end:{line:200,column:39}},{start:{line:200,column:43},end:{line:200,column:62}}],line:200},"28":{loc:{start:{line:206,column:2},end:{line:208,column:3}},type:"if",locations:[{start:{line:206,column:2},end:{line:208,column:3}},{start:{line:206,column:2},end:{line:208,column:3}}],line:206},"29":{loc:{start:{line:211,column:4},end:{line:213,column:5}},type:"if",locations:[{start:{line:211,column:4},end:{line:213,column:5}},{start:{line:211,column:4},end:{line:213,column:5}}],line:211},"30":{loc:{start:{line:226,column:2},end:{line:228,column:3}},type:"if",locations:[{start:{line:226,column:2},end:{line:228,column:3}},{start:{line:226,column:2},end:{line:228,column:3}}],line:226},"31":{loc:{start:{line:226,column:6},end:{line:226,column:135}},type:"binary-expr",locations:[{start:{line:226,column:6},end:{line:226,column:24}},{start:{line:226,column:28},end:{line:226,column:57}},{start:{line:226,column:61},end:{line:226,column:135}}],line:226},"32":{loc:{start:{line:226,column:96},end:{line:226,column:134}},type:"binary-expr",locations:[{start:{line:226,column:96},end:{line:226,column:113}},{start:{line:226,column:117},end:{line:226,column:134}}],line:226},"33":{loc:{start:{line:233,column:2},end:{line:235,column:3}},type:"if",locations:[{start:{line:233,column:2},end:{line:235,column:3}},{start:{line:233,column:2},end:{line:235,column:3}}],line:233},"34":{loc:{start:{line:238,column:2},end:{line:240,column:3}},type:"if",locations:[{start:{line:238,column:2},end:{line:240,column:3}},{start:{line:238,column:2},end:{line:240,column:3}}],line:238},"35":{loc:{start:{line:243,column:2},end:{line:245,column:3}},type:"if",locations:[{start:{line:243,column:2},end:{line:245,column:3}},{start:{line:243,column:2},end:{line:245,column:3}}],line:243},"36":{loc:{start:{line:243,column:6},end:{line:243,column:58}},type:"binary-expr",locations:[{start:{line:243,column:6},end:{line:243,column:35}},{start:{line:243,column:39},end:{line:243,column:58}}],line:243},"37":{loc:{start:{line:252,column:2},end:{line:256,column:3}},type:"if",locations:[{start:{line:252,column:2},end:{line:256,column:3}},{start:{line:252,column:2},end:{line:256,column:3}}],line:252},"38":{loc:{start:{line:254,column:9},end:{line:256,column:3}},type:"if",locations:[{start:{line:254,column:9},end:{line:256,column:3}},{start:{line:254,column:9},end:{line:256,column:3}}],line:254},"39":{loc:{start:{line:261,column:63},end:{line:261,column:76}},type:"default-arg",locations:[{start:{line:261,column:71},end:{line:261,column:76}}],line:261},"40":{loc:{start:{line:262,column:2},end:{line:407,column:3}},type:"switch",locations:[{start:{line:263,column:4},end:{line:272,column:12}},{start:{line:274,column:4},end:{line:283,column:12}},{start:{line:285,column:4},end:{line:293,column:12}},{start:{line:295,column:4},end:{line:303,column:12}},{start:{line:305,column:4},end:{line:315,column:7}},{start:{line:317,column:4},end:{line:325,column:12}},{start:{line:327,column:4},end:{line:331,column:8}},{start:{line:333,column:4},end:{line:337,column:8}},{start:{line:339,column:4},end:{line:347,column:12}},{start:{line:349,column:4},end:{line:357,column:12}},{start:{line:359,column:4},end:{line:359,column:18}},{start:{line:360,column:4},end:{line:360,column:18}},{start:{line:361,column:4},end:{line:361,column:29}},{start:{line:362,column:4},end:{line:366,column:8}},{start:{line:368,column:4},end:{line:368,column:15}},{start:{line:369,column:4},end:{line:369,column:16}},{start:{line:370,column:4},end:{line:374,column:8}},{start:{line:376,column:4},end:{line:385,column:12}},{start:{line:387,column:4},end:{line:391,column:8}},{start:{line:393,column:4},end:{line:406,column:7}}],line:262},"41":{loc:{start:{line:264,column:6},end:{line:269,column:7}},type:"if",locations:[{start:{line:264,column:6},end:{line:269,column:7}},{start:{line:264,column:6},end:{line:269,column:7}}],line:264},"42":{loc:{start:{line:275,column:6},end:{line:280,column:7}},type:"if",locations:[{start:{line:275,column:6},end:{line:280,column:7}},{start:{line:275,column:6},end:{line:280,column:7}}],line:275},"43":{loc:{start:{line:286,column:6},end:{line:291,column:7}},type:"if",locations:[{start:{line:286,column:6},end:{line:291,column:7}},{start:{line:286,column:6},end:{line:291,column:7}}],line:286},"44":{loc:{start:{line:296,column:6},end:{line:301,column:7}},type:"if",locations:[{start:{line:296,column:6},end:{line:301,column:7}},{start:{line:296,column:6},end:{line:301,column:7}}],line:296},"45":{loc:{start:{line:307,column:8},end:{line:309,column:9}},type:"if",locations:[{start:{line:307,column:8},end:{line:309,column:9}},{start:{line:307,column:8},end:{line:309,column:9}}],line:307},"46":{loc:{start:{line:318,column:6},end:{line:323,column:7}},type:"if",locations:[{start:{line:318,column:6},end:{line:323,column:7}},{start:{line:318,column:6},end:{line:323,column:7}}],line:318},"47":{loc:{start:{line:340,column:6},end:{line:345,column:7}},type:"if",locations:[{start:{line:340,column:6},end:{line:345,column:7}},{start:{line:340,column:6},end:{line:345,column:7}}],line:340},"48":{loc:{start:{line:350,column:6},end:{line:355,column:7}},type:"if",locations:[{start:{line:350,column:6},end:{line:355,column:7}},{start:{line:350,column:6},end:{line:355,column:7}}],line:350},"49":{loc:{start:{line:377,column:6},end:{line:382,column:7}},type:"if",locations:[{start:{line:377,column:6},end:{line:382,column:7}},{start:{line:377,column:6},end:{line:382,column:7}}],line:377},"50":{loc:{start:{line:398,column:8},end:{line:405,column:9}},type:"if",locations:[{start:{line:398,column:8},end:{line:405,column:9}},{start:{line:398,column:8},end:{line:405,column:9}}],line:398},"51":{loc:{start:{line:409,column:30},end:{line:409,column:97}},type:"binary-expr",locations:[{start:{line:409,column:30},end:{line:409,column:36}},{start:{line:409,column:40},end:{line:409,column:58}},{start:{line:409,column:62},end:{line:409,column:97}}],line:409},"52":{loc:{start:{line:410,column:32},end:{line:410,column:101}},type:"binary-expr",locations:[{start:{line:410,column:32},end:{line:410,column:38}},{start:{line:410,column:42},end:{line:410,column:60}},{start:{line:410,column:64},end:{line:410,column:101}}],line:410},"53":{loc:{start:{line:411,column:16},end:{line:411,column:44}},type:"binary-expr",locations:[{start:{line:411,column:16},end:{line:411,column:22}},{start:{line:411,column:26},end:{line:411,column:44}}],line:411},"54":{loc:{start:{line:413,column:2},end:{line:415,column:3}},type:"if",locations:[{start:{line:413,column:2},end:{line:415,column:3}},{start:{line:413,column:2},end:{line:415,column:3}}],line:413},"55":{loc:{start:{line:413,column:6},end:{line:413,column:99}},type:"binary-expr",locations:[{start:{line:413,column:6},end:{line:413,column:27}},{start:{line:413,column:31},end:{line:413,column:38}},{start:{line:413,column:42},end:{line:413,column:60}},{start:{line:413,column:64},end:{line:413,column:69}},{start:{line:413,column:73},end:{line:413,column:99}}],line:413},"56":{loc:{start:{line:420,column:2},end:{line:441,column:3}},type:"if",locations:[{start:{line:420,column:2},end:{line:441,column:3}},{start:{line:420,column:2},end:{line:441,column:3}}],line:420},"57":{loc:{start:{line:421,column:4},end:{line:426,column:5}},type:"if",locations:[{start:{line:421,column:4},end:{line:426,column:5}},{start:{line:421,column:4},end:{line:426,column:5}}],line:421},"58":{loc:{start:{line:428,column:4},end:{line:435,column:5}},type:"if",locations:[{start:{line:428,column:4},end:{line:435,column:5}},{start:{line:428,column:4},end:{line:435,column:5}}],line:428},"59":{loc:{start:{line:443,column:2},end:{line:450,column:3}},type:"if",locations:[{start:{line:443,column:2},end:{line:450,column:3}},{start:{line:443,column:2},end:{line:450,column:3}}],line:443},"60":{loc:{start:{line:443,column:6},end:{line:443,column:54}},type:"binary-expr",locations:[{start:{line:443,column:6},end:{line:443,column:25}},{start:{line:443,column:29},end:{line:443,column:54}}],line:443},"61":{loc:{start:{line:453,column:23},end:{line:453,column:102}},type:"cond-expr",locations:[{start:{line:453,column:43},end:{line:453,column:71}},{start:{line:453,column:74},end:{line:453,column:102}}],line:453},"62":{loc:{start:{line:455,column:2},end:{line:462,column:3}},type:"if",locations:[{start:{line:455,column:2},end:{line:462,column:3}},{start:{line:455,column:2},end:{line:462,column:3}}],line:455},"63":{loc:{start:{line:468,column:54},end:{line:468,column:67}},type:"default-arg",locations:[{start:{line:468,column:62},end:{line:468,column:67}}],line:468},"64":{loc:{start:{line:484,column:2},end:{line:562,column:3}},type:"switch",locations:[{start:{line:485,column:4},end:{line:489,column:8}},{start:{line:491,column:4},end:{line:497,column:8}},{start:{line:499,column:4},end:{line:505,column:8}},{start:{line:507,column:4},end:{line:513,column:8}},{start:{line:515,column:4},end:{line:521,column:8}},{start:{line:523,column:4},end:{line:529,column:8}},{start:{line:531,column:4},end:{line:531,column:31}},{start:{line:532,column:4},end:{line:532,column:18}},{start:{line:533,column:4},end:{line:533,column:18}},{start:{line:534,column:4},end:{line:534,column:31}},{start:{line:535,column:4},end:{line:535,column:28}},{start:{line:536,column:4},end:{line:540,column:8}},{start:{line:542,column:4},end:{line:546,column:8}},{start:{line:548,column:4},end:{line:560,column:7}}],line:484},"65":{loc:{start:{line:493,column:22},end:{line:493,column:106}},type:"cond-expr",locations:[{start:{line:493,column:61},end:{line:493,column:87}},{start:{line:493,column:90},end:{line:493,column:106}}],line:493},"66":{loc:{start:{line:501,column:22},end:{line:501,column:106}},type:"cond-expr",locations:[{start:{line:501,column:61},end:{line:501,column:87}},{start:{line:501,column:90},end:{line:501,column:106}}],line:501},"67":{loc:{start:{line:509,column:22},end:{line:509,column:106}},type:"cond-expr",locations:[{start:{line:509,column:61},end:{line:509,column:87}},{start:{line:509,column:90},end:{line:509,column:106}}],line:509},"68":{loc:{start:{line:517,column:22},end:{line:517,column:106}},type:"cond-expr",locations:[{start:{line:517,column:61},end:{line:517,column:87}},{start:{line:517,column:90},end:{line:517,column:106}}],line:517},"69":{loc:{start:{line:525,column:22},end:{line:525,column:106}},type:"cond-expr",locations:[{start:{line:525,column:61},end:{line:525,column:87}},{start:{line:525,column:90},end:{line:525,column:106}}],line:525},"70":{loc:{start:{line:550,column:6},end:{line:552,column:7}},type:"if",locations:[{start:{line:550,column:6},end:{line:552,column:7}},{start:{line:550,column:6},end:{line:552,column:7}}],line:550},"71":{loc:{start:{line:555,column:6},end:{line:560,column:7}},type:"if",locations:[{start:{line:555,column:6},end:{line:560,column:7}},{start:{line:555,column:6},end:{line:560,column:7}}],line:555},"72":{loc:{start:{line:565,column:2},end:{line:571,column:3}},type:"if",locations:[{start:{line:565,column:2},end:{line:571,column:3}},{start:{line:565,column:2},end:{line:571,column:3}}],line:565},"73":{loc:{start:{line:565,column:6},end:{line:565,column:47}},type:"binary-expr",locations:[{start:{line:565,column:6},end:{line:565,column:15}},{start:{line:565,column:19},end:{line:565,column:47}}],line:565},"74":{loc:{start:{line:568,column:4},end:{line:570,column:5}},type:"if",locations:[{start:{line:568,column:4},end:{line:570,column:5}},{start:{line:568,column:4},end:{line:570,column:5}}],line:568},"75":{loc:{start:{line:568,column:8},end:{line:568,column:107}},type:"binary-expr",locations:[{start:{line:568,column:8},end:{line:568,column:30}},{start:{line:568,column:34},end:{line:568,column:74}},{start:{line:568,column:78},end:{line:568,column:107}}],line:568},"76":{loc:{start:{line:576,column:2},end:{line:581,column:3}},type:"if",locations:[{start:{line:576,column:2},end:{line:581,column:3}},{start:{line:576,column:2},end:{line:581,column:3}}],line:576},"77":{loc:{start:{line:585,column:2},end:{line:587,column:3}},type:"if",locations:[{start:{line:585,column:2},end:{line:587,column:3}},{start:{line:585,column:2},end:{line:587,column:3}}],line:585},"78":{loc:{start:{line:590,column:2},end:{line:596,column:3}},type:"if",locations:[{start:{line:590,column:2},end:{line:596,column:3}},{start:{line:590,column:2},end:{line:596,column:3}}],line:590},"79":{loc:{start:{line:599,column:2},end:{line:601,column:3}},type:"if",locations:[{start:{line:599,column:2},end:{line:601,column:3}},{start:{line:599,column:2},end:{line:601,column:3}}],line:599},"80":{loc:{start:{line:599,column:41},end:{line:599,column:79}},type:"binary-expr",locations:[{start:{line:599,column:41},end:{line:599,column:58}},{start:{line:599,column:62},end:{line:599,column:79}}],line:599},"81":{loc:{start:{line:615,column:4},end:{line:617,column:5}},type:"if",locations:[{start:{line:615,column:4},end:{line:617,column:5}},{start:{line:615,column:4},end:{line:617,column:5}}],line:615},"82":{loc:{start:{line:615,column:8},end:{line:615,column:72}},type:"binary-expr",locations:[{start:{line:615,column:8},end:{line:615,column:27}},{start:{line:615,column:31},end:{line:615,column:72}}],line:615},"83":{loc:{start:{line:624,column:4},end:{line:626,column:5}},type:"if",locations:[{start:{line:624,column:4},end:{line:626,column:5}},{start:{line:624,column:4},end:{line:626,column:5}}],line:624},"84":{loc:{start:{line:630,column:2},end:{line:633,column:3}},type:"if",locations:[{start:{line:630,column:2},end:{line:633,column:3}},{start:{line:630,column:2},end:{line:633,column:3}}],line:630},"85":{loc:{start:{line:631,column:39},end:{line:631,column:89}},type:"binary-expr",locations:[{start:{line:631,column:39},end:{line:631,column:64}},{start:{line:631,column:68},end:{line:631,column:89}}],line:631},"86":{loc:{start:{line:635,column:2},end:{line:638,column:3}},type:"if",locations:[{start:{line:635,column:2},end:{line:638,column:3}},{start:{line:635,column:2},end:{line:638,column:3}}],line:635},"87":{loc:{start:{line:636,column:39},end:{line:636,column:89}},type:"binary-expr",locations:[{start:{line:636,column:39},end:{line:636,column:64}},{start:{line:636,column:68},end:{line:636,column:89}}],line:636},"88":{loc:{start:{line:648,column:2},end:{line:662,column:3}},type:"if",locations:[{start:{line:648,column:2},end:{line:662,column:3}},{start:{line:648,column:2},end:{line:662,column:3}}],line:648},"89":{loc:{start:{line:648,column:6},end:{line:648,column:42}},type:"binary-expr",locations:[{start:{line:648,column:6},end:{line:648,column:16}},{start:{line:648,column:20},end:{line:648,column:30}},{start:{line:648,column:34},end:{line:648,column:42}}],line:648},"90":{loc:{start:{line:651,column:4},end:{line:653,column:5}},type:"if",locations:[{start:{line:651,column:4},end:{line:653,column:5}},{start:{line:651,column:4},end:{line:653,column:5}}],line:651},"91":{loc:{start:{line:655,column:4},end:{line:657,column:5}},type:"if",locations:[{start:{line:655,column:4},end:{line:657,column:5}},{start:{line:655,column:4},end:{line:657,column:5}}],line:655},"92":{loc:{start:{line:659,column:4},end:{line:661,column:5}},type:"if",locations:[{start:{line:659,column:4},end:{line:661,column:5}},{start:{line:659,column:4},end:{line:661,column:5}}],line:659},"93":{loc:{start:{line:665,column:4},end:{line:667,column:5}},type:"if",locations:[{start:{line:665,column:4},end:{line:667,column:5}},{start:{line:665,column:4},end:{line:667,column:5}}],line:665},"94":{loc:{start:{line:665,column:8},end:{line:665,column:72}},type:"binary-expr",locations:[{start:{line:665,column:8},end:{line:665,column:27}},{start:{line:665,column:31},end:{line:665,column:72}}],line:665},"95":{loc:{start:{line:673,column:4},end:{line:679,column:5}},type:"if",locations:[{start:{line:673,column:4},end:{line:679,column:5}},{start:{line:673,column:4},end:{line:679,column:5}}],line:673},"96":{loc:{start:{line:673,column:8},end:{line:673,column:77}},type:"binary-expr",locations:[{start:{line:673,column:8},end:{line:673,column:37}},{start:{line:673,column:41},end:{line:673,column:59}},{start:{line:673,column:63},end:{line:673,column:77}}],line:673},"97":{loc:{start:{line:674,column:36},end:{line:674,column:69}},type:"binary-expr",locations:[{start:{line:674,column:36},end:{line:674,column:63}},{start:{line:674,column:67},end:{line:674,column:69}}],line:674},"98":{loc:{start:{line:677,column:28},end:{line:677,column:53}},type:"binary-expr",locations:[{start:{line:677,column:28},end:{line:677,column:47}},{start:{line:677,column:51},end:{line:677,column:53}}],line:677},"99":{loc:{start:{line:691,column:2},end:{line:699,column:3}},type:"if",locations:[{start:{line:691,column:2},end:{line:699,column:3}},{start:{line:691,column:2},end:{line:699,column:3}}],line:691},"100":{loc:{start:{line:701,column:2},end:{line:713,column:3}},type:"if",locations:[{start:{line:701,column:2},end:{line:713,column:3}},{start:{line:701,column:2},end:{line:713,column:3}}],line:701},"101":{loc:{start:{line:703,column:6},end:{line:709,column:7}},type:"if",locations:[{start:{line:703,column:6},end:{line:709,column:7}},{start:{line:703,column:6},end:{line:709,column:7}}],line:703},"102":{loc:{start:{line:724,column:2},end:{line:740,column:3}},type:"if",locations:[{start:{line:724,column:2},end:{line:740,column:3}},{start:{line:724,column:2},end:{line:740,column:3}}],line:724},"103":{loc:{start:{line:724,column:6},end:{line:724,column:94}},type:"binary-expr",locations:[{start:{line:724,column:6},end:{line:724,column:30}},{start:{line:724,column:34},end:{line:724,column:38}},{start:{line:724,column:42},end:{line:724,column:65}},{start:{line:724,column:69},end:{line:724,column:94}}],line:724},"104":{loc:{start:{line:730,column:9},end:{line:740,column:3}},type:"if",locations:[{start:{line:730,column:9},end:{line:740,column:3}},{start:{line:730,column:9},end:{line:740,column:3}}],line:730},"105":{loc:{start:{line:730,column:13},end:{line:730,column:67}},type:"binary-expr",locations:[{start:{line:730,column:13},end:{line:730,column:39}},{start:{line:730,column:43},end:{line:730,column:67}}],line:730},"106":{loc:{start:{line:732,column:9},end:{line:740,column:3}},type:"if",locations:[{start:{line:732,column:9},end:{line:740,column:3}},{start:{line:732,column:9},end:{line:740,column:3}}],line:732},"107":{loc:{start:{line:734,column:9},end:{line:740,column:3}},type:"if",locations:[{start:{line:734,column:9},end:{line:740,column:3}},{start:{line:734,column:9},end:{line:740,column:3}}],line:734},"108":{loc:{start:{line:736,column:9},end:{line:740,column:3}},type:"if",locations:[{start:{line:736,column:9},end:{line:740,column:3}},{start:{line:736,column:9},end:{line:740,column:3}}],line:736},"109":{loc:{start:{line:736,column:13},end:{line:736,column:74}},type:"binary-expr",locations:[{start:{line:736,column:13},end:{line:736,column:37}},{start:{line:736,column:41},end:{line:736,column:45}},{start:{line:736,column:49},end:{line:736,column:74}}],line:736},"110":{loc:{start:{line:751,column:2},end:{line:809,column:3}},type:"switch",locations:[{start:{line:752,column:4},end:{line:752,column:18}},{start:{line:753,column:4},end:{line:753,column:19}},{start:{line:754,column:4},end:{line:755,column:18}},{start:{line:757,column:4},end:{line:762,column:18}},{start:{line:764,column:4},end:{line:764,column:18}},{start:{line:765,column:4},end:{line:766,column:89}},{start:{line:768,column:4},end:{line:804,column:29}},{start:{line:806,column:4},end:{line:808,column:103}}],line:751},"111":{loc:{start:{line:758,column:6},end:{line:760,column:7}},type:"if",locations:[{start:{line:758,column:6},end:{line:760,column:7}},{start:{line:758,column:6},end:{line:760,column:7}}],line:758},"112":{loc:{start:{line:758,column:10},end:{line:758,column:43}},type:"binary-expr",locations:[{start:{line:758,column:10},end:{line:758,column:15}},{start:{line:758,column:19},end:{line:758,column:43}}],line:758},"113":{loc:{start:{line:769,column:6},end:{line:773,column:7}},type:"if",locations:[{start:{line:769,column:6},end:{line:773,column:7}},{start:{line:769,column:6},end:{line:773,column:7}}],line:769},"114":{loc:{start:{line:775,column:6},end:{line:777,column:7}},type:"if",locations:[{start:{line:775,column:6},end:{line:777,column:7}},{start:{line:775,column:6},end:{line:777,column:7}}],line:775},"115":{loc:{start:{line:780,column:6},end:{line:782,column:7}},type:"if",locations:[{start:{line:780,column:6},end:{line:782,column:7}},{start:{line:780,column:6},end:{line:782,column:7}}],line:780},"116":{loc:{start:{line:784,column:6},end:{line:786,column:7}},type:"if",locations:[{start:{line:784,column:6},end:{line:786,column:7}},{start:{line:784,column:6},end:{line:786,column:7}}],line:784},"117":{loc:{start:{line:788,column:6},end:{line:790,column:7}},type:"if",locations:[{start:{line:788,column:6},end:{line:790,column:7}},{start:{line:788,column:6},end:{line:790,column:7}}],line:788},"118":{loc:{start:{line:792,column:6},end:{line:794,column:7}},type:"if",locations:[{start:{line:792,column:6},end:{line:794,column:7}},{start:{line:792,column:6},end:{line:794,column:7}}],line:792},"119":{loc:{start:{line:796,column:6},end:{line:798,column:7}},type:"if",locations:[{start:{line:796,column:6},end:{line:798,column:7}},{start:{line:796,column:6},end:{line:798,column:7}}],line:796},"120":{loc:{start:{line:800,column:6},end:{line:802,column:7}},type:"if",locations:[{start:{line:800,column:6},end:{line:802,column:7}},{start:{line:800,column:6},end:{line:802,column:7}}],line:800},"121":{loc:{start:{line:812,column:34},end:{line:812,column:50}},type:"default-arg",locations:[{start:{line:812,column:40},end:{line:812,column:50}}],line:812},"122":{loc:{start:{line:820,column:2},end:{line:825,column:3}},type:"if",locations:[{start:{line:820,column:2},end:{line:825,column:3}},{start:{line:820,column:2},end:{line:825,column:3}}],line:820},"123":{loc:{start:{line:820,column:6},end:{line:820,column:40}},type:"binary-expr",locations:[{start:{line:820,column:6},end:{line:820,column:13}},{start:{line:820,column:17},end:{line:820,column:22}},{start:{line:820,column:26},end:{line:820,column:40}}],line:820},"124":{loc:{start:{line:827,column:2},end:{line:832,column:3}},type:"if",locations:[{start:{line:827,column:2},end:{line:832,column:3}},{start:{line:827,column:2},end:{line:832,column:3}}],line:827},"125":{loc:{start:{line:827,column:6},end:{line:827,column:20}},type:"binary-expr",locations:[{start:{line:827,column:6},end:{line:827,column:12}},{start:{line:827,column:16},end:{line:827,column:20}}],line:827},"126":{loc:{start:{line:835,column:2},end:{line:840,column:3}},type:"if",locations:[{start:{line:835,column:2},end:{line:840,column:3}},{start:{line:835,column:2},end:{line:840,column:3}}],line:835},"127":{loc:{start:{line:842,column:2},end:{line:847,column:3}},type:"if",locations:[{start:{line:842,column:2},end:{line:847,column:3}},{start:{line:842,column:2},end:{line:847,column:3}}],line:842},"128":{loc:{start:{line:842,column:6},end:{line:842,column:46}},type:"binary-expr",locations:[{start:{line:842,column:6},end:{line:842,column:28}},{start:{line:842,column:32},end:{line:842,column:46}}],line:842},"129":{loc:{start:{line:860,column:4},end:{line:865,column:5}},type:"if",locations:[{start:{line:860,column:4},end:{line:865,column:5}},{start:{line:860,column:4},end:{line:865,column:5}}],line:860},"130":{loc:{start:{line:867,column:4},end:{line:918,column:5}},type:"switch",locations:[{start:{line:868,column:6},end:{line:868,column:16}},{start:{line:869,column:6},end:{line:869,column:17}},{start:{line:870,column:6},end:{line:870,column:18}},{start:{line:871,column:6},end:{line:874,column:14}},{start:{line:876,column:6},end:{line:876,column:16}},{start:{line:877,column:6},end:{line:877,column:17}},{start:{line:878,column:6},end:{line:878,column:18}},{start:{line:879,column:6},end:{line:882,column:14}},{start:{line:884,column:6},end:{line:884,column:15}},{start:{line:885,column:6},end:{line:885,column:17}},{start:{line:886,column:6},end:{line:889,column:14}},{start:{line:891,column:6},end:{line:891,column:16}},{start:{line:892,column:6},end:{line:892,column:17}},{start:{line:893,column:6},end:{line:893,column:18}},{start:{line:894,column:6},end:{line:897,column:14}},{start:{line:899,column:6},end:{line:899,column:17}},{start:{line:900,column:6},end:{line:900,column:18}},{start:{line:901,column:6},end:{line:901,column:20}},{start:{line:902,column:6},end:{line:904,column:14}},{start:{line:906,column:6},end:{line:906,column:17}},{start:{line:907,column:6},end:{line:907,column:18}},{start:{line:908,column:6},end:{line:908,column:20}},{start:{line:909,column:6},end:{line:911,column:14}},{start:{line:913,column:6},end:{line:917,column:10}}],line:867},"131":{loc:{start:{line:923,column:2},end:{line:941,column:3}},type:"if",locations:[{start:{line:923,column:2},end:{line:941,column:3}},{start:{line:923,column:2},end:{line:941,column:3}}],line:923},"132":{loc:{start:{line:929,column:9},end:{line:941,column:3}},type:"if",locations:[{start:{line:929,column:9},end:{line:941,column:3}},{start:{line:929,column:9},end:{line:941,column:3}}],line:929},"133":{loc:{start:{line:949,column:48},end:{line:949,column:61}},type:"default-arg",locations:[{start:{line:949,column:56},end:{line:949,column:61}}],line:949},"134":{loc:{start:{line:950,column:18},end:{line:950,column:63}},type:"binary-expr",locations:[{start:{line:950,column:18},end:{line:950,column:23}},{start:{line:950,column:27},end:{line:950,column:37}},{start:{line:950,column:41},end:{line:950,column:63}}],line:950},"135":{loc:{start:{line:952,column:2},end:{line:954,column:3}},type:"if",locations:[{start:{line:952,column:2},end:{line:954,column:3}},{start:{line:952,column:2},end:{line:954,column:3}}],line:952},"136":{loc:{start:{line:952,column:6},end:{line:952,column:51}},type:"binary-expr",locations:[{start:{line:952,column:6},end:{line:952,column:36}},{start:{line:952,column:40},end:{line:952,column:51}}],line:952},"137":{loc:{start:{line:956,column:28},end:{line:956,column:83}},type:"cond-expr",locations:[{start:{line:956,column:38},end:{line:956,column:59}},{start:{line:956,column:62},end:{line:956,column:83}}],line:956},"138":{loc:{start:{line:961,column:4},end:{line:963,column:5}},type:"if",locations:[{start:{line:961,column:4},end:{line:963,column:5}},{start:{line:961,column:4},end:{line:963,column:5}}],line:961},"139":{loc:{start:{line:976,column:4},end:{line:1272,column:5}},type:"switch",locations:[{start:{line:977,column:6},end:{line:977,column:17}},{start:{line:978,column:6},end:{line:978,column:18}},{start:{line:979,column:6},end:{line:979,column:17}},{start:{line:980,column:6},end:{line:980,column:18}},{start:{line:981,column:6},end:{line:981,column:21}},{start:{line:982,column:6},end:{line:982,column:17}},{start:{line:983,column:6},end:{line:1013,column:9}},{start:{line:1015,column:6},end:{line:1015,column:17}},{start:{line:1016,column:6},end:{line:1034,column:9}},{start:{line:1036,column:6},end:{line:1052,column:9}},{start:{line:1054,column:6},end:{line:1062,column:14}},{start:{line:1064,column:6},end:{line:1076,column:9}},{start:{line:1078,column:6},end:{line:1080,column:14}},{start:{line:1082,column:6},end:{line:1117,column:9}},{start:{line:1119,column:6},end:{line:1132,column:9}},{start:{line:1134,column:6},end:{line:1142,column:9}},{start:{line:1146,column:6},end:{line:1148,column:14}},{start:{line:1150,column:6},end:{line:1152,column:14}},{start:{line:1154,column:6},end:{line:1156,column:14}},{start:{line:1158,column:6},end:{line:1158,column:21}},{start:{line:1159,column:6},end:{line:1160,column:114}},{start:{line:1162,column:6},end:{line:1172,column:14}},{start:{line:1174,column:6},end:{line:1245,column:9}},{start:{line:1247,column:6},end:{line:1264,column:9}},{start:{line:1266,column:6},end:{line:1271,column:31}}],line:976},"140":{loc:{start:{line:987,column:10},end:{line:1009,column:11}},type:"if",locations:[{start:{line:987,column:10},end:{line:1009,column:11}},{start:{line:987,column:10},end:{line:1009,column:11}}],line:987},"141":{loc:{start:{line:987,column:14},end:{line:987,column:65}},type:"binary-expr",locations:[{start:{line:987,column:14},end:{line:987,column:17}},{start:{line:987,column:21},end:{line:987,column:44}},{start:{line:987,column:48},end:{line:987,column:65}}],line:987},"142":{loc:{start:{line:988,column:12},end:{line:990,column:13}},type:"if",locations:[{start:{line:988,column:12},end:{line:990,column:13}},{start:{line:988,column:12},end:{line:990,column:13}}],line:988},"143":{loc:{start:{line:988,column:16},end:{line:988,column:46}},type:"binary-expr",locations:[{start:{line:988,column:16},end:{line:988,column:21}},{start:{line:988,column:25},end:{line:988,column:46}}],line:988},"144":{loc:{start:{line:992,column:12},end:{line:997,column:13}},type:"switch",locations:[{start:{line:993,column:14},end:{line:993,column:29}},{start:{line:994,column:14},end:{line:994,column:25}},{start:{line:995,column:14},end:{line:996,column:142}}],line:992},"145":{loc:{start:{line:1001,column:12},end:{line:1004,column:13}},type:"if",locations:[{start:{line:1001,column:12},end:{line:1004,column:13}},{start:{line:1001,column:12},end:{line:1004,column:13}}],line:1001},"146":{loc:{start:{line:1020,column:10},end:{line:1022,column:11}},type:"if",locations:[{start:{line:1020,column:10},end:{line:1022,column:11}},{start:{line:1020,column:10},end:{line:1022,column:11}}],line:1020},"147":{loc:{start:{line:1026,column:14},end:{line:1030,column:15}},type:"if",locations:[{start:{line:1026,column:14},end:{line:1030,column:15}},{start:{line:1026,column:14},end:{line:1030,column:15}}],line:1026},"148":{loc:{start:{line:1040,column:10},end:{line:1042,column:11}},type:"if",locations:[{start:{line:1040,column:10},end:{line:1042,column:11}},{start:{line:1040,column:10},end:{line:1042,column:11}}],line:1040},"149":{loc:{start:{line:1047,column:10},end:{line:1049,column:11}},type:"if",locations:[{start:{line:1047,column:10},end:{line:1049,column:11}},{start:{line:1047,column:10},end:{line:1049,column:11}}],line:1047},"150":{loc:{start:{line:1047,column:14},end:{line:1047,column:72}},type:"binary-expr",locations:[{start:{line:1047,column:14},end:{line:1047,column:37}},{start:{line:1047,column:41},end:{line:1047,column:72}}],line:1047},"151":{loc:{start:{line:1057,column:8},end:{line:1059,column:9}},type:"if",locations:[{start:{line:1057,column:8},end:{line:1059,column:9}},{start:{line:1057,column:8},end:{line:1059,column:9}}],line:1057},"152":{loc:{start:{line:1068,column:10},end:{line:1070,column:11}},type:"if",locations:[{start:{line:1068,column:10},end:{line:1070,column:11}},{start:{line:1068,column:10},end:{line:1070,column:11}}],line:1068},"153":{loc:{start:{line:1086,column:10},end:{line:1088,column:11}},type:"if",locations:[{start:{line:1086,column:10},end:{line:1088,column:11}},{start:{line:1086,column:10},end:{line:1088,column:11}}],line:1086},"154":{loc:{start:{line:1090,column:10},end:{line:1096,column:11}},type:"if",locations:[{start:{line:1090,column:10},end:{line:1096,column:11}},{start:{line:1090,column:10},end:{line:1096,column:11}}],line:1090},"155":{loc:{start:{line:1090,column:14},end:{line:1090,column:63}},type:"binary-expr",locations:[{start:{line:1090,column:14},end:{line:1090,column:27}},{start:{line:1090,column:31},end:{line:1090,column:63}}],line:1090},"156":{loc:{start:{line:1098,column:10},end:{line:1102,column:11}},type:"if",locations:[{start:{line:1098,column:10},end:{line:1102,column:11}},{start:{line:1098,column:10},end:{line:1102,column:11}}],line:1098},"157":{loc:{start:{line:1098,column:14},end:{line:1098,column:70}},type:"binary-expr",locations:[{start:{line:1098,column:14},end:{line:1098,column:30}},{start:{line:1098,column:34},end:{line:1098,column:70}}],line:1098},"158":{loc:{start:{line:1100,column:17},end:{line:1102,column:11}},type:"if",locations:[{start:{line:1100,column:17},end:{line:1102,column:11}},{start:{line:1100,column:17},end:{line:1102,column:11}}],line:1100},"159":{loc:{start:{line:1104,column:10},end:{line:1108,column:11}},type:"if",locations:[{start:{line:1104,column:10},end:{line:1108,column:11}},{start:{line:1104,column:10},end:{line:1108,column:11}}],line:1104},"160":{loc:{start:{line:1104,column:14},end:{line:1104,column:81}},type:"binary-expr",locations:[{start:{line:1104,column:14},end:{line:1104,column:35}},{start:{line:1104,column:39},end:{line:1104,column:81}}],line:1104},"161":{loc:{start:{line:1106,column:17},end:{line:1108,column:11}},type:"if",locations:[{start:{line:1106,column:17},end:{line:1108,column:11}},{start:{line:1106,column:17},end:{line:1108,column:11}}],line:1106},"162":{loc:{start:{line:1110,column:10},end:{line:1114,column:11}},type:"if",locations:[{start:{line:1110,column:10},end:{line:1114,column:11}},{start:{line:1110,column:10},end:{line:1114,column:11}}],line:1110},"163":{loc:{start:{line:1110,column:14},end:{line:1110,column:91}},type:"binary-expr",locations:[{start:{line:1110,column:14},end:{line:1110,column:40}},{start:{line:1110,column:44},end:{line:1110,column:91}}],line:1110},"164":{loc:{start:{line:1112,column:17},end:{line:1114,column:11}},type:"if",locations:[{start:{line:1112,column:17},end:{line:1114,column:11}},{start:{line:1112,column:17},end:{line:1114,column:11}}],line:1112},"165":{loc:{start:{line:1123,column:10},end:{line:1129,column:11}},type:"if",locations:[{start:{line:1123,column:10},end:{line:1129,column:11}},{start:{line:1123,column:10},end:{line:1129,column:11}}],line:1123},"166":{loc:{start:{line:1136,column:10},end:{line:1138,column:11}},type:"if",locations:[{start:{line:1136,column:10},end:{line:1138,column:11}},{start:{line:1136,column:10},end:{line:1138,column:11}}],line:1136},"167":{loc:{start:{line:1165,column:8},end:{line:1167,column:9}},type:"if",locations:[{start:{line:1165,column:8},end:{line:1167,column:9}},{start:{line:1165,column:8},end:{line:1167,column:9}}],line:1165},"168":{loc:{start:{line:1165,column:12},end:{line:1165,column:35}},type:"binary-expr",locations:[{start:{line:1165,column:12},end:{line:1165,column:16}},{start:{line:1165,column:20},end:{line:1165,column:35}}],line:1165},"169":{loc:{start:{line:1179,column:10},end:{line:1242,column:11}},type:"if",locations:[{start:{line:1179,column:10},end:{line:1242,column:11}},{start:{line:1179,column:10},end:{line:1242,column:11}}],line:1179},"170":{loc:{start:{line:1182,column:12},end:{line:1196,column:13}},type:"if",locations:[{start:{line:1182,column:12},end:{line:1196,column:13}},{start:{line:1182,column:12},end:{line:1196,column:13}}],line:1182},"171":{loc:{start:{line:1182,column:16},end:{line:1182,column:75}},type:"binary-expr",locations:[{start:{line:1182,column:16},end:{line:1182,column:43}},{start:{line:1182,column:47},end:{line:1182,column:75}}],line:1182},"172":{loc:{start:{line:1183,column:14},end:{line:1185,column:15}},type:"if",locations:[{start:{line:1183,column:14},end:{line:1185,column:15}},{start:{line:1183,column:14},end:{line:1185,column:15}}],line:1183},"173":{loc:{start:{line:1183,column:18},end:{line:1183,column:72}},type:"binary-expr",locations:[{start:{line:1183,column:18},end:{line:1183,column:38}},{start:{line:1183,column:42},end:{line:1183,column:72}}],line:1183},"174":{loc:{start:{line:1188,column:19},end:{line:1196,column:13}},type:"if",locations:[{start:{line:1188,column:19},end:{line:1196,column:13}},{start:{line:1188,column:19},end:{line:1196,column:13}}],line:1188},"175":{loc:{start:{line:1189,column:14},end:{line:1191,column:15}},type:"if",locations:[{start:{line:1189,column:14},end:{line:1191,column:15}},{start:{line:1189,column:14},end:{line:1191,column:15}}],line:1189},"176":{loc:{start:{line:1199,column:14},end:{line:1203,column:15}},type:"if",locations:[{start:{line:1199,column:14},end:{line:1203,column:15}},{start:{line:1199,column:14},end:{line:1203,column:15}}],line:1199},"177":{loc:{start:{line:1199,column:18},end:{line:1199,column:62}},type:"binary-expr",locations:[{start:{line:1199,column:18},end:{line:1199,column:40}},{start:{line:1199,column:44},end:{line:1199,column:62}}],line:1199},"178":{loc:{start:{line:1205,column:14},end:{line:1209,column:15}},type:"if",locations:[{start:{line:1205,column:14},end:{line:1209,column:15}},{start:{line:1205,column:14},end:{line:1209,column:15}}],line:1205},"179":{loc:{start:{line:1216,column:17},end:{line:1242,column:11}},type:"if",locations:[{start:{line:1216,column:17},end:{line:1242,column:11}},{start:{line:1216,column:17},end:{line:1242,column:11}}],line:1216},"180":{loc:{start:{line:1217,column:12},end:{line:1219,column:13}},type:"if",locations:[{start:{line:1217,column:12},end:{line:1219,column:13}},{start:{line:1217,column:12},end:{line:1219,column:13}}],line:1217},"181":{loc:{start:{line:1217,column:16},end:{line:1217,column:75}},type:"binary-expr",locations:[{start:{line:1217,column:16},end:{line:1217,column:48}},{start:{line:1217,column:52},end:{line:1217,column:75}}],line:1217},"182":{loc:{start:{line:1224,column:12},end:{line:1228,column:13}},type:"if",locations:[{start:{line:1224,column:12},end:{line:1228,column:13}},{start:{line:1224,column:12},end:{line:1228,column:13}}],line:1224},"183":{loc:{start:{line:1224,column:16},end:{line:1224,column:60}},type:"binary-expr",locations:[{start:{line:1224,column:16},end:{line:1224,column:38}},{start:{line:1224,column:42},end:{line:1224,column:60}}],line:1224},"184":{loc:{start:{line:1226,column:19},end:{line:1228,column:13}},type:"if",locations:[{start:{line:1226,column:19},end:{line:1228,column:13}},{start:{line:1226,column:19},end:{line:1228,column:13}}],line:1226},"185":{loc:{start:{line:1235,column:12},end:{line:1237,column:13}},type:"if",locations:[{start:{line:1235,column:12},end:{line:1237,column:13}},{start:{line:1235,column:12},end:{line:1237,column:13}}],line:1235},"186":{loc:{start:{line:1235,column:16},end:{line:1235,column:47}},type:"binary-expr",locations:[{start:{line:1235,column:16},end:{line:1235,column:31}},{start:{line:1235,column:35},end:{line:1235,column:47}}],line:1235},"187":{loc:{start:{line:1251,column:10},end:{line:1255,column:11}},type:"if",locations:[{start:{line:1251,column:10},end:{line:1255,column:11}},{start:{line:1251,column:10},end:{line:1255,column:11}}],line:1251},"188":{loc:{start:{line:1267,column:8},end:{line:1269,column:9}},type:"if",locations:[{start:{line:1267,column:8},end:{line:1269,column:9}},{start:{line:1267,column:8},end:{line:1269,column:9}}],line:1267},"189":{loc:{start:{line:1292,column:2},end:{line:1358,column:3}},type:"switch",locations:[{start:{line:1293,column:4},end:{line:1301,column:7}},{start:{line:1303,column:4},end:{line:1315,column:7}},{start:{line:1317,column:4},end:{line:1317,column:15}},{start:{line:1318,column:4},end:{line:1338,column:7}},{start:{line:1340,column:4},end:{line:1354,column:7}},{start:{line:1356,column:4},end:{line:1357,column:107}}],line:1292},"190":{loc:{start:{line:1294,column:6},end:{line:1301,column:7}},type:"if",locations:[{start:{line:1294,column:6},end:{line:1301,column:7}},{start:{line:1294,column:6},end:{line:1301,column:7}}],line:1294},"191":{loc:{start:{line:1304,column:6},end:{line:1306,column:7}},type:"if",locations:[{start:{line:1304,column:6},end:{line:1306,column:7}},{start:{line:1304,column:6},end:{line:1306,column:7}}],line:1304},"192":{loc:{start:{line:1308,column:6},end:{line:1315,column:7}},type:"if",locations:[{start:{line:1308,column:6},end:{line:1315,column:7}},{start:{line:1308,column:6},end:{line:1315,column:7}}],line:1308},"193":{loc:{start:{line:1319,column:6},end:{line:1321,column:7}},type:"if",locations:[{start:{line:1319,column:6},end:{line:1321,column:7}},{start:{line:1319,column:6},end:{line:1321,column:7}}],line:1319},"194":{loc:{start:{line:1325,column:6},end:{line:1338,column:7}},type:"if",locations:[{start:{line:1325,column:6},end:{line:1338,column:7}},{start:{line:1325,column:6},end:{line:1338,column:7}}],line:1325},"195":{loc:{start:{line:1341,column:6},end:{line:1343,column:7}},type:"if",locations:[{start:{line:1341,column:6},end:{line:1343,column:7}},{start:{line:1341,column:6},end:{line:1343,column:7}}],line:1341},"196":{loc:{start:{line:1347,column:6},end:{line:1354,column:7}},type:"if",locations:[{start:{line:1347,column:6},end:{line:1354,column:7}},{start:{line:1347,column:6},end:{line:1354,column:7}}],line:1347},"197":{loc:{start:{line:1370,column:2},end:{line:1415,column:3}},type:"switch",locations:[{start:{line:1371,column:4},end:{line:1371,column:18}},{start:{line:1372,column:4},end:{line:1372,column:18}},{start:{line:1373,column:4},end:{line:1373,column:19}},{start:{line:1374,column:4},end:{line:1375,column:25}},{start:{line:1377,column:4},end:{line:1377,column:18}},{start:{line:1378,column:4},end:{line:1379,column:64}},{start:{line:1381,column:4},end:{line:1411,column:74}},{start:{line:1413,column:4},end:{line:1414,column:30}}],line:1370},"198":{loc:{start:{line:1382,column:6},end:{line:1384,column:7}},type:"if",locations:[{start:{line:1382,column:6},end:{line:1384,column:7}},{start:{line:1382,column:6},end:{line:1384,column:7}}],line:1382},"199":{loc:{start:{line:1386,column:6},end:{line:1388,column:7}},type:"if",locations:[{start:{line:1386,column:6},end:{line:1388,column:7}},{start:{line:1386,column:6},end:{line:1388,column:7}}],line:1386},"200":{loc:{start:{line:1390,column:6},end:{line:1392,column:7}},type:"if",locations:[{start:{line:1390,column:6},end:{line:1392,column:7}},{start:{line:1390,column:6},end:{line:1392,column:7}}],line:1390},"201":{loc:{start:{line:1394,column:6},end:{line:1396,column:7}},type:"if",locations:[{start:{line:1394,column:6},end:{line:1396,column:7}},{start:{line:1394,column:6},end:{line:1396,column:7}}],line:1394},"202":{loc:{start:{line:1398,column:6},end:{line:1400,column:7}},type:"if",locations:[{start:{line:1398,column:6},end:{line:1400,column:7}},{start:{line:1398,column:6},end:{line:1400,column:7}}],line:1398},"203":{loc:{start:{line:1402,column:6},end:{line:1404,column:7}},type:"if",locations:[{start:{line:1402,column:6},end:{line:1404,column:7}},{start:{line:1402,column:6},end:{line:1404,column:7}}],line:1402},"204":{loc:{start:{line:1406,column:6},end:{line:1409,column:7}},type:"if",locations:[{start:{line:1406,column:6},end:{line:1409,column:7}},{start:{line:1406,column:6},end:{line:1409,column:7}}],line:1406},"205":{loc:{start:{line:1406,column:10},end:{line:1406,column:136}},type:"binary-expr",locations:[{start:{line:1406,column:10},end:{line:1406,column:69}},{start:{line:1406,column:73},end:{line:1406,column:101}},{start:{line:1406,column:105},end:{line:1406,column:136}}],line:1406},"206":{loc:{start:{line:1421,column:2},end:{line:1423,column:3}},type:"if",locations:[{start:{line:1421,column:2},end:{line:1423,column:3}},{start:{line:1421,column:2},end:{line:1423,column:3}}],line:1421},"207":{loc:{start:{line:1435,column:2},end:{line:1620,column:3}},type:"switch",locations:[{start:{line:1436,column:4},end:{line:1436,column:18}},{start:{line:1437,column:4},end:{line:1437,column:18}},{start:{line:1438,column:4},end:{line:1438,column:19}},{start:{line:1439,column:4},end:{line:1440,column:25}},{start:{line:1442,column:4},end:{line:1442,column:18}},{start:{line:1443,column:4},end:{line:1444,column:52}},{start:{line:1446,column:4},end:{line:1616,column:7}},{start:{line:1618,column:4},end:{line:1619,column:30}}],line:1435},"208":{loc:{start:{line:1448,column:8},end:{line:1450,column:9}},type:"if",locations:[{start:{line:1448,column:8},end:{line:1450,column:9}},{start:{line:1448,column:8},end:{line:1450,column:9}}],line:1448},"209":{loc:{start:{line:1452,column:8},end:{line:1454,column:9}},type:"if",locations:[{start:{line:1452,column:8},end:{line:1454,column:9}},{start:{line:1452,column:8},end:{line:1454,column:9}}],line:1452},"210":{loc:{start:{line:1456,column:8},end:{line:1458,column:9}},type:"if",locations:[{start:{line:1456,column:8},end:{line:1458,column:9}},{start:{line:1456,column:8},end:{line:1458,column:9}}],line:1456},"211":{loc:{start:{line:1460,column:8},end:{line:1462,column:9}},type:"if",locations:[{start:{line:1460,column:8},end:{line:1462,column:9}},{start:{line:1460,column:8},end:{line:1462,column:9}}],line:1460},"212":{loc:{start:{line:1464,column:8},end:{line:1466,column:9}},type:"if",locations:[{start:{line:1464,column:8},end:{line:1466,column:9}},{start:{line:1464,column:8},end:{line:1466,column:9}}],line:1464},"213":{loc:{start:{line:1468,column:8},end:{line:1470,column:9}},type:"if",locations:[{start:{line:1468,column:8},end:{line:1470,column:9}},{start:{line:1468,column:8},end:{line:1470,column:9}}],line:1468},"214":{loc:{start:{line:1474,column:8},end:{line:1479,column:9}},type:"if",locations:[{start:{line:1474,column:8},end:{line:1479,column:9}},{start:{line:1474,column:8},end:{line:1479,column:9}}],line:1474},"215":{loc:{start:{line:1474,column:12},end:{line:1474,column:52}},type:"binary-expr",locations:[{start:{line:1474,column:12},end:{line:1474,column:30}},{start:{line:1474,column:34},end:{line:1474,column:52}}],line:1474},"216":{loc:{start:{line:1475,column:30},end:{line:1475,column:54}},type:"binary-expr",locations:[{start:{line:1475,column:30},end:{line:1475,column:48}},{start:{line:1475,column:52},end:{line:1475,column:54}}],line:1475},"217":{loc:{start:{line:1476,column:30},end:{line:1476,column:54}},type:"binary-expr",locations:[{start:{line:1476,column:30},end:{line:1476,column:48}},{start:{line:1476,column:52},end:{line:1476,column:54}}],line:1476},"218":{loc:{start:{line:1482,column:10},end:{line:1604,column:11}},type:"switch",locations:[{start:{line:1483,column:12},end:{line:1485,column:20}},{start:{line:1487,column:12},end:{line:1489,column:20}},{start:{line:1491,column:12},end:{line:1492,column:20}},{start:{line:1494,column:12},end:{line:1494,column:39}},{start:{line:1495,column:12},end:{line:1495,column:37}},{start:{line:1496,column:12},end:{line:1496,column:48}},{start:{line:1497,column:12},end:{line:1497,column:40}},{start:{line:1498,column:12},end:{line:1498,column:30}},{start:{line:1499,column:12},end:{line:1499,column:50}},{start:{line:1500,column:12},end:{line:1500,column:47}},{start:{line:1501,column:12},end:{line:1501,column:39}},{start:{line:1502,column:12},end:{line:1505,column:20}},{start:{line:1507,column:12},end:{line:1509,column:20}},{start:{line:1511,column:12},end:{line:1511,column:29}},{start:{line:1512,column:12},end:{line:1514,column:20}},{start:{line:1516,column:12},end:{line:1516,column:29}},{start:{line:1517,column:12},end:{line:1519,column:20}},{start:{line:1521,column:12},end:{line:1521,column:29}},{start:{line:1522,column:12},end:{line:1524,column:20}},{start:{line:1526,column:12},end:{line:1526,column:28}},{start:{line:1527,column:12},end:{line:1529,column:20}},{start:{line:1531,column:12},end:{line:1531,column:29}},{start:{line:1532,column:12},end:{line:1534,column:20}},{start:{line:1536,column:12},end:{line:1543,column:20}},{start:{line:1545,column:12},end:{line:1603,column:87}}],line:1482},"219":{loc:{start:{line:1537,column:14},end:{line:1541,column:15}},type:"if",locations:[{start:{line:1537,column:14},end:{line:1541,column:15}},{start:{line:1537,column:14},end:{line:1541,column:15}}],line:1537},"220":{loc:{start:{line:1549,column:14},end:{line:1554,column:15}},type:"if",locations:[{start:{line:1549,column:14},end:{line:1554,column:15}},{start:{line:1549,column:14},end:{line:1554,column:15}}],line:1549},"221":{loc:{start:{line:1549,column:18},end:{line:1549,column:56}},type:"binary-expr",locations:[{start:{line:1549,column:18},end:{line:1549,column:31}},{start:{line:1549,column:35},end:{line:1549,column:56}}],line:1549},"222":{loc:{start:{line:1551,column:41},end:{line:1551,column:69}},type:"binary-expr",locations:[{start:{line:1551,column:41},end:{line:1551,column:63}},{start:{line:1551,column:67},end:{line:1551,column:69}}],line:1551},"223":{loc:{start:{line:1556,column:14},end:{line:1601,column:15}},type:"if",locations:[{start:{line:1556,column:14},end:{line:1601,column:15}},{start:{line:1556,column:14},end:{line:1601,column:15}}],line:1556},"224":{loc:{start:{line:1559,column:16},end:{line:1563,column:17}},type:"if",locations:[{start:{line:1559,column:16},end:{line:1563,column:17}},{start:{line:1559,column:16},end:{line:1563,column:17}}],line:1559},"225":{loc:{start:{line:1565,column:16},end:{line:1569,column:17}},type:"if",locations:[{start:{line:1565,column:16},end:{line:1569,column:17}},{start:{line:1565,column:16},end:{line:1569,column:17}}],line:1565},"226":{loc:{start:{line:1571,column:16},end:{line:1573,column:17}},type:"if",locations:[{start:{line:1571,column:16},end:{line:1573,column:17}},{start:{line:1571,column:16},end:{line:1573,column:17}}],line:1571},"227":{loc:{start:{line:1577,column:21},end:{line:1601,column:15}},type:"if",locations:[{start:{line:1577,column:21},end:{line:1601,column:15}},{start:{line:1577,column:21},end:{line:1601,column:15}}],line:1577},"228":{loc:{start:{line:1577,column:25},end:{line:1577,column:57}},type:"binary-expr",locations:[{start:{line:1577,column:25},end:{line:1577,column:38}},{start:{line:1577,column:42},end:{line:1577,column:57}}],line:1577},"229":{loc:{start:{line:1582,column:16},end:{line:1585,column:17}},type:"if",locations:[{start:{line:1582,column:16},end:{line:1585,column:17}},{start:{line:1582,column:16},end:{line:1585,column:17}}],line:1582},"230":{loc:{start:{line:1582,column:20},end:{line:1582,column:118}},type:"binary-expr",locations:[{start:{line:1582,column:20},end:{line:1582,column:38}},{start:{line:1582,column:42},end:{line:1582,column:76}},{start:{line:1582,column:80},end:{line:1582,column:118}}],line:1582},"231":{loc:{start:{line:1587,column:16},end:{line:1590,column:17}},type:"if",locations:[{start:{line:1587,column:16},end:{line:1590,column:17}},{start:{line:1587,column:16},end:{line:1590,column:17}}],line:1587},"232":{loc:{start:{line:1587,column:20},end:{line:1587,column:126}},type:"binary-expr",locations:[{start:{line:1587,column:20},end:{line:1587,column:38}},{start:{line:1587,column:42},end:{line:1587,column:80}},{start:{line:1587,column:84},end:{line:1587,column:126}}],line:1587},"233":{loc:{start:{line:1592,column:16},end:{line:1595,column:17}},type:"if",locations:[{start:{line:1592,column:16},end:{line:1595,column:17}},{start:{line:1592,column:16},end:{line:1595,column:17}}],line:1592},"234":{loc:{start:{line:1592,column:20},end:{line:1592,column:124}},type:"binary-expr",locations:[{start:{line:1592,column:20},end:{line:1592,column:38}},{start:{line:1592,column:42},end:{line:1592,column:79}},{start:{line:1592,column:83},end:{line:1592,column:124}}],line:1592},"235":{loc:{start:{line:1597,column:16},end:{line:1600,column:17}},type:"if",locations:[{start:{line:1597,column:16},end:{line:1600,column:17}},{start:{line:1597,column:16},end:{line:1600,column:17}}],line:1597},"236":{loc:{start:{line:1597,column:20},end:{line:1597,column:120}},type:"binary-expr",locations:[{start:{line:1597,column:20},end:{line:1597,column:38}},{start:{line:1597,column:42},end:{line:1597,column:77}},{start:{line:1597,column:81},end:{line:1597,column:120}}],line:1597},"237":{loc:{start:{line:1629,column:11},end:{line:1629,column:81}},type:"binary-expr",locations:[{start:{line:1629,column:11},end:{line:1629,column:36}},{start:{line:1629,column:40},end:{line:1629,column:54}},{start:{line:1629,column:58},end:{line:1629,column:81}}],line:1629},"238":{loc:{start:{line:1637,column:4},end:{line:1639,column:5}},type:"if",locations:[{start:{line:1637,column:4},end:{line:1639,column:5}},{start:{line:1637,column:4},end:{line:1639,column:5}}],line:1637},"239":{loc:{start:{line:1647,column:4},end:{line:1651,column:5}},type:"if",locations:[{start:{line:1647,column:4},end:{line:1651,column:5}},{start:{line:1647,column:4},end:{line:1651,column:5}}],line:1647},"240":{loc:{start:{line:1660,column:11},end:{line:1660,column:73}},type:"binary-expr",locations:[{start:{line:1660,column:11},end:{line:1660,column:43}},{start:{line:1660,column:47},end:{line:1660,column:73}}],line:1660},"241":{loc:{start:{line:1668,column:11},end:{line:1668,column:82}},type:"binary-expr",locations:[{start:{line:1668,column:11},end:{line:1668,column:36}},{start:{line:1668,column:40},end:{line:1668,column:54}},{start:{line:1668,column:58},end:{line:1668,column:82}}],line:1668},"242":{loc:{start:{line:1682,column:11},end:{line:1682,column:56}},type:"binary-expr",locations:[{start:{line:1682,column:11},end:{line:1682,column:34}},{start:{line:1682,column:38},end:{line:1682,column:56}}],line:1682},"243":{loc:{start:{line:1690,column:11},end:{line:1690,column:85}},type:"binary-expr",locations:[{start:{line:1690,column:11},end:{line:1690,column:36}},{start:{line:1690,column:40},end:{line:1690,column:54}},{start:{line:1690,column:58},end:{line:1690,column:85}}],line:1690},"244":{loc:{start:{line:1709,column:4},end:{line:1711,column:5}},type:"if",locations:[{start:{line:1709,column:4},end:{line:1711,column:5}},{start:{line:1709,column:4},end:{line:1711,column:5}}],line:1709},"245":{loc:{start:{line:1709,column:8},end:{line:1709,column:63}},type:"binary-expr",locations:[{start:{line:1709,column:8},end:{line:1709,column:33}},{start:{line:1709,column:37},end:{line:1709,column:63}}],line:1709},"246":{loc:{start:{line:1716,column:6},end:{line:1718,column:7}},type:"if",locations:[{start:{line:1716,column:6},end:{line:1718,column:7}},{start:{line:1716,column:6},end:{line:1718,column:7}}],line:1716},"247":{loc:{start:{line:1729,column:4},end:{line:1731,column:5}},type:"if",locations:[{start:{line:1729,column:4},end:{line:1731,column:5}},{start:{line:1729,column:4},end:{line:1731,column:5}}],line:1729},"248":{loc:{start:{line:1729,column:8},end:{line:1729,column:102}},type:"binary-expr",locations:[{start:{line:1729,column:8},end:{line:1729,column:53}},{start:{line:1729,column:57},end:{line:1729,column:102}}],line:1729},"249":{loc:{start:{line:1739,column:8},end:{line:1742,column:9}},type:"if",locations:[{start:{line:1739,column:8},end:{line:1742,column:9}},{start:{line:1739,column:8},end:{line:1742,column:9}}],line:1739},"250":{loc:{start:{line:1739,column:12},end:{line:1739,column:50}},type:"binary-expr",locations:[{start:{line:1739,column:12},end:{line:1739,column:29}},{start:{line:1739,column:33},end:{line:1739,column:50}}],line:1739},"251":{loc:{start:{line:1748,column:4},end:{line:1750,column:5}},type:"if",locations:[{start:{line:1748,column:4},end:{line:1750,column:5}},{start:{line:1748,column:4},end:{line:1750,column:5}}],line:1748},"252":{loc:{start:{line:1763,column:11},end:{line:1763,column:84}},type:"binary-expr",locations:[{start:{line:1763,column:11},end:{line:1763,column:36}},{start:{line:1763,column:40},end:{line:1763,column:54}},{start:{line:1763,column:58},end:{line:1763,column:84}}],line:1763},"253":{loc:{start:{line:1784,column:11},end:{line:1784,column:81}},type:"binary-expr",locations:[{start:{line:1784,column:11},end:{line:1784,column:36}},{start:{line:1784,column:40},end:{line:1784,column:54}},{start:{line:1784,column:58},end:{line:1784,column:81}}],line:1784}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0],"40":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0],"64":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0,0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0,0],"110":[0,0,0,0,0,0,0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0],"122":[0,0],"123":[0,0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"131":[0,0],"132":[0,0],"133":[0],"134":[0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"140":[0,0],"141":[0,0,0],"142":[0,0],"143":[0,0],"144":[0,0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0,0,0,0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0,0,0,0,0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0,0],"206":[0,0],"207":[0,0,0,0,0,0,0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0,0],"231":[0,0],"232":[0,0,0],"233":[0,0],"234":[0,0,0],"235":[0,0],"236":[0,0,0],"237":[0,0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0,0],"242":[0,0],"243":[0,0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0,0],"253":[0,0,0]},inputSourceMap:{version:3,sources:["../../../../src/Adapters/Storage/Mongo/MongoTransform.js"],names:["mongodb","require","Parse","transformKey","className","fieldName","schema","fields","__type","type","transformKeyValueForUpdate","restKey","restValue","parseFormatSchema","key","timeField","includes","value","parseInt","transformTopLevelAtom","CannotTransform","Date","indexOf","Array","map","transformInteriorValue","transformUpdateOperator","mapValues","isRegex","RegExp","isStartsWithRegex","matches","toString","match","isAllValuesRegexOrNone","values","isArray","length","firstValuesIsRegex","i","isAnyValueRegex","some","Object","keys","Error","INVALID_NESTED_KEY","transformInteriorAtom","valueAsDate","transformQueryKeyValue","count","subQuery","transformWhere","authDataMatch","provider","expectedTypeIsArray","expectedTypeIsPointer","field","transformedConstraint","transformConstraint","$text","$elemMatch","$all","transformRes","INVALID_JSON","restWhere","mongoWhere","out","parseObjectKeyValueToMongoObjectKeyValue","transformedValue","coercedToDate","INVALID_KEY_NAME","parseObjectToMongoObjectForCreate","restCreate","addLegacyACL","mongoCreate","undefined","createdAt","_created_at","iso","updatedAt","_updated_at","transformUpdate","restUpdate","mongoUpdate","acl","_rperm","_wperm","_acl","$set","__op","arg","restObject","restObjectCopy","forEach","entry","w","r","atom","objectId","DateCoder","isValidJSON","JSONToDatabase","BytesCoder","$regex","targetClass","GeoPointCoder","PolygonCoder","FileCoder","INTERNAL_SERVER_ERROR","relativeTimeToDate","text","now","toLowerCase","parts","split","filter","part","future","past","status","info","slice","pairs","push","shift","seconds","num","interval","val","Number","isInteger","milliseconds","result","valueOf","constraint","inArray","transformFunction","transformer","JSON","stringify","sort","reverse","answer","$relativeTime","parserResult","log","arr","_","flatMap","s","$nin","search","$search","$term","$language","$caseSensitive","$diacriticSensitive","point","$geoWithin","$centerSphere","longitude","latitude","$maxDistance","COMMAND_UNAVAILABLE","box","$box","polygon","centerSphere","points","coordinates","GeoPoint","_validate","$polygon","distance","isNaN","$geometry","amount","objects","flatten","toAdd","mongoOp","Add","AddUnique","$each","toRemove","object","iterator","nestedMongoObjectToNestedParseObject","mongoObject","_encode","Long","toNumber","Double","isValidDatabaseObject","databaseToJSON","prototype","hasOwnProperty","call","toJSON","transformPointerString","pointerString","objData","mongoObjectToParseObject","_hashed_password","warn","newKey","substring","relationFieldNames","relationFields","relationFieldName","json","base64Pattern","isBase64Value","test","buffer","base64","Binary","Buffer","from","coords","coord","parseFloat","unique","item","index","ar","foundIndex","pt","name","module","exports"],mappings:";;AAAA;;AACA;;;;;;;;;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAlC;;AAEA,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB,KAAkC;AACrD;AACA,UAAQD,SAAR;AACE,SAAK,UAAL;AACE,aAAO,KAAP;;AACF,SAAK,WAAL;AACE,aAAO,aAAP;;AACF,SAAK,WAAL;AACE,aAAO,aAAP;;AACF,SAAK,cAAL;AACE,aAAO,gBAAP;;AACF,SAAK,UAAL;AACE,aAAO,YAAP;;AACF,SAAK,WAAL;AACE,aAAO,YAAP;AAZJ;;AAeA,MAAIC,MAAM,CAACC,MAAP,CAAcF,SAAd,KAA4BC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBG,MAAzB,IAAmC,SAAnE,EAA8E;AAC5EH,IAAAA,SAAS,GAAG,QAAQA,SAApB;AACD,GAFD,MAEO,IAAIC,MAAM,CAACC,MAAP,CAAcF,SAAd,KAA4BC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBI,IAAzB,IAAiC,SAAjE,EAA4E;AACjFJ,IAAAA,SAAS,GAAG,QAAQA,SAApB;AACD;;AAED,SAAOA,SAAP;AACD,CAxBD;;AA0BA,MAAMK,0BAA0B,GAAG,CAACN,SAAD,EAAYO,OAAZ,EAAqBC,SAArB,EAAgCC,iBAAhC,KAAsD;AACvF;AACA,MAAIC,GAAG,GAAGH,OAAV;AACA,MAAII,SAAS,GAAG,KAAhB;;AACA,UAAQD,GAAR;AACE,SAAK,UAAL;AACA,SAAK,KAAL;AACE,UAAI,CAAC,eAAD,EAAkB,gBAAlB,EAAoCE,QAApC,CAA6CZ,SAA7C,CAAJ,EAA6D;AAC3D,eAAO;AACLU,UAAAA,GAAG,EAAEA,GADA;AAELG,UAAAA,KAAK,EAAEC,QAAQ,CAACN,SAAD;AAFV,SAAP;AAID;;AACDE,MAAAA,GAAG,GAAG,KAAN;AACA;;AACF,SAAK,WAAL;AACA,SAAK,aAAL;AACEA,MAAAA,GAAG,GAAG,aAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,WAAL;AACA,SAAK,aAAL;AACED,MAAAA,GAAG,GAAG,aAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,cAAL;AACA,SAAK,gBAAL;AACED,MAAAA,GAAG,GAAG,gBAAN;AACA;;AACF,SAAK,WAAL;AACA,SAAK,YAAL;AACEA,MAAAA,GAAG,GAAG,WAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,gCAAL;AACED,MAAAA,GAAG,GAAG,gCAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,6BAAL;AACED,MAAAA,GAAG,GAAG,6BAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,qBAAL;AACED,MAAAA,GAAG,GAAG,qBAAN;AACA;;AACF,SAAK,8BAAL;AACEA,MAAAA,GAAG,GAAG,8BAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,sBAAL;AACED,MAAAA,GAAG,GAAG,sBAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,QAAL;AACA,SAAK,QAAL;AACE,aAAO;AAAED,QAAAA,GAAG,EAAEA,GAAP;AAAYG,QAAAA,KAAK,EAAEL;AAAnB,OAAP;;AACF,SAAK,UAAL;AACA,SAAK,YAAL;AACEE,MAAAA,GAAG,GAAG,YAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,SAAK,WAAL;AACA,SAAK,YAAL;AACED,MAAAA,GAAG,GAAG,YAAN;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACA;AA7DJ;;AAgEA,MACGF,iBAAiB,CAACN,MAAlB,CAAyBO,GAAzB,KAAiCD,iBAAiB,CAACN,MAAlB,CAAyBO,GAAzB,EAA8BL,IAA9B,KAAuC,SAAzE,IACC,CAACK,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAD,IACC,CAACH,iBAAiB,CAACN,MAAlB,CAAyBO,GAAzB,CADF,IAECF,SAFD,IAGCA,SAAS,CAACJ,MAAV,IAAoB,SALxB,CAKmC;AALnC,IAME;AACAM,IAAAA,GAAG,GAAG,QAAQA,GAAd;AACD,GA5EsF,CA8EvF;;;AACA,MAAIG,KAAK,GAAGE,qBAAqB,CAACP,SAAD,CAAjC;;AACA,MAAIK,KAAK,KAAKG,eAAd,EAA+B;AAC7B,QAAIL,SAAS,IAAI,OAAOE,KAAP,KAAiB,QAAlC,EAA4C;AAC1CA,MAAAA,KAAK,GAAG,IAAII,IAAJ,CAASJ,KAAT,CAAR;AACD;;AACD,QAAIN,OAAO,CAACW,OAAR,CAAgB,GAAhB,IAAuB,CAA3B,EAA8B;AAC5B,aAAO;AAAER,QAAAA,GAAF;AAAOG,QAAAA,KAAK,EAAEL;AAAd,OAAP;AACD;;AACD,WAAO;AAAEE,MAAAA,GAAF;AAAOG,MAAAA;AAAP,KAAP;AACD,GAxFsF,CA0FvF;;;AACA,MAAIL,SAAS,YAAYW,KAAzB,EAAgC;AAC9BN,IAAAA,KAAK,GAAGL,SAAS,CAACY,GAAV,CAAcC,sBAAd,CAAR;AACA,WAAO;AAAEX,MAAAA,GAAF;AAAOG,MAAAA;AAAP,KAAP;AACD,GA9FsF,CAgGvF;;;AACA,MAAI,OAAOL,SAAP,KAAqB,QAArB,IAAiC,UAAUA,SAA/C,EAA0D;AACxD,WAAO;AAAEE,MAAAA,GAAF;AAAOG,MAAAA,KAAK,EAAES,uBAAuB,CAACd,SAAD,EAAY,KAAZ;AAArC,KAAP;AACD,GAnGsF,CAqGvF;;;AACAK,EAAAA,KAAK,GAAGU,SAAS,CAACf,SAAD,EAAYa,sBAAZ,CAAjB;AACA,SAAO;AAAEX,IAAAA,GAAF;AAAOG,IAAAA;AAAP,GAAP;AACD,CAxGD;;AA0GA,MAAMW,OAAO,GAAGX,KAAK,IAAI;AACvB,SAAOA,KAAK,IAAIA,KAAK,YAAYY,MAAjC;AACD,CAFD;;AAIA,MAAMC,iBAAiB,GAAGb,KAAK,IAAI;AACjC,MAAI,CAACW,OAAO,CAACX,KAAD,CAAZ,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,QAAMc,OAAO,GAAGd,KAAK,CAACe,QAAN,GAAiBC,KAAjB,CAAuB,gBAAvB,CAAhB;AACA,SAAO,CAAC,CAACF,OAAT;AACD,CAPD;;AASA,MAAMG,sBAAsB,GAAGC,MAAM,IAAI;AACvC,MAAI,CAACA,MAAD,IAAW,CAACZ,KAAK,CAACa,OAAN,CAAcD,MAAd,CAAZ,IAAqCA,MAAM,CAACE,MAAP,KAAkB,CAA3D,EAA8D;AAC5D,WAAO,IAAP;AACD;;AAED,QAAMC,kBAAkB,GAAGR,iBAAiB,CAACK,MAAM,CAAC,CAAD,CAAP,CAA5C;;AACA,MAAIA,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAOC,kBAAP;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWF,MAAM,GAAGF,MAAM,CAACE,MAAhC,EAAwCE,CAAC,GAAGF,MAA5C,EAAoD,EAAEE,CAAtD,EAAyD;AACvD,QAAID,kBAAkB,KAAKR,iBAAiB,CAACK,MAAM,CAACI,CAAD,CAAP,CAA5C,EAAyD;AACvD,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAjBD;;AAmBA,MAAMC,eAAe,GAAGL,MAAM,IAAI;AAChC,SAAOA,MAAM,CAACM,IAAP,CAAY,UAAUxB,KAAV,EAAiB;AAClC,WAAOW,OAAO,CAACX,KAAD,CAAd;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMQ,sBAAsB,GAAGb,SAAS,IAAI;AAC1C,MACEA,SAAS,KAAK,IAAd,IACA,OAAOA,SAAP,KAAqB,QADrB,IAEA8B,MAAM,CAACC,IAAP,CAAY/B,SAAZ,EAAuB6B,IAAvB,CAA4B3B,GAAG,IAAIA,GAAG,CAACE,QAAJ,CAAa,GAAb,KAAqBF,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAxD,CAHF,EAIE;AACA,UAAM,IAAId,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYC,kBADR,EAEJ,0DAFI,CAAN;AAID,GAVyC,CAW1C;;;AACA,MAAI5B,KAAK,GAAG6B,qBAAqB,CAAClC,SAAD,CAAjC;;AACA,MAAIK,KAAK,KAAKG,eAAd,EAA+B;AAC7B,WAAOH,KAAP;AACD,GAfyC,CAiB1C;;;AACA,MAAIL,SAAS,YAAYW,KAAzB,EAAgC;AAC9B,WAAOX,SAAS,CAACY,GAAV,CAAcC,sBAAd,CAAP;AACD,GApByC,CAsB1C;;;AACA,MAAI,OAAOb,SAAP,KAAqB,QAArB,IAAiC,UAAUA,SAA/C,EAA0D;AACxD,WAAOc,uBAAuB,CAACd,SAAD,EAAY,IAAZ,CAA9B;AACD,GAzByC,CA2B1C;;;AACA,SAAOe,SAAS,CAACf,SAAD,EAAYa,sBAAZ,CAAhB;AACD,CA7BD;;AA+BA,MAAMsB,WAAW,GAAG9B,KAAK,IAAI;AAC3B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAII,IAAJ,CAASJ,KAAT,CAAP;AACD,GAFD,MAEO,IAAIA,KAAK,YAAYI,IAArB,EAA2B;AAChC,WAAOJ,KAAP;AACD;;AACD,SAAO,KAAP;AACD,CAPD;;AASA,SAAS+B,sBAAT,CAAgC5C,SAAhC,EAA2CU,GAA3C,EAAgDG,KAAhD,EAAuDX,MAAvD,EAA+D2C,KAAK,GAAG,KAAvE,EAA8E;AAC5E,UAAQnC,GAAR;AACE,SAAK,WAAL;AACE,UAAIiC,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AAAEH,UAAAA,GAAG,EAAE,aAAP;AAAsBG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAAxC,SAAP;AACD;;AACDH,MAAAA,GAAG,GAAG,aAAN;AACA;;AACF,SAAK,WAAL;AACE,UAAIiC,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AAAEH,UAAAA,GAAG,EAAE,aAAP;AAAsBG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAAxC,SAAP;AACD;;AACDH,MAAAA,GAAG,GAAG,aAAN;AACA;;AACF,SAAK,WAAL;AACE,UAAIiC,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AAAEH,UAAAA,GAAG,EAAE,WAAP;AAAoBG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAAtC,SAAP;AACD;;AACD;;AACF,SAAK,gCAAL;AACE,UAAI8B,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AACLH,UAAAA,GAAG,EAAE,gCADA;AAELG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAFb,SAAP;AAID;;AACD;;AACF,SAAK,UAAL;AAAiB;AACf,YAAI,CAAC,eAAD,EAAkB,gBAAlB,EAAoCD,QAApC,CAA6CZ,SAA7C,CAAJ,EAA6D;AAC3Da,UAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;AACD;;AACD,eAAO;AAAEH,UAAAA,GAAG,EAAE,KAAP;AAAcG,UAAAA;AAAd,SAAP;AACD;;AACD,SAAK,6BAAL;AACE,UAAI8B,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AACLH,UAAAA,GAAG,EAAE,6BADA;AAELG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAFb,SAAP;AAID;;AACD;;AACF,SAAK,qBAAL;AACE,aAAO;AAAEH,QAAAA,GAAF;AAAOG,QAAAA;AAAP,OAAP;;AACF,SAAK,cAAL;AACE,aAAO;AAAEH,QAAAA,GAAG,EAAE,gBAAP;AAAyBG,QAAAA;AAAzB,OAAP;;AACF,SAAK,8BAAL;AACE,UAAI8B,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AACLH,UAAAA,GAAG,EAAE,8BADA;AAELG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAFb,SAAP;AAID;;AACD;;AACF,SAAK,sBAAL;AACE,UAAI8B,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AAAEH,UAAAA,GAAG,EAAE,sBAAP;AAA+BG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAAjD,SAAP;AACD;;AACD;;AACF,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,mBAAL;AACA,SAAK,qBAAL;AACE,aAAO;AAAEH,QAAAA,GAAF;AAAOG,QAAAA;AAAP,OAAP;;AACF,SAAK,KAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACE,aAAO;AACLH,QAAAA,GAAG,EAAEA,GADA;AAELG,QAAAA,KAAK,EAAEA,KAAK,CAACO,GAAN,CAAU0B,QAAQ,IAAIC,cAAc,CAAC/C,SAAD,EAAY8C,QAAZ,EAAsB5C,MAAtB,EAA8B2C,KAA9B,CAApC;AAFF,OAAP;;AAIF,SAAK,UAAL;AACE,UAAIF,WAAW,CAAC9B,KAAD,CAAf,EAAwB;AACtB,eAAO;AAAEH,UAAAA,GAAG,EAAE,YAAP;AAAqBG,UAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAAD;AAAvC,SAAP;AACD;;AACDH,MAAAA,GAAG,GAAG,YAAN;AACA;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,GAAG,EAAE,YAAP;AAAqBG,QAAAA,KAAK,EAAEA;AAA5B,OAAP;;AACF;AAAS;AACP;AACA,cAAMmC,aAAa,GAAGtC,GAAG,CAACmB,KAAJ,CAAU,iCAAV,CAAtB;;AACA,YAAImB,aAAJ,EAAmB;AACjB,gBAAMC,QAAQ,GAAGD,aAAa,CAAC,CAAD,CAA9B,CADiB,CAEjB;;AACA,iBAAO;AAAEtC,YAAAA,GAAG,EAAG,cAAauC,QAAS,KAA9B;AAAoCpC,YAAAA;AAApC,WAAP;AACD;AACF;AArFH;;AAwFA,QAAMqC,mBAAmB,GAAGhD,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAcO,GAAd,CAAV,IAAgCR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,OAAxF;AAEA,QAAM8C,qBAAqB,GACzBjD,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAcO,GAAd,CAAV,IAAgCR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,SAD9D;AAGA,QAAM+C,KAAK,GAAGlD,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAcO,GAAd,CAAxB;;AACA,MACEyC,qBAAqB,IACpB,CAACjD,MAAD,IAAW,CAACQ,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAZ,IAAiCC,KAAjC,IAA0CA,KAAK,CAACT,MAAN,KAAiB,SAF9D,EAGE;AACAM,IAAAA,GAAG,GAAG,QAAQA,GAAd;AACD,GApG2E,CAsG5E;;;AACA,QAAM2C,qBAAqB,GAAGC,mBAAmB,CAACzC,KAAD,EAAQuC,KAAR,EAAeP,KAAf,CAAjD;;AACA,MAAIQ,qBAAqB,KAAKrC,eAA9B,EAA+C;AAC7C,QAAIqC,qBAAqB,CAACE,KAA1B,EAAiC;AAC/B,aAAO;AAAE7C,QAAAA,GAAG,EAAE,OAAP;AAAgBG,QAAAA,KAAK,EAAEwC,qBAAqB,CAACE;AAA7C,OAAP;AACD;;AACD,QAAIF,qBAAqB,CAACG,UAA1B,EAAsC;AACpC,aAAO;AAAE9C,QAAAA,GAAG,EAAE,MAAP;AAAeG,QAAAA,KAAK,EAAE,CAAC;AAAE,WAACH,GAAD,GAAO2C;AAAT,SAAD;AAAtB,OAAP;AACD;;AACD,WAAO;AAAE3C,MAAAA,GAAF;AAAOG,MAAAA,KAAK,EAAEwC;AAAd,KAAP;AACD;;AAED,MAAIH,mBAAmB,IAAI,EAAErC,KAAK,YAAYM,KAAnB,CAA3B,EAAsD;AACpD,WAAO;AAAET,MAAAA,GAAF;AAAOG,MAAAA,KAAK,EAAE;AAAE4C,QAAAA,IAAI,EAAE,CAACf,qBAAqB,CAAC7B,KAAD,CAAtB;AAAR;AAAd,KAAP;AACD,GApH2E,CAsH5E;;;AACA,QAAM6C,YAAY,GAAGhD,GAAG,CAACE,QAAJ,CAAa,GAAb,IACjB8B,qBAAqB,CAAC7B,KAAD,CADJ,GAEjBE,qBAAqB,CAACF,KAAD,CAFzB;;AAGA,MAAI6C,YAAY,KAAK1C,eAArB,EAAsC;AACpC,WAAO;AAAEN,MAAAA,GAAF;AAAOG,MAAAA,KAAK,EAAE6C;AAAd,KAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAI5D,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEH,kBAAiB9C,KAAM,wBAFpB,CAAN;AAID;AACF,C,CAED;AACA;AACA;;;AACA,SAASkC,cAAT,CAAwB/C,SAAxB,EAAmC4D,SAAnC,EAA8C1D,MAA9C,EAAsD2C,KAAK,GAAG,KAA9D,EAAqE;AACnE,QAAMgB,UAAU,GAAG,EAAnB;;AACA,OAAK,MAAMtD,OAAX,IAAsBqD,SAAtB,EAAiC;AAC/B,UAAME,GAAG,GAAGlB,sBAAsB,CAAC5C,SAAD,EAAYO,OAAZ,EAAqBqD,SAAS,CAACrD,OAAD,CAA9B,EAAyCL,MAAzC,EAAiD2C,KAAjD,CAAlC;AACAgB,IAAAA,UAAU,CAACC,GAAG,CAACpD,GAAL,CAAV,GAAsBoD,GAAG,CAACjD,KAA1B;AACD;;AACD,SAAOgD,UAAP;AACD;;AAED,MAAME,wCAAwC,GAAG,CAACxD,OAAD,EAAUC,SAAV,EAAqBN,MAArB,KAAgC;AAC/E;AACA,MAAI8D,gBAAJ;AACA,MAAIC,aAAJ;;AACA,UAAQ1D,OAAR;AACE,SAAK,UAAL;AACE,aAAO;AAAEG,QAAAA,GAAG,EAAE,KAAP;AAAcG,QAAAA,KAAK,EAAEL;AAArB,OAAP;;AACF,SAAK,WAAL;AACEwD,MAAAA,gBAAgB,GAAGjD,qBAAqB,CAACP,SAAD,CAAxC;AACAyD,MAAAA,aAAa,GACX,OAAOD,gBAAP,KAA4B,QAA5B,GAAuC,IAAI/C,IAAJ,CAAS+C,gBAAT,CAAvC,GAAoEA,gBADtE;AAEA,aAAO;AAAEtD,QAAAA,GAAG,EAAE,WAAP;AAAoBG,QAAAA,KAAK,EAAEoD;AAA3B,OAAP;;AACF,SAAK,gCAAL;AACED,MAAAA,gBAAgB,GAAGjD,qBAAqB,CAACP,SAAD,CAAxC;AACAyD,MAAAA,aAAa,GACX,OAAOD,gBAAP,KAA4B,QAA5B,GAAuC,IAAI/C,IAAJ,CAAS+C,gBAAT,CAAvC,GAAoEA,gBADtE;AAEA,aAAO;AAAEtD,QAAAA,GAAG,EAAE,gCAAP;AAAyCG,QAAAA,KAAK,EAAEoD;AAAhD,OAAP;;AACF,SAAK,6BAAL;AACED,MAAAA,gBAAgB,GAAGjD,qBAAqB,CAACP,SAAD,CAAxC;AACAyD,MAAAA,aAAa,GACX,OAAOD,gBAAP,KAA4B,QAA5B,GAAuC,IAAI/C,IAAJ,CAAS+C,gBAAT,CAAvC,GAAoEA,gBADtE;AAEA,aAAO;AAAEtD,QAAAA,GAAG,EAAE,6BAAP;AAAsCG,QAAAA,KAAK,EAAEoD;AAA7C,OAAP;;AACF,SAAK,8BAAL;AACED,MAAAA,gBAAgB,GAAGjD,qBAAqB,CAACP,SAAD,CAAxC;AACAyD,MAAAA,aAAa,GACX,OAAOD,gBAAP,KAA4B,QAA5B,GAAuC,IAAI/C,IAAJ,CAAS+C,gBAAT,CAAvC,GAAoEA,gBADtE;AAEA,aAAO;AAAEtD,QAAAA,GAAG,EAAE,8BAAP;AAAuCG,QAAAA,KAAK,EAAEoD;AAA9C,OAAP;;AACF,SAAK,sBAAL;AACED,MAAAA,gBAAgB,GAAGjD,qBAAqB,CAACP,SAAD,CAAxC;AACAyD,MAAAA,aAAa,GACX,OAAOD,gBAAP,KAA4B,QAA5B,GAAuC,IAAI/C,IAAJ,CAAS+C,gBAAT,CAAvC,GAAoEA,gBADtE;AAEA,aAAO;AAAEtD,QAAAA,GAAG,EAAE,sBAAP;AAA+BG,QAAAA,KAAK,EAAEoD;AAAtC,OAAP;;AACF,SAAK,qBAAL;AACA,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,qBAAL;AACA,SAAK,kBAAL;AACA,SAAK,mBAAL;AACE,aAAO;AAAEvD,QAAAA,GAAG,EAAEH,OAAP;AAAgBM,QAAAA,KAAK,EAAEL;AAAvB,OAAP;;AACF,SAAK,cAAL;AACE,aAAO;AAAEE,QAAAA,GAAG,EAAE,gBAAP;AAAyBG,QAAAA,KAAK,EAAEL;AAAhC,OAAP;;AACF;AACE;AACA,UAAID,OAAO,CAACsB,KAAR,CAAc,iCAAd,CAAJ,EAAsD;AACpD,cAAM,IAAI/B,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAY0B,gBAA5B,EAA8C,uBAAuB3D,OAArE,CAAN;AACD,OAJH,CAKE;;;AACA,UAAIA,OAAO,CAACsB,KAAR,CAAc,4BAAd,CAAJ,EAAiD;AAC/C,eAAO;AAAEnB,UAAAA,GAAG,EAAEH,OAAP;AAAgBM,UAAAA,KAAK,EAAEL;AAAvB,SAAP;AACD;;AA7CL,GAJ+E,CAmD/E;;;AACA,MAAIA,SAAS,IAAIA,SAAS,CAACJ,MAAV,KAAqB,OAAtC,EAA+C;AAC7C;AACA;AACA,QACGF,MAAM,CAACC,MAAP,CAAcI,OAAd,KAA0BL,MAAM,CAACC,MAAP,CAAcI,OAAd,EAAuBF,IAAvB,IAA+B,SAA1D,IACAG,SAAS,CAACJ,MAAV,IAAoB,SAFtB,EAGE;AACAG,MAAAA,OAAO,GAAG,QAAQA,OAAlB;AACD;AACF,GA7D8E,CA+D/E;;;AACA,MAAIM,KAAK,GAAGE,qBAAqB,CAACP,SAAD,CAAjC;;AACA,MAAIK,KAAK,KAAKG,eAAd,EAA+B;AAC7B,WAAO;AAAEN,MAAAA,GAAG,EAAEH,OAAP;AAAgBM,MAAAA,KAAK,EAAEA;AAAvB,KAAP;AACD,GAnE8E,CAqE/E;AACA;;;AACA,MAAIN,OAAO,KAAK,KAAhB,EAAuB;AACrB,UAAM,0CAAN;AACD,GAzE8E,CA2E/E;;;AACA,MAAIC,SAAS,YAAYW,KAAzB,EAAgC;AAC9BN,IAAAA,KAAK,GAAGL,SAAS,CAACY,GAAV,CAAcC,sBAAd,CAAR;AACA,WAAO;AAAEX,MAAAA,GAAG,EAAEH,OAAP;AAAgBM,MAAAA,KAAK,EAAEA;AAAvB,KAAP;AACD,GA/E8E,CAiF/E;;;AACA,MAAIyB,MAAM,CAACC,IAAP,CAAY/B,SAAZ,EAAuB6B,IAAvB,CAA4B3B,GAAG,IAAIA,GAAG,CAACE,QAAJ,CAAa,GAAb,KAAqBF,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAxD,CAAJ,EAAgF;AAC9E,UAAM,IAAId,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYC,kBADR,EAEJ,0DAFI,CAAN;AAID;;AACD5B,EAAAA,KAAK,GAAGU,SAAS,CAACf,SAAD,EAAYa,sBAAZ,CAAjB;AACA,SAAO;AAAEX,IAAAA,GAAG,EAAEH,OAAP;AAAgBM,IAAAA;AAAhB,GAAP;AACD,CA1FD;;AA4FA,MAAMsD,iCAAiC,GAAG,CAACnE,SAAD,EAAYoE,UAAZ,EAAwBlE,MAAxB,KAAmC;AAC3EkE,EAAAA,UAAU,GAAGC,YAAY,CAACD,UAAD,CAAzB;AACA,QAAME,WAAW,GAAG,EAApB;;AACA,OAAK,MAAM/D,OAAX,IAAsB6D,UAAtB,EAAkC;AAChC,QAAIA,UAAU,CAAC7D,OAAD,CAAV,IAAuB6D,UAAU,CAAC7D,OAAD,CAAV,CAAoBH,MAApB,KAA+B,UAA1D,EAAsE;AACpE;AACD;;AACD,UAAM;AAAEM,MAAAA,GAAF;AAAOG,MAAAA;AAAP,QAAiBkD,wCAAwC,CAC7DxD,OAD6D,EAE7D6D,UAAU,CAAC7D,OAAD,CAFmD,EAG7DL,MAH6D,CAA/D;;AAKA,QAAIW,KAAK,KAAK0D,SAAd,EAAyB;AACvBD,MAAAA,WAAW,CAAC5D,GAAD,CAAX,GAAmBG,KAAnB;AACD;AACF,GAf0E,CAiB3E;;;AACA,MAAIyD,WAAW,CAACE,SAAhB,EAA2B;AACzBF,IAAAA,WAAW,CAACG,WAAZ,GAA0B,IAAIxD,IAAJ,CAASqD,WAAW,CAACE,SAAZ,CAAsBE,GAAtB,IAA6BJ,WAAW,CAACE,SAAlD,CAA1B;AACA,WAAOF,WAAW,CAACE,SAAnB;AACD;;AACD,MAAIF,WAAW,CAACK,SAAhB,EAA2B;AACzBL,IAAAA,WAAW,CAACM,WAAZ,GAA0B,IAAI3D,IAAJ,CAASqD,WAAW,CAACK,SAAZ,CAAsBD,GAAtB,IAA6BJ,WAAW,CAACK,SAAlD,CAA1B;AACA,WAAOL,WAAW,CAACK,SAAnB;AACD;;AAED,SAAOL,WAAP;AACD,CA5BD,C,CA8BA;;;AACA,MAAMO,eAAe,GAAG,CAAC7E,SAAD,EAAY8E,UAAZ,EAAwBrE,iBAAxB,KAA8C;AACpE,QAAMsE,WAAW,GAAG,EAApB;AACA,QAAMC,GAAG,GAAGX,YAAY,CAACS,UAAD,CAAxB;;AACA,MAAIE,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACE,MAAlB,IAA4BF,GAAG,CAACG,IAApC,EAA0C;AACxCJ,IAAAA,WAAW,CAACK,IAAZ,GAAmB,EAAnB;;AACA,QAAIJ,GAAG,CAACC,MAAR,EAAgB;AACdF,MAAAA,WAAW,CAACK,IAAZ,CAAiBH,MAAjB,GAA0BD,GAAG,CAACC,MAA9B;AACD;;AACD,QAAID,GAAG,CAACE,MAAR,EAAgB;AACdH,MAAAA,WAAW,CAACK,IAAZ,CAAiBF,MAAjB,GAA0BF,GAAG,CAACE,MAA9B;AACD;;AACD,QAAIF,GAAG,CAACG,IAAR,EAAc;AACZJ,MAAAA,WAAW,CAACK,IAAZ,CAAiBD,IAAjB,GAAwBH,GAAG,CAACG,IAA5B;AACD;AACF;;AACD,OAAK,IAAI5E,OAAT,IAAoBuE,UAApB,EAAgC;AAC9B,QAAIA,UAAU,CAACvE,OAAD,CAAV,IAAuBuE,UAAU,CAACvE,OAAD,CAAV,CAAoBH,MAApB,KAA+B,UAA1D,EAAsE;AACpE;AACD;;AACD,QAAI0D,GAAG,GAAGxD,0BAA0B,CAClCN,SADkC,EAElCO,OAFkC,EAGlCuE,UAAU,CAACvE,OAAD,CAHwB,EAIlCE,iBAJkC,CAApC,CAJ8B,CAW9B;AACA;AACA;;AACA,QAAI,OAAOqD,GAAG,CAACjD,KAAX,KAAqB,QAArB,IAAiCiD,GAAG,CAACjD,KAAJ,KAAc,IAA/C,IAAuDiD,GAAG,CAACjD,KAAJ,CAAUwE,IAArE,EAA2E;AACzEN,MAAAA,WAAW,CAACjB,GAAG,CAACjD,KAAJ,CAAUwE,IAAX,CAAX,GAA8BN,WAAW,CAACjB,GAAG,CAACjD,KAAJ,CAAUwE,IAAX,CAAX,IAA+B,EAA7D;AACAN,MAAAA,WAAW,CAACjB,GAAG,CAACjD,KAAJ,CAAUwE,IAAX,CAAX,CAA4BvB,GAAG,CAACpD,GAAhC,IAAuCoD,GAAG,CAACjD,KAAJ,CAAUyE,GAAjD;AACD,KAHD,MAGO;AACLP,MAAAA,WAAW,CAAC,MAAD,CAAX,GAAsBA,WAAW,CAAC,MAAD,CAAX,IAAuB,EAA7C;AACAA,MAAAA,WAAW,CAAC,MAAD,CAAX,CAAoBjB,GAAG,CAACpD,GAAxB,IAA+BoD,GAAG,CAACjD,KAAnC;AACD;AACF;;AAED,SAAOkE,WAAP;AACD,CAvCD,C,CAyCA;;;AACA,MAAMV,YAAY,GAAGkB,UAAU,IAAI;AACjC,QAAMC,cAAc,qBAAQD,UAAR,CAApB;;AACA,QAAMJ,IAAI,GAAG,EAAb;;AAEA,MAAII,UAAU,CAACL,MAAf,EAAuB;AACrBK,IAAAA,UAAU,CAACL,MAAX,CAAkBO,OAAlB,CAA0BC,KAAK,IAAI;AACjCP,MAAAA,IAAI,CAACO,KAAD,CAAJ,GAAc;AAAEC,QAAAA,CAAC,EAAE;AAAL,OAAd;AACD,KAFD;;AAGAH,IAAAA,cAAc,CAACL,IAAf,GAAsBA,IAAtB;AACD;;AAED,MAAII,UAAU,CAACN,MAAf,EAAuB;AACrBM,IAAAA,UAAU,CAACN,MAAX,CAAkBQ,OAAlB,CAA0BC,KAAK,IAAI;AACjC,UAAI,EAAEA,KAAK,IAAIP,IAAX,CAAJ,EAAsB;AACpBA,QAAAA,IAAI,CAACO,KAAD,CAAJ,GAAc;AAAEE,UAAAA,CAAC,EAAE;AAAL,SAAd;AACD,OAFD,MAEO;AACLT,QAAAA,IAAI,CAACO,KAAD,CAAJ,CAAYE,CAAZ,GAAgB,IAAhB;AACD;AACF,KAND;;AAOAJ,IAAAA,cAAc,CAACL,IAAf,GAAsBA,IAAtB;AACD;;AAED,SAAOK,cAAP;AACD,CAvBD,C,CAyBA;AACA;;;AACA,SAASxE,eAAT,GAA2B,CAAE;;AAE7B,MAAM0B,qBAAqB,GAAGmD,IAAI,IAAI;AACpC;AACA,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAA5B,IAAoC,EAAEA,IAAI,YAAY5E,IAAlB,CAApC,IAA+D4E,IAAI,CAACzF,MAAL,KAAgB,SAAnF,EAA8F;AAC5F,WAAO;AACLA,MAAAA,MAAM,EAAE,SADH;AAELJ,MAAAA,SAAS,EAAE6F,IAAI,CAAC7F,SAFX;AAGL8F,MAAAA,QAAQ,EAAED,IAAI,CAACC;AAHV,KAAP;AAKD,GAND,MAMO,IAAI,OAAOD,IAAP,KAAgB,UAAhB,IAA8B,OAAOA,IAAP,KAAgB,QAAlD,EAA4D;AACjE,UAAM,IAAI/F,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,2BAA0BkC,IAAK,EAA1E,CAAN;AACD,GAFM,MAEA,IAAIE,SAAS,CAACC,WAAV,CAAsBH,IAAtB,CAAJ,EAAiC;AACtC,WAAOE,SAAS,CAACE,cAAV,CAAyBJ,IAAzB,CAAP;AACD,GAFM,MAEA,IAAIK,UAAU,CAACF,WAAX,CAAuBH,IAAvB,CAAJ,EAAkC;AACvC,WAAOK,UAAU,CAACD,cAAX,CAA0BJ,IAA1B,CAAP;AACD,GAFM,MAEA,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAA5B,IAAoCA,IAAI,CAACM,MAAL,KAAgB5B,SAAxD,EAAmE;AACxE,WAAO,IAAI9C,MAAJ,CAAWoE,IAAI,CAACM,MAAhB,CAAP;AACD,GAFM,MAEA;AACL,WAAON,IAAP;AACD;AACF,CAnBD,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9E,qBAAT,CAA+B8E,IAA/B,EAAqCzC,KAArC,EAA4C;AAC1C,UAAQ,OAAOyC,IAAf;AACE,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACE,aAAOA,IAAP;;AACF,SAAK,QAAL;AACE,UAAIzC,KAAK,IAAIA,KAAK,CAAC/C,IAAN,KAAe,SAA5B,EAAuC;AACrC,eAAQ,GAAE+C,KAAK,CAACgD,WAAY,IAAGP,IAAK,EAApC;AACD;;AACD,aAAOA,IAAP;;AACF,SAAK,QAAL;AACA,SAAK,UAAL;AACE,YAAM,IAAI/F,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,2BAA0BkC,IAAK,EAA1E,CAAN;;AACF,SAAK,QAAL;AACE,UAAIA,IAAI,YAAY5E,IAApB,EAA0B;AACxB;AACA;AACA,eAAO4E,IAAP;AACD;;AAED,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAOA,IAAP;AACD,OATH,CAWE;;;AACA,UAAIA,IAAI,CAACzF,MAAL,IAAe,SAAnB,EAA8B;AAC5B,eAAQ,GAAEyF,IAAI,CAAC7F,SAAU,IAAG6F,IAAI,CAACC,QAAS,EAA1C;AACD;;AACD,UAAIC,SAAS,CAACC,WAAV,CAAsBH,IAAtB,CAAJ,EAAiC;AAC/B,eAAOE,SAAS,CAACE,cAAV,CAAyBJ,IAAzB,CAAP;AACD;;AACD,UAAIK,UAAU,CAACF,WAAX,CAAuBH,IAAvB,CAAJ,EAAkC;AAChC,eAAOK,UAAU,CAACD,cAAX,CAA0BJ,IAA1B,CAAP;AACD;;AACD,UAAIQ,aAAa,CAACL,WAAd,CAA0BH,IAA1B,CAAJ,EAAqC;AACnC,eAAOQ,aAAa,CAACJ,cAAd,CAA6BJ,IAA7B,CAAP;AACD;;AACD,UAAIS,YAAY,CAACN,WAAb,CAAyBH,IAAzB,CAAJ,EAAoC;AAClC,eAAOS,YAAY,CAACL,cAAb,CAA4BJ,IAA5B,CAAP;AACD;;AACD,UAAIU,SAAS,CAACP,WAAV,CAAsBH,IAAtB,CAAJ,EAAiC;AAC/B,eAAOU,SAAS,CAACN,cAAV,CAAyBJ,IAAzB,CAAP;AACD;;AACD,aAAO7E,eAAP;;AAEF;AACE;AACA,YAAM,IAAIlB,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYgE,qBADR,EAEH,gCAA+BX,IAAK,EAFjC,CAAN;AA/CJ;AAoDD;;AAED,SAASY,kBAAT,CAA4BC,IAA5B,EAAkCC,GAAG,GAAG,IAAI1F,IAAJ,EAAxC,EAAoD;AAClDyF,EAAAA,IAAI,GAAGA,IAAI,CAACE,WAAL,EAAP;AAEA,MAAIC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAZ,CAHkD,CAKlD;;AACAD,EAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAK,EAA9B,CAAR;AAEA,QAAMC,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAL,KAAa,IAA5B;AACA,QAAMK,IAAI,GAAGL,KAAK,CAACA,KAAK,CAAC5E,MAAN,GAAe,CAAhB,CAAL,KAA4B,KAAzC;;AAEA,MAAI,CAACgF,MAAD,IAAW,CAACC,IAAZ,IAAoBR,IAAI,KAAK,KAAjC,EAAwC;AACtC,WAAO;AACLS,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AAED,MAAIH,MAAM,IAAIC,IAAd,EAAoB;AAClB,WAAO;AACLC,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID,GAvBiD,CAyBlD;;;AACA,MAAIH,MAAJ,EAAY;AACVJ,IAAAA,KAAK,GAAGA,KAAK,CAACQ,KAAN,CAAY,CAAZ,CAAR;AACD,GAFD,MAEO;AACL;AACAR,IAAAA,KAAK,GAAGA,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeR,KAAK,CAAC5E,MAAN,GAAe,CAA9B,CAAR;AACD;;AAED,MAAI4E,KAAK,CAAC5E,MAAN,GAAe,CAAf,KAAqB,CAArB,IAA0ByE,IAAI,KAAK,KAAvC,EAA8C;AAC5C,WAAO;AACLS,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AAED,QAAME,KAAK,GAAG,EAAd;;AACA,SAAOT,KAAK,CAAC5E,MAAb,EAAqB;AACnBqF,IAAAA,KAAK,CAACC,IAAN,CAAW,CAACV,KAAK,CAACW,KAAN,EAAD,EAAgBX,KAAK,CAACW,KAAN,EAAhB,CAAX;AACD;;AAED,MAAIC,OAAO,GAAG,CAAd;;AACA,OAAK,MAAM,CAACC,GAAD,EAAMC,QAAN,CAAX,IAA8BL,KAA9B,EAAqC;AACnC,UAAMM,GAAG,GAAGC,MAAM,CAACH,GAAD,CAAlB;;AACA,QAAI,CAACG,MAAM,CAACC,SAAP,CAAiBF,GAAjB,CAAL,EAA4B;AAC1B,aAAO;AACLT,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,IAAI,EAAG,IAAGM,GAAI;AAFT,OAAP;AAID;;AAED,YAAQC,QAAR;AACE,WAAK,IAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,OAAL;AACEF,QAAAA,OAAO,IAAIG,GAAG,GAAG,QAAjB,CADF,CAC6B;;AAC3B;;AAEF,WAAK,IAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,OAAL;AACEH,QAAAA,OAAO,IAAIG,GAAG,GAAG,MAAjB,CADF,CAC2B;;AACzB;;AAEF,WAAK,GAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACEH,QAAAA,OAAO,IAAIG,GAAG,GAAG,KAAjB,CADF,CAC0B;;AACxB;;AAEF,WAAK,IAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,OAAL;AACEH,QAAAA,OAAO,IAAIG,GAAG,GAAG,IAAjB,CADF,CACyB;;AACvB;;AAEF,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,QAAL;AACA,WAAK,SAAL;AACEH,QAAAA,OAAO,IAAIG,GAAG,GAAG,EAAjB;AACA;;AAEF,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,QAAL;AACA,WAAK,SAAL;AACEH,QAAAA,OAAO,IAAIG,GAAX;AACA;;AAEF;AACE,eAAO;AACLT,UAAAA,MAAM,EAAE,OADH;AAELC,UAAAA,IAAI,EAAG,sBAAqBO,QAAS;AAFhC,SAAP;AA3CJ;AAgDD;;AAED,QAAMI,YAAY,GAAGN,OAAO,GAAG,IAA/B;;AACA,MAAIR,MAAJ,EAAY;AACV,WAAO;AACLE,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,IAAI,EAAE,QAFD;AAGLY,MAAAA,MAAM,EAAE,IAAI/G,IAAJ,CAAS0F,GAAG,CAACsB,OAAJ,KAAgBF,YAAzB;AAHH,KAAP;AAKD,GAND,MAMO,IAAIb,IAAJ,EAAU;AACf,WAAO;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,IAAI,EAAE,MAFD;AAGLY,MAAAA,MAAM,EAAE,IAAI/G,IAAJ,CAAS0F,GAAG,CAACsB,OAAJ,KAAgBF,YAAzB;AAHH,KAAP;AAKD,GANM,MAMA;AACL,WAAO;AACLZ,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,IAAI,EAAE,SAFD;AAGLY,MAAAA,MAAM,EAAE,IAAI/G,IAAJ,CAAS0F,GAAG,CAACsB,OAAJ,EAAT;AAHH,KAAP;AAKD;AACF,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAAS3E,mBAAT,CAA6B4E,UAA7B,EAAyC9E,KAAzC,EAAgDP,KAAK,GAAG,KAAxD,EAA+D;AAC7D,QAAMsF,OAAO,GAAG/E,KAAK,IAAIA,KAAK,CAAC/C,IAAf,IAAuB+C,KAAK,CAAC/C,IAAN,KAAe,OAAtD;;AACA,MAAI,OAAO6H,UAAP,KAAsB,QAAtB,IAAkC,CAACA,UAAvC,EAAmD;AACjD,WAAOlH,eAAP;AACD;;AACD,QAAMoH,iBAAiB,GAAGD,OAAO,GAAGzF,qBAAH,GAA2B3B,qBAA5D;;AACA,QAAMsH,WAAW,GAAGxC,IAAI,IAAI;AAC1B,UAAMmC,MAAM,GAAGI,iBAAiB,CAACvC,IAAD,EAAOzC,KAAP,CAAhC;;AACA,QAAI4E,MAAM,KAAKhH,eAAf,EAAgC;AAC9B,YAAM,IAAIlB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,aAAY2E,IAAI,CAACC,SAAL,CAAe1C,IAAf,CAAqB,EAA5E,CAAN;AACD;;AACD,WAAOmC,MAAP;AACD,GAND,CAN6D,CAa7D;AACA;AACA;AACA;;;AACA,MAAIzF,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY2F,UAAZ,EAAwBM,IAAxB,GAA+BC,OAA/B,EAAX;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIhI,GAAT,IAAgB6B,IAAhB,EAAsB;AACpB,YAAQ7B,GAAR;AACE,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,SAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AAAY;AACV,gBAAMkH,GAAG,GAAGM,UAAU,CAACxH,GAAD,CAAtB;;AACA,cAAIkH,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,IAAkCA,GAAG,CAACe,aAA1C,EAAyD;AACvD,gBAAIvF,KAAK,IAAIA,KAAK,CAAC/C,IAAN,KAAe,MAA5B,EAAoC;AAClC,oBAAM,IAAIP,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,gDAFI,CAAN;AAID;;AAED,oBAAQjD,GAAR;AACE,mBAAK,SAAL;AACA,mBAAK,KAAL;AACA,mBAAK,KAAL;AACE,sBAAM,IAAIZ,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,4EAFI,CAAN;AAJJ;;AAUA,kBAAMiF,YAAY,GAAGnC,kBAAkB,CAACmB,GAAG,CAACe,aAAL,CAAvC;;AACA,gBAAIC,YAAY,CAACzB,MAAb,KAAwB,SAA5B,EAAuC;AACrCuB,cAAAA,MAAM,CAAChI,GAAD,CAAN,GAAckI,YAAY,CAACZ,MAA3B;AACA;AACD;;AAEDa,4BAAIzB,IAAJ,CAAS,mCAAT,EAA8CwB,YAA9C;;AACA,kBAAM,IAAI9I,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEH,sBAAqBjD,GAAI,YAAWkI,YAAY,CAACxB,IAAK,EAFnD,CAAN;AAID;;AAEDsB,UAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc2H,WAAW,CAACT,GAAD,CAAzB;AACA;AACD;;AAED,WAAK,KAAL;AACA,WAAK,MAAL;AAAa;AACX,gBAAMkB,GAAG,GAAGZ,UAAU,CAACxH,GAAD,CAAtB;;AACA,cAAI,EAAEoI,GAAG,YAAY3H,KAAjB,CAAJ,EAA6B;AAC3B,kBAAM,IAAIrB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,SAASjD,GAAT,GAAe,QAAzD,CAAN;AACD;;AACDgI,UAAAA,MAAM,CAAChI,GAAD,CAAN,GAAcqI,gBAAEC,OAAF,CAAUF,GAAV,EAAejI,KAAK,IAAI;AACpC,mBAAO,CAACgF,IAAI,IAAI;AACd,kBAAI1E,KAAK,CAACa,OAAN,CAAc6D,IAAd,CAAJ,EAAyB;AACvB,uBAAOhF,KAAK,CAACO,GAAN,CAAUiH,WAAV,CAAP;AACD,eAFD,MAEO;AACL,uBAAOA,WAAW,CAACxC,IAAD,CAAlB;AACD;AACF,aANM,EAMJhF,KANI,CAAP;AAOD,WARa,CAAd;AASA;AACD;;AACD,WAAK,MAAL;AAAa;AACX,gBAAMiI,GAAG,GAAGZ,UAAU,CAACxH,GAAD,CAAtB;;AACA,cAAI,EAAEoI,GAAG,YAAY3H,KAAjB,CAAJ,EAA6B;AAC3B,kBAAM,IAAIrB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,SAASjD,GAAT,GAAe,QAAzD,CAAN;AACD;;AACDgI,UAAAA,MAAM,CAAChI,GAAD,CAAN,GAAcoI,GAAG,CAAC1H,GAAJ,CAAQsB,qBAAR,CAAd;AAEA,gBAAMX,MAAM,GAAG2G,MAAM,CAAChI,GAAD,CAArB;;AACA,cAAI0B,eAAe,CAACL,MAAD,CAAf,IAA2B,CAACD,sBAAsB,CAACC,MAAD,CAAtD,EAAgE;AAC9D,kBAAM,IAAIjC,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,oDAAoD5B,MAFhD,CAAN;AAID;;AAED;AACD;;AACD,WAAK,QAAL;AACE,YAAIkH,CAAC,GAAGf,UAAU,CAACxH,GAAD,CAAlB;;AACA,YAAI,OAAOuI,CAAP,KAAa,QAAjB,EAA2B;AACzB,gBAAM,IAAInJ,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,gBAAgBsF,CAA1D,CAAN;AACD;;AACDP,QAAAA,MAAM,CAAChI,GAAD,CAAN,GAAcuI,CAAd;AACA;;AAEF,WAAK,cAAL;AAAqB;AACnB,gBAAMH,GAAG,GAAGZ,UAAU,CAACxH,GAAD,CAAtB;;AACA,cAAI,EAAEoI,GAAG,YAAY3H,KAAjB,CAAJ,EAA6B;AAC3B,kBAAM,IAAIrB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,sCAA3C,CAAN;AACD;;AACD+E,UAAAA,MAAM,CAAClF,UAAP,GAAoB;AAClB0F,YAAAA,IAAI,EAAEJ,GAAG,CAAC1H,GAAJ,CAAQiH,WAAR;AADY,WAApB;AAGA;AACD;;AACD,WAAK,UAAL;AACEK,QAAAA,MAAM,CAAChI,GAAD,CAAN,GAAcwH,UAAU,CAACxH,GAAD,CAAxB;AACA;;AAEF,WAAK,OAAL;AAAc;AACZ,gBAAMyI,MAAM,GAAGjB,UAAU,CAACxH,GAAD,CAAV,CAAgB0I,OAA/B;;AACA,cAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,kBAAM,IAAIrJ,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,sCAA3C,CAAN;AACD;;AACD,cAAI,CAACwF,MAAM,CAACE,KAAR,IAAiB,OAAOF,MAAM,CAACE,KAAd,KAAwB,QAA7C,EAAuD;AACrD,kBAAM,IAAIvJ,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,oCAA3C,CAAN;AACD,WAFD,MAEO;AACL+E,YAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc;AACZ0I,cAAAA,OAAO,EAAED,MAAM,CAACE;AADJ,aAAd;AAGD;;AACD,cAAIF,MAAM,CAACG,SAAP,IAAoB,OAAOH,MAAM,CAACG,SAAd,KAA4B,QAApD,EAA8D;AAC5D,kBAAM,IAAIxJ,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA2C,wCAA3C,CAAN;AACD,WAFD,MAEO,IAAIwF,MAAM,CAACG,SAAX,EAAsB;AAC3BZ,YAAAA,MAAM,CAAChI,GAAD,CAAN,CAAY4I,SAAZ,GAAwBH,MAAM,CAACG,SAA/B;AACD;;AACD,cAAIH,MAAM,CAACI,cAAP,IAAyB,OAAOJ,MAAM,CAACI,cAAd,KAAiC,SAA9D,EAAyE;AACvE,kBAAM,IAAIzJ,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEH,8CAFG,CAAN;AAID,WALD,MAKO,IAAIwF,MAAM,CAACI,cAAX,EAA2B;AAChCb,YAAAA,MAAM,CAAChI,GAAD,CAAN,CAAY6I,cAAZ,GAA6BJ,MAAM,CAACI,cAApC;AACD;;AACD,cAAIJ,MAAM,CAACK,mBAAP,IAA8B,OAAOL,MAAM,CAACK,mBAAd,KAAsC,SAAxE,EAAmF;AACjF,kBAAM,IAAI1J,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEH,mDAFG,CAAN;AAID,WALD,MAKO,IAAIwF,MAAM,CAACK,mBAAX,EAAgC;AACrCd,YAAAA,MAAM,CAAChI,GAAD,CAAN,CAAY8I,mBAAZ,GAAkCL,MAAM,CAACK,mBAAzC;AACD;;AACD;AACD;;AACD,WAAK,aAAL;AAAoB;AAClB,gBAAMC,KAAK,GAAGvB,UAAU,CAACxH,GAAD,CAAxB;;AACA,cAAImC,KAAJ,EAAW;AACT6F,YAAAA,MAAM,CAACgB,UAAP,GAAoB;AAClBC,cAAAA,aAAa,EAAE,CAAC,CAACF,KAAK,CAACG,SAAP,EAAkBH,KAAK,CAACI,QAAxB,CAAD,EAAoC3B,UAAU,CAAC4B,YAA/C;AADG,aAApB;AAGD,WAJD,MAIO;AACLpB,YAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc,CAAC+I,KAAK,CAACG,SAAP,EAAkBH,KAAK,CAACI,QAAxB,CAAd;AACD;;AACD;AACD;;AACD,WAAK,cAAL;AAAqB;AACnB,cAAIhH,KAAJ,EAAW;AACT;AACD;;AACD6F,UAAAA,MAAM,CAAChI,GAAD,CAAN,GAAcwH,UAAU,CAACxH,GAAD,CAAxB;AACA;AACD;AACD;AACA;;AACA,WAAK,uBAAL;AACEgI,QAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBR,UAAU,CAACxH,GAAD,CAAnC;AACA;;AACF,WAAK,qBAAL;AACEgI,QAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBR,UAAU,CAACxH,GAAD,CAAV,GAAkB,IAA3C;AACA;;AACF,WAAK,0BAAL;AACEgI,QAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBR,UAAU,CAACxH,GAAD,CAAV,GAAkB,IAA3C;AACA;;AAEF,WAAK,SAAL;AACA,WAAK,aAAL;AACE,cAAM,IAAIZ,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYuH,mBADR,EAEJ,SAASrJ,GAAT,GAAe,kCAFX,CAAN;;AAKF,WAAK,SAAL;AACE,YAAIsJ,GAAG,GAAG9B,UAAU,CAACxH,GAAD,CAAV,CAAgB,MAAhB,CAAV;;AACA,YAAI,CAACsJ,GAAD,IAAQA,GAAG,CAAC/H,MAAJ,IAAc,CAA1B,EAA6B;AAC3B,gBAAM,IAAInC,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,0BAA1C,CAAN;AACD;;AACD+E,QAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc;AACZuJ,UAAAA,IAAI,EAAE,CACJ,CAACD,GAAG,CAAC,CAAD,CAAH,CAAOJ,SAAR,EAAmBI,GAAG,CAAC,CAAD,CAAH,CAAOH,QAA1B,CADI,EAEJ,CAACG,GAAG,CAAC,CAAD,CAAH,CAAOJ,SAAR,EAAmBI,GAAG,CAAC,CAAD,CAAH,CAAOH,QAA1B,CAFI;AADM,SAAd;AAMA;;AAEF,WAAK,YAAL;AAAmB;AACjB,gBAAMK,OAAO,GAAGhC,UAAU,CAACxH,GAAD,CAAV,CAAgB,UAAhB,CAAhB;AACA,gBAAMyJ,YAAY,GAAGjC,UAAU,CAACxH,GAAD,CAAV,CAAgB,eAAhB,CAArB;;AACA,cAAIwJ,OAAO,KAAK3F,SAAhB,EAA2B;AACzB,gBAAI6F,MAAJ;;AACA,gBAAI,OAAOF,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAAC9J,MAAR,KAAmB,SAAtD,EAAiE;AAC/D,kBAAI,CAAC8J,OAAO,CAACG,WAAT,IAAwBH,OAAO,CAACG,WAAR,CAAoBpI,MAApB,GAA6B,CAAzD,EAA4D;AAC1D,sBAAM,IAAInC,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,mFAFI,CAAN;AAID;;AACDyG,cAAAA,MAAM,GAAGF,OAAO,CAACG,WAAjB;AACD,aARD,MAQO,IAAIH,OAAO,YAAY/I,KAAvB,EAA8B;AACnC,kBAAI+I,OAAO,CAACjI,MAAR,GAAiB,CAArB,EAAwB;AACtB,sBAAM,IAAInC,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,oEAFI,CAAN;AAID;;AACDyG,cAAAA,MAAM,GAAGF,OAAT;AACD,aARM,MAQA;AACL,oBAAM,IAAIpK,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,sFAFI,CAAN;AAID;;AACDyG,YAAAA,MAAM,GAAGA,MAAM,CAAChJ,GAAP,CAAWqI,KAAK,IAAI;AAC3B,kBAAIA,KAAK,YAAYtI,KAAjB,IAA0BsI,KAAK,CAACxH,MAAN,KAAiB,CAA/C,EAAkD;AAChDnC,gBAAAA,KAAK,CAACwK,QAAN,CAAeC,SAAf,CAAyBd,KAAK,CAAC,CAAD,CAA9B,EAAmCA,KAAK,CAAC,CAAD,CAAxC;;AACA,uBAAOA,KAAP;AACD;;AACD,kBAAI,CAACpD,aAAa,CAACL,WAAd,CAA0ByD,KAA1B,CAAL,EAAuC;AACrC,sBAAM,IAAI3J,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,sBAA1C,CAAN;AACD,eAFD,MAEO;AACL7D,gBAAAA,KAAK,CAACwK,QAAN,CAAeC,SAAf,CAAyBd,KAAK,CAACI,QAA/B,EAAyCJ,KAAK,CAACG,SAA/C;AACD;;AACD,qBAAO,CAACH,KAAK,CAACG,SAAP,EAAkBH,KAAK,CAACI,QAAxB,CAAP;AACD,aAXQ,CAAT;AAYAnB,YAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc;AACZ8J,cAAAA,QAAQ,EAAEJ;AADE,aAAd;AAGD,WAvCD,MAuCO,IAAID,YAAY,KAAK5F,SAArB,EAAgC;AACrC,gBAAI,EAAE4F,YAAY,YAAYhJ,KAA1B,KAAoCgJ,YAAY,CAAClI,MAAb,GAAsB,CAA9D,EAAiE;AAC/D,oBAAM,IAAInC,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,uFAFI,CAAN;AAID,aANoC,CAOrC;;;AACA,gBAAI8F,KAAK,GAAGU,YAAY,CAAC,CAAD,CAAxB;;AACA,gBAAIV,KAAK,YAAYtI,KAAjB,IAA0BsI,KAAK,CAACxH,MAAN,KAAiB,CAA/C,EAAkD;AAChDwH,cAAAA,KAAK,GAAG,IAAI3J,KAAK,CAACwK,QAAV,CAAmBb,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CAAR;AACD,aAFD,MAEO,IAAI,CAACpD,aAAa,CAACL,WAAd,CAA0ByD,KAA1B,CAAL,EAAuC;AAC5C,oBAAM,IAAI3J,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,uDAFI,CAAN;AAID;;AACD7D,YAAAA,KAAK,CAACwK,QAAN,CAAeC,SAAf,CAAyBd,KAAK,CAACI,QAA/B,EAAyCJ,KAAK,CAACG,SAA/C,EAjBqC,CAkBrC;;;AACA,kBAAMa,QAAQ,GAAGN,YAAY,CAAC,CAAD,CAA7B;;AACA,gBAAIO,KAAK,CAACD,QAAD,CAAL,IAAmBA,QAAQ,GAAG,CAAlC,EAAqC;AACnC,oBAAM,IAAI3K,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,sDAFI,CAAN;AAID;;AACD+E,YAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc;AACZiJ,cAAAA,aAAa,EAAE,CAAC,CAACF,KAAK,CAACG,SAAP,EAAkBH,KAAK,CAACI,QAAxB,CAAD,EAAoCY,QAApC;AADH,aAAd;AAGD;;AACD;AACD;;AACD,WAAK,gBAAL;AAAuB;AACrB,gBAAMhB,KAAK,GAAGvB,UAAU,CAACxH,GAAD,CAAV,CAAgB,QAAhB,CAAd;;AACA,cAAI,CAAC2F,aAAa,CAACL,WAAd,CAA0ByD,KAA1B,CAAL,EAAuC;AACrC,kBAAM,IAAI3J,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYmB,YADR,EAEJ,oDAFI,CAAN;AAID,WALD,MAKO;AACL7D,YAAAA,KAAK,CAACwK,QAAN,CAAeC,SAAf,CAAyBd,KAAK,CAACI,QAA/B,EAAyCJ,KAAK,CAACG,SAA/C;AACD;;AACDlB,UAAAA,MAAM,CAAChI,GAAD,CAAN,GAAc;AACZiK,YAAAA,SAAS,EAAE;AACTtK,cAAAA,IAAI,EAAE,OADG;AAETgK,cAAAA,WAAW,EAAE,CAACZ,KAAK,CAACG,SAAP,EAAkBH,KAAK,CAACI,QAAxB;AAFJ;AADC,WAAd;AAMA;AACD;;AACD;AACE,YAAInJ,GAAG,CAACmB,KAAJ,CAAU,MAAV,CAAJ,EAAuB;AACrB,gBAAM,IAAI/B,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,qBAAqBjD,GAA/D,CAAN;AACD;;AACD,eAAOM,eAAP;AAzRJ;AA2RD;;AACD,SAAO0H,MAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASpH,uBAAT,CAAiC;AAAE+D,EAAAA,IAAF;AAAQuF,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAjC,EAA4DC,OAA5D,EAAqE;AACnE,UAAQzF,IAAR;AACE,SAAK,QAAL;AACE,UAAIyF,OAAJ,EAAa;AACX,eAAOvG,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAEc,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,GAAG,EAAE;AAAvB,SAAP;AACD;;AAEH,SAAK,WAAL;AACE,UAAI,OAAOsF,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,cAAM,IAAI9K,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,oCAA1C,CAAN;AACD;;AACD,UAAImH,OAAJ,EAAa;AACX,eAAOF,MAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAEvF,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,GAAG,EAAEsF;AAArB,SAAP;AACD;;AAEH,SAAK,KAAL;AACA,SAAK,WAAL;AACE,UAAI,EAAEC,OAAO,YAAY1J,KAArB,CAAJ,EAAiC;AAC/B,cAAM,IAAIrB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,iCAA1C,CAAN;AACD;;AACD,UAAIoH,KAAK,GAAGF,OAAO,CAACzJ,GAAR,CAAYsB,qBAAZ,CAAZ;;AACA,UAAIoI,OAAJ,EAAa;AACX,eAAOC,KAAP;AACD,OAFD,MAEO;AACL,YAAIC,OAAO,GAAG;AACZC,UAAAA,GAAG,EAAE,OADO;AAEZC,UAAAA,SAAS,EAAE;AAFC,UAGZ7F,IAHY,CAAd;AAIA,eAAO;AAAEA,UAAAA,IAAI,EAAE2F,OAAR;AAAiB1F,UAAAA,GAAG,EAAE;AAAE6F,YAAAA,KAAK,EAAEJ;AAAT;AAAtB,SAAP;AACD;;AAEH,SAAK,QAAL;AACE,UAAI,EAAEF,OAAO,YAAY1J,KAArB,CAAJ,EAAiC;AAC/B,cAAM,IAAIrB,KAAK,CAAC0C,KAAV,CAAgB1C,KAAK,CAAC0C,KAAN,CAAYmB,YAA5B,EAA0C,oCAA1C,CAAN;AACD;;AACD,UAAIyH,QAAQ,GAAGP,OAAO,CAACzJ,GAAR,CAAYsB,qBAAZ,CAAf;;AACA,UAAIoI,OAAJ,EAAa;AACX,eAAO,EAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAEzF,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,GAAG,EAAE8F;AAAzB,SAAP;AACD;;AAEH;AACE,YAAM,IAAItL,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYuH,mBADR,EAEH,OAAM1E,IAAK,iCAFR,CAAN;AA9CJ;AAmDD;;AACD,SAAS9D,SAAT,CAAmB8J,MAAnB,EAA2BC,QAA3B,EAAqC;AACnC,QAAMtD,MAAM,GAAG,EAAf;AACA1F,EAAAA,MAAM,CAACC,IAAP,CAAY8I,MAAZ,EAAoB5F,OAApB,CAA4B/E,GAAG,IAAI;AACjCsH,IAAAA,MAAM,CAACtH,GAAD,CAAN,GAAc4K,QAAQ,CAACD,MAAM,CAAC3K,GAAD,CAAP,CAAtB;AACD,GAFD;AAGA,SAAOsH,MAAP;AACD;;AAED,MAAMuD,oCAAoC,GAAGC,WAAW,IAAI;AAC1D,UAAQ,OAAOA,WAAf;AACE,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACE,aAAOA,WAAP;;AACF,SAAK,QAAL;AACA,SAAK,UAAL;AACE,YAAM,mDAAN;;AACF,SAAK,QAAL;AACE,UAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,eAAO,IAAP;AACD;;AACD,UAAIA,WAAW,YAAYrK,KAA3B,EAAkC;AAChC,eAAOqK,WAAW,CAACpK,GAAZ,CAAgBmK,oCAAhB,CAAP;AACD;;AAED,UAAIC,WAAW,YAAYvK,IAA3B,EAAiC;AAC/B,eAAOnB,KAAK,CAAC2L,OAAN,CAAcD,WAAd,CAAP;AACD;;AAED,UAAIA,WAAW,YAAY5L,OAAO,CAAC8L,IAAnC,EAAyC;AACvC,eAAOF,WAAW,CAACG,QAAZ,EAAP;AACD;;AAED,UAAIH,WAAW,YAAY5L,OAAO,CAACgM,MAAnC,EAA2C;AACzC,eAAOJ,WAAW,CAAC3K,KAAnB;AACD;;AAED,UAAIqF,UAAU,CAAC2F,qBAAX,CAAiCL,WAAjC,CAAJ,EAAmD;AACjD,eAAOtF,UAAU,CAAC4F,cAAX,CAA0BN,WAA1B,CAAP;AACD;;AAED,UACElJ,MAAM,CAACyJ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,WAArC,EAAkD,QAAlD,KACAA,WAAW,CAACpL,MAAZ,IAAsB,MADtB,IAEAoL,WAAW,CAAC9G,GAAZ,YAA2BzD,IAH7B,EAIE;AACAuK,QAAAA,WAAW,CAAC9G,GAAZ,GAAkB8G,WAAW,CAAC9G,GAAZ,CAAgBwH,MAAhB,EAAlB;AACA,eAAOV,WAAP;AACD;;AAED,aAAOjK,SAAS,CAACiK,WAAD,EAAcD,oCAAd,CAAhB;;AACF;AACE,YAAM,iBAAN;AA5CJ;AA8CD,CA/CD;;AAiDA,MAAMY,sBAAsB,GAAG,CAACjM,MAAD,EAASkD,KAAT,EAAgBgJ,aAAhB,KAAkC;AAC/D,QAAMC,OAAO,GAAGD,aAAa,CAACtF,KAAd,CAAoB,GAApB,CAAhB;;AACA,MAAIuF,OAAO,CAAC,CAAD,CAAP,KAAenM,MAAM,CAACC,MAAP,CAAciD,KAAd,EAAqBgD,WAAxC,EAAqD;AACnD,UAAM,gCAAN;AACD;;AACD,SAAO;AACLhG,IAAAA,MAAM,EAAE,SADH;AAELJ,IAAAA,SAAS,EAAEqM,OAAO,CAAC,CAAD,CAFb;AAGLvG,IAAAA,QAAQ,EAAEuG,OAAO,CAAC,CAAD;AAHZ,GAAP;AAKD,CAVD,C,CAYA;AACA;;;AACA,MAAMC,wBAAwB,GAAG,CAACtM,SAAD,EAAYwL,WAAZ,EAAyBtL,MAAzB,KAAoC;AACnE,UAAQ,OAAOsL,WAAf;AACE,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACE,aAAOA,WAAP;;AACF,SAAK,QAAL;AACA,SAAK,UAAL;AACE,YAAM,uCAAN;;AACF,SAAK,QAAL;AAAe;AACb,YAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,iBAAO,IAAP;AACD;;AACD,YAAIA,WAAW,YAAYrK,KAA3B,EAAkC;AAChC,iBAAOqK,WAAW,CAACpK,GAAZ,CAAgBmK,oCAAhB,CAAP;AACD;;AAED,YAAIC,WAAW,YAAYvK,IAA3B,EAAiC;AAC/B,iBAAOnB,KAAK,CAAC2L,OAAN,CAAcD,WAAd,CAAP;AACD;;AAED,YAAIA,WAAW,YAAY5L,OAAO,CAAC8L,IAAnC,EAAyC;AACvC,iBAAOF,WAAW,CAACG,QAAZ,EAAP;AACD;;AAED,YAAIH,WAAW,YAAY5L,OAAO,CAACgM,MAAnC,EAA2C;AACzC,iBAAOJ,WAAW,CAAC3K,KAAnB;AACD;;AAED,YAAIqF,UAAU,CAAC2F,qBAAX,CAAiCL,WAAjC,CAAJ,EAAmD;AACjD,iBAAOtF,UAAU,CAAC4F,cAAX,CAA0BN,WAA1B,CAAP;AACD;;AAED,cAAMjG,UAAU,GAAG,EAAnB;;AACA,YAAIiG,WAAW,CAACvG,MAAZ,IAAsBuG,WAAW,CAACtG,MAAtC,EAA8C;AAC5CK,UAAAA,UAAU,CAACN,MAAX,GAAoBuG,WAAW,CAACvG,MAAZ,IAAsB,EAA1C;AACAM,UAAAA,UAAU,CAACL,MAAX,GAAoBsG,WAAW,CAACtG,MAAZ,IAAsB,EAA1C;AACA,iBAAOsG,WAAW,CAACvG,MAAnB;AACA,iBAAOuG,WAAW,CAACtG,MAAnB;AACD;;AAED,aAAK,IAAIxE,GAAT,IAAgB8K,WAAhB,EAA6B;AAC3B,kBAAQ9K,GAAR;AACE,iBAAK,KAAL;AACE6E,cAAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,KAAKiG,WAAW,CAAC9K,GAAD,CAAzC;AACA;;AACF,iBAAK,kBAAL;AACE6E,cAAAA,UAAU,CAACgH,gBAAX,GAA8Bf,WAAW,CAAC9K,GAAD,CAAzC;AACA;;AACF,iBAAK,MAAL;AACE;;AACF,iBAAK,qBAAL;AACA,iBAAK,mBAAL;AACA,iBAAK,8BAAL;AACA,iBAAK,sBAAL;AACA,iBAAK,YAAL;AACA,iBAAK,gCAAL;AACA,iBAAK,6BAAL;AACA,iBAAK,qBAAL;AACA,iBAAK,mBAAL;AACE;AACA6E,cAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkB8K,WAAW,CAAC9K,GAAD,CAA7B;AACA;;AACF,iBAAK,gBAAL;AACE6E,cAAAA,UAAU,CAAC,cAAD,CAAV,GAA6BiG,WAAW,CAAC9K,GAAD,CAAxC;AACA;;AACF,iBAAK,WAAL;AACA,iBAAK,aAAL;AACE6E,cAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BzF,KAAK,CAAC2L,OAAN,CAAc,IAAIxK,IAAJ,CAASuK,WAAW,CAAC9K,GAAD,CAApB,CAAd,EAA0CgE,GAApE;AACA;;AACF,iBAAK,WAAL;AACA,iBAAK,aAAL;AACEa,cAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BzF,KAAK,CAAC2L,OAAN,CAAc,IAAIxK,IAAJ,CAASuK,WAAW,CAAC9K,GAAD,CAApB,CAAd,EAA0CgE,GAApE;AACA;;AACF,iBAAK,WAAL;AACA,iBAAK,YAAL;AACEa,cAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BzF,KAAK,CAAC2L,OAAN,CAAc,IAAIxK,IAAJ,CAASuK,WAAW,CAAC9K,GAAD,CAApB,CAAd,CAA1B;AACA;;AACF,iBAAK,UAAL;AACA,iBAAK,YAAL;AACE6E,cAAAA,UAAU,CAAC,UAAD,CAAV,GAAyBzF,KAAK,CAAC2L,OAAN,CAAc,IAAIxK,IAAJ,CAASuK,WAAW,CAAC9K,GAAD,CAApB,CAAd,EAA0CgE,GAAnE;AACA;;AACF,iBAAK,WAAL;AACA,iBAAK,YAAL;AACEa,cAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BiG,WAAW,CAAC9K,GAAD,CAArC;AACA;;AACF,iBAAK,UAAL;AACE,kBAAIV,SAAS,KAAK,OAAlB,EAA2B;AACzB6I,gCAAI2D,IAAJ,CACE,6FADF;AAGD,eAJD,MAIO;AACLjH,gBAAAA,UAAU,CAAC,UAAD,CAAV,GAAyBiG,WAAW,CAAC9K,GAAD,CAApC;AACD;;AACD;;AACF;AACE;AACA,kBAAIsC,aAAa,GAAGtC,GAAG,CAACmB,KAAJ,CAAU,8BAAV,CAApB;;AACA,kBAAImB,aAAa,IAAIhD,SAAS,KAAK,OAAnC,EAA4C;AAC1C,oBAAIiD,QAAQ,GAAGD,aAAa,CAAC,CAAD,CAA5B;AACAuC,gBAAAA,UAAU,CAAC,UAAD,CAAV,GAAyBA,UAAU,CAAC,UAAD,CAAV,IAA0B,EAAnD;AACAA,gBAAAA,UAAU,CAAC,UAAD,CAAV,CAAuBtC,QAAvB,IAAmCuI,WAAW,CAAC9K,GAAD,CAA9C;AACA;AACD;;AAED,kBAAIA,GAAG,CAACQ,OAAJ,CAAY,KAAZ,KAAsB,CAA1B,EAA6B;AAC3B,oBAAIuL,MAAM,GAAG/L,GAAG,CAACgM,SAAJ,CAAc,CAAd,CAAb;;AACA,oBAAI,CAACxM,MAAM,CAACC,MAAP,CAAcsM,MAAd,CAAL,EAA4B;AAC1B5D,kCAAIzB,IAAJ,CACE,cADF,EAEE,wDAFF,EAGEpH,SAHF,EAIEyM,MAJF;;AAMA;AACD;;AACD,oBAAIvM,MAAM,CAACC,MAAP,CAAcsM,MAAd,EAAsBpM,IAAtB,KAA+B,SAAnC,EAA8C;AAC5CwI,kCAAIzB,IAAJ,CACE,cADF,EAEE,uDAFF,EAGEpH,SAHF,EAIEU,GAJF;;AAMA;AACD;;AACD,oBAAI8K,WAAW,CAAC9K,GAAD,CAAX,KAAqB,IAAzB,EAA+B;AAC7B;AACD;;AACD6E,gBAAAA,UAAU,CAACkH,MAAD,CAAV,GAAqBN,sBAAsB,CAACjM,MAAD,EAASuM,MAAT,EAAiBjB,WAAW,CAAC9K,GAAD,CAA5B,CAA3C;AACA;AACD,eAzBD,MAyBO,IAAIA,GAAG,CAAC,CAAD,CAAH,IAAU,GAAV,IAAiBA,GAAG,IAAI,QAA5B,EAAsC;AAC3C,sBAAM,6BAA6BA,GAAnC;AACD,eAFM,MAEA;AACL,oBAAIG,KAAK,GAAG2K,WAAW,CAAC9K,GAAD,CAAvB;;AACA,oBACER,MAAM,CAACC,MAAP,CAAcO,GAAd,KACAR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,MAD5B,IAEAkG,SAAS,CAACsF,qBAAV,CAAgChL,KAAhC,CAHF,EAIE;AACA0E,kBAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkB6F,SAAS,CAACuF,cAAV,CAAyBjL,KAAzB,CAAlB;AACA;AACD;;AACD,oBACEX,MAAM,CAACC,MAAP,CAAcO,GAAd,KACAR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,UAD5B,IAEAgG,aAAa,CAACwF,qBAAd,CAAoChL,KAApC,CAHF,EAIE;AACA0E,kBAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkB2F,aAAa,CAACyF,cAAd,CAA6BjL,KAA7B,CAAlB;AACA;AACD;;AACD,oBACEX,MAAM,CAACC,MAAP,CAAcO,GAAd,KACAR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,SAD5B,IAEAiG,YAAY,CAACuF,qBAAb,CAAmChL,KAAnC,CAHF,EAIE;AACA0E,kBAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkB4F,YAAY,CAACwF,cAAb,CAA4BjL,KAA5B,CAAlB;AACA;AACD;;AACD,oBACEX,MAAM,CAACC,MAAP,CAAcO,GAAd,KACAR,MAAM,CAACC,MAAP,CAAcO,GAAd,EAAmBL,IAAnB,KAA4B,OAD5B,IAEA6F,UAAU,CAAC2F,qBAAX,CAAiChL,KAAjC,CAHF,EAIE;AACA0E,kBAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkBwF,UAAU,CAAC4F,cAAX,CAA0BjL,KAA1B,CAAlB;AACA;AACD;AACF;;AACD0E,cAAAA,UAAU,CAAC7E,GAAD,CAAV,GAAkB6K,oCAAoC,CAACC,WAAW,CAAC9K,GAAD,CAAZ,CAAtD;AA7HJ;AA+HD;;AAED,cAAMiM,kBAAkB,GAAGrK,MAAM,CAACC,IAAP,CAAYrC,MAAM,CAACC,MAAnB,EAA2B4G,MAA3B,CACzB9G,SAAS,IAAIC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBI,IAAzB,KAAkC,UADtB,CAA3B;AAGA,cAAMuM,cAAc,GAAG,EAAvB;AACAD,QAAAA,kBAAkB,CAAClH,OAAnB,CAA2BoH,iBAAiB,IAAI;AAC9CD,UAAAA,cAAc,CAACC,iBAAD,CAAd,GAAoC;AAClCzM,YAAAA,MAAM,EAAE,UAD0B;AAElCJ,YAAAA,SAAS,EAAEE,MAAM,CAACC,MAAP,CAAc0M,iBAAd,EAAiCzG;AAFV,WAApC;AAID,SALD;AAOA,+CAAYb,UAAZ,GAA2BqH,cAA3B;AACD;;AACD;AACE,YAAM,iBAAN;AAzLJ;AA2LD,CA5LD;;AA8LA,IAAI7G,SAAS,GAAG;AACdE,EAAAA,cAAc,CAAC6G,IAAD,EAAO;AACnB,WAAO,IAAI7L,IAAJ,CAAS6L,IAAI,CAACpI,GAAd,CAAP;AACD,GAHa;;AAKdsB,EAAAA,WAAW,CAACnF,KAAD,EAAQ;AACjB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+CA,KAAK,CAACT,MAAN,KAAiB,MAAvE;AACD;;AAPa,CAAhB;AAUA,IAAI8F,UAAU,GAAG;AACf6G,EAAAA,aAAa,EAAE,IAAItL,MAAJ,CAAW,kEAAX,CADA;;AAEfuL,EAAAA,aAAa,CAAC3B,MAAD,EAAS;AACpB,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,aAAO,KAAP;AACD;;AACD,WAAO,KAAK0B,aAAL,CAAmBE,IAAnB,CAAwB5B,MAAxB,CAAP;AACD,GAPc;;AASfS,EAAAA,cAAc,CAACT,MAAD,EAAS;AACrB,QAAIxK,KAAJ;;AACA,QAAI,KAAKmM,aAAL,CAAmB3B,MAAnB,CAAJ,EAAgC;AAC9BxK,MAAAA,KAAK,GAAGwK,MAAR;AACD,KAFD,MAEO;AACLxK,MAAAA,KAAK,GAAGwK,MAAM,CAAC6B,MAAP,CAActL,QAAd,CAAuB,QAAvB,CAAR;AACD;;AACD,WAAO;AACLxB,MAAAA,MAAM,EAAE,OADH;AAEL+M,MAAAA,MAAM,EAAEtM;AAFH,KAAP;AAID,GApBc;;AAsBfgL,EAAAA,qBAAqB,CAACR,MAAD,EAAS;AAC5B,WAAOA,MAAM,YAAYzL,OAAO,CAACwN,MAA1B,IAAoC,KAAKJ,aAAL,CAAmB3B,MAAnB,CAA3C;AACD,GAxBc;;AA0BfpF,EAAAA,cAAc,CAAC6G,IAAD,EAAO;AACnB,WAAO,IAAIlN,OAAO,CAACwN,MAAZ,CAAmBC,MAAM,CAACC,IAAP,CAAYR,IAAI,CAACK,MAAjB,EAAyB,QAAzB,CAAnB,CAAP;AACD,GA5Bc;;AA8BfnH,EAAAA,WAAW,CAACnF,KAAD,EAAQ;AACjB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+CA,KAAK,CAACT,MAAN,KAAiB,OAAvE;AACD;;AAhCc,CAAjB;AAmCA,IAAIiG,aAAa,GAAG;AAClByF,EAAAA,cAAc,CAACT,MAAD,EAAS;AACrB,WAAO;AACLjL,MAAAA,MAAM,EAAE,UADH;AAELyJ,MAAAA,QAAQ,EAAEwB,MAAM,CAAC,CAAD,CAFX;AAGLzB,MAAAA,SAAS,EAAEyB,MAAM,CAAC,CAAD;AAHZ,KAAP;AAKD,GAPiB;;AASlBQ,EAAAA,qBAAqB,CAACR,MAAD,EAAS;AAC5B,WAAOA,MAAM,YAAYlK,KAAlB,IAA2BkK,MAAM,CAACpJ,MAAP,IAAiB,CAAnD;AACD,GAXiB;;AAalBgE,EAAAA,cAAc,CAAC6G,IAAD,EAAO;AACnB,WAAO,CAACA,IAAI,CAAClD,SAAN,EAAiBkD,IAAI,CAACjD,QAAtB,CAAP;AACD,GAfiB;;AAiBlB7D,EAAAA,WAAW,CAACnF,KAAD,EAAQ;AACjB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+CA,KAAK,CAACT,MAAN,KAAiB,UAAvE;AACD;;AAnBiB,CAApB;AAsBA,IAAIkG,YAAY,GAAG;AACjBwF,EAAAA,cAAc,CAACT,MAAD,EAAS;AACrB;AACA,UAAMkC,MAAM,GAAGlC,MAAM,CAAChB,WAAP,CAAmB,CAAnB,EAAsBjJ,GAAtB,CAA0BoM,KAAK,IAAI;AAChD,aAAO,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAP;AACD,KAFc,CAAf;AAGA,WAAO;AACLpN,MAAAA,MAAM,EAAE,SADH;AAELiK,MAAAA,WAAW,EAAEkD;AAFR,KAAP;AAID,GAVgB;;AAYjB1B,EAAAA,qBAAqB,CAACR,MAAD,EAAS;AAC5B,UAAMkC,MAAM,GAAGlC,MAAM,CAAChB,WAAP,CAAmB,CAAnB,CAAf;;AACA,QAAIgB,MAAM,CAAChL,IAAP,KAAgB,SAAhB,IAA6B,EAAEkN,MAAM,YAAYpM,KAApB,CAAjC,EAA6D;AAC3D,aAAO,KAAP;AACD;;AACD,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoL,MAAM,CAACtL,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACtC,YAAMsH,KAAK,GAAG8D,MAAM,CAACpL,CAAD,CAApB;;AACA,UAAI,CAACkE,aAAa,CAACwF,qBAAd,CAAoCpC,KAApC,CAAL,EAAiD;AAC/C,eAAO,KAAP;AACD;;AACD3J,MAAAA,KAAK,CAACwK,QAAN,CAAeC,SAAf,CAAyBkD,UAAU,CAAChE,KAAK,CAAC,CAAD,CAAN,CAAnC,EAA+CgE,UAAU,CAAChE,KAAK,CAAC,CAAD,CAAN,CAAzD;AACD;;AACD,WAAO,IAAP;AACD,GAzBgB;;AA2BjBxD,EAAAA,cAAc,CAAC6G,IAAD,EAAO;AACnB,QAAIS,MAAM,GAAGT,IAAI,CAACzC,WAAlB,CADmB,CAEnB;;AACA,QACEkD,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBA,MAAM,CAACA,MAAM,CAACtL,MAAP,GAAgB,CAAjB,CAAN,CAA0B,CAA1B,CAAjB,IACAsL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBA,MAAM,CAACA,MAAM,CAACtL,MAAP,GAAgB,CAAjB,CAAN,CAA0B,CAA1B,CAFnB,EAGE;AACAsL,MAAAA,MAAM,CAAChG,IAAP,CAAYgG,MAAM,CAAC,CAAD,CAAlB;AACD;;AACD,UAAMG,MAAM,GAAGH,MAAM,CAACxG,MAAP,CAAc,CAAC4G,IAAD,EAAOC,KAAP,EAAcC,EAAd,KAAqB;AAChD,UAAIC,UAAU,GAAG,CAAC,CAAlB;;AACA,WAAK,IAAI3L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0L,EAAE,CAAC5L,MAAvB,EAA+BE,CAAC,IAAI,CAApC,EAAuC;AACrC,cAAM4L,EAAE,GAAGF,EAAE,CAAC1L,CAAD,CAAb;;AACA,YAAI4L,EAAE,CAAC,CAAD,CAAF,KAAUJ,IAAI,CAAC,CAAD,CAAd,IAAqBI,EAAE,CAAC,CAAD,CAAF,KAAUJ,IAAI,CAAC,CAAD,CAAvC,EAA4C;AAC1CG,UAAAA,UAAU,GAAG3L,CAAb;AACA;AACD;AACF;;AACD,aAAO2L,UAAU,KAAKF,KAAtB;AACD,KAVc,CAAf;;AAWA,QAAIF,MAAM,CAACzL,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAM,IAAInC,KAAK,CAAC0C,KAAV,CACJ1C,KAAK,CAAC0C,KAAN,CAAYgE,qBADR,EAEJ,uDAFI,CAAN;AAID,KAzBkB,CA0BnB;;;AACA+G,IAAAA,MAAM,GAAGA,MAAM,CAACnM,GAAP,CAAWoM,KAAK,IAAI;AAC3B,aAAO,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAP;AACD,KAFQ,CAAT;AAGA,WAAO;AAAEnN,MAAAA,IAAI,EAAE,SAAR;AAAmBgK,MAAAA,WAAW,EAAE,CAACkD,MAAD;AAAhC,KAAP;AACD,GA1DgB;;AA4DjBvH,EAAAA,WAAW,CAACnF,KAAD,EAAQ;AACjB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+CA,KAAK,CAACT,MAAN,KAAiB,SAAvE;AACD;;AA9DgB,CAAnB;AAiEA,IAAImG,SAAS,GAAG;AACduF,EAAAA,cAAc,CAACT,MAAD,EAAS;AACrB,WAAO;AACLjL,MAAAA,MAAM,EAAE,MADH;AAEL4N,MAAAA,IAAI,EAAE3C;AAFD,KAAP;AAID,GANa;;AAQdQ,EAAAA,qBAAqB,CAACR,MAAD,EAAS;AAC5B,WAAO,OAAOA,MAAP,KAAkB,QAAzB;AACD,GAVa;;AAYdpF,EAAAA,cAAc,CAAC6G,IAAD,EAAO;AACnB,WAAOA,IAAI,CAACkB,IAAZ;AACD,GAda;;AAgBdhI,EAAAA,WAAW,CAACnF,KAAD,EAAQ;AACjB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+CA,KAAK,CAACT,MAAN,KAAiB,MAAvE;AACD;;AAlBa,CAAhB;AAqBA6N,MAAM,CAACC,OAAP,GAAiB;AACfnO,EAAAA,YADe;AAEfoE,EAAAA,iCAFe;AAGfU,EAAAA,eAHe;AAIf9B,EAAAA,cAJe;AAKfuJ,EAAAA,wBALe;AAMf7F,EAAAA,kBANe;AAOfnD,EAAAA,mBAPe;AAQf6I,EAAAA;AARe,CAAjB",sourcesContent:["import log from '../../../logger';\nimport _ from 'lodash';\nvar mongodb = require('mongodb');\nvar Parse = require('parse/node').Parse;\n\nconst transformKey = (className, fieldName, schema) => {\n  // Check if the schema is known since it's a built-in field.\n  switch (fieldName) {\n    case 'objectId':\n      return '_id';\n    case 'createdAt':\n      return '_created_at';\n    case 'updatedAt':\n      return '_updated_at';\n    case 'sessionToken':\n      return '_session_token';\n    case 'lastUsed':\n      return '_last_used';\n    case 'timesUsed':\n      return 'times_used';\n  }\n\n  if (schema.fields[fieldName] && schema.fields[fieldName].__type == 'Pointer') {\n    fieldName = '_p_' + fieldName;\n  } else if (schema.fields[fieldName] && schema.fields[fieldName].type == 'Pointer') {\n    fieldName = '_p_' + fieldName;\n  }\n\n  return fieldName;\n};\n\nconst transformKeyValueForUpdate = (className, restKey, restValue, parseFormatSchema) => {\n  // Check if the schema is known since it's a built-in field.\n  var key = restKey;\n  var timeField = false;\n  switch (key) {\n    case 'objectId':\n    case '_id':\n      if (['_GlobalConfig', '_GraphQLConfig'].includes(className)) {\n        return {\n          key: key,\n          value: parseInt(restValue),\n        };\n      }\n      key = '_id';\n      break;\n    case 'createdAt':\n    case '_created_at':\n      key = '_created_at';\n      timeField = true;\n      break;\n    case 'updatedAt':\n    case '_updated_at':\n      key = '_updated_at';\n      timeField = true;\n      break;\n    case 'sessionToken':\n    case '_session_token':\n      key = '_session_token';\n      break;\n    case 'expiresAt':\n    case '_expiresAt':\n      key = 'expiresAt';\n      timeField = true;\n      break;\n    case '_email_verify_token_expires_at':\n      key = '_email_verify_token_expires_at';\n      timeField = true;\n      break;\n    case '_account_lockout_expires_at':\n      key = '_account_lockout_expires_at';\n      timeField = true;\n      break;\n    case '_failed_login_count':\n      key = '_failed_login_count';\n      break;\n    case '_perishable_token_expires_at':\n      key = '_perishable_token_expires_at';\n      timeField = true;\n      break;\n    case '_password_changed_at':\n      key = '_password_changed_at';\n      timeField = true;\n      break;\n    case '_rperm':\n    case '_wperm':\n      return { key: key, value: restValue };\n    case 'lastUsed':\n    case '_last_used':\n      key = '_last_used';\n      timeField = true;\n      break;\n    case 'timesUsed':\n    case 'times_used':\n      key = 'times_used';\n      timeField = true;\n      break;\n  }\n\n  if (\n    (parseFormatSchema.fields[key] && parseFormatSchema.fields[key].type === 'Pointer') ||\n    (!key.includes('.') &&\n      !parseFormatSchema.fields[key] &&\n      restValue &&\n      restValue.__type == 'Pointer') // Do not use the _p_ prefix for pointers inside nested documents\n  ) {\n    key = '_p_' + key;\n  }\n\n  // Handle atomic values\n  var value = transformTopLevelAtom(restValue);\n  if (value !== CannotTransform) {\n    if (timeField && typeof value === 'string') {\n      value = new Date(value);\n    }\n    if (restKey.indexOf('.') > 0) {\n      return { key, value: restValue };\n    }\n    return { key, value };\n  }\n\n  // Handle arrays\n  if (restValue instanceof Array) {\n    value = restValue.map(transformInteriorValue);\n    return { key, value };\n  }\n\n  // Handle update operators\n  if (typeof restValue === 'object' && '__op' in restValue) {\n    return { key, value: transformUpdateOperator(restValue, false) };\n  }\n\n  // Handle normal objects by recursing\n  value = mapValues(restValue, transformInteriorValue);\n  return { key, value };\n};\n\nconst isRegex = value => {\n  return value && value instanceof RegExp;\n};\n\nconst isStartsWithRegex = value => {\n  if (!isRegex(value)) {\n    return false;\n  }\n\n  const matches = value.toString().match(/\\/\\^\\\\Q.*\\\\E\\//);\n  return !!matches;\n};\n\nconst isAllValuesRegexOrNone = values => {\n  if (!values || !Array.isArray(values) || values.length === 0) {\n    return true;\n  }\n\n  const firstValuesIsRegex = isStartsWithRegex(values[0]);\n  if (values.length === 1) {\n    return firstValuesIsRegex;\n  }\n\n  for (let i = 1, length = values.length; i < length; ++i) {\n    if (firstValuesIsRegex !== isStartsWithRegex(values[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst isAnyValueRegex = values => {\n  return values.some(function (value) {\n    return isRegex(value);\n  });\n};\n\nconst transformInteriorValue = restValue => {\n  if (\n    restValue !== null &&\n    typeof restValue === 'object' &&\n    Object.keys(restValue).some(key => key.includes('$') || key.includes('.'))\n  ) {\n    throw new Parse.Error(\n      Parse.Error.INVALID_NESTED_KEY,\n      \"Nested keys should not contain the '$' or '.' characters\"\n    );\n  }\n  // Handle atomic values\n  var value = transformInteriorAtom(restValue);\n  if (value !== CannotTransform) {\n    return value;\n  }\n\n  // Handle arrays\n  if (restValue instanceof Array) {\n    return restValue.map(transformInteriorValue);\n  }\n\n  // Handle update operators\n  if (typeof restValue === 'object' && '__op' in restValue) {\n    return transformUpdateOperator(restValue, true);\n  }\n\n  // Handle normal objects by recursing\n  return mapValues(restValue, transformInteriorValue);\n};\n\nconst valueAsDate = value => {\n  if (typeof value === 'string') {\n    return new Date(value);\n  } else if (value instanceof Date) {\n    return value;\n  }\n  return false;\n};\n\nfunction transformQueryKeyValue(className, key, value, schema, count = false) {\n  switch (key) {\n    case 'createdAt':\n      if (valueAsDate(value)) {\n        return { key: '_created_at', value: valueAsDate(value) };\n      }\n      key = '_created_at';\n      break;\n    case 'updatedAt':\n      if (valueAsDate(value)) {\n        return { key: '_updated_at', value: valueAsDate(value) };\n      }\n      key = '_updated_at';\n      break;\n    case 'expiresAt':\n      if (valueAsDate(value)) {\n        return { key: 'expiresAt', value: valueAsDate(value) };\n      }\n      break;\n    case '_email_verify_token_expires_at':\n      if (valueAsDate(value)) {\n        return {\n          key: '_email_verify_token_expires_at',\n          value: valueAsDate(value),\n        };\n      }\n      break;\n    case 'objectId': {\n      if (['_GlobalConfig', '_GraphQLConfig'].includes(className)) {\n        value = parseInt(value);\n      }\n      return { key: '_id', value };\n    }\n    case '_account_lockout_expires_at':\n      if (valueAsDate(value)) {\n        return {\n          key: '_account_lockout_expires_at',\n          value: valueAsDate(value),\n        };\n      }\n      break;\n    case '_failed_login_count':\n      return { key, value };\n    case 'sessionToken':\n      return { key: '_session_token', value };\n    case '_perishable_token_expires_at':\n      if (valueAsDate(value)) {\n        return {\n          key: '_perishable_token_expires_at',\n          value: valueAsDate(value),\n        };\n      }\n      break;\n    case '_password_changed_at':\n      if (valueAsDate(value)) {\n        return { key: '_password_changed_at', value: valueAsDate(value) };\n      }\n      break;\n    case '_rperm':\n    case '_wperm':\n    case '_perishable_token':\n    case '_email_verify_token':\n      return { key, value };\n    case '$or':\n    case '$and':\n    case '$nor':\n      return {\n        key: key,\n        value: value.map(subQuery => transformWhere(className, subQuery, schema, count)),\n      };\n    case 'lastUsed':\n      if (valueAsDate(value)) {\n        return { key: '_last_used', value: valueAsDate(value) };\n      }\n      key = '_last_used';\n      break;\n    case 'timesUsed':\n      return { key: 'times_used', value: value };\n    default: {\n      // Other auth data\n      const authDataMatch = key.match(/^authData\\.([a-zA-Z0-9_]+)\\.id$/);\n      if (authDataMatch) {\n        const provider = authDataMatch[1];\n        // Special-case auth data.\n        return { key: `_auth_data_${provider}.id`, value };\n      }\n    }\n  }\n\n  const expectedTypeIsArray = schema && schema.fields[key] && schema.fields[key].type === 'Array';\n\n  const expectedTypeIsPointer =\n    schema && schema.fields[key] && schema.fields[key].type === 'Pointer';\n\n  const field = schema && schema.fields[key];\n  if (\n    expectedTypeIsPointer ||\n    (!schema && !key.includes('.') && value && value.__type === 'Pointer')\n  ) {\n    key = '_p_' + key;\n  }\n\n  // Handle query constraints\n  const transformedConstraint = transformConstraint(value, field, count);\n  if (transformedConstraint !== CannotTransform) {\n    if (transformedConstraint.$text) {\n      return { key: '$text', value: transformedConstraint.$text };\n    }\n    if (transformedConstraint.$elemMatch) {\n      return { key: '$nor', value: [{ [key]: transformedConstraint }] };\n    }\n    return { key, value: transformedConstraint };\n  }\n\n  if (expectedTypeIsArray && !(value instanceof Array)) {\n    return { key, value: { $all: [transformInteriorAtom(value)] } };\n  }\n\n  // Handle atomic values\n  const transformRes = key.includes('.')\n    ? transformInteriorAtom(value)\n    : transformTopLevelAtom(value);\n  if (transformRes !== CannotTransform) {\n    return { key, value: transformRes };\n  } else {\n    throw new Parse.Error(\n      Parse.Error.INVALID_JSON,\n      `You cannot use ${value} as a query parameter.`\n    );\n  }\n}\n\n// Main exposed method to help run queries.\n// restWhere is the \"where\" clause in REST API form.\n// Returns the mongo form of the query.\nfunction transformWhere(className, restWhere, schema, count = false) {\n  const mongoWhere = {};\n  for (const restKey in restWhere) {\n    const out = transformQueryKeyValue(className, restKey, restWhere[restKey], schema, count);\n    mongoWhere[out.key] = out.value;\n  }\n  return mongoWhere;\n}\n\nconst parseObjectKeyValueToMongoObjectKeyValue = (restKey, restValue, schema) => {\n  // Check if the schema is known since it's a built-in field.\n  let transformedValue;\n  let coercedToDate;\n  switch (restKey) {\n    case 'objectId':\n      return { key: '_id', value: restValue };\n    case 'expiresAt':\n      transformedValue = transformTopLevelAtom(restValue);\n      coercedToDate =\n        typeof transformedValue === 'string' ? new Date(transformedValue) : transformedValue;\n      return { key: 'expiresAt', value: coercedToDate };\n    case '_email_verify_token_expires_at':\n      transformedValue = transformTopLevelAtom(restValue);\n      coercedToDate =\n        typeof transformedValue === 'string' ? new Date(transformedValue) : transformedValue;\n      return { key: '_email_verify_token_expires_at', value: coercedToDate };\n    case '_account_lockout_expires_at':\n      transformedValue = transformTopLevelAtom(restValue);\n      coercedToDate =\n        typeof transformedValue === 'string' ? new Date(transformedValue) : transformedValue;\n      return { key: '_account_lockout_expires_at', value: coercedToDate };\n    case '_perishable_token_expires_at':\n      transformedValue = transformTopLevelAtom(restValue);\n      coercedToDate =\n        typeof transformedValue === 'string' ? new Date(transformedValue) : transformedValue;\n      return { key: '_perishable_token_expires_at', value: coercedToDate };\n    case '_password_changed_at':\n      transformedValue = transformTopLevelAtom(restValue);\n      coercedToDate =\n        typeof transformedValue === 'string' ? new Date(transformedValue) : transformedValue;\n      return { key: '_password_changed_at', value: coercedToDate };\n    case '_failed_login_count':\n    case '_rperm':\n    case '_wperm':\n    case '_email_verify_token':\n    case '_hashed_password':\n    case '_perishable_token':\n      return { key: restKey, value: restValue };\n    case 'sessionToken':\n      return { key: '_session_token', value: restValue };\n    default:\n      // Auth data should have been transformed already\n      if (restKey.match(/^authData\\.([a-zA-Z0-9_]+)\\.id$/)) {\n        throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, 'can only query on ' + restKey);\n      }\n      // Trust that the auth data has been transformed and save it directly\n      if (restKey.match(/^_auth_data_[a-zA-Z0-9_]+$/)) {\n        return { key: restKey, value: restValue };\n      }\n  }\n  //skip straight to transformTopLevelAtom for Bytes, they don't show up in the schema for some reason\n  if (restValue && restValue.__type !== 'Bytes') {\n    //Note: We may not know the type of a field here, as the user could be saving (null) to a field\n    //That never existed before, meaning we can't infer the type.\n    if (\n      (schema.fields[restKey] && schema.fields[restKey].type == 'Pointer') ||\n      restValue.__type == 'Pointer'\n    ) {\n      restKey = '_p_' + restKey;\n    }\n  }\n\n  // Handle atomic values\n  var value = transformTopLevelAtom(restValue);\n  if (value !== CannotTransform) {\n    return { key: restKey, value: value };\n  }\n\n  // ACLs are handled before this method is called\n  // If an ACL key still exists here, something is wrong.\n  if (restKey === 'ACL') {\n    throw 'There was a problem transforming an ACL.';\n  }\n\n  // Handle arrays\n  if (restValue instanceof Array) {\n    value = restValue.map(transformInteriorValue);\n    return { key: restKey, value: value };\n  }\n\n  // Handle normal objects by recursing\n  if (Object.keys(restValue).some(key => key.includes('$') || key.includes('.'))) {\n    throw new Parse.Error(\n      Parse.Error.INVALID_NESTED_KEY,\n      \"Nested keys should not contain the '$' or '.' characters\"\n    );\n  }\n  value = mapValues(restValue, transformInteriorValue);\n  return { key: restKey, value };\n};\n\nconst parseObjectToMongoObjectForCreate = (className, restCreate, schema) => {\n  restCreate = addLegacyACL(restCreate);\n  const mongoCreate = {};\n  for (const restKey in restCreate) {\n    if (restCreate[restKey] && restCreate[restKey].__type === 'Relation') {\n      continue;\n    }\n    const { key, value } = parseObjectKeyValueToMongoObjectKeyValue(\n      restKey,\n      restCreate[restKey],\n      schema\n    );\n    if (value !== undefined) {\n      mongoCreate[key] = value;\n    }\n  }\n\n  // Use the legacy mongo format for createdAt and updatedAt\n  if (mongoCreate.createdAt) {\n    mongoCreate._created_at = new Date(mongoCreate.createdAt.iso || mongoCreate.createdAt);\n    delete mongoCreate.createdAt;\n  }\n  if (mongoCreate.updatedAt) {\n    mongoCreate._updated_at = new Date(mongoCreate.updatedAt.iso || mongoCreate.updatedAt);\n    delete mongoCreate.updatedAt;\n  }\n\n  return mongoCreate;\n};\n\n// Main exposed method to help update old objects.\nconst transformUpdate = (className, restUpdate, parseFormatSchema) => {\n  const mongoUpdate = {};\n  const acl = addLegacyACL(restUpdate);\n  if (acl._rperm || acl._wperm || acl._acl) {\n    mongoUpdate.$set = {};\n    if (acl._rperm) {\n      mongoUpdate.$set._rperm = acl._rperm;\n    }\n    if (acl._wperm) {\n      mongoUpdate.$set._wperm = acl._wperm;\n    }\n    if (acl._acl) {\n      mongoUpdate.$set._acl = acl._acl;\n    }\n  }\n  for (var restKey in restUpdate) {\n    if (restUpdate[restKey] && restUpdate[restKey].__type === 'Relation') {\n      continue;\n    }\n    var out = transformKeyValueForUpdate(\n      className,\n      restKey,\n      restUpdate[restKey],\n      parseFormatSchema\n    );\n\n    // If the output value is an object with any $ keys, it's an\n    // operator that needs to be lifted onto the top level update\n    // object.\n    if (typeof out.value === 'object' && out.value !== null && out.value.__op) {\n      mongoUpdate[out.value.__op] = mongoUpdate[out.value.__op] || {};\n      mongoUpdate[out.value.__op][out.key] = out.value.arg;\n    } else {\n      mongoUpdate['$set'] = mongoUpdate['$set'] || {};\n      mongoUpdate['$set'][out.key] = out.value;\n    }\n  }\n\n  return mongoUpdate;\n};\n\n// Add the legacy _acl format.\nconst addLegacyACL = restObject => {\n  const restObjectCopy = { ...restObject };\n  const _acl = {};\n\n  if (restObject._wperm) {\n    restObject._wperm.forEach(entry => {\n      _acl[entry] = { w: true };\n    });\n    restObjectCopy._acl = _acl;\n  }\n\n  if (restObject._rperm) {\n    restObject._rperm.forEach(entry => {\n      if (!(entry in _acl)) {\n        _acl[entry] = { r: true };\n      } else {\n        _acl[entry].r = true;\n      }\n    });\n    restObjectCopy._acl = _acl;\n  }\n\n  return restObjectCopy;\n};\n\n// A sentinel value that helper transformations return when they\n// cannot perform a transformation\nfunction CannotTransform() {}\n\nconst transformInteriorAtom = atom => {\n  // TODO: check validity harder for the __type-defined types\n  if (typeof atom === 'object' && atom && !(atom instanceof Date) && atom.__type === 'Pointer') {\n    return {\n      __type: 'Pointer',\n      className: atom.className,\n      objectId: atom.objectId,\n    };\n  } else if (typeof atom === 'function' || typeof atom === 'symbol') {\n    throw new Parse.Error(Parse.Error.INVALID_JSON, `cannot transform value: ${atom}`);\n  } else if (DateCoder.isValidJSON(atom)) {\n    return DateCoder.JSONToDatabase(atom);\n  } else if (BytesCoder.isValidJSON(atom)) {\n    return BytesCoder.JSONToDatabase(atom);\n  } else if (typeof atom === 'object' && atom && atom.$regex !== undefined) {\n    return new RegExp(atom.$regex);\n  } else {\n    return atom;\n  }\n};\n\n// Helper function to transform an atom from REST format to Mongo format.\n// An atom is anything that can't contain other expressions. So it\n// includes things where objects are used to represent other\n// datatypes, like pointers and dates, but it does not include objects\n// or arrays with generic stuff inside.\n// Raises an error if this cannot possibly be valid REST format.\n// Returns CannotTransform if it's just not an atom\nfunction transformTopLevelAtom(atom, field) {\n  switch (typeof atom) {\n    case 'number':\n    case 'boolean':\n    case 'undefined':\n      return atom;\n    case 'string':\n      if (field && field.type === 'Pointer') {\n        return `${field.targetClass}$${atom}`;\n      }\n      return atom;\n    case 'symbol':\n    case 'function':\n      throw new Parse.Error(Parse.Error.INVALID_JSON, `cannot transform value: ${atom}`);\n    case 'object':\n      if (atom instanceof Date) {\n        // Technically dates are not rest format, but, it seems pretty\n        // clear what they should be transformed to, so let's just do it.\n        return atom;\n      }\n\n      if (atom === null) {\n        return atom;\n      }\n\n      // TODO: check validity harder for the __type-defined types\n      if (atom.__type == 'Pointer') {\n        return `${atom.className}$${atom.objectId}`;\n      }\n      if (DateCoder.isValidJSON(atom)) {\n        return DateCoder.JSONToDatabase(atom);\n      }\n      if (BytesCoder.isValidJSON(atom)) {\n        return BytesCoder.JSONToDatabase(atom);\n      }\n      if (GeoPointCoder.isValidJSON(atom)) {\n        return GeoPointCoder.JSONToDatabase(atom);\n      }\n      if (PolygonCoder.isValidJSON(atom)) {\n        return PolygonCoder.JSONToDatabase(atom);\n      }\n      if (FileCoder.isValidJSON(atom)) {\n        return FileCoder.JSONToDatabase(atom);\n      }\n      return CannotTransform;\n\n    default:\n      // I don't think typeof can ever let us get here\n      throw new Parse.Error(\n        Parse.Error.INTERNAL_SERVER_ERROR,\n        `really did not expect value: ${atom}`\n      );\n  }\n}\n\nfunction relativeTimeToDate(text, now = new Date()) {\n  text = text.toLowerCase();\n\n  let parts = text.split(' ');\n\n  // Filter out whitespace\n  parts = parts.filter(part => part !== '');\n\n  const future = parts[0] === 'in';\n  const past = parts[parts.length - 1] === 'ago';\n\n  if (!future && !past && text !== 'now') {\n    return {\n      status: 'error',\n      info: \"Time should either start with 'in' or end with 'ago'\",\n    };\n  }\n\n  if (future && past) {\n    return {\n      status: 'error',\n      info: \"Time cannot have both 'in' and 'ago'\",\n    };\n  }\n\n  // strip the 'ago' or 'in'\n  if (future) {\n    parts = parts.slice(1);\n  } else {\n    // past\n    parts = parts.slice(0, parts.length - 1);\n  }\n\n  if (parts.length % 2 !== 0 && text !== 'now') {\n    return {\n      status: 'error',\n      info: 'Invalid time string. Dangling unit or number.',\n    };\n  }\n\n  const pairs = [];\n  while (parts.length) {\n    pairs.push([parts.shift(), parts.shift()]);\n  }\n\n  let seconds = 0;\n  for (const [num, interval] of pairs) {\n    const val = Number(num);\n    if (!Number.isInteger(val)) {\n      return {\n        status: 'error',\n        info: `'${num}' is not an integer.`,\n      };\n    }\n\n    switch (interval) {\n      case 'yr':\n      case 'yrs':\n      case 'year':\n      case 'years':\n        seconds += val * 31536000; // 365 * 24 * 60 * 60\n        break;\n\n      case 'wk':\n      case 'wks':\n      case 'week':\n      case 'weeks':\n        seconds += val * 604800; // 7 * 24 * 60 * 60\n        break;\n\n      case 'd':\n      case 'day':\n      case 'days':\n        seconds += val * 86400; // 24 * 60 * 60\n        break;\n\n      case 'hr':\n      case 'hrs':\n      case 'hour':\n      case 'hours':\n        seconds += val * 3600; // 60 * 60\n        break;\n\n      case 'min':\n      case 'mins':\n      case 'minute':\n      case 'minutes':\n        seconds += val * 60;\n        break;\n\n      case 'sec':\n      case 'secs':\n      case 'second':\n      case 'seconds':\n        seconds += val;\n        break;\n\n      default:\n        return {\n          status: 'error',\n          info: `Invalid interval: '${interval}'`,\n        };\n    }\n  }\n\n  const milliseconds = seconds * 1000;\n  if (future) {\n    return {\n      status: 'success',\n      info: 'future',\n      result: new Date(now.valueOf() + milliseconds),\n    };\n  } else if (past) {\n    return {\n      status: 'success',\n      info: 'past',\n      result: new Date(now.valueOf() - milliseconds),\n    };\n  } else {\n    return {\n      status: 'success',\n      info: 'present',\n      result: new Date(now.valueOf()),\n    };\n  }\n}\n\n// Transforms a query constraint from REST API format to Mongo format.\n// A constraint is something with fields like $lt.\n// If it is not a valid constraint but it could be a valid something\n// else, return CannotTransform.\n// inArray is whether this is an array field.\nfunction transformConstraint(constraint, field, count = false) {\n  const inArray = field && field.type && field.type === 'Array';\n  if (typeof constraint !== 'object' || !constraint) {\n    return CannotTransform;\n  }\n  const transformFunction = inArray ? transformInteriorAtom : transformTopLevelAtom;\n  const transformer = atom => {\n    const result = transformFunction(atom, field);\n    if (result === CannotTransform) {\n      throw new Parse.Error(Parse.Error.INVALID_JSON, `bad atom: ${JSON.stringify(atom)}`);\n    }\n    return result;\n  };\n  // keys is the constraints in reverse alphabetical order.\n  // This is a hack so that:\n  //   $regex is handled before $options\n  //   $nearSphere is handled before $maxDistance\n  var keys = Object.keys(constraint).sort().reverse();\n  var answer = {};\n  for (var key of keys) {\n    switch (key) {\n      case '$lt':\n      case '$lte':\n      case '$gt':\n      case '$gte':\n      case '$exists':\n      case '$ne':\n      case '$eq': {\n        const val = constraint[key];\n        if (val && typeof val === 'object' && val.$relativeTime) {\n          if (field && field.type !== 'Date') {\n            throw new Parse.Error(\n              Parse.Error.INVALID_JSON,\n              '$relativeTime can only be used with Date field'\n            );\n          }\n\n          switch (key) {\n            case '$exists':\n            case '$ne':\n            case '$eq':\n              throw new Parse.Error(\n                Parse.Error.INVALID_JSON,\n                '$relativeTime can only be used with the $lt, $lte, $gt, and $gte operators'\n              );\n          }\n\n          const parserResult = relativeTimeToDate(val.$relativeTime);\n          if (parserResult.status === 'success') {\n            answer[key] = parserResult.result;\n            break;\n          }\n\n          log.info('Error while parsing relative date', parserResult);\n          throw new Parse.Error(\n            Parse.Error.INVALID_JSON,\n            `bad $relativeTime (${key}) value. ${parserResult.info}`\n          );\n        }\n\n        answer[key] = transformer(val);\n        break;\n      }\n\n      case '$in':\n      case '$nin': {\n        const arr = constraint[key];\n        if (!(arr instanceof Array)) {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, 'bad ' + key + ' value');\n        }\n        answer[key] = _.flatMap(arr, value => {\n          return (atom => {\n            if (Array.isArray(atom)) {\n              return value.map(transformer);\n            } else {\n              return transformer(atom);\n            }\n          })(value);\n        });\n        break;\n      }\n      case '$all': {\n        const arr = constraint[key];\n        if (!(arr instanceof Array)) {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, 'bad ' + key + ' value');\n        }\n        answer[key] = arr.map(transformInteriorAtom);\n\n        const values = answer[key];\n        if (isAnyValueRegex(values) && !isAllValuesRegexOrNone(values)) {\n          throw new Parse.Error(\n            Parse.Error.INVALID_JSON,\n            'All $all values must be of regex type or none: ' + values\n          );\n        }\n\n        break;\n      }\n      case '$regex':\n        var s = constraint[key];\n        if (typeof s !== 'string') {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, 'bad regex: ' + s);\n        }\n        answer[key] = s;\n        break;\n\n      case '$containedBy': {\n        const arr = constraint[key];\n        if (!(arr instanceof Array)) {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, `bad $containedBy: should be an array`);\n        }\n        answer.$elemMatch = {\n          $nin: arr.map(transformer),\n        };\n        break;\n      }\n      case '$options':\n        answer[key] = constraint[key];\n        break;\n\n      case '$text': {\n        const search = constraint[key].$search;\n        if (typeof search !== 'object') {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, `bad $text: $search, should be object`);\n        }\n        if (!search.$term || typeof search.$term !== 'string') {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, `bad $text: $term, should be string`);\n        } else {\n          answer[key] = {\n            $search: search.$term,\n          };\n        }\n        if (search.$language && typeof search.$language !== 'string') {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, `bad $text: $language, should be string`);\n        } else if (search.$language) {\n          answer[key].$language = search.$language;\n        }\n        if (search.$caseSensitive && typeof search.$caseSensitive !== 'boolean') {\n          throw new Parse.Error(\n            Parse.Error.INVALID_JSON,\n            `bad $text: $caseSensitive, should be boolean`\n          );\n        } else if (search.$caseSensitive) {\n          answer[key].$caseSensitive = search.$caseSensitive;\n        }\n        if (search.$diacriticSensitive && typeof search.$diacriticSensitive !== 'boolean') {\n          throw new Parse.Error(\n            Parse.Error.INVALID_JSON,\n            `bad $text: $diacriticSensitive, should be boolean`\n          );\n        } else if (search.$diacriticSensitive) {\n          answer[key].$diacriticSensitive = search.$diacriticSensitive;\n        }\n        break;\n      }\n      case '$nearSphere': {\n        const point = constraint[key];\n        if (count) {\n          answer.$geoWithin = {\n            $centerSphere: [[point.longitude, point.latitude], constraint.$maxDistance],\n          };\n        } else {\n          answer[key] = [point.longitude, point.latitude];\n        }\n        break;\n      }\n      case '$maxDistance': {\n        if (count) {\n          break;\n        }\n        answer[key] = constraint[key];\n        break;\n      }\n      // The SDKs don't seem to use these but they are documented in the\n      // REST API docs.\n      case '$maxDistanceInRadians':\n        answer['$maxDistance'] = constraint[key];\n        break;\n      case '$maxDistanceInMiles':\n        answer['$maxDistance'] = constraint[key] / 3959;\n        break;\n      case '$maxDistanceInKilometers':\n        answer['$maxDistance'] = constraint[key] / 6371;\n        break;\n\n      case '$select':\n      case '$dontSelect':\n        throw new Parse.Error(\n          Parse.Error.COMMAND_UNAVAILABLE,\n          'the ' + key + ' constraint is not supported yet'\n        );\n\n      case '$within':\n        var box = constraint[key]['$box'];\n        if (!box || box.length != 2) {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, 'malformatted $within arg');\n        }\n        answer[key] = {\n          $box: [\n            [box[0].longitude, box[0].latitude],\n            [box[1].longitude, box[1].latitude],\n          ],\n        };\n        break;\n\n      case '$geoWithin': {\n        const polygon = constraint[key]['$polygon'];\n        const centerSphere = constraint[key]['$centerSphere'];\n        if (polygon !== undefined) {\n          let points;\n          if (typeof polygon === 'object' && polygon.__type === 'Polygon') {\n            if (!polygon.coordinates || polygon.coordinates.length < 3) {\n              throw new Parse.Error(\n                Parse.Error.INVALID_JSON,\n                'bad $geoWithin value; Polygon.coordinates should contain at least 3 lon/lat pairs'\n              );\n            }\n            points = polygon.coordinates;\n          } else if (polygon instanceof Array) {\n            if (polygon.length < 3) {\n              throw new Parse.Error(\n                Parse.Error.INVALID_JSON,\n                'bad $geoWithin value; $polygon should contain at least 3 GeoPoints'\n              );\n            }\n            points = polygon;\n          } else {\n            throw new Parse.Error(\n              Parse.Error.INVALID_JSON,\n              \"bad $geoWithin value; $polygon should be Polygon object or Array of Parse.GeoPoint's\"\n            );\n          }\n          points = points.map(point => {\n            if (point instanceof Array && point.length === 2) {\n              Parse.GeoPoint._validate(point[1], point[0]);\n              return point;\n            }\n            if (!GeoPointCoder.isValidJSON(point)) {\n              throw new Parse.Error(Parse.Error.INVALID_JSON, 'bad $geoWithin value');\n            } else {\n              Parse.GeoPoint._validate(point.latitude, point.longitude);\n            }\n            return [point.longitude, point.latitude];\n          });\n          answer[key] = {\n            $polygon: points,\n          };\n        } else if (centerSphere !== undefined) {\n          if (!(centerSphere instanceof Array) || centerSphere.length < 2) {\n            throw new Parse.Error(\n              Parse.Error.INVALID_JSON,\n              'bad $geoWithin value; $centerSphere should be an array of Parse.GeoPoint and distance'\n            );\n          }\n          // Get point, convert to geo point if necessary and validate\n          let point = centerSphere[0];\n          if (point instanceof Array && point.length === 2) {\n            point = new Parse.GeoPoint(point[1], point[0]);\n          } else if (!GeoPointCoder.isValidJSON(point)) {\n            throw new Parse.Error(\n              Parse.Error.INVALID_JSON,\n              'bad $geoWithin value; $centerSphere geo point invalid'\n            );\n          }\n          Parse.GeoPoint._validate(point.latitude, point.longitude);\n          // Get distance and validate\n          const distance = centerSphere[1];\n          if (isNaN(distance) || distance < 0) {\n            throw new Parse.Error(\n              Parse.Error.INVALID_JSON,\n              'bad $geoWithin value; $centerSphere distance invalid'\n            );\n          }\n          answer[key] = {\n            $centerSphere: [[point.longitude, point.latitude], distance],\n          };\n        }\n        break;\n      }\n      case '$geoIntersects': {\n        const point = constraint[key]['$point'];\n        if (!GeoPointCoder.isValidJSON(point)) {\n          throw new Parse.Error(\n            Parse.Error.INVALID_JSON,\n            'bad $geoIntersect value; $point should be GeoPoint'\n          );\n        } else {\n          Parse.GeoPoint._validate(point.latitude, point.longitude);\n        }\n        answer[key] = {\n          $geometry: {\n            type: 'Point',\n            coordinates: [point.longitude, point.latitude],\n          },\n        };\n        break;\n      }\n      default:\n        if (key.match(/^\\$+/)) {\n          throw new Parse.Error(Parse.Error.INVALID_JSON, 'bad constraint: ' + key);\n        }\n        return CannotTransform;\n    }\n  }\n  return answer;\n}\n\n// Transforms an update operator from REST format to mongo format.\n// To be transformed, the input should have an __op field.\n// If flatten is true, this will flatten operators to their static\n// data format. For example, an increment of 2 would simply become a\n// 2.\n// The output for a non-flattened operator is a hash with __op being\n// the mongo op, and arg being the argument.\n// The output for a flattened operator is just a value.\n// Returns undefined if this should be a no-op.\n\nfunction transformUpdateOperator({ __op, amount, objects }, flatten) {\n  switch (__op) {\n    case 'Delete':\n      if (flatten) {\n        return undefined;\n      } else {\n        return { __op: '$unset', arg: '' };\n      }\n\n    case 'Increment':\n      if (typeof amount !== 'number') {\n        throw new Parse.Error(Parse.Error.INVALID_JSON, 'incrementing must provide a number');\n      }\n      if (flatten) {\n        return amount;\n      } else {\n        return { __op: '$inc', arg: amount };\n      }\n\n    case 'Add':\n    case 'AddUnique':\n      if (!(objects instanceof Array)) {\n        throw new Parse.Error(Parse.Error.INVALID_JSON, 'objects to add must be an array');\n      }\n      var toAdd = objects.map(transformInteriorAtom);\n      if (flatten) {\n        return toAdd;\n      } else {\n        var mongoOp = {\n          Add: '$push',\n          AddUnique: '$addToSet',\n        }[__op];\n        return { __op: mongoOp, arg: { $each: toAdd } };\n      }\n\n    case 'Remove':\n      if (!(objects instanceof Array)) {\n        throw new Parse.Error(Parse.Error.INVALID_JSON, 'objects to remove must be an array');\n      }\n      var toRemove = objects.map(transformInteriorAtom);\n      if (flatten) {\n        return [];\n      } else {\n        return { __op: '$pullAll', arg: toRemove };\n      }\n\n    default:\n      throw new Parse.Error(\n        Parse.Error.COMMAND_UNAVAILABLE,\n        `The ${__op} operator is not supported yet.`\n      );\n  }\n}\nfunction mapValues(object, iterator) {\n  const result = {};\n  Object.keys(object).forEach(key => {\n    result[key] = iterator(object[key]);\n  });\n  return result;\n}\n\nconst nestedMongoObjectToNestedParseObject = mongoObject => {\n  switch (typeof mongoObject) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'undefined':\n      return mongoObject;\n    case 'symbol':\n    case 'function':\n      throw 'bad value in nestedMongoObjectToNestedParseObject';\n    case 'object':\n      if (mongoObject === null) {\n        return null;\n      }\n      if (mongoObject instanceof Array) {\n        return mongoObject.map(nestedMongoObjectToNestedParseObject);\n      }\n\n      if (mongoObject instanceof Date) {\n        return Parse._encode(mongoObject);\n      }\n\n      if (mongoObject instanceof mongodb.Long) {\n        return mongoObject.toNumber();\n      }\n\n      if (mongoObject instanceof mongodb.Double) {\n        return mongoObject.value;\n      }\n\n      if (BytesCoder.isValidDatabaseObject(mongoObject)) {\n        return BytesCoder.databaseToJSON(mongoObject);\n      }\n\n      if (\n        Object.prototype.hasOwnProperty.call(mongoObject, '__type') &&\n        mongoObject.__type == 'Date' &&\n        mongoObject.iso instanceof Date\n      ) {\n        mongoObject.iso = mongoObject.iso.toJSON();\n        return mongoObject;\n      }\n\n      return mapValues(mongoObject, nestedMongoObjectToNestedParseObject);\n    default:\n      throw 'unknown js type';\n  }\n};\n\nconst transformPointerString = (schema, field, pointerString) => {\n  const objData = pointerString.split('$');\n  if (objData[0] !== schema.fields[field].targetClass) {\n    throw 'pointer to incorrect className';\n  }\n  return {\n    __type: 'Pointer',\n    className: objData[0],\n    objectId: objData[1],\n  };\n};\n\n// Converts from a mongo-format object to a REST-format object.\n// Does not strip out anything based on a lack of authentication.\nconst mongoObjectToParseObject = (className, mongoObject, schema) => {\n  switch (typeof mongoObject) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'undefined':\n      return mongoObject;\n    case 'symbol':\n    case 'function':\n      throw 'bad value in mongoObjectToParseObject';\n    case 'object': {\n      if (mongoObject === null) {\n        return null;\n      }\n      if (mongoObject instanceof Array) {\n        return mongoObject.map(nestedMongoObjectToNestedParseObject);\n      }\n\n      if (mongoObject instanceof Date) {\n        return Parse._encode(mongoObject);\n      }\n\n      if (mongoObject instanceof mongodb.Long) {\n        return mongoObject.toNumber();\n      }\n\n      if (mongoObject instanceof mongodb.Double) {\n        return mongoObject.value;\n      }\n\n      if (BytesCoder.isValidDatabaseObject(mongoObject)) {\n        return BytesCoder.databaseToJSON(mongoObject);\n      }\n\n      const restObject = {};\n      if (mongoObject._rperm || mongoObject._wperm) {\n        restObject._rperm = mongoObject._rperm || [];\n        restObject._wperm = mongoObject._wperm || [];\n        delete mongoObject._rperm;\n        delete mongoObject._wperm;\n      }\n\n      for (var key in mongoObject) {\n        switch (key) {\n          case '_id':\n            restObject['objectId'] = '' + mongoObject[key];\n            break;\n          case '_hashed_password':\n            restObject._hashed_password = mongoObject[key];\n            break;\n          case '_acl':\n            break;\n          case '_email_verify_token':\n          case '_perishable_token':\n          case '_perishable_token_expires_at':\n          case '_password_changed_at':\n          case '_tombstone':\n          case '_email_verify_token_expires_at':\n          case '_account_lockout_expires_at':\n          case '_failed_login_count':\n          case '_password_history':\n            // Those keys will be deleted if needed in the DB Controller\n            restObject[key] = mongoObject[key];\n            break;\n          case '_session_token':\n            restObject['sessionToken'] = mongoObject[key];\n            break;\n          case 'updatedAt':\n          case '_updated_at':\n            restObject['updatedAt'] = Parse._encode(new Date(mongoObject[key])).iso;\n            break;\n          case 'createdAt':\n          case '_created_at':\n            restObject['createdAt'] = Parse._encode(new Date(mongoObject[key])).iso;\n            break;\n          case 'expiresAt':\n          case '_expiresAt':\n            restObject['expiresAt'] = Parse._encode(new Date(mongoObject[key]));\n            break;\n          case 'lastUsed':\n          case '_last_used':\n            restObject['lastUsed'] = Parse._encode(new Date(mongoObject[key])).iso;\n            break;\n          case 'timesUsed':\n          case 'times_used':\n            restObject['timesUsed'] = mongoObject[key];\n            break;\n          case 'authData':\n            if (className === '_User') {\n              log.warn(\n                'ignoring authData in _User as this key is reserved to be synthesized of `_auth_data_*` keys'\n              );\n            } else {\n              restObject['authData'] = mongoObject[key];\n            }\n            break;\n          default:\n            // Check other auth data keys\n            var authDataMatch = key.match(/^_auth_data_([a-zA-Z0-9_]+)$/);\n            if (authDataMatch && className === '_User') {\n              var provider = authDataMatch[1];\n              restObject['authData'] = restObject['authData'] || {};\n              restObject['authData'][provider] = mongoObject[key];\n              break;\n            }\n\n            if (key.indexOf('_p_') == 0) {\n              var newKey = key.substring(3);\n              if (!schema.fields[newKey]) {\n                log.info(\n                  'transform.js',\n                  'Found a pointer column not in the schema, dropping it.',\n                  className,\n                  newKey\n                );\n                break;\n              }\n              if (schema.fields[newKey].type !== 'Pointer') {\n                log.info(\n                  'transform.js',\n                  'Found a pointer in a non-pointer column, dropping it.',\n                  className,\n                  key\n                );\n                break;\n              }\n              if (mongoObject[key] === null) {\n                break;\n              }\n              restObject[newKey] = transformPointerString(schema, newKey, mongoObject[key]);\n              break;\n            } else if (key[0] == '_' && key != '__type') {\n              throw 'bad key in untransform: ' + key;\n            } else {\n              var value = mongoObject[key];\n              if (\n                schema.fields[key] &&\n                schema.fields[key].type === 'File' &&\n                FileCoder.isValidDatabaseObject(value)\n              ) {\n                restObject[key] = FileCoder.databaseToJSON(value);\n                break;\n              }\n              if (\n                schema.fields[key] &&\n                schema.fields[key].type === 'GeoPoint' &&\n                GeoPointCoder.isValidDatabaseObject(value)\n              ) {\n                restObject[key] = GeoPointCoder.databaseToJSON(value);\n                break;\n              }\n              if (\n                schema.fields[key] &&\n                schema.fields[key].type === 'Polygon' &&\n                PolygonCoder.isValidDatabaseObject(value)\n              ) {\n                restObject[key] = PolygonCoder.databaseToJSON(value);\n                break;\n              }\n              if (\n                schema.fields[key] &&\n                schema.fields[key].type === 'Bytes' &&\n                BytesCoder.isValidDatabaseObject(value)\n              ) {\n                restObject[key] = BytesCoder.databaseToJSON(value);\n                break;\n              }\n            }\n            restObject[key] = nestedMongoObjectToNestedParseObject(mongoObject[key]);\n        }\n      }\n\n      const relationFieldNames = Object.keys(schema.fields).filter(\n        fieldName => schema.fields[fieldName].type === 'Relation'\n      );\n      const relationFields = {};\n      relationFieldNames.forEach(relationFieldName => {\n        relationFields[relationFieldName] = {\n          __type: 'Relation',\n          className: schema.fields[relationFieldName].targetClass,\n        };\n      });\n\n      return { ...restObject, ...relationFields };\n    }\n    default:\n      throw 'unknown js type';\n  }\n};\n\nvar DateCoder = {\n  JSONToDatabase(json) {\n    return new Date(json.iso);\n  },\n\n  isValidJSON(value) {\n    return typeof value === 'object' && value !== null && value.__type === 'Date';\n  },\n};\n\nvar BytesCoder = {\n  base64Pattern: new RegExp('^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'),\n  isBase64Value(object) {\n    if (typeof object !== 'string') {\n      return false;\n    }\n    return this.base64Pattern.test(object);\n  },\n\n  databaseToJSON(object) {\n    let value;\n    if (this.isBase64Value(object)) {\n      value = object;\n    } else {\n      value = object.buffer.toString('base64');\n    }\n    return {\n      __type: 'Bytes',\n      base64: value,\n    };\n  },\n\n  isValidDatabaseObject(object) {\n    return object instanceof mongodb.Binary || this.isBase64Value(object);\n  },\n\n  JSONToDatabase(json) {\n    return new mongodb.Binary(Buffer.from(json.base64, 'base64'));\n  },\n\n  isValidJSON(value) {\n    return typeof value === 'object' && value !== null && value.__type === 'Bytes';\n  },\n};\n\nvar GeoPointCoder = {\n  databaseToJSON(object) {\n    return {\n      __type: 'GeoPoint',\n      latitude: object[1],\n      longitude: object[0],\n    };\n  },\n\n  isValidDatabaseObject(object) {\n    return object instanceof Array && object.length == 2;\n  },\n\n  JSONToDatabase(json) {\n    return [json.longitude, json.latitude];\n  },\n\n  isValidJSON(value) {\n    return typeof value === 'object' && value !== null && value.__type === 'GeoPoint';\n  },\n};\n\nvar PolygonCoder = {\n  databaseToJSON(object) {\n    // Convert lng/lat -> lat/lng\n    const coords = object.coordinates[0].map(coord => {\n      return [coord[1], coord[0]];\n    });\n    return {\n      __type: 'Polygon',\n      coordinates: coords,\n    };\n  },\n\n  isValidDatabaseObject(object) {\n    const coords = object.coordinates[0];\n    if (object.type !== 'Polygon' || !(coords instanceof Array)) {\n      return false;\n    }\n    for (let i = 0; i < coords.length; i++) {\n      const point = coords[i];\n      if (!GeoPointCoder.isValidDatabaseObject(point)) {\n        return false;\n      }\n      Parse.GeoPoint._validate(parseFloat(point[1]), parseFloat(point[0]));\n    }\n    return true;\n  },\n\n  JSONToDatabase(json) {\n    let coords = json.coordinates;\n    // Add first point to the end to close polygon\n    if (\n      coords[0][0] !== coords[coords.length - 1][0] ||\n      coords[0][1] !== coords[coords.length - 1][1]\n    ) {\n      coords.push(coords[0]);\n    }\n    const unique = coords.filter((item, index, ar) => {\n      let foundIndex = -1;\n      for (let i = 0; i < ar.length; i += 1) {\n        const pt = ar[i];\n        if (pt[0] === item[0] && pt[1] === item[1]) {\n          foundIndex = i;\n          break;\n        }\n      }\n      return foundIndex === index;\n    });\n    if (unique.length < 3) {\n      throw new Parse.Error(\n        Parse.Error.INTERNAL_SERVER_ERROR,\n        'GeoJSON: Loop must have at least 3 different vertices'\n      );\n    }\n    // Convert lat/long -> long/lat\n    coords = coords.map(coord => {\n      return [coord[1], coord[0]];\n    });\n    return { type: 'Polygon', coordinates: [coords] };\n  },\n\n  isValidJSON(value) {\n    return typeof value === 'object' && value !== null && value.__type === 'Polygon';\n  },\n};\n\nvar FileCoder = {\n  databaseToJSON(object) {\n    return {\n      __type: 'File',\n      name: object,\n    };\n  },\n\n  isValidDatabaseObject(object) {\n    return typeof object === 'string';\n  },\n\n  JSONToDatabase(json) {\n    return json.name;\n  },\n\n  isValidJSON(value) {\n    return typeof value === 'object' && value !== null && value.__type === 'File';\n  },\n};\n\nmodule.exports = {\n  transformKey,\n  parseObjectToMongoObjectForCreate,\n  transformUpdate,\n  transformWhere,\n  mongoObjectToParseObject,\n  relativeTimeToDate,\n  transformConstraint,\n  transformPointerString,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"66470883f06e181fb49b9520f963445c79d89233"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2guvsetmr5=function(){return actualCoverage;};}return actualCoverage;}cov_2guvsetmr5();var _logger=(cov_2guvsetmr5().s[0]++,_interopRequireDefault(require("../../../logger")));var _lodash=(cov_2guvsetmr5().s[1]++,_interopRequireDefault(require("lodash")));function _interopRequireDefault(obj){cov_2guvsetmr5().f[0]++;cov_2guvsetmr5().s[2]++;return(cov_2guvsetmr5().b[1][0]++,obj)&&(cov_2guvsetmr5().b[1][1]++,obj.__esModule)?(cov_2guvsetmr5().b[0][0]++,obj):(cov_2guvsetmr5().b[0][1]++,{default:obj});}function ownKeys(object,enumerableOnly){cov_2guvsetmr5().f[1]++;var keys=(cov_2guvsetmr5().s[3]++,Object.keys(object));cov_2guvsetmr5().s[4]++;if(Object.getOwnPropertySymbols){cov_2guvsetmr5().b[2][0]++;var symbols=(cov_2guvsetmr5().s[5]++,Object.getOwnPropertySymbols(object));cov_2guvsetmr5().s[6]++;if(enumerableOnly){cov_2guvsetmr5().b[3][0]++;cov_2guvsetmr5().s[7]++;symbols=symbols.filter(function(sym){cov_2guvsetmr5().f[2]++;cov_2guvsetmr5().s[8]++;return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}else{cov_2guvsetmr5().b[3][1]++;}cov_2guvsetmr5().s[9]++;keys.push.apply(keys,symbols);}else{cov_2guvsetmr5().b[2][1]++;}cov_2guvsetmr5().s[10]++;return keys;}function _objectSpread(target){cov_2guvsetmr5().f[3]++;cov_2guvsetmr5().s[11]++;for(var i=(cov_2guvsetmr5().s[12]++,1);i<arguments.length;i++){var source=(cov_2guvsetmr5().s[13]++,arguments[i]!=null?(cov_2guvsetmr5().b[4][0]++,arguments[i]):(cov_2guvsetmr5().b[4][1]++,{}));cov_2guvsetmr5().s[14]++;if(i%2){cov_2guvsetmr5().b[5][0]++;cov_2guvsetmr5().s[15]++;ownKeys(Object(source),true).forEach(function(key){cov_2guvsetmr5().f[4]++;cov_2guvsetmr5().s[16]++;_defineProperty(target,key,source[key]);});}else{cov_2guvsetmr5().b[5][1]++;cov_2guvsetmr5().s[17]++;if(Object.getOwnPropertyDescriptors){cov_2guvsetmr5().b[6][0]++;cov_2guvsetmr5().s[18]++;Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{cov_2guvsetmr5().b[6][1]++;cov_2guvsetmr5().s[19]++;ownKeys(Object(source)).forEach(function(key){cov_2guvsetmr5().f[5]++;cov_2guvsetmr5().s[20]++;Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}}cov_2guvsetmr5().s[21]++;return target;}function _defineProperty(obj,key,value){cov_2guvsetmr5().f[6]++;cov_2guvsetmr5().s[22]++;if(key in obj){cov_2guvsetmr5().b[7][0]++;cov_2guvsetmr5().s[23]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_2guvsetmr5().b[7][1]++;cov_2guvsetmr5().s[24]++;obj[key]=value;}cov_2guvsetmr5().s[25]++;return obj;}var mongodb=(cov_2guvsetmr5().s[26]++,require('mongodb'));var Parse=(cov_2guvsetmr5().s[27]++,require('parse/node').Parse);cov_2guvsetmr5().s[28]++;const transformKey=(className,fieldName,schema)=>{cov_2guvsetmr5().f[7]++;cov_2guvsetmr5().s[29]++;// Check if the schema is known since it's a built-in field.
switch(fieldName){case'objectId':cov_2guvsetmr5().b[8][0]++;cov_2guvsetmr5().s[30]++;return'_id';case'createdAt':cov_2guvsetmr5().b[8][1]++;cov_2guvsetmr5().s[31]++;return'_created_at';case'updatedAt':cov_2guvsetmr5().b[8][2]++;cov_2guvsetmr5().s[32]++;return'_updated_at';case'sessionToken':cov_2guvsetmr5().b[8][3]++;cov_2guvsetmr5().s[33]++;return'_session_token';case'lastUsed':cov_2guvsetmr5().b[8][4]++;cov_2guvsetmr5().s[34]++;return'_last_used';case'timesUsed':cov_2guvsetmr5().b[8][5]++;cov_2guvsetmr5().s[35]++;return'times_used';}cov_2guvsetmr5().s[36]++;if((cov_2guvsetmr5().b[10][0]++,schema.fields[fieldName])&&(cov_2guvsetmr5().b[10][1]++,schema.fields[fieldName].__type=='Pointer')){cov_2guvsetmr5().b[9][0]++;cov_2guvsetmr5().s[37]++;fieldName='_p_'+fieldName;}else{cov_2guvsetmr5().b[9][1]++;cov_2guvsetmr5().s[38]++;if((cov_2guvsetmr5().b[12][0]++,schema.fields[fieldName])&&(cov_2guvsetmr5().b[12][1]++,schema.fields[fieldName].type=='Pointer')){cov_2guvsetmr5().b[11][0]++;cov_2guvsetmr5().s[39]++;fieldName='_p_'+fieldName;}else{cov_2guvsetmr5().b[11][1]++;}}cov_2guvsetmr5().s[40]++;return fieldName;};cov_2guvsetmr5().s[41]++;const transformKeyValueForUpdate=(className,restKey,restValue,parseFormatSchema)=>{cov_2guvsetmr5().f[8]++;// Check if the schema is known since it's a built-in field.
var key=(cov_2guvsetmr5().s[42]++,restKey);var timeField=(cov_2guvsetmr5().s[43]++,false);cov_2guvsetmr5().s[44]++;switch(key){case'objectId':cov_2guvsetmr5().b[13][0]++;case'_id':cov_2guvsetmr5().b[13][1]++;cov_2guvsetmr5().s[45]++;if(['_GlobalConfig','_GraphQLConfig'].includes(className)){cov_2guvsetmr5().b[14][0]++;cov_2guvsetmr5().s[46]++;return{key:key,value:parseInt(restValue)};}else{cov_2guvsetmr5().b[14][1]++;}cov_2guvsetmr5().s[47]++;key='_id';cov_2guvsetmr5().s[48]++;break;case'createdAt':cov_2guvsetmr5().b[13][2]++;case'_created_at':cov_2guvsetmr5().b[13][3]++;cov_2guvsetmr5().s[49]++;key='_created_at';cov_2guvsetmr5().s[50]++;timeField=true;cov_2guvsetmr5().s[51]++;break;case'updatedAt':cov_2guvsetmr5().b[13][4]++;case'_updated_at':cov_2guvsetmr5().b[13][5]++;cov_2guvsetmr5().s[52]++;key='_updated_at';cov_2guvsetmr5().s[53]++;timeField=true;cov_2guvsetmr5().s[54]++;break;case'sessionToken':cov_2guvsetmr5().b[13][6]++;case'_session_token':cov_2guvsetmr5().b[13][7]++;cov_2guvsetmr5().s[55]++;key='_session_token';cov_2guvsetmr5().s[56]++;break;case'expiresAt':cov_2guvsetmr5().b[13][8]++;case'_expiresAt':cov_2guvsetmr5().b[13][9]++;cov_2guvsetmr5().s[57]++;key='expiresAt';cov_2guvsetmr5().s[58]++;timeField=true;cov_2guvsetmr5().s[59]++;break;case'_email_verify_token_expires_at':cov_2guvsetmr5().b[13][10]++;cov_2guvsetmr5().s[60]++;key='_email_verify_token_expires_at';cov_2guvsetmr5().s[61]++;timeField=true;cov_2guvsetmr5().s[62]++;break;case'_account_lockout_expires_at':cov_2guvsetmr5().b[13][11]++;cov_2guvsetmr5().s[63]++;key='_account_lockout_expires_at';cov_2guvsetmr5().s[64]++;timeField=true;cov_2guvsetmr5().s[65]++;break;case'_failed_login_count':cov_2guvsetmr5().b[13][12]++;cov_2guvsetmr5().s[66]++;key='_failed_login_count';cov_2guvsetmr5().s[67]++;break;case'_perishable_token_expires_at':cov_2guvsetmr5().b[13][13]++;cov_2guvsetmr5().s[68]++;key='_perishable_token_expires_at';cov_2guvsetmr5().s[69]++;timeField=true;cov_2guvsetmr5().s[70]++;break;case'_password_changed_at':cov_2guvsetmr5().b[13][14]++;cov_2guvsetmr5().s[71]++;key='_password_changed_at';cov_2guvsetmr5().s[72]++;timeField=true;cov_2guvsetmr5().s[73]++;break;case'_rperm':cov_2guvsetmr5().b[13][15]++;case'_wperm':cov_2guvsetmr5().b[13][16]++;cov_2guvsetmr5().s[74]++;return{key:key,value:restValue};case'lastUsed':cov_2guvsetmr5().b[13][17]++;case'_last_used':cov_2guvsetmr5().b[13][18]++;cov_2guvsetmr5().s[75]++;key='_last_used';cov_2guvsetmr5().s[76]++;timeField=true;cov_2guvsetmr5().s[77]++;break;case'timesUsed':cov_2guvsetmr5().b[13][19]++;case'times_used':cov_2guvsetmr5().b[13][20]++;cov_2guvsetmr5().s[78]++;key='times_used';cov_2guvsetmr5().s[79]++;timeField=true;cov_2guvsetmr5().s[80]++;break;}cov_2guvsetmr5().s[81]++;if((cov_2guvsetmr5().b[16][0]++,parseFormatSchema.fields[key])&&(cov_2guvsetmr5().b[16][1]++,parseFormatSchema.fields[key].type==='Pointer')||(cov_2guvsetmr5().b[16][2]++,!key.includes('.'))&&(cov_2guvsetmr5().b[16][3]++,!parseFormatSchema.fields[key])&&(cov_2guvsetmr5().b[16][4]++,restValue)&&(cov_2guvsetmr5().b[16][5]++,restValue.__type=='Pointer')// Do not use the _p_ prefix for pointers inside nested documents
){cov_2guvsetmr5().b[15][0]++;cov_2guvsetmr5().s[82]++;key='_p_'+key;}else{cov_2guvsetmr5().b[15][1]++;}// Handle atomic values
var value=(cov_2guvsetmr5().s[83]++,transformTopLevelAtom(restValue));cov_2guvsetmr5().s[84]++;if(value!==CannotTransform){cov_2guvsetmr5().b[17][0]++;cov_2guvsetmr5().s[85]++;if((cov_2guvsetmr5().b[19][0]++,timeField)&&(cov_2guvsetmr5().b[19][1]++,typeof value==='string')){cov_2guvsetmr5().b[18][0]++;cov_2guvsetmr5().s[86]++;value=new Date(value);}else{cov_2guvsetmr5().b[18][1]++;}cov_2guvsetmr5().s[87]++;if(restKey.indexOf('.')>0){cov_2guvsetmr5().b[20][0]++;cov_2guvsetmr5().s[88]++;return{key,value:restValue};}else{cov_2guvsetmr5().b[20][1]++;}cov_2guvsetmr5().s[89]++;return{key,value};}else{cov_2guvsetmr5().b[17][1]++;}// Handle arrays
cov_2guvsetmr5().s[90]++;if(restValue instanceof Array){cov_2guvsetmr5().b[21][0]++;cov_2guvsetmr5().s[91]++;value=restValue.map(transformInteriorValue);cov_2guvsetmr5().s[92]++;return{key,value};}else{cov_2guvsetmr5().b[21][1]++;}// Handle update operators
cov_2guvsetmr5().s[93]++;if((cov_2guvsetmr5().b[23][0]++,typeof restValue==='object')&&(cov_2guvsetmr5().b[23][1]++,'__op'in restValue)){cov_2guvsetmr5().b[22][0]++;cov_2guvsetmr5().s[94]++;return{key,value:transformUpdateOperator(restValue,false)};}else{cov_2guvsetmr5().b[22][1]++;}// Handle normal objects by recursing
cov_2guvsetmr5().s[95]++;value=mapValues(restValue,transformInteriorValue);cov_2guvsetmr5().s[96]++;return{key,value};};cov_2guvsetmr5().s[97]++;const isRegex=value=>{cov_2guvsetmr5().f[9]++;cov_2guvsetmr5().s[98]++;return(cov_2guvsetmr5().b[24][0]++,value)&&(cov_2guvsetmr5().b[24][1]++,value instanceof RegExp);};cov_2guvsetmr5().s[99]++;const isStartsWithRegex=value=>{cov_2guvsetmr5().f[10]++;cov_2guvsetmr5().s[100]++;if(!isRegex(value)){cov_2guvsetmr5().b[25][0]++;cov_2guvsetmr5().s[101]++;return false;}else{cov_2guvsetmr5().b[25][1]++;}const matches=(cov_2guvsetmr5().s[102]++,value.toString().match(/\/\^\\Q.*\\E\//));cov_2guvsetmr5().s[103]++;return!!matches;};cov_2guvsetmr5().s[104]++;const isAllValuesRegexOrNone=values=>{cov_2guvsetmr5().f[11]++;cov_2guvsetmr5().s[105]++;if((cov_2guvsetmr5().b[27][0]++,!values)||(cov_2guvsetmr5().b[27][1]++,!Array.isArray(values))||(cov_2guvsetmr5().b[27][2]++,values.length===0)){cov_2guvsetmr5().b[26][0]++;cov_2guvsetmr5().s[106]++;return true;}else{cov_2guvsetmr5().b[26][1]++;}const firstValuesIsRegex=(cov_2guvsetmr5().s[107]++,isStartsWithRegex(values[0]));cov_2guvsetmr5().s[108]++;if(values.length===1){cov_2guvsetmr5().b[28][0]++;cov_2guvsetmr5().s[109]++;return firstValuesIsRegex;}else{cov_2guvsetmr5().b[28][1]++;}cov_2guvsetmr5().s[110]++;for(let i=(cov_2guvsetmr5().s[111]++,1),length=(cov_2guvsetmr5().s[112]++,values.length);i<length;++i){cov_2guvsetmr5().s[113]++;if(firstValuesIsRegex!==isStartsWithRegex(values[i])){cov_2guvsetmr5().b[29][0]++;cov_2guvsetmr5().s[114]++;return false;}else{cov_2guvsetmr5().b[29][1]++;}}cov_2guvsetmr5().s[115]++;return true;};cov_2guvsetmr5().s[116]++;const isAnyValueRegex=values=>{cov_2guvsetmr5().f[12]++;cov_2guvsetmr5().s[117]++;return values.some(function(value){cov_2guvsetmr5().f[13]++;cov_2guvsetmr5().s[118]++;return isRegex(value);});};cov_2guvsetmr5().s[119]++;const transformInteriorValue=restValue=>{cov_2guvsetmr5().f[14]++;cov_2guvsetmr5().s[120]++;if((cov_2guvsetmr5().b[31][0]++,restValue!==null)&&(cov_2guvsetmr5().b[31][1]++,typeof restValue==='object')&&(cov_2guvsetmr5().b[31][2]++,Object.keys(restValue).some(key=>{cov_2guvsetmr5().f[15]++;cov_2guvsetmr5().s[121]++;return(cov_2guvsetmr5().b[32][0]++,key.includes('$'))||(cov_2guvsetmr5().b[32][1]++,key.includes('.'));}))){cov_2guvsetmr5().b[30][0]++;cov_2guvsetmr5().s[122]++;throw new Parse.Error(Parse.Error.INVALID_NESTED_KEY,"Nested keys should not contain the '$' or '.' characters");}else{cov_2guvsetmr5().b[30][1]++;}// Handle atomic values
var value=(cov_2guvsetmr5().s[123]++,transformInteriorAtom(restValue));cov_2guvsetmr5().s[124]++;if(value!==CannotTransform){cov_2guvsetmr5().b[33][0]++;cov_2guvsetmr5().s[125]++;return value;}else{cov_2guvsetmr5().b[33][1]++;}// Handle arrays
cov_2guvsetmr5().s[126]++;if(restValue instanceof Array){cov_2guvsetmr5().b[34][0]++;cov_2guvsetmr5().s[127]++;return restValue.map(transformInteriorValue);}else{cov_2guvsetmr5().b[34][1]++;}// Handle update operators
cov_2guvsetmr5().s[128]++;if((cov_2guvsetmr5().b[36][0]++,typeof restValue==='object')&&(cov_2guvsetmr5().b[36][1]++,'__op'in restValue)){cov_2guvsetmr5().b[35][0]++;cov_2guvsetmr5().s[129]++;return transformUpdateOperator(restValue,true);}else{cov_2guvsetmr5().b[35][1]++;}// Handle normal objects by recursing
cov_2guvsetmr5().s[130]++;return mapValues(restValue,transformInteriorValue);};cov_2guvsetmr5().s[131]++;const valueAsDate=value=>{cov_2guvsetmr5().f[16]++;cov_2guvsetmr5().s[132]++;if(typeof value==='string'){cov_2guvsetmr5().b[37][0]++;cov_2guvsetmr5().s[133]++;return new Date(value);}else{cov_2guvsetmr5().b[37][1]++;cov_2guvsetmr5().s[134]++;if(value instanceof Date){cov_2guvsetmr5().b[38][0]++;cov_2guvsetmr5().s[135]++;return value;}else{cov_2guvsetmr5().b[38][1]++;}}cov_2guvsetmr5().s[136]++;return false;};function transformQueryKeyValue(className,key,value,schema,count=(cov_2guvsetmr5().b[39][0]++,false)){cov_2guvsetmr5().f[17]++;cov_2guvsetmr5().s[137]++;switch(key){case'createdAt':cov_2guvsetmr5().b[40][0]++;cov_2guvsetmr5().s[138]++;if(valueAsDate(value)){cov_2guvsetmr5().b[41][0]++;cov_2guvsetmr5().s[139]++;return{key:'_created_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[41][1]++;}cov_2guvsetmr5().s[140]++;key='_created_at';cov_2guvsetmr5().s[141]++;break;case'updatedAt':cov_2guvsetmr5().b[40][1]++;cov_2guvsetmr5().s[142]++;if(valueAsDate(value)){cov_2guvsetmr5().b[42][0]++;cov_2guvsetmr5().s[143]++;return{key:'_updated_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[42][1]++;}cov_2guvsetmr5().s[144]++;key='_updated_at';cov_2guvsetmr5().s[145]++;break;case'expiresAt':cov_2guvsetmr5().b[40][2]++;cov_2guvsetmr5().s[146]++;if(valueAsDate(value)){cov_2guvsetmr5().b[43][0]++;cov_2guvsetmr5().s[147]++;return{key:'expiresAt',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[43][1]++;}cov_2guvsetmr5().s[148]++;break;case'_email_verify_token_expires_at':cov_2guvsetmr5().b[40][3]++;cov_2guvsetmr5().s[149]++;if(valueAsDate(value)){cov_2guvsetmr5().b[44][0]++;cov_2guvsetmr5().s[150]++;return{key:'_email_verify_token_expires_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[44][1]++;}cov_2guvsetmr5().s[151]++;break;case'objectId':cov_2guvsetmr5().b[40][4]++;{cov_2guvsetmr5().s[152]++;if(['_GlobalConfig','_GraphQLConfig'].includes(className)){cov_2guvsetmr5().b[45][0]++;cov_2guvsetmr5().s[153]++;value=parseInt(value);}else{cov_2guvsetmr5().b[45][1]++;}cov_2guvsetmr5().s[154]++;return{key:'_id',value};}case'_account_lockout_expires_at':cov_2guvsetmr5().b[40][5]++;cov_2guvsetmr5().s[155]++;if(valueAsDate(value)){cov_2guvsetmr5().b[46][0]++;cov_2guvsetmr5().s[156]++;return{key:'_account_lockout_expires_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[46][1]++;}cov_2guvsetmr5().s[157]++;break;case'_failed_login_count':cov_2guvsetmr5().b[40][6]++;cov_2guvsetmr5().s[158]++;return{key,value};case'sessionToken':cov_2guvsetmr5().b[40][7]++;cov_2guvsetmr5().s[159]++;return{key:'_session_token',value};case'_perishable_token_expires_at':cov_2guvsetmr5().b[40][8]++;cov_2guvsetmr5().s[160]++;if(valueAsDate(value)){cov_2guvsetmr5().b[47][0]++;cov_2guvsetmr5().s[161]++;return{key:'_perishable_token_expires_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[47][1]++;}cov_2guvsetmr5().s[162]++;break;case'_password_changed_at':cov_2guvsetmr5().b[40][9]++;cov_2guvsetmr5().s[163]++;if(valueAsDate(value)){cov_2guvsetmr5().b[48][0]++;cov_2guvsetmr5().s[164]++;return{key:'_password_changed_at',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[48][1]++;}cov_2guvsetmr5().s[165]++;break;case'_rperm':cov_2guvsetmr5().b[40][10]++;case'_wperm':cov_2guvsetmr5().b[40][11]++;case'_perishable_token':cov_2guvsetmr5().b[40][12]++;case'_email_verify_token':cov_2guvsetmr5().b[40][13]++;cov_2guvsetmr5().s[166]++;return{key,value};case'$or':cov_2guvsetmr5().b[40][14]++;case'$and':cov_2guvsetmr5().b[40][15]++;case'$nor':cov_2guvsetmr5().b[40][16]++;cov_2guvsetmr5().s[167]++;return{key:key,value:value.map(subQuery=>{cov_2guvsetmr5().f[18]++;cov_2guvsetmr5().s[168]++;return transformWhere(className,subQuery,schema,count);})};case'lastUsed':cov_2guvsetmr5().b[40][17]++;cov_2guvsetmr5().s[169]++;if(valueAsDate(value)){cov_2guvsetmr5().b[49][0]++;cov_2guvsetmr5().s[170]++;return{key:'_last_used',value:valueAsDate(value)};}else{cov_2guvsetmr5().b[49][1]++;}cov_2guvsetmr5().s[171]++;key='_last_used';cov_2guvsetmr5().s[172]++;break;case'timesUsed':cov_2guvsetmr5().b[40][18]++;cov_2guvsetmr5().s[173]++;return{key:'times_used',value:value};default:cov_2guvsetmr5().b[40][19]++;{// Other auth data
const authDataMatch=(cov_2guvsetmr5().s[174]++,key.match(/^authData\.([a-zA-Z0-9_]+)\.id$/));cov_2guvsetmr5().s[175]++;if(authDataMatch){cov_2guvsetmr5().b[50][0]++;const provider=(cov_2guvsetmr5().s[176]++,authDataMatch[1]);// Special-case auth data.
cov_2guvsetmr5().s[177]++;return{key:`_auth_data_${provider}.id`,value};}else{cov_2guvsetmr5().b[50][1]++;}}}const expectedTypeIsArray=(cov_2guvsetmr5().s[178]++,(cov_2guvsetmr5().b[51][0]++,schema)&&(cov_2guvsetmr5().b[51][1]++,schema.fields[key])&&(cov_2guvsetmr5().b[51][2]++,schema.fields[key].type==='Array'));const expectedTypeIsPointer=(cov_2guvsetmr5().s[179]++,(cov_2guvsetmr5().b[52][0]++,schema)&&(cov_2guvsetmr5().b[52][1]++,schema.fields[key])&&(cov_2guvsetmr5().b[52][2]++,schema.fields[key].type==='Pointer'));const field=(cov_2guvsetmr5().s[180]++,(cov_2guvsetmr5().b[53][0]++,schema)&&(cov_2guvsetmr5().b[53][1]++,schema.fields[key]));cov_2guvsetmr5().s[181]++;if((cov_2guvsetmr5().b[55][0]++,expectedTypeIsPointer)||(cov_2guvsetmr5().b[55][1]++,!schema)&&(cov_2guvsetmr5().b[55][2]++,!key.includes('.'))&&(cov_2guvsetmr5().b[55][3]++,value)&&(cov_2guvsetmr5().b[55][4]++,value.__type==='Pointer')){cov_2guvsetmr5().b[54][0]++;cov_2guvsetmr5().s[182]++;key='_p_'+key;}else{cov_2guvsetmr5().b[54][1]++;}// Handle query constraints
const transformedConstraint=(cov_2guvsetmr5().s[183]++,transformConstraint(value,field,count));cov_2guvsetmr5().s[184]++;if(transformedConstraint!==CannotTransform){cov_2guvsetmr5().b[56][0]++;cov_2guvsetmr5().s[185]++;if(transformedConstraint.$text){cov_2guvsetmr5().b[57][0]++;cov_2guvsetmr5().s[186]++;return{key:'$text',value:transformedConstraint.$text};}else{cov_2guvsetmr5().b[57][1]++;}cov_2guvsetmr5().s[187]++;if(transformedConstraint.$elemMatch){cov_2guvsetmr5().b[58][0]++;cov_2guvsetmr5().s[188]++;return{key:'$nor',value:[{[key]:transformedConstraint}]};}else{cov_2guvsetmr5().b[58][1]++;}cov_2guvsetmr5().s[189]++;return{key,value:transformedConstraint};}else{cov_2guvsetmr5().b[56][1]++;}cov_2guvsetmr5().s[190]++;if((cov_2guvsetmr5().b[60][0]++,expectedTypeIsArray)&&(cov_2guvsetmr5().b[60][1]++,!(value instanceof Array))){cov_2guvsetmr5().b[59][0]++;cov_2guvsetmr5().s[191]++;return{key,value:{$all:[transformInteriorAtom(value)]}};}else{cov_2guvsetmr5().b[59][1]++;}// Handle atomic values
const transformRes=(cov_2guvsetmr5().s[192]++,key.includes('.')?(cov_2guvsetmr5().b[61][0]++,transformInteriorAtom(value)):(cov_2guvsetmr5().b[61][1]++,transformTopLevelAtom(value)));cov_2guvsetmr5().s[193]++;if(transformRes!==CannotTransform){cov_2guvsetmr5().b[62][0]++;cov_2guvsetmr5().s[194]++;return{key,value:transformRes};}else{cov_2guvsetmr5().b[62][1]++;cov_2guvsetmr5().s[195]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`You cannot use ${value} as a query parameter.`);}}// Main exposed method to help run queries.
// restWhere is the "where" clause in REST API form.
// Returns the mongo form of the query.
function transformWhere(className,restWhere,schema,count=(cov_2guvsetmr5().b[63][0]++,false)){cov_2guvsetmr5().f[19]++;const mongoWhere=(cov_2guvsetmr5().s[196]++,{});cov_2guvsetmr5().s[197]++;for(const restKey in restWhere){const out=(cov_2guvsetmr5().s[198]++,transformQueryKeyValue(className,restKey,restWhere[restKey],schema,count));cov_2guvsetmr5().s[199]++;mongoWhere[out.key]=out.value;}cov_2guvsetmr5().s[200]++;return mongoWhere;}cov_2guvsetmr5().s[201]++;const parseObjectKeyValueToMongoObjectKeyValue=(restKey,restValue,schema)=>{cov_2guvsetmr5().f[20]++;// Check if the schema is known since it's a built-in field.
let transformedValue;let coercedToDate;cov_2guvsetmr5().s[202]++;switch(restKey){case'objectId':cov_2guvsetmr5().b[64][0]++;cov_2guvsetmr5().s[203]++;return{key:'_id',value:restValue};case'expiresAt':cov_2guvsetmr5().b[64][1]++;cov_2guvsetmr5().s[204]++;transformedValue=transformTopLevelAtom(restValue);cov_2guvsetmr5().s[205]++;coercedToDate=typeof transformedValue==='string'?(cov_2guvsetmr5().b[65][0]++,new Date(transformedValue)):(cov_2guvsetmr5().b[65][1]++,transformedValue);cov_2guvsetmr5().s[206]++;return{key:'expiresAt',value:coercedToDate};case'_email_verify_token_expires_at':cov_2guvsetmr5().b[64][2]++;cov_2guvsetmr5().s[207]++;transformedValue=transformTopLevelAtom(restValue);cov_2guvsetmr5().s[208]++;coercedToDate=typeof transformedValue==='string'?(cov_2guvsetmr5().b[66][0]++,new Date(transformedValue)):(cov_2guvsetmr5().b[66][1]++,transformedValue);cov_2guvsetmr5().s[209]++;return{key:'_email_verify_token_expires_at',value:coercedToDate};case'_account_lockout_expires_at':cov_2guvsetmr5().b[64][3]++;cov_2guvsetmr5().s[210]++;transformedValue=transformTopLevelAtom(restValue);cov_2guvsetmr5().s[211]++;coercedToDate=typeof transformedValue==='string'?(cov_2guvsetmr5().b[67][0]++,new Date(transformedValue)):(cov_2guvsetmr5().b[67][1]++,transformedValue);cov_2guvsetmr5().s[212]++;return{key:'_account_lockout_expires_at',value:coercedToDate};case'_perishable_token_expires_at':cov_2guvsetmr5().b[64][4]++;cov_2guvsetmr5().s[213]++;transformedValue=transformTopLevelAtom(restValue);cov_2guvsetmr5().s[214]++;coercedToDate=typeof transformedValue==='string'?(cov_2guvsetmr5().b[68][0]++,new Date(transformedValue)):(cov_2guvsetmr5().b[68][1]++,transformedValue);cov_2guvsetmr5().s[215]++;return{key:'_perishable_token_expires_at',value:coercedToDate};case'_password_changed_at':cov_2guvsetmr5().b[64][5]++;cov_2guvsetmr5().s[216]++;transformedValue=transformTopLevelAtom(restValue);cov_2guvsetmr5().s[217]++;coercedToDate=typeof transformedValue==='string'?(cov_2guvsetmr5().b[69][0]++,new Date(transformedValue)):(cov_2guvsetmr5().b[69][1]++,transformedValue);cov_2guvsetmr5().s[218]++;return{key:'_password_changed_at',value:coercedToDate};case'_failed_login_count':cov_2guvsetmr5().b[64][6]++;case'_rperm':cov_2guvsetmr5().b[64][7]++;case'_wperm':cov_2guvsetmr5().b[64][8]++;case'_email_verify_token':cov_2guvsetmr5().b[64][9]++;case'_hashed_password':cov_2guvsetmr5().b[64][10]++;case'_perishable_token':cov_2guvsetmr5().b[64][11]++;cov_2guvsetmr5().s[219]++;return{key:restKey,value:restValue};case'sessionToken':cov_2guvsetmr5().b[64][12]++;cov_2guvsetmr5().s[220]++;return{key:'_session_token',value:restValue};default:cov_2guvsetmr5().b[64][13]++;cov_2guvsetmr5().s[221]++;// Auth data should have been transformed already
if(restKey.match(/^authData\.([a-zA-Z0-9_]+)\.id$/)){cov_2guvsetmr5().b[70][0]++;cov_2guvsetmr5().s[222]++;throw new Parse.Error(Parse.Error.INVALID_KEY_NAME,'can only query on '+restKey);}else{cov_2guvsetmr5().b[70][1]++;}// Trust that the auth data has been transformed and save it directly
cov_2guvsetmr5().s[223]++;if(restKey.match(/^_auth_data_[a-zA-Z0-9_]+$/)){cov_2guvsetmr5().b[71][0]++;cov_2guvsetmr5().s[224]++;return{key:restKey,value:restValue};}else{cov_2guvsetmr5().b[71][1]++;}}//skip straight to transformTopLevelAtom for Bytes, they don't show up in the schema for some reason
cov_2guvsetmr5().s[225]++;if((cov_2guvsetmr5().b[73][0]++,restValue)&&(cov_2guvsetmr5().b[73][1]++,restValue.__type!=='Bytes')){cov_2guvsetmr5().b[72][0]++;cov_2guvsetmr5().s[226]++;//Note: We may not know the type of a field here, as the user could be saving (null) to a field
//That never existed before, meaning we can't infer the type.
if((cov_2guvsetmr5().b[75][0]++,schema.fields[restKey])&&(cov_2guvsetmr5().b[75][1]++,schema.fields[restKey].type=='Pointer')||(cov_2guvsetmr5().b[75][2]++,restValue.__type=='Pointer')){cov_2guvsetmr5().b[74][0]++;cov_2guvsetmr5().s[227]++;restKey='_p_'+restKey;}else{cov_2guvsetmr5().b[74][1]++;}}else{cov_2guvsetmr5().b[72][1]++;}// Handle atomic values
var value=(cov_2guvsetmr5().s[228]++,transformTopLevelAtom(restValue));cov_2guvsetmr5().s[229]++;if(value!==CannotTransform){cov_2guvsetmr5().b[76][0]++;cov_2guvsetmr5().s[230]++;return{key:restKey,value:value};}else{cov_2guvsetmr5().b[76][1]++;}// ACLs are handled before this method is called
// If an ACL key still exists here, something is wrong.
cov_2guvsetmr5().s[231]++;if(restKey==='ACL'){cov_2guvsetmr5().b[77][0]++;cov_2guvsetmr5().s[232]++;throw'There was a problem transforming an ACL.';}else{cov_2guvsetmr5().b[77][1]++;}// Handle arrays
cov_2guvsetmr5().s[233]++;if(restValue instanceof Array){cov_2guvsetmr5().b[78][0]++;cov_2guvsetmr5().s[234]++;value=restValue.map(transformInteriorValue);cov_2guvsetmr5().s[235]++;return{key:restKey,value:value};}else{cov_2guvsetmr5().b[78][1]++;}// Handle normal objects by recursing
cov_2guvsetmr5().s[236]++;if(Object.keys(restValue).some(key=>{cov_2guvsetmr5().f[21]++;cov_2guvsetmr5().s[237]++;return(cov_2guvsetmr5().b[80][0]++,key.includes('$'))||(cov_2guvsetmr5().b[80][1]++,key.includes('.'));})){cov_2guvsetmr5().b[79][0]++;cov_2guvsetmr5().s[238]++;throw new Parse.Error(Parse.Error.INVALID_NESTED_KEY,"Nested keys should not contain the '$' or '.' characters");}else{cov_2guvsetmr5().b[79][1]++;}cov_2guvsetmr5().s[239]++;value=mapValues(restValue,transformInteriorValue);cov_2guvsetmr5().s[240]++;return{key:restKey,value};};cov_2guvsetmr5().s[241]++;const parseObjectToMongoObjectForCreate=(className,restCreate,schema)=>{cov_2guvsetmr5().f[22]++;cov_2guvsetmr5().s[242]++;restCreate=addLegacyACL(restCreate);const mongoCreate=(cov_2guvsetmr5().s[243]++,{});cov_2guvsetmr5().s[244]++;for(const restKey in restCreate){cov_2guvsetmr5().s[245]++;if((cov_2guvsetmr5().b[82][0]++,restCreate[restKey])&&(cov_2guvsetmr5().b[82][1]++,restCreate[restKey].__type==='Relation')){cov_2guvsetmr5().b[81][0]++;cov_2guvsetmr5().s[246]++;continue;}else{cov_2guvsetmr5().b[81][1]++;}const{key,value}=(cov_2guvsetmr5().s[247]++,parseObjectKeyValueToMongoObjectKeyValue(restKey,restCreate[restKey],schema));cov_2guvsetmr5().s[248]++;if(value!==undefined){cov_2guvsetmr5().b[83][0]++;cov_2guvsetmr5().s[249]++;mongoCreate[key]=value;}else{cov_2guvsetmr5().b[83][1]++;}}// Use the legacy mongo format for createdAt and updatedAt
cov_2guvsetmr5().s[250]++;if(mongoCreate.createdAt){cov_2guvsetmr5().b[84][0]++;cov_2guvsetmr5().s[251]++;mongoCreate._created_at=new Date((cov_2guvsetmr5().b[85][0]++,mongoCreate.createdAt.iso)||(cov_2guvsetmr5().b[85][1]++,mongoCreate.createdAt));cov_2guvsetmr5().s[252]++;delete mongoCreate.createdAt;}else{cov_2guvsetmr5().b[84][1]++;}cov_2guvsetmr5().s[253]++;if(mongoCreate.updatedAt){cov_2guvsetmr5().b[86][0]++;cov_2guvsetmr5().s[254]++;mongoCreate._updated_at=new Date((cov_2guvsetmr5().b[87][0]++,mongoCreate.updatedAt.iso)||(cov_2guvsetmr5().b[87][1]++,mongoCreate.updatedAt));cov_2guvsetmr5().s[255]++;delete mongoCreate.updatedAt;}else{cov_2guvsetmr5().b[86][1]++;}cov_2guvsetmr5().s[256]++;return mongoCreate;};// Main exposed method to help update old objects.
cov_2guvsetmr5().s[257]++;const transformUpdate=(className,restUpdate,parseFormatSchema)=>{cov_2guvsetmr5().f[23]++;const mongoUpdate=(cov_2guvsetmr5().s[258]++,{});const acl=(cov_2guvsetmr5().s[259]++,addLegacyACL(restUpdate));cov_2guvsetmr5().s[260]++;if((cov_2guvsetmr5().b[89][0]++,acl._rperm)||(cov_2guvsetmr5().b[89][1]++,acl._wperm)||(cov_2guvsetmr5().b[89][2]++,acl._acl)){cov_2guvsetmr5().b[88][0]++;cov_2guvsetmr5().s[261]++;mongoUpdate.$set={};cov_2guvsetmr5().s[262]++;if(acl._rperm){cov_2guvsetmr5().b[90][0]++;cov_2guvsetmr5().s[263]++;mongoUpdate.$set._rperm=acl._rperm;}else{cov_2guvsetmr5().b[90][1]++;}cov_2guvsetmr5().s[264]++;if(acl._wperm){cov_2guvsetmr5().b[91][0]++;cov_2guvsetmr5().s[265]++;mongoUpdate.$set._wperm=acl._wperm;}else{cov_2guvsetmr5().b[91][1]++;}cov_2guvsetmr5().s[266]++;if(acl._acl){cov_2guvsetmr5().b[92][0]++;cov_2guvsetmr5().s[267]++;mongoUpdate.$set._acl=acl._acl;}else{cov_2guvsetmr5().b[92][1]++;}}else{cov_2guvsetmr5().b[88][1]++;}cov_2guvsetmr5().s[268]++;for(var restKey in restUpdate){cov_2guvsetmr5().s[269]++;if((cov_2guvsetmr5().b[94][0]++,restUpdate[restKey])&&(cov_2guvsetmr5().b[94][1]++,restUpdate[restKey].__type==='Relation')){cov_2guvsetmr5().b[93][0]++;cov_2guvsetmr5().s[270]++;continue;}else{cov_2guvsetmr5().b[93][1]++;}var out=(cov_2guvsetmr5().s[271]++,transformKeyValueForUpdate(className,restKey,restUpdate[restKey],parseFormatSchema));// If the output value is an object with any $ keys, it's an
// operator that needs to be lifted onto the top level update
// object.
cov_2guvsetmr5().s[272]++;if((cov_2guvsetmr5().b[96][0]++,typeof out.value==='object')&&(cov_2guvsetmr5().b[96][1]++,out.value!==null)&&(cov_2guvsetmr5().b[96][2]++,out.value.__op)){cov_2guvsetmr5().b[95][0]++;cov_2guvsetmr5().s[273]++;mongoUpdate[out.value.__op]=(cov_2guvsetmr5().b[97][0]++,mongoUpdate[out.value.__op])||(cov_2guvsetmr5().b[97][1]++,{});cov_2guvsetmr5().s[274]++;mongoUpdate[out.value.__op][out.key]=out.value.arg;}else{cov_2guvsetmr5().b[95][1]++;cov_2guvsetmr5().s[275]++;mongoUpdate['$set']=(cov_2guvsetmr5().b[98][0]++,mongoUpdate['$set'])||(cov_2guvsetmr5().b[98][1]++,{});cov_2guvsetmr5().s[276]++;mongoUpdate['$set'][out.key]=out.value;}}cov_2guvsetmr5().s[277]++;return mongoUpdate;};// Add the legacy _acl format.
cov_2guvsetmr5().s[278]++;const addLegacyACL=restObject=>{cov_2guvsetmr5().f[24]++;const restObjectCopy=(cov_2guvsetmr5().s[279]++,_objectSpread({},restObject));const _acl=(cov_2guvsetmr5().s[280]++,{});cov_2guvsetmr5().s[281]++;if(restObject._wperm){cov_2guvsetmr5().b[99][0]++;cov_2guvsetmr5().s[282]++;restObject._wperm.forEach(entry=>{cov_2guvsetmr5().f[25]++;cov_2guvsetmr5().s[283]++;_acl[entry]={w:true};});cov_2guvsetmr5().s[284]++;restObjectCopy._acl=_acl;}else{cov_2guvsetmr5().b[99][1]++;}cov_2guvsetmr5().s[285]++;if(restObject._rperm){cov_2guvsetmr5().b[100][0]++;cov_2guvsetmr5().s[286]++;restObject._rperm.forEach(entry=>{cov_2guvsetmr5().f[26]++;cov_2guvsetmr5().s[287]++;if(!(entry in _acl)){cov_2guvsetmr5().b[101][0]++;cov_2guvsetmr5().s[288]++;_acl[entry]={r:true};}else{cov_2guvsetmr5().b[101][1]++;cov_2guvsetmr5().s[289]++;_acl[entry].r=true;}});cov_2guvsetmr5().s[290]++;restObjectCopy._acl=_acl;}else{cov_2guvsetmr5().b[100][1]++;}cov_2guvsetmr5().s[291]++;return restObjectCopy;};// A sentinel value that helper transformations return when they
// cannot perform a transformation
function CannotTransform(){cov_2guvsetmr5().f[27]++;}cov_2guvsetmr5().s[292]++;const transformInteriorAtom=atom=>{cov_2guvsetmr5().f[28]++;cov_2guvsetmr5().s[293]++;// TODO: check validity harder for the __type-defined types
if((cov_2guvsetmr5().b[103][0]++,typeof atom==='object')&&(cov_2guvsetmr5().b[103][1]++,atom)&&(cov_2guvsetmr5().b[103][2]++,!(atom instanceof Date))&&(cov_2guvsetmr5().b[103][3]++,atom.__type==='Pointer')){cov_2guvsetmr5().b[102][0]++;cov_2guvsetmr5().s[294]++;return{__type:'Pointer',className:atom.className,objectId:atom.objectId};}else{cov_2guvsetmr5().b[102][1]++;cov_2guvsetmr5().s[295]++;if((cov_2guvsetmr5().b[105][0]++,typeof atom==='function')||(cov_2guvsetmr5().b[105][1]++,typeof atom==='symbol')){cov_2guvsetmr5().b[104][0]++;cov_2guvsetmr5().s[296]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`cannot transform value: ${atom}`);}else{cov_2guvsetmr5().b[104][1]++;cov_2guvsetmr5().s[297]++;if(DateCoder.isValidJSON(atom)){cov_2guvsetmr5().b[106][0]++;cov_2guvsetmr5().s[298]++;return DateCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[106][1]++;cov_2guvsetmr5().s[299]++;if(BytesCoder.isValidJSON(atom)){cov_2guvsetmr5().b[107][0]++;cov_2guvsetmr5().s[300]++;return BytesCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[107][1]++;cov_2guvsetmr5().s[301]++;if((cov_2guvsetmr5().b[109][0]++,typeof atom==='object')&&(cov_2guvsetmr5().b[109][1]++,atom)&&(cov_2guvsetmr5().b[109][2]++,atom.$regex!==undefined)){cov_2guvsetmr5().b[108][0]++;cov_2guvsetmr5().s[302]++;return new RegExp(atom.$regex);}else{cov_2guvsetmr5().b[108][1]++;cov_2guvsetmr5().s[303]++;return atom;}}}}}};// Helper function to transform an atom from REST format to Mongo format.
// An atom is anything that can't contain other expressions. So it
// includes things where objects are used to represent other
// datatypes, like pointers and dates, but it does not include objects
// or arrays with generic stuff inside.
// Raises an error if this cannot possibly be valid REST format.
// Returns CannotTransform if it's just not an atom
function transformTopLevelAtom(atom,field){cov_2guvsetmr5().f[29]++;cov_2guvsetmr5().s[304]++;switch(typeof atom){case'number':cov_2guvsetmr5().b[110][0]++;case'boolean':cov_2guvsetmr5().b[110][1]++;case'undefined':cov_2guvsetmr5().b[110][2]++;cov_2guvsetmr5().s[305]++;return atom;case'string':cov_2guvsetmr5().b[110][3]++;cov_2guvsetmr5().s[306]++;if((cov_2guvsetmr5().b[112][0]++,field)&&(cov_2guvsetmr5().b[112][1]++,field.type==='Pointer')){cov_2guvsetmr5().b[111][0]++;cov_2guvsetmr5().s[307]++;return`${field.targetClass}$${atom}`;}else{cov_2guvsetmr5().b[111][1]++;}cov_2guvsetmr5().s[308]++;return atom;case'symbol':cov_2guvsetmr5().b[110][4]++;case'function':cov_2guvsetmr5().b[110][5]++;cov_2guvsetmr5().s[309]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`cannot transform value: ${atom}`);case'object':cov_2guvsetmr5().b[110][6]++;cov_2guvsetmr5().s[310]++;if(atom instanceof Date){cov_2guvsetmr5().b[113][0]++;cov_2guvsetmr5().s[311]++;// Technically dates are not rest format, but, it seems pretty
// clear what they should be transformed to, so let's just do it.
return atom;}else{cov_2guvsetmr5().b[113][1]++;}cov_2guvsetmr5().s[312]++;if(atom===null){cov_2guvsetmr5().b[114][0]++;cov_2guvsetmr5().s[313]++;return atom;}else{cov_2guvsetmr5().b[114][1]++;}// TODO: check validity harder for the __type-defined types
cov_2guvsetmr5().s[314]++;if(atom.__type=='Pointer'){cov_2guvsetmr5().b[115][0]++;cov_2guvsetmr5().s[315]++;return`${atom.className}$${atom.objectId}`;}else{cov_2guvsetmr5().b[115][1]++;}cov_2guvsetmr5().s[316]++;if(DateCoder.isValidJSON(atom)){cov_2guvsetmr5().b[116][0]++;cov_2guvsetmr5().s[317]++;return DateCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[116][1]++;}cov_2guvsetmr5().s[318]++;if(BytesCoder.isValidJSON(atom)){cov_2guvsetmr5().b[117][0]++;cov_2guvsetmr5().s[319]++;return BytesCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[117][1]++;}cov_2guvsetmr5().s[320]++;if(GeoPointCoder.isValidJSON(atom)){cov_2guvsetmr5().b[118][0]++;cov_2guvsetmr5().s[321]++;return GeoPointCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[118][1]++;}cov_2guvsetmr5().s[322]++;if(PolygonCoder.isValidJSON(atom)){cov_2guvsetmr5().b[119][0]++;cov_2guvsetmr5().s[323]++;return PolygonCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[119][1]++;}cov_2guvsetmr5().s[324]++;if(FileCoder.isValidJSON(atom)){cov_2guvsetmr5().b[120][0]++;cov_2guvsetmr5().s[325]++;return FileCoder.JSONToDatabase(atom);}else{cov_2guvsetmr5().b[120][1]++;}cov_2guvsetmr5().s[326]++;return CannotTransform;default:cov_2guvsetmr5().b[110][7]++;cov_2guvsetmr5().s[327]++;// I don't think typeof can ever let us get here
throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR,`really did not expect value: ${atom}`);}}function relativeTimeToDate(text,now=(cov_2guvsetmr5().b[121][0]++,new Date())){cov_2guvsetmr5().f[30]++;cov_2guvsetmr5().s[328]++;text=text.toLowerCase();let parts=(cov_2guvsetmr5().s[329]++,text.split(' '));// Filter out whitespace
cov_2guvsetmr5().s[330]++;parts=parts.filter(part=>{cov_2guvsetmr5().f[31]++;cov_2guvsetmr5().s[331]++;return part!=='';});const future=(cov_2guvsetmr5().s[332]++,parts[0]==='in');const past=(cov_2guvsetmr5().s[333]++,parts[parts.length-1]==='ago');cov_2guvsetmr5().s[334]++;if((cov_2guvsetmr5().b[123][0]++,!future)&&(cov_2guvsetmr5().b[123][1]++,!past)&&(cov_2guvsetmr5().b[123][2]++,text!=='now')){cov_2guvsetmr5().b[122][0]++;cov_2guvsetmr5().s[335]++;return{status:'error',info:"Time should either start with 'in' or end with 'ago'"};}else{cov_2guvsetmr5().b[122][1]++;}cov_2guvsetmr5().s[336]++;if((cov_2guvsetmr5().b[125][0]++,future)&&(cov_2guvsetmr5().b[125][1]++,past)){cov_2guvsetmr5().b[124][0]++;cov_2guvsetmr5().s[337]++;return{status:'error',info:"Time cannot have both 'in' and 'ago'"};}else{cov_2guvsetmr5().b[124][1]++;}// strip the 'ago' or 'in'
cov_2guvsetmr5().s[338]++;if(future){cov_2guvsetmr5().b[126][0]++;cov_2guvsetmr5().s[339]++;parts=parts.slice(1);}else{cov_2guvsetmr5().b[126][1]++;cov_2guvsetmr5().s[340]++;// past
parts=parts.slice(0,parts.length-1);}cov_2guvsetmr5().s[341]++;if((cov_2guvsetmr5().b[128][0]++,parts.length%2!==0)&&(cov_2guvsetmr5().b[128][1]++,text!=='now')){cov_2guvsetmr5().b[127][0]++;cov_2guvsetmr5().s[342]++;return{status:'error',info:'Invalid time string. Dangling unit or number.'};}else{cov_2guvsetmr5().b[127][1]++;}const pairs=(cov_2guvsetmr5().s[343]++,[]);cov_2guvsetmr5().s[344]++;while(parts.length){cov_2guvsetmr5().s[345]++;pairs.push([parts.shift(),parts.shift()]);}let seconds=(cov_2guvsetmr5().s[346]++,0);cov_2guvsetmr5().s[347]++;for(const[num,interval]of pairs){const val=(cov_2guvsetmr5().s[348]++,Number(num));cov_2guvsetmr5().s[349]++;if(!Number.isInteger(val)){cov_2guvsetmr5().b[129][0]++;cov_2guvsetmr5().s[350]++;return{status:'error',info:`'${num}' is not an integer.`};}else{cov_2guvsetmr5().b[129][1]++;}cov_2guvsetmr5().s[351]++;switch(interval){case'yr':cov_2guvsetmr5().b[130][0]++;case'yrs':cov_2guvsetmr5().b[130][1]++;case'year':cov_2guvsetmr5().b[130][2]++;case'years':cov_2guvsetmr5().b[130][3]++;cov_2guvsetmr5().s[352]++;seconds+=val*31536000;// 365 * 24 * 60 * 60
cov_2guvsetmr5().s[353]++;break;case'wk':cov_2guvsetmr5().b[130][4]++;case'wks':cov_2guvsetmr5().b[130][5]++;case'week':cov_2guvsetmr5().b[130][6]++;case'weeks':cov_2guvsetmr5().b[130][7]++;cov_2guvsetmr5().s[354]++;seconds+=val*604800;// 7 * 24 * 60 * 60
cov_2guvsetmr5().s[355]++;break;case'd':cov_2guvsetmr5().b[130][8]++;case'day':cov_2guvsetmr5().b[130][9]++;case'days':cov_2guvsetmr5().b[130][10]++;cov_2guvsetmr5().s[356]++;seconds+=val*86400;// 24 * 60 * 60
cov_2guvsetmr5().s[357]++;break;case'hr':cov_2guvsetmr5().b[130][11]++;case'hrs':cov_2guvsetmr5().b[130][12]++;case'hour':cov_2guvsetmr5().b[130][13]++;case'hours':cov_2guvsetmr5().b[130][14]++;cov_2guvsetmr5().s[358]++;seconds+=val*3600;// 60 * 60
cov_2guvsetmr5().s[359]++;break;case'min':cov_2guvsetmr5().b[130][15]++;case'mins':cov_2guvsetmr5().b[130][16]++;case'minute':cov_2guvsetmr5().b[130][17]++;case'minutes':cov_2guvsetmr5().b[130][18]++;cov_2guvsetmr5().s[360]++;seconds+=val*60;cov_2guvsetmr5().s[361]++;break;case'sec':cov_2guvsetmr5().b[130][19]++;case'secs':cov_2guvsetmr5().b[130][20]++;case'second':cov_2guvsetmr5().b[130][21]++;case'seconds':cov_2guvsetmr5().b[130][22]++;cov_2guvsetmr5().s[362]++;seconds+=val;cov_2guvsetmr5().s[363]++;break;default:cov_2guvsetmr5().b[130][23]++;cov_2guvsetmr5().s[364]++;return{status:'error',info:`Invalid interval: '${interval}'`};}}const milliseconds=(cov_2guvsetmr5().s[365]++,seconds*1000);cov_2guvsetmr5().s[366]++;if(future){cov_2guvsetmr5().b[131][0]++;cov_2guvsetmr5().s[367]++;return{status:'success',info:'future',result:new Date(now.valueOf()+milliseconds)};}else{cov_2guvsetmr5().b[131][1]++;cov_2guvsetmr5().s[368]++;if(past){cov_2guvsetmr5().b[132][0]++;cov_2guvsetmr5().s[369]++;return{status:'success',info:'past',result:new Date(now.valueOf()-milliseconds)};}else{cov_2guvsetmr5().b[132][1]++;cov_2guvsetmr5().s[370]++;return{status:'success',info:'present',result:new Date(now.valueOf())};}}}// Transforms a query constraint from REST API format to Mongo format.
// A constraint is something with fields like $lt.
// If it is not a valid constraint but it could be a valid something
// else, return CannotTransform.
// inArray is whether this is an array field.
function transformConstraint(constraint,field,count=(cov_2guvsetmr5().b[133][0]++,false)){cov_2guvsetmr5().f[32]++;const inArray=(cov_2guvsetmr5().s[371]++,(cov_2guvsetmr5().b[134][0]++,field)&&(cov_2guvsetmr5().b[134][1]++,field.type)&&(cov_2guvsetmr5().b[134][2]++,field.type==='Array'));cov_2guvsetmr5().s[372]++;if((cov_2guvsetmr5().b[136][0]++,typeof constraint!=='object')||(cov_2guvsetmr5().b[136][1]++,!constraint)){cov_2guvsetmr5().b[135][0]++;cov_2guvsetmr5().s[373]++;return CannotTransform;}else{cov_2guvsetmr5().b[135][1]++;}const transformFunction=(cov_2guvsetmr5().s[374]++,inArray?(cov_2guvsetmr5().b[137][0]++,transformInteriorAtom):(cov_2guvsetmr5().b[137][1]++,transformTopLevelAtom));cov_2guvsetmr5().s[375]++;const transformer=atom=>{cov_2guvsetmr5().f[33]++;const result=(cov_2guvsetmr5().s[376]++,transformFunction(atom,field));cov_2guvsetmr5().s[377]++;if(result===CannotTransform){cov_2guvsetmr5().b[138][0]++;cov_2guvsetmr5().s[378]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad atom: ${JSON.stringify(atom)}`);}else{cov_2guvsetmr5().b[138][1]++;}cov_2guvsetmr5().s[379]++;return result;};// keys is the constraints in reverse alphabetical order.
// This is a hack so that:
//   $regex is handled before $options
//   $nearSphere is handled before $maxDistance
var keys=(cov_2guvsetmr5().s[380]++,Object.keys(constraint).sort().reverse());var answer=(cov_2guvsetmr5().s[381]++,{});cov_2guvsetmr5().s[382]++;for(var key of keys){cov_2guvsetmr5().s[383]++;switch(key){case'$lt':cov_2guvsetmr5().b[139][0]++;case'$lte':cov_2guvsetmr5().b[139][1]++;case'$gt':cov_2guvsetmr5().b[139][2]++;case'$gte':cov_2guvsetmr5().b[139][3]++;case'$exists':cov_2guvsetmr5().b[139][4]++;case'$ne':cov_2guvsetmr5().b[139][5]++;case'$eq':cov_2guvsetmr5().b[139][6]++;{const val=(cov_2guvsetmr5().s[384]++,constraint[key]);cov_2guvsetmr5().s[385]++;if((cov_2guvsetmr5().b[141][0]++,val)&&(cov_2guvsetmr5().b[141][1]++,typeof val==='object')&&(cov_2guvsetmr5().b[141][2]++,val.$relativeTime)){cov_2guvsetmr5().b[140][0]++;cov_2guvsetmr5().s[386]++;if((cov_2guvsetmr5().b[143][0]++,field)&&(cov_2guvsetmr5().b[143][1]++,field.type!=='Date')){cov_2guvsetmr5().b[142][0]++;cov_2guvsetmr5().s[387]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'$relativeTime can only be used with Date field');}else{cov_2guvsetmr5().b[142][1]++;}cov_2guvsetmr5().s[388]++;switch(key){case'$exists':cov_2guvsetmr5().b[144][0]++;case'$ne':cov_2guvsetmr5().b[144][1]++;case'$eq':cov_2guvsetmr5().b[144][2]++;cov_2guvsetmr5().s[389]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'$relativeTime can only be used with the $lt, $lte, $gt, and $gte operators');}const parserResult=(cov_2guvsetmr5().s[390]++,relativeTimeToDate(val.$relativeTime));cov_2guvsetmr5().s[391]++;if(parserResult.status==='success'){cov_2guvsetmr5().b[145][0]++;cov_2guvsetmr5().s[392]++;answer[key]=parserResult.result;cov_2guvsetmr5().s[393]++;break;}else{cov_2guvsetmr5().b[145][1]++;}cov_2guvsetmr5().s[394]++;_logger.default.info('Error while parsing relative date',parserResult);cov_2guvsetmr5().s[395]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $relativeTime (${key}) value. ${parserResult.info}`);}else{cov_2guvsetmr5().b[140][1]++;}cov_2guvsetmr5().s[396]++;answer[key]=transformer(val);cov_2guvsetmr5().s[397]++;break;}case'$in':cov_2guvsetmr5().b[139][7]++;case'$nin':cov_2guvsetmr5().b[139][8]++;{const arr=(cov_2guvsetmr5().s[398]++,constraint[key]);cov_2guvsetmr5().s[399]++;if(!(arr instanceof Array)){cov_2guvsetmr5().b[146][0]++;cov_2guvsetmr5().s[400]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad '+key+' value');}else{cov_2guvsetmr5().b[146][1]++;}cov_2guvsetmr5().s[401]++;answer[key]=_lodash.default.flatMap(arr,value=>{cov_2guvsetmr5().f[34]++;cov_2guvsetmr5().s[402]++;return(atom=>{cov_2guvsetmr5().f[35]++;cov_2guvsetmr5().s[403]++;if(Array.isArray(atom)){cov_2guvsetmr5().b[147][0]++;cov_2guvsetmr5().s[404]++;return value.map(transformer);}else{cov_2guvsetmr5().b[147][1]++;cov_2guvsetmr5().s[405]++;return transformer(atom);}})(value);});cov_2guvsetmr5().s[406]++;break;}case'$all':cov_2guvsetmr5().b[139][9]++;{const arr=(cov_2guvsetmr5().s[407]++,constraint[key]);cov_2guvsetmr5().s[408]++;if(!(arr instanceof Array)){cov_2guvsetmr5().b[148][0]++;cov_2guvsetmr5().s[409]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad '+key+' value');}else{cov_2guvsetmr5().b[148][1]++;}cov_2guvsetmr5().s[410]++;answer[key]=arr.map(transformInteriorAtom);const values=(cov_2guvsetmr5().s[411]++,answer[key]);cov_2guvsetmr5().s[412]++;if((cov_2guvsetmr5().b[150][0]++,isAnyValueRegex(values))&&(cov_2guvsetmr5().b[150][1]++,!isAllValuesRegexOrNone(values))){cov_2guvsetmr5().b[149][0]++;cov_2guvsetmr5().s[413]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'All $all values must be of regex type or none: '+values);}else{cov_2guvsetmr5().b[149][1]++;}cov_2guvsetmr5().s[414]++;break;}case'$regex':cov_2guvsetmr5().b[139][10]++;var s=(cov_2guvsetmr5().s[415]++,constraint[key]);cov_2guvsetmr5().s[416]++;if(typeof s!=='string'){cov_2guvsetmr5().b[151][0]++;cov_2guvsetmr5().s[417]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad regex: '+s);}else{cov_2guvsetmr5().b[151][1]++;}cov_2guvsetmr5().s[418]++;answer[key]=s;cov_2guvsetmr5().s[419]++;break;case'$containedBy':cov_2guvsetmr5().b[139][11]++;{const arr=(cov_2guvsetmr5().s[420]++,constraint[key]);cov_2guvsetmr5().s[421]++;if(!(arr instanceof Array)){cov_2guvsetmr5().b[152][0]++;cov_2guvsetmr5().s[422]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $containedBy: should be an array`);}else{cov_2guvsetmr5().b[152][1]++;}cov_2guvsetmr5().s[423]++;answer.$elemMatch={$nin:arr.map(transformer)};cov_2guvsetmr5().s[424]++;break;}case'$options':cov_2guvsetmr5().b[139][12]++;cov_2guvsetmr5().s[425]++;answer[key]=constraint[key];cov_2guvsetmr5().s[426]++;break;case'$text':cov_2guvsetmr5().b[139][13]++;{const search=(cov_2guvsetmr5().s[427]++,constraint[key].$search);cov_2guvsetmr5().s[428]++;if(typeof search!=='object'){cov_2guvsetmr5().b[153][0]++;cov_2guvsetmr5().s[429]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $text: $search, should be object`);}else{cov_2guvsetmr5().b[153][1]++;}cov_2guvsetmr5().s[430]++;if((cov_2guvsetmr5().b[155][0]++,!search.$term)||(cov_2guvsetmr5().b[155][1]++,typeof search.$term!=='string')){cov_2guvsetmr5().b[154][0]++;cov_2guvsetmr5().s[431]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $text: $term, should be string`);}else{cov_2guvsetmr5().b[154][1]++;cov_2guvsetmr5().s[432]++;answer[key]={$search:search.$term};}cov_2guvsetmr5().s[433]++;if((cov_2guvsetmr5().b[157][0]++,search.$language)&&(cov_2guvsetmr5().b[157][1]++,typeof search.$language!=='string')){cov_2guvsetmr5().b[156][0]++;cov_2guvsetmr5().s[434]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $text: $language, should be string`);}else{cov_2guvsetmr5().b[156][1]++;cov_2guvsetmr5().s[435]++;if(search.$language){cov_2guvsetmr5().b[158][0]++;cov_2guvsetmr5().s[436]++;answer[key].$language=search.$language;}else{cov_2guvsetmr5().b[158][1]++;}}cov_2guvsetmr5().s[437]++;if((cov_2guvsetmr5().b[160][0]++,search.$caseSensitive)&&(cov_2guvsetmr5().b[160][1]++,typeof search.$caseSensitive!=='boolean')){cov_2guvsetmr5().b[159][0]++;cov_2guvsetmr5().s[438]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $text: $caseSensitive, should be boolean`);}else{cov_2guvsetmr5().b[159][1]++;cov_2guvsetmr5().s[439]++;if(search.$caseSensitive){cov_2guvsetmr5().b[161][0]++;cov_2guvsetmr5().s[440]++;answer[key].$caseSensitive=search.$caseSensitive;}else{cov_2guvsetmr5().b[161][1]++;}}cov_2guvsetmr5().s[441]++;if((cov_2guvsetmr5().b[163][0]++,search.$diacriticSensitive)&&(cov_2guvsetmr5().b[163][1]++,typeof search.$diacriticSensitive!=='boolean')){cov_2guvsetmr5().b[162][0]++;cov_2guvsetmr5().s[442]++;throw new Parse.Error(Parse.Error.INVALID_JSON,`bad $text: $diacriticSensitive, should be boolean`);}else{cov_2guvsetmr5().b[162][1]++;cov_2guvsetmr5().s[443]++;if(search.$diacriticSensitive){cov_2guvsetmr5().b[164][0]++;cov_2guvsetmr5().s[444]++;answer[key].$diacriticSensitive=search.$diacriticSensitive;}else{cov_2guvsetmr5().b[164][1]++;}}cov_2guvsetmr5().s[445]++;break;}case'$nearSphere':cov_2guvsetmr5().b[139][14]++;{const point=(cov_2guvsetmr5().s[446]++,constraint[key]);cov_2guvsetmr5().s[447]++;if(count){cov_2guvsetmr5().b[165][0]++;cov_2guvsetmr5().s[448]++;answer.$geoWithin={$centerSphere:[[point.longitude,point.latitude],constraint.$maxDistance]};}else{cov_2guvsetmr5().b[165][1]++;cov_2guvsetmr5().s[449]++;answer[key]=[point.longitude,point.latitude];}cov_2guvsetmr5().s[450]++;break;}case'$maxDistance':cov_2guvsetmr5().b[139][15]++;{cov_2guvsetmr5().s[451]++;if(count){cov_2guvsetmr5().b[166][0]++;cov_2guvsetmr5().s[452]++;break;}else{cov_2guvsetmr5().b[166][1]++;}cov_2guvsetmr5().s[453]++;answer[key]=constraint[key];cov_2guvsetmr5().s[454]++;break;}// The SDKs don't seem to use these but they are documented in the
// REST API docs.
case'$maxDistanceInRadians':cov_2guvsetmr5().b[139][16]++;cov_2guvsetmr5().s[455]++;answer['$maxDistance']=constraint[key];cov_2guvsetmr5().s[456]++;break;case'$maxDistanceInMiles':cov_2guvsetmr5().b[139][17]++;cov_2guvsetmr5().s[457]++;answer['$maxDistance']=constraint[key]/3959;cov_2guvsetmr5().s[458]++;break;case'$maxDistanceInKilometers':cov_2guvsetmr5().b[139][18]++;cov_2guvsetmr5().s[459]++;answer['$maxDistance']=constraint[key]/6371;cov_2guvsetmr5().s[460]++;break;case'$select':cov_2guvsetmr5().b[139][19]++;case'$dontSelect':cov_2guvsetmr5().b[139][20]++;cov_2guvsetmr5().s[461]++;throw new Parse.Error(Parse.Error.COMMAND_UNAVAILABLE,'the '+key+' constraint is not supported yet');case'$within':cov_2guvsetmr5().b[139][21]++;var box=(cov_2guvsetmr5().s[462]++,constraint[key]['$box']);cov_2guvsetmr5().s[463]++;if((cov_2guvsetmr5().b[168][0]++,!box)||(cov_2guvsetmr5().b[168][1]++,box.length!=2)){cov_2guvsetmr5().b[167][0]++;cov_2guvsetmr5().s[464]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'malformatted $within arg');}else{cov_2guvsetmr5().b[167][1]++;}cov_2guvsetmr5().s[465]++;answer[key]={$box:[[box[0].longitude,box[0].latitude],[box[1].longitude,box[1].latitude]]};cov_2guvsetmr5().s[466]++;break;case'$geoWithin':cov_2guvsetmr5().b[139][22]++;{const polygon=(cov_2guvsetmr5().s[467]++,constraint[key]['$polygon']);const centerSphere=(cov_2guvsetmr5().s[468]++,constraint[key]['$centerSphere']);cov_2guvsetmr5().s[469]++;if(polygon!==undefined){cov_2guvsetmr5().b[169][0]++;let points;cov_2guvsetmr5().s[470]++;if((cov_2guvsetmr5().b[171][0]++,typeof polygon==='object')&&(cov_2guvsetmr5().b[171][1]++,polygon.__type==='Polygon')){cov_2guvsetmr5().b[170][0]++;cov_2guvsetmr5().s[471]++;if((cov_2guvsetmr5().b[173][0]++,!polygon.coordinates)||(cov_2guvsetmr5().b[173][1]++,polygon.coordinates.length<3)){cov_2guvsetmr5().b[172][0]++;cov_2guvsetmr5().s[472]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value; Polygon.coordinates should contain at least 3 lon/lat pairs');}else{cov_2guvsetmr5().b[172][1]++;}cov_2guvsetmr5().s[473]++;points=polygon.coordinates;}else{cov_2guvsetmr5().b[170][1]++;cov_2guvsetmr5().s[474]++;if(polygon instanceof Array){cov_2guvsetmr5().b[174][0]++;cov_2guvsetmr5().s[475]++;if(polygon.length<3){cov_2guvsetmr5().b[175][0]++;cov_2guvsetmr5().s[476]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value; $polygon should contain at least 3 GeoPoints');}else{cov_2guvsetmr5().b[175][1]++;}cov_2guvsetmr5().s[477]++;points=polygon;}else{cov_2guvsetmr5().b[174][1]++;cov_2guvsetmr5().s[478]++;throw new Parse.Error(Parse.Error.INVALID_JSON,"bad $geoWithin value; $polygon should be Polygon object or Array of Parse.GeoPoint's");}}cov_2guvsetmr5().s[479]++;points=points.map(point=>{cov_2guvsetmr5().f[36]++;cov_2guvsetmr5().s[480]++;if((cov_2guvsetmr5().b[177][0]++,point instanceof Array)&&(cov_2guvsetmr5().b[177][1]++,point.length===2)){cov_2guvsetmr5().b[176][0]++;cov_2guvsetmr5().s[481]++;Parse.GeoPoint._validate(point[1],point[0]);cov_2guvsetmr5().s[482]++;return point;}else{cov_2guvsetmr5().b[176][1]++;}cov_2guvsetmr5().s[483]++;if(!GeoPointCoder.isValidJSON(point)){cov_2guvsetmr5().b[178][0]++;cov_2guvsetmr5().s[484]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value');}else{cov_2guvsetmr5().b[178][1]++;cov_2guvsetmr5().s[485]++;Parse.GeoPoint._validate(point.latitude,point.longitude);}cov_2guvsetmr5().s[486]++;return[point.longitude,point.latitude];});cov_2guvsetmr5().s[487]++;answer[key]={$polygon:points};}else{cov_2guvsetmr5().b[169][1]++;cov_2guvsetmr5().s[488]++;if(centerSphere!==undefined){cov_2guvsetmr5().b[179][0]++;cov_2guvsetmr5().s[489]++;if((cov_2guvsetmr5().b[181][0]++,!(centerSphere instanceof Array))||(cov_2guvsetmr5().b[181][1]++,centerSphere.length<2)){cov_2guvsetmr5().b[180][0]++;cov_2guvsetmr5().s[490]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value; $centerSphere should be an array of Parse.GeoPoint and distance');}else{cov_2guvsetmr5().b[180][1]++;}// Get point, convert to geo point if necessary and validate
let point=(cov_2guvsetmr5().s[491]++,centerSphere[0]);cov_2guvsetmr5().s[492]++;if((cov_2guvsetmr5().b[183][0]++,point instanceof Array)&&(cov_2guvsetmr5().b[183][1]++,point.length===2)){cov_2guvsetmr5().b[182][0]++;cov_2guvsetmr5().s[493]++;point=new Parse.GeoPoint(point[1],point[0]);}else{cov_2guvsetmr5().b[182][1]++;cov_2guvsetmr5().s[494]++;if(!GeoPointCoder.isValidJSON(point)){cov_2guvsetmr5().b[184][0]++;cov_2guvsetmr5().s[495]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value; $centerSphere geo point invalid');}else{cov_2guvsetmr5().b[184][1]++;}}cov_2guvsetmr5().s[496]++;Parse.GeoPoint._validate(point.latitude,point.longitude);// Get distance and validate
const distance=(cov_2guvsetmr5().s[497]++,centerSphere[1]);cov_2guvsetmr5().s[498]++;if((cov_2guvsetmr5().b[186][0]++,isNaN(distance))||(cov_2guvsetmr5().b[186][1]++,distance<0)){cov_2guvsetmr5().b[185][0]++;cov_2guvsetmr5().s[499]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoWithin value; $centerSphere distance invalid');}else{cov_2guvsetmr5().b[185][1]++;}cov_2guvsetmr5().s[500]++;answer[key]={$centerSphere:[[point.longitude,point.latitude],distance]};}else{cov_2guvsetmr5().b[179][1]++;}}cov_2guvsetmr5().s[501]++;break;}case'$geoIntersects':cov_2guvsetmr5().b[139][23]++;{const point=(cov_2guvsetmr5().s[502]++,constraint[key]['$point']);cov_2guvsetmr5().s[503]++;if(!GeoPointCoder.isValidJSON(point)){cov_2guvsetmr5().b[187][0]++;cov_2guvsetmr5().s[504]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad $geoIntersect value; $point should be GeoPoint');}else{cov_2guvsetmr5().b[187][1]++;cov_2guvsetmr5().s[505]++;Parse.GeoPoint._validate(point.latitude,point.longitude);}cov_2guvsetmr5().s[506]++;answer[key]={$geometry:{type:'Point',coordinates:[point.longitude,point.latitude]}};cov_2guvsetmr5().s[507]++;break;}default:cov_2guvsetmr5().b[139][24]++;cov_2guvsetmr5().s[508]++;if(key.match(/^\$+/)){cov_2guvsetmr5().b[188][0]++;cov_2guvsetmr5().s[509]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'bad constraint: '+key);}else{cov_2guvsetmr5().b[188][1]++;}cov_2guvsetmr5().s[510]++;return CannotTransform;}}cov_2guvsetmr5().s[511]++;return answer;}// Transforms an update operator from REST format to mongo format.
// To be transformed, the input should have an __op field.
// If flatten is true, this will flatten operators to their static
// data format. For example, an increment of 2 would simply become a
// 2.
// The output for a non-flattened operator is a hash with __op being
// the mongo op, and arg being the argument.
// The output for a flattened operator is just a value.
// Returns undefined if this should be a no-op.
function transformUpdateOperator({__op,amount,objects},flatten){cov_2guvsetmr5().f[37]++;cov_2guvsetmr5().s[512]++;switch(__op){case'Delete':cov_2guvsetmr5().b[189][0]++;cov_2guvsetmr5().s[513]++;if(flatten){cov_2guvsetmr5().b[190][0]++;cov_2guvsetmr5().s[514]++;return undefined;}else{cov_2guvsetmr5().b[190][1]++;cov_2guvsetmr5().s[515]++;return{__op:'$unset',arg:''};}case'Increment':cov_2guvsetmr5().b[189][1]++;cov_2guvsetmr5().s[516]++;if(typeof amount!=='number'){cov_2guvsetmr5().b[191][0]++;cov_2guvsetmr5().s[517]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'incrementing must provide a number');}else{cov_2guvsetmr5().b[191][1]++;}cov_2guvsetmr5().s[518]++;if(flatten){cov_2guvsetmr5().b[192][0]++;cov_2guvsetmr5().s[519]++;return amount;}else{cov_2guvsetmr5().b[192][1]++;cov_2guvsetmr5().s[520]++;return{__op:'$inc',arg:amount};}case'Add':cov_2guvsetmr5().b[189][2]++;case'AddUnique':cov_2guvsetmr5().b[189][3]++;cov_2guvsetmr5().s[521]++;if(!(objects instanceof Array)){cov_2guvsetmr5().b[193][0]++;cov_2guvsetmr5().s[522]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'objects to add must be an array');}else{cov_2guvsetmr5().b[193][1]++;}var toAdd=(cov_2guvsetmr5().s[523]++,objects.map(transformInteriorAtom));cov_2guvsetmr5().s[524]++;if(flatten){cov_2guvsetmr5().b[194][0]++;cov_2guvsetmr5().s[525]++;return toAdd;}else{cov_2guvsetmr5().b[194][1]++;var mongoOp=(cov_2guvsetmr5().s[526]++,{Add:'$push',AddUnique:'$addToSet'}[__op]);cov_2guvsetmr5().s[527]++;return{__op:mongoOp,arg:{$each:toAdd}};}case'Remove':cov_2guvsetmr5().b[189][4]++;cov_2guvsetmr5().s[528]++;if(!(objects instanceof Array)){cov_2guvsetmr5().b[195][0]++;cov_2guvsetmr5().s[529]++;throw new Parse.Error(Parse.Error.INVALID_JSON,'objects to remove must be an array');}else{cov_2guvsetmr5().b[195][1]++;}var toRemove=(cov_2guvsetmr5().s[530]++,objects.map(transformInteriorAtom));cov_2guvsetmr5().s[531]++;if(flatten){cov_2guvsetmr5().b[196][0]++;cov_2guvsetmr5().s[532]++;return[];}else{cov_2guvsetmr5().b[196][1]++;cov_2guvsetmr5().s[533]++;return{__op:'$pullAll',arg:toRemove};}default:cov_2guvsetmr5().b[189][5]++;cov_2guvsetmr5().s[534]++;throw new Parse.Error(Parse.Error.COMMAND_UNAVAILABLE,`The ${__op} operator is not supported yet.`);}}function mapValues(object,iterator){cov_2guvsetmr5().f[38]++;const result=(cov_2guvsetmr5().s[535]++,{});cov_2guvsetmr5().s[536]++;Object.keys(object).forEach(key=>{cov_2guvsetmr5().f[39]++;cov_2guvsetmr5().s[537]++;result[key]=iterator(object[key]);});cov_2guvsetmr5().s[538]++;return result;}cov_2guvsetmr5().s[539]++;const nestedMongoObjectToNestedParseObject=mongoObject=>{cov_2guvsetmr5().f[40]++;cov_2guvsetmr5().s[540]++;switch(typeof mongoObject){case'string':cov_2guvsetmr5().b[197][0]++;case'number':cov_2guvsetmr5().b[197][1]++;case'boolean':cov_2guvsetmr5().b[197][2]++;case'undefined':cov_2guvsetmr5().b[197][3]++;cov_2guvsetmr5().s[541]++;return mongoObject;case'symbol':cov_2guvsetmr5().b[197][4]++;case'function':cov_2guvsetmr5().b[197][5]++;cov_2guvsetmr5().s[542]++;throw'bad value in nestedMongoObjectToNestedParseObject';case'object':cov_2guvsetmr5().b[197][6]++;cov_2guvsetmr5().s[543]++;if(mongoObject===null){cov_2guvsetmr5().b[198][0]++;cov_2guvsetmr5().s[544]++;return null;}else{cov_2guvsetmr5().b[198][1]++;}cov_2guvsetmr5().s[545]++;if(mongoObject instanceof Array){cov_2guvsetmr5().b[199][0]++;cov_2guvsetmr5().s[546]++;return mongoObject.map(nestedMongoObjectToNestedParseObject);}else{cov_2guvsetmr5().b[199][1]++;}cov_2guvsetmr5().s[547]++;if(mongoObject instanceof Date){cov_2guvsetmr5().b[200][0]++;cov_2guvsetmr5().s[548]++;return Parse._encode(mongoObject);}else{cov_2guvsetmr5().b[200][1]++;}cov_2guvsetmr5().s[549]++;if(mongoObject instanceof mongodb.Long){cov_2guvsetmr5().b[201][0]++;cov_2guvsetmr5().s[550]++;return mongoObject.toNumber();}else{cov_2guvsetmr5().b[201][1]++;}cov_2guvsetmr5().s[551]++;if(mongoObject instanceof mongodb.Double){cov_2guvsetmr5().b[202][0]++;cov_2guvsetmr5().s[552]++;return mongoObject.value;}else{cov_2guvsetmr5().b[202][1]++;}cov_2guvsetmr5().s[553]++;if(BytesCoder.isValidDatabaseObject(mongoObject)){cov_2guvsetmr5().b[203][0]++;cov_2guvsetmr5().s[554]++;return BytesCoder.databaseToJSON(mongoObject);}else{cov_2guvsetmr5().b[203][1]++;}cov_2guvsetmr5().s[555]++;if((cov_2guvsetmr5().b[205][0]++,Object.prototype.hasOwnProperty.call(mongoObject,'__type'))&&(cov_2guvsetmr5().b[205][1]++,mongoObject.__type=='Date')&&(cov_2guvsetmr5().b[205][2]++,mongoObject.iso instanceof Date)){cov_2guvsetmr5().b[204][0]++;cov_2guvsetmr5().s[556]++;mongoObject.iso=mongoObject.iso.toJSON();cov_2guvsetmr5().s[557]++;return mongoObject;}else{cov_2guvsetmr5().b[204][1]++;}cov_2guvsetmr5().s[558]++;return mapValues(mongoObject,nestedMongoObjectToNestedParseObject);default:cov_2guvsetmr5().b[197][7]++;cov_2guvsetmr5().s[559]++;throw'unknown js type';}};cov_2guvsetmr5().s[560]++;const transformPointerString=(schema,field,pointerString)=>{cov_2guvsetmr5().f[41]++;const objData=(cov_2guvsetmr5().s[561]++,pointerString.split('$'));cov_2guvsetmr5().s[562]++;if(objData[0]!==schema.fields[field].targetClass){cov_2guvsetmr5().b[206][0]++;cov_2guvsetmr5().s[563]++;throw'pointer to incorrect className';}else{cov_2guvsetmr5().b[206][1]++;}cov_2guvsetmr5().s[564]++;return{__type:'Pointer',className:objData[0],objectId:objData[1]};};// Converts from a mongo-format object to a REST-format object.
// Does not strip out anything based on a lack of authentication.
cov_2guvsetmr5().s[565]++;const mongoObjectToParseObject=(className,mongoObject,schema)=>{cov_2guvsetmr5().f[42]++;cov_2guvsetmr5().s[566]++;switch(typeof mongoObject){case'string':cov_2guvsetmr5().b[207][0]++;case'number':cov_2guvsetmr5().b[207][1]++;case'boolean':cov_2guvsetmr5().b[207][2]++;case'undefined':cov_2guvsetmr5().b[207][3]++;cov_2guvsetmr5().s[567]++;return mongoObject;case'symbol':cov_2guvsetmr5().b[207][4]++;case'function':cov_2guvsetmr5().b[207][5]++;cov_2guvsetmr5().s[568]++;throw'bad value in mongoObjectToParseObject';case'object':cov_2guvsetmr5().b[207][6]++;{cov_2guvsetmr5().s[569]++;if(mongoObject===null){cov_2guvsetmr5().b[208][0]++;cov_2guvsetmr5().s[570]++;return null;}else{cov_2guvsetmr5().b[208][1]++;}cov_2guvsetmr5().s[571]++;if(mongoObject instanceof Array){cov_2guvsetmr5().b[209][0]++;cov_2guvsetmr5().s[572]++;return mongoObject.map(nestedMongoObjectToNestedParseObject);}else{cov_2guvsetmr5().b[209][1]++;}cov_2guvsetmr5().s[573]++;if(mongoObject instanceof Date){cov_2guvsetmr5().b[210][0]++;cov_2guvsetmr5().s[574]++;return Parse._encode(mongoObject);}else{cov_2guvsetmr5().b[210][1]++;}cov_2guvsetmr5().s[575]++;if(mongoObject instanceof mongodb.Long){cov_2guvsetmr5().b[211][0]++;cov_2guvsetmr5().s[576]++;return mongoObject.toNumber();}else{cov_2guvsetmr5().b[211][1]++;}cov_2guvsetmr5().s[577]++;if(mongoObject instanceof mongodb.Double){cov_2guvsetmr5().b[212][0]++;cov_2guvsetmr5().s[578]++;return mongoObject.value;}else{cov_2guvsetmr5().b[212][1]++;}cov_2guvsetmr5().s[579]++;if(BytesCoder.isValidDatabaseObject(mongoObject)){cov_2guvsetmr5().b[213][0]++;cov_2guvsetmr5().s[580]++;return BytesCoder.databaseToJSON(mongoObject);}else{cov_2guvsetmr5().b[213][1]++;}const restObject=(cov_2guvsetmr5().s[581]++,{});cov_2guvsetmr5().s[582]++;if((cov_2guvsetmr5().b[215][0]++,mongoObject._rperm)||(cov_2guvsetmr5().b[215][1]++,mongoObject._wperm)){cov_2guvsetmr5().b[214][0]++;cov_2guvsetmr5().s[583]++;restObject._rperm=(cov_2guvsetmr5().b[216][0]++,mongoObject._rperm)||(cov_2guvsetmr5().b[216][1]++,[]);cov_2guvsetmr5().s[584]++;restObject._wperm=(cov_2guvsetmr5().b[217][0]++,mongoObject._wperm)||(cov_2guvsetmr5().b[217][1]++,[]);cov_2guvsetmr5().s[585]++;delete mongoObject._rperm;cov_2guvsetmr5().s[586]++;delete mongoObject._wperm;}else{cov_2guvsetmr5().b[214][1]++;}cov_2guvsetmr5().s[587]++;for(var key in mongoObject){cov_2guvsetmr5().s[588]++;switch(key){case'_id':cov_2guvsetmr5().b[218][0]++;cov_2guvsetmr5().s[589]++;restObject['objectId']=''+mongoObject[key];cov_2guvsetmr5().s[590]++;break;case'_hashed_password':cov_2guvsetmr5().b[218][1]++;cov_2guvsetmr5().s[591]++;restObject._hashed_password=mongoObject[key];cov_2guvsetmr5().s[592]++;break;case'_acl':cov_2guvsetmr5().b[218][2]++;cov_2guvsetmr5().s[593]++;break;case'_email_verify_token':cov_2guvsetmr5().b[218][3]++;case'_perishable_token':cov_2guvsetmr5().b[218][4]++;case'_perishable_token_expires_at':cov_2guvsetmr5().b[218][5]++;case'_password_changed_at':cov_2guvsetmr5().b[218][6]++;case'_tombstone':cov_2guvsetmr5().b[218][7]++;case'_email_verify_token_expires_at':cov_2guvsetmr5().b[218][8]++;case'_account_lockout_expires_at':cov_2guvsetmr5().b[218][9]++;case'_failed_login_count':cov_2guvsetmr5().b[218][10]++;case'_password_history':cov_2guvsetmr5().b[218][11]++;cov_2guvsetmr5().s[594]++;// Those keys will be deleted if needed in the DB Controller
restObject[key]=mongoObject[key];cov_2guvsetmr5().s[595]++;break;case'_session_token':cov_2guvsetmr5().b[218][12]++;cov_2guvsetmr5().s[596]++;restObject['sessionToken']=mongoObject[key];cov_2guvsetmr5().s[597]++;break;case'updatedAt':cov_2guvsetmr5().b[218][13]++;case'_updated_at':cov_2guvsetmr5().b[218][14]++;cov_2guvsetmr5().s[598]++;restObject['updatedAt']=Parse._encode(new Date(mongoObject[key])).iso;cov_2guvsetmr5().s[599]++;break;case'createdAt':cov_2guvsetmr5().b[218][15]++;case'_created_at':cov_2guvsetmr5().b[218][16]++;cov_2guvsetmr5().s[600]++;restObject['createdAt']=Parse._encode(new Date(mongoObject[key])).iso;cov_2guvsetmr5().s[601]++;break;case'expiresAt':cov_2guvsetmr5().b[218][17]++;case'_expiresAt':cov_2guvsetmr5().b[218][18]++;cov_2guvsetmr5().s[602]++;restObject['expiresAt']=Parse._encode(new Date(mongoObject[key]));cov_2guvsetmr5().s[603]++;break;case'lastUsed':cov_2guvsetmr5().b[218][19]++;case'_last_used':cov_2guvsetmr5().b[218][20]++;cov_2guvsetmr5().s[604]++;restObject['lastUsed']=Parse._encode(new Date(mongoObject[key])).iso;cov_2guvsetmr5().s[605]++;break;case'timesUsed':cov_2guvsetmr5().b[218][21]++;case'times_used':cov_2guvsetmr5().b[218][22]++;cov_2guvsetmr5().s[606]++;restObject['timesUsed']=mongoObject[key];cov_2guvsetmr5().s[607]++;break;case'authData':cov_2guvsetmr5().b[218][23]++;cov_2guvsetmr5().s[608]++;if(className==='_User'){cov_2guvsetmr5().b[219][0]++;cov_2guvsetmr5().s[609]++;_logger.default.warn('ignoring authData in _User as this key is reserved to be synthesized of `_auth_data_*` keys');}else{cov_2guvsetmr5().b[219][1]++;cov_2guvsetmr5().s[610]++;restObject['authData']=mongoObject[key];}cov_2guvsetmr5().s[611]++;break;default:cov_2guvsetmr5().b[218][24]++;// Check other auth data keys
var authDataMatch=(cov_2guvsetmr5().s[612]++,key.match(/^_auth_data_([a-zA-Z0-9_]+)$/));cov_2guvsetmr5().s[613]++;if((cov_2guvsetmr5().b[221][0]++,authDataMatch)&&(cov_2guvsetmr5().b[221][1]++,className==='_User')){cov_2guvsetmr5().b[220][0]++;var provider=(cov_2guvsetmr5().s[614]++,authDataMatch[1]);cov_2guvsetmr5().s[615]++;restObject['authData']=(cov_2guvsetmr5().b[222][0]++,restObject['authData'])||(cov_2guvsetmr5().b[222][1]++,{});cov_2guvsetmr5().s[616]++;restObject['authData'][provider]=mongoObject[key];cov_2guvsetmr5().s[617]++;break;}else{cov_2guvsetmr5().b[220][1]++;}cov_2guvsetmr5().s[618]++;if(key.indexOf('_p_')==0){cov_2guvsetmr5().b[223][0]++;var newKey=(cov_2guvsetmr5().s[619]++,key.substring(3));cov_2guvsetmr5().s[620]++;if(!schema.fields[newKey]){cov_2guvsetmr5().b[224][0]++;cov_2guvsetmr5().s[621]++;_logger.default.info('transform.js','Found a pointer column not in the schema, dropping it.',className,newKey);cov_2guvsetmr5().s[622]++;break;}else{cov_2guvsetmr5().b[224][1]++;}cov_2guvsetmr5().s[623]++;if(schema.fields[newKey].type!=='Pointer'){cov_2guvsetmr5().b[225][0]++;cov_2guvsetmr5().s[624]++;_logger.default.info('transform.js','Found a pointer in a non-pointer column, dropping it.',className,key);cov_2guvsetmr5().s[625]++;break;}else{cov_2guvsetmr5().b[225][1]++;}cov_2guvsetmr5().s[626]++;if(mongoObject[key]===null){cov_2guvsetmr5().b[226][0]++;cov_2guvsetmr5().s[627]++;break;}else{cov_2guvsetmr5().b[226][1]++;}cov_2guvsetmr5().s[628]++;restObject[newKey]=transformPointerString(schema,newKey,mongoObject[key]);cov_2guvsetmr5().s[629]++;break;}else{cov_2guvsetmr5().b[223][1]++;cov_2guvsetmr5().s[630]++;if((cov_2guvsetmr5().b[228][0]++,key[0]=='_')&&(cov_2guvsetmr5().b[228][1]++,key!='__type')){cov_2guvsetmr5().b[227][0]++;cov_2guvsetmr5().s[631]++;throw'bad key in untransform: '+key;}else{cov_2guvsetmr5().b[227][1]++;var value=(cov_2guvsetmr5().s[632]++,mongoObject[key]);cov_2guvsetmr5().s[633]++;if((cov_2guvsetmr5().b[230][0]++,schema.fields[key])&&(cov_2guvsetmr5().b[230][1]++,schema.fields[key].type==='File')&&(cov_2guvsetmr5().b[230][2]++,FileCoder.isValidDatabaseObject(value))){cov_2guvsetmr5().b[229][0]++;cov_2guvsetmr5().s[634]++;restObject[key]=FileCoder.databaseToJSON(value);cov_2guvsetmr5().s[635]++;break;}else{cov_2guvsetmr5().b[229][1]++;}cov_2guvsetmr5().s[636]++;if((cov_2guvsetmr5().b[232][0]++,schema.fields[key])&&(cov_2guvsetmr5().b[232][1]++,schema.fields[key].type==='GeoPoint')&&(cov_2guvsetmr5().b[232][2]++,GeoPointCoder.isValidDatabaseObject(value))){cov_2guvsetmr5().b[231][0]++;cov_2guvsetmr5().s[637]++;restObject[key]=GeoPointCoder.databaseToJSON(value);cov_2guvsetmr5().s[638]++;break;}else{cov_2guvsetmr5().b[231][1]++;}cov_2guvsetmr5().s[639]++;if((cov_2guvsetmr5().b[234][0]++,schema.fields[key])&&(cov_2guvsetmr5().b[234][1]++,schema.fields[key].type==='Polygon')&&(cov_2guvsetmr5().b[234][2]++,PolygonCoder.isValidDatabaseObject(value))){cov_2guvsetmr5().b[233][0]++;cov_2guvsetmr5().s[640]++;restObject[key]=PolygonCoder.databaseToJSON(value);cov_2guvsetmr5().s[641]++;break;}else{cov_2guvsetmr5().b[233][1]++;}cov_2guvsetmr5().s[642]++;if((cov_2guvsetmr5().b[236][0]++,schema.fields[key])&&(cov_2guvsetmr5().b[236][1]++,schema.fields[key].type==='Bytes')&&(cov_2guvsetmr5().b[236][2]++,BytesCoder.isValidDatabaseObject(value))){cov_2guvsetmr5().b[235][0]++;cov_2guvsetmr5().s[643]++;restObject[key]=BytesCoder.databaseToJSON(value);cov_2guvsetmr5().s[644]++;break;}else{cov_2guvsetmr5().b[235][1]++;}}}cov_2guvsetmr5().s[645]++;restObject[key]=nestedMongoObjectToNestedParseObject(mongoObject[key]);}}const relationFieldNames=(cov_2guvsetmr5().s[646]++,Object.keys(schema.fields).filter(fieldName=>{cov_2guvsetmr5().f[43]++;cov_2guvsetmr5().s[647]++;return schema.fields[fieldName].type==='Relation';}));const relationFields=(cov_2guvsetmr5().s[648]++,{});cov_2guvsetmr5().s[649]++;relationFieldNames.forEach(relationFieldName=>{cov_2guvsetmr5().f[44]++;cov_2guvsetmr5().s[650]++;relationFields[relationFieldName]={__type:'Relation',className:schema.fields[relationFieldName].targetClass};});cov_2guvsetmr5().s[651]++;return _objectSpread(_objectSpread({},restObject),relationFields);}default:cov_2guvsetmr5().b[207][7]++;cov_2guvsetmr5().s[652]++;throw'unknown js type';}};var DateCoder=(cov_2guvsetmr5().s[653]++,{JSONToDatabase(json){cov_2guvsetmr5().f[45]++;cov_2guvsetmr5().s[654]++;return new Date(json.iso);},isValidJSON(value){cov_2guvsetmr5().f[46]++;cov_2guvsetmr5().s[655]++;return(cov_2guvsetmr5().b[237][0]++,typeof value==='object')&&(cov_2guvsetmr5().b[237][1]++,value!==null)&&(cov_2guvsetmr5().b[237][2]++,value.__type==='Date');}});var BytesCoder=(cov_2guvsetmr5().s[656]++,{base64Pattern:new RegExp('^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'),isBase64Value(object){cov_2guvsetmr5().f[47]++;cov_2guvsetmr5().s[657]++;if(typeof object!=='string'){cov_2guvsetmr5().b[238][0]++;cov_2guvsetmr5().s[658]++;return false;}else{cov_2guvsetmr5().b[238][1]++;}cov_2guvsetmr5().s[659]++;return this.base64Pattern.test(object);},databaseToJSON(object){cov_2guvsetmr5().f[48]++;let value;cov_2guvsetmr5().s[660]++;if(this.isBase64Value(object)){cov_2guvsetmr5().b[239][0]++;cov_2guvsetmr5().s[661]++;value=object;}else{cov_2guvsetmr5().b[239][1]++;cov_2guvsetmr5().s[662]++;value=object.buffer.toString('base64');}cov_2guvsetmr5().s[663]++;return{__type:'Bytes',base64:value};},isValidDatabaseObject(object){cov_2guvsetmr5().f[49]++;cov_2guvsetmr5().s[664]++;return(cov_2guvsetmr5().b[240][0]++,object instanceof mongodb.Binary)||(cov_2guvsetmr5().b[240][1]++,this.isBase64Value(object));},JSONToDatabase(json){cov_2guvsetmr5().f[50]++;cov_2guvsetmr5().s[665]++;return new mongodb.Binary(Buffer.from(json.base64,'base64'));},isValidJSON(value){cov_2guvsetmr5().f[51]++;cov_2guvsetmr5().s[666]++;return(cov_2guvsetmr5().b[241][0]++,typeof value==='object')&&(cov_2guvsetmr5().b[241][1]++,value!==null)&&(cov_2guvsetmr5().b[241][2]++,value.__type==='Bytes');}});var GeoPointCoder=(cov_2guvsetmr5().s[667]++,{databaseToJSON(object){cov_2guvsetmr5().f[52]++;cov_2guvsetmr5().s[668]++;return{__type:'GeoPoint',latitude:object[1],longitude:object[0]};},isValidDatabaseObject(object){cov_2guvsetmr5().f[53]++;cov_2guvsetmr5().s[669]++;return(cov_2guvsetmr5().b[242][0]++,object instanceof Array)&&(cov_2guvsetmr5().b[242][1]++,object.length==2);},JSONToDatabase(json){cov_2guvsetmr5().f[54]++;cov_2guvsetmr5().s[670]++;return[json.longitude,json.latitude];},isValidJSON(value){cov_2guvsetmr5().f[55]++;cov_2guvsetmr5().s[671]++;return(cov_2guvsetmr5().b[243][0]++,typeof value==='object')&&(cov_2guvsetmr5().b[243][1]++,value!==null)&&(cov_2guvsetmr5().b[243][2]++,value.__type==='GeoPoint');}});var PolygonCoder=(cov_2guvsetmr5().s[672]++,{databaseToJSON(object){cov_2guvsetmr5().f[56]++;// Convert lng/lat -> lat/lng
const coords=(cov_2guvsetmr5().s[673]++,object.coordinates[0].map(coord=>{cov_2guvsetmr5().f[57]++;cov_2guvsetmr5().s[674]++;return[coord[1],coord[0]];}));cov_2guvsetmr5().s[675]++;return{__type:'Polygon',coordinates:coords};},isValidDatabaseObject(object){cov_2guvsetmr5().f[58]++;const coords=(cov_2guvsetmr5().s[676]++,object.coordinates[0]);cov_2guvsetmr5().s[677]++;if((cov_2guvsetmr5().b[245][0]++,object.type!=='Polygon')||(cov_2guvsetmr5().b[245][1]++,!(coords instanceof Array))){cov_2guvsetmr5().b[244][0]++;cov_2guvsetmr5().s[678]++;return false;}else{cov_2guvsetmr5().b[244][1]++;}cov_2guvsetmr5().s[679]++;for(let i=(cov_2guvsetmr5().s[680]++,0);i<coords.length;i++){const point=(cov_2guvsetmr5().s[681]++,coords[i]);cov_2guvsetmr5().s[682]++;if(!GeoPointCoder.isValidDatabaseObject(point)){cov_2guvsetmr5().b[246][0]++;cov_2guvsetmr5().s[683]++;return false;}else{cov_2guvsetmr5().b[246][1]++;}cov_2guvsetmr5().s[684]++;Parse.GeoPoint._validate(parseFloat(point[1]),parseFloat(point[0]));}cov_2guvsetmr5().s[685]++;return true;},JSONToDatabase(json){cov_2guvsetmr5().f[59]++;let coords=(cov_2guvsetmr5().s[686]++,json.coordinates);// Add first point to the end to close polygon
cov_2guvsetmr5().s[687]++;if((cov_2guvsetmr5().b[248][0]++,coords[0][0]!==coords[coords.length-1][0])||(cov_2guvsetmr5().b[248][1]++,coords[0][1]!==coords[coords.length-1][1])){cov_2guvsetmr5().b[247][0]++;cov_2guvsetmr5().s[688]++;coords.push(coords[0]);}else{cov_2guvsetmr5().b[247][1]++;}const unique=(cov_2guvsetmr5().s[689]++,coords.filter((item,index,ar)=>{cov_2guvsetmr5().f[60]++;let foundIndex=(cov_2guvsetmr5().s[690]++,-1);cov_2guvsetmr5().s[691]++;for(let i=(cov_2guvsetmr5().s[692]++,0);i<ar.length;i+=1){const pt=(cov_2guvsetmr5().s[693]++,ar[i]);cov_2guvsetmr5().s[694]++;if((cov_2guvsetmr5().b[250][0]++,pt[0]===item[0])&&(cov_2guvsetmr5().b[250][1]++,pt[1]===item[1])){cov_2guvsetmr5().b[249][0]++;cov_2guvsetmr5().s[695]++;foundIndex=i;cov_2guvsetmr5().s[696]++;break;}else{cov_2guvsetmr5().b[249][1]++;}}cov_2guvsetmr5().s[697]++;return foundIndex===index;}));cov_2guvsetmr5().s[698]++;if(unique.length<3){cov_2guvsetmr5().b[251][0]++;cov_2guvsetmr5().s[699]++;throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR,'GeoJSON: Loop must have at least 3 different vertices');}else{cov_2guvsetmr5().b[251][1]++;}// Convert lat/long -> long/lat
cov_2guvsetmr5().s[700]++;coords=coords.map(coord=>{cov_2guvsetmr5().f[61]++;cov_2guvsetmr5().s[701]++;return[coord[1],coord[0]];});cov_2guvsetmr5().s[702]++;return{type:'Polygon',coordinates:[coords]};},isValidJSON(value){cov_2guvsetmr5().f[62]++;cov_2guvsetmr5().s[703]++;return(cov_2guvsetmr5().b[252][0]++,typeof value==='object')&&(cov_2guvsetmr5().b[252][1]++,value!==null)&&(cov_2guvsetmr5().b[252][2]++,value.__type==='Polygon');}});var FileCoder=(cov_2guvsetmr5().s[704]++,{databaseToJSON(object){cov_2guvsetmr5().f[63]++;cov_2guvsetmr5().s[705]++;return{__type:'File',name:object};},isValidDatabaseObject(object){cov_2guvsetmr5().f[64]++;cov_2guvsetmr5().s[706]++;return typeof object==='string';},JSONToDatabase(json){cov_2guvsetmr5().f[65]++;cov_2guvsetmr5().s[707]++;return json.name;},isValidJSON(value){cov_2guvsetmr5().f[66]++;cov_2guvsetmr5().s[708]++;return(cov_2guvsetmr5().b[253][0]++,typeof value==='object')&&(cov_2guvsetmr5().b[253][1]++,value!==null)&&(cov_2guvsetmr5().b[253][2]++,value.__type==='File');}});cov_2guvsetmr5().s[709]++;module.exports={transformKey,parseObjectToMongoObjectForCreate,transformUpdate,transformWhere,mongoObjectToParseObject,relativeTimeToDate,transformConstraint,transformPointerString};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,