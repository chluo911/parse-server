"use strict";/**
 * @module SecurityCheck
 */ /**
 * A group of security checks.
 * @interface CheckGroup
 */function cov_1101grx30p(){var path="/parse-server/lib/Security/CheckGroup.js";var hash="f009572fc966c8979c7fe843995a7e664397e767";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Security/CheckGroup.js",statementMap:{"0":{start:{line:13,column:4},end:{line:13,column:32}},"1":{start:{line:14,column:4},end:{line:14,column:36}},"2":{start:{line:22,column:4},end:{line:22,column:37}},"3":{start:{line:26,column:4},end:{line:26,column:22}},"4":{start:{line:34,column:4},end:{line:34,column:39}},"5":{start:{line:38,column:4},end:{line:38,column:24}},"6":{start:{line:46,column:4},end:{line:48,column:5}},"7":{start:{line:47,column:6},end:{line:47,column:18}},"8":{start:{line:53,column:0},end:{line:53,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:2},end:{line:12,column:3}},loc:{start:{line:12,column:16},end:{line:15,column:3}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:2},end:{line:21,column:3}},loc:{start:{line:21,column:12},end:{line:23,column:3}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:9},end:{line:27,column:3}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:14},end:{line:35,column:3}},line:33},"4":{name:"(anonymous_4)",decl:{start:{line:37,column:2},end:{line:37,column:3}},loc:{start:{line:37,column:11},end:{line:39,column:3}},line:37},"5":{name:"(anonymous_5)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:14},end:{line:49,column:3}},line:45}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{},inputSourceMap:{version:3,sources:["../../src/Security/CheckGroup.js"],names:["CheckGroup","constructor","_name","setName","_checks","setChecks","name","checks","run","check","module","exports"],mappings:";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,UAAN,CAAiB;AACfC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,GAAa,KAAKC,OAAL,EAAb;AACA,SAAKC,OAAL,GAAe,KAAKC,SAAL,EAAf;AACD;AAED;AACF;AACA;;;AACEF,EAAAA,OAAO,GAAG;AACR,UAAO,0BAAP;AACD;;AACDG,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKJ,KAAZ;AACD;AAED;AACF;AACA;;;AACEG,EAAAA,SAAS,GAAG;AACV,UAAO,4BAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKH,OAAZ;AACD;AAED;AACF;AACA;;;AACW,QAAHI,GAAG,GAAG;AACV,SAAK,MAAMC,KAAX,IAAoB,KAAKL,OAAzB,EAAkC;AAChCK,MAAAA,KAAK,CAACD,GAAN;AACD;AACF;;AAjCc;;AAoCjBE,MAAM,CAACC,OAAP,GAAiBX,UAAjB",sourcesContent:["/**\n * @module SecurityCheck\n */\n\n/**\n * A group of security checks.\n * @interface CheckGroup\n */\nclass CheckGroup {\n  constructor() {\n    this._name = this.setName();\n    this._checks = this.setChecks();\n  }\n\n  /**\n   * The security check group name; to be overridden by child class.\n   */\n  setName() {\n    throw `Check group has no name.`;\n  }\n  name() {\n    return this._name;\n  }\n\n  /**\n   * The security checks; to be overridden by child class.\n   */\n  setChecks() {\n    throw `Check group has no checks.`;\n  }\n  checks() {\n    return this._checks;\n  }\n\n  /**\n   * Runs all checks.\n   */\n  async run() {\n    for (const check of this._checks) {\n      check.run();\n    }\n  }\n}\n\nmodule.exports = CheckGroup;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f009572fc966c8979c7fe843995a7e664397e767"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1101grx30p=function(){return actualCoverage;};}return actualCoverage;}cov_1101grx30p();class CheckGroup{constructor(){cov_1101grx30p().f[0]++;cov_1101grx30p().s[0]++;this._name=this.setName();cov_1101grx30p().s[1]++;this._checks=this.setChecks();}/**
   * The security check group name; to be overridden by child class.
   */setName(){cov_1101grx30p().f[1]++;cov_1101grx30p().s[2]++;throw`Check group has no name.`;}name(){cov_1101grx30p().f[2]++;cov_1101grx30p().s[3]++;return this._name;}/**
   * The security checks; to be overridden by child class.
   */setChecks(){cov_1101grx30p().f[3]++;cov_1101grx30p().s[4]++;throw`Check group has no checks.`;}checks(){cov_1101grx30p().f[4]++;cov_1101grx30p().s[5]++;return this._checks;}/**
   * Runs all checks.
   */async run(){cov_1101grx30p().f[5]++;cov_1101grx30p().s[6]++;for(const check of this._checks){cov_1101grx30p().s[7]++;check.run();}}}cov_1101grx30p().s[8]++;module.exports=CheckGroup;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZWN1cml0eS9DaGVja0dyb3VwLmpzIl0sIm5hbWVzIjpbIkNoZWNrR3JvdXAiLCJjb25zdHJ1Y3RvciIsIl9uYW1lIiwic2V0TmFtZSIsIl9jaGVja3MiLCJzZXRDaGVja3MiLCJuYW1lIiwiY2hlY2tzIiwicnVuIiwiY2hlY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLFVBQU4sQ0FBaUI7QUFDZkMsRUFBQUEsV0FBVyxHQUFHO0FBQ1osU0FBS0MsS0FBTCxHQUFhLEtBQUtDLE9BQUwsRUFBYjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxLQUFLQyxTQUFMLEVBQWY7QUFDRDtBQUVEO0FBQ0Y7QUFDQTs7O0FBQ0VGLEVBQUFBLE9BQU8sR0FBRztBQUNSLFVBQU8sMEJBQVA7QUFDRDs7QUFDREcsRUFBQUEsSUFBSSxHQUFHO0FBQ0wsV0FBTyxLQUFLSixLQUFaO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNFRyxFQUFBQSxTQUFTLEdBQUc7QUFDVixVQUFPLDRCQUFQO0FBQ0Q7O0FBQ0RFLEVBQUFBLE1BQU0sR0FBRztBQUNQLFdBQU8sS0FBS0gsT0FBWjtBQUNEO0FBRUQ7QUFDRjtBQUNBOzs7QUFDVyxRQUFISSxHQUFHLEdBQUc7QUFDVixTQUFLLE1BQU1DLEtBQVgsSUFBb0IsS0FBS0wsT0FBekIsRUFBa0M7QUFDaENLLE1BQUFBLEtBQUssQ0FBQ0QsR0FBTjtBQUNEO0FBQ0Y7O0FBakNjOztBQW9DakJFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsVUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgU2VjdXJpdHlDaGVja1xuICovXG5cbi8qKlxuICogQSBncm91cCBvZiBzZWN1cml0eSBjaGVja3MuXG4gKiBAaW50ZXJmYWNlIENoZWNrR3JvdXBcbiAqL1xuY2xhc3MgQ2hlY2tHcm91cCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX25hbWUgPSB0aGlzLnNldE5hbWUoKTtcbiAgICB0aGlzLl9jaGVja3MgPSB0aGlzLnNldENoZWNrcygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzZWN1cml0eSBjaGVjayBncm91cCBuYW1lOyB0byBiZSBvdmVycmlkZGVuIGJ5IGNoaWxkIGNsYXNzLlxuICAgKi9cbiAgc2V0TmFtZSgpIHtcbiAgICB0aHJvdyBgQ2hlY2sgZ3JvdXAgaGFzIG5vIG5hbWUuYDtcbiAgfVxuICBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzZWN1cml0eSBjaGVja3M7IHRvIGJlIG92ZXJyaWRkZW4gYnkgY2hpbGQgY2xhc3MuXG4gICAqL1xuICBzZXRDaGVja3MoKSB7XG4gICAgdGhyb3cgYENoZWNrIGdyb3VwIGhhcyBubyBjaGVja3MuYDtcbiAgfVxuICBjaGVja3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NoZWNrcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSdW5zIGFsbCBjaGVja3MuXG4gICAqL1xuICBhc3luYyBydW4oKSB7XG4gICAgZm9yIChjb25zdCBjaGVjayBvZiB0aGlzLl9jaGVja3MpIHtcbiAgICAgIGNoZWNrLnJ1bigpO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENoZWNrR3JvdXA7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZWN1cml0eS9DaGVja0dyb3VwLmpzIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwic2V0TmFtZSIsIm5hbWUiLCJzZXRDaGVja3MiLCJjaGVja3MiLCJydW4iLCJjaGVjayIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6ImFBQUE7QUFDQTtBQUNBLEcsQ0FFQTtBQUNBO0FBQ0E7QUFDQSxHLGsrR0FPRTsyRkFORixLQUFBLENBQUEsVUFBaUIsQ0FDZkEsV0FBVyxFQUFHLGlEQUNaLEtBQUEsS0FBQSxDQUFhLEtBQWIsT0FBYSxFQUFiLENBRFksd0JBRVosS0FBQSxPQUFBLENBQWUsS0FBZixTQUFlLEVBQWYsQ0FDRCxDQUVEO0FBQ0Y7QUFDQSxLQUNFQyxPQUFPLEVBQUcsaURBQ1IsS0FBQSwwQkFBQSxDQUNELENBQ0RDLElBQUksRUFBRyxpREFDTCxNQUFPLE1BQVAsS0FBQSxDQUNELENBRUQ7QUFDRjtBQUNBLEtBQ0VDLFNBQVMsRUFBRyxpREFDVixLQUFBLDRCQUFBLENBQ0QsQ0FDREMsTUFBTSxFQUFHLGlEQUNQLE1BQU8sTUFBUCxPQUFBLENBQ0QsQ0FFRDtBQUNGO0FBQ0EsS0FDVyxLQUFIQyxDQUFBQSxHQUFHLEVBQUcsaURBQ1YsSUFBSyxLQUFMLENBQUEsS0FBQSxHQUFvQixNQUFwQixPQUFBLENBQWtDLHlCQUNoQ0MsS0FBSyxDQUFMQSxHQUFBQSxHQUNELENBQ0YsQ0FqQ2MsQyx3QkFvQ2pCQyxNQUFNLENBQU5BLE9BQUFBLENBQUFBLFVBQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgU2VjdXJpdHlDaGVja1xuICovXG5cbi8qKlxuICogQSBncm91cCBvZiBzZWN1cml0eSBjaGVja3MuXG4gKiBAaW50ZXJmYWNlIENoZWNrR3JvdXBcbiAqL1xuY2xhc3MgQ2hlY2tHcm91cCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX25hbWUgPSB0aGlzLnNldE5hbWUoKTtcbiAgICB0aGlzLl9jaGVja3MgPSB0aGlzLnNldENoZWNrcygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzZWN1cml0eSBjaGVjayBncm91cCBuYW1lOyB0byBiZSBvdmVycmlkZGVuIGJ5IGNoaWxkIGNsYXNzLlxuICAgKi9cbiAgc2V0TmFtZSgpIHtcbiAgICB0aHJvdyBgQ2hlY2sgZ3JvdXAgaGFzIG5vIG5hbWUuYDtcbiAgfVxuICBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzZWN1cml0eSBjaGVja3M7IHRvIGJlIG92ZXJyaWRkZW4gYnkgY2hpbGQgY2xhc3MuXG4gICAqL1xuICBzZXRDaGVja3MoKSB7XG4gICAgdGhyb3cgYENoZWNrIGdyb3VwIGhhcyBubyBjaGVja3MuYDtcbiAgfVxuICBjaGVja3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NoZWNrcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSdW5zIGFsbCBjaGVja3MuXG4gICAqL1xuICBhc3luYyBydW4oKSB7XG4gICAgZm9yIChjb25zdCBjaGVjayBvZiB0aGlzLl9jaGVja3MpIHtcbiAgICAgIGNoZWNrLnJ1bigpO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENoZWNrR3JvdXA7XG4iXX0=