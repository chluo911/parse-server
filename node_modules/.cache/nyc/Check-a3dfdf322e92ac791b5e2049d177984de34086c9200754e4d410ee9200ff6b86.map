{"version":3,"sources":["../../src/Security/Check.js"],"names":["Check","constructor","params","_validateParams","title","warning","solution","check","_checkState","CheckState","none","error","checkState","run","Promise","success","e","stateFailError","fail","Utils","validateParams","group","t","v","isString","isFunction","Object","freeze","module","exports"],"mappings":";;;;;;;AAIA;;AACA;;;;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA,MAAMA,KAAN,CAAY;AACV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,eAAL,CAAqBD,MAArB;;AACA,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,QAAlB;AAA4BC,MAAAA;AAA5B,QAAsCL,MAA5C;AAEA,SAAKE,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb,CAPkB,CASlB;;AACA,SAAKC,WAAL,GAAmBC,UAAU,CAACC,IAA9B;AACA,SAAKC,KAAL;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKJ,WAAZ;AACD;;AAEQ,QAAHK,GAAG,GAAG;AACV;AACA,UAAMN,KAAK,GAAG,KAAKA,KAAL,YAAsBO,OAAtB,GAAgC,MAAM,KAAKP,KAA3C,GAAmD,KAAKA,KAAtE,CAFU,CAIV;;AACA,QAAI;AACFA,MAAAA,KAAK;AACL,WAAKC,WAAL,GAAmBC,UAAU,CAACM,OAA9B;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAKC,cAAL,GAAsBD,CAAtB;AACA,WAAKR,WAAL,GAAmBC,UAAU,CAACS,IAA9B;AACD;AACF;AAED;AACF;AACA;AACA;;;AACEf,EAAAA,eAAe,CAACD,MAAD,EAAS;AACtBiB,mBAAMC,cAAN,CAAqBlB,MAArB,EAA6B;AAC3BmB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OADoB;AAE3BpB,MAAAA,KAAK,EAAE;AAAEkB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAFoB;AAG3BnB,MAAAA,OAAO,EAAE;AAAEiB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAHkB;AAI3BlB,MAAAA,QAAQ,EAAE;AAAEgB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAJiB;AAK3BjB,MAAAA,KAAK,EAAE;AAAEe,QAAAA,CAAC,EAAE,UAAL;AAAiBC,QAAAA,CAAC,EAAEE;AAApB;AALoB,KAA7B;AAOD;;AAzDS;AA4DZ;AACA;AACA;;;AACA,MAAMhB,UAAU,GAAGiB,MAAM,CAACC,MAAP,CAAc;AAC/BjB,EAAAA,IAAI,EAAE,MADyB;AAE/BQ,EAAAA,IAAI,EAAE,MAFyB;AAG/BH,EAAAA,OAAO,EAAE;AAHsB,CAAd,CAAnB;eAMef,K;;AACf4B,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,KADe;AAEfS,EAAAA;AAFe,CAAjB","sourcesContent":["/**\n * @module SecurityCheck\n */\n\nimport Utils from '../Utils';\nimport { isFunction, isString } from 'lodash';\n\n/**\n * A security check.\n * @class Check\n */\nclass Check {\n  /**\n   * Constructs a new security check.\n   * @param {Object} params The parameters.\n   * @param {String} params.title The title.\n   * @param {String} params.warning The warning message if the check fails.\n   * @param {String} params.solution The solution to fix the check.\n   * @param {Promise} params.check The check as synchronous or asynchronous function.\n   */\n  constructor(params) {\n    this._validateParams(params);\n    const { title, warning, solution, check } = params;\n\n    this.title = title;\n    this.warning = warning;\n    this.solution = solution;\n    this.check = check;\n\n    // Set default properties\n    this._checkState = CheckState.none;\n    this.error;\n  }\n\n  /**\n   * Returns the current check state.\n   * @return {CheckState} The check state.\n   */\n  checkState() {\n    return this._checkState;\n  }\n\n  async run() {\n    // Get check as synchronous or asynchronous function\n    const check = this.check instanceof Promise ? await this.check : this.check;\n\n    // Run check\n    try {\n      check();\n      this._checkState = CheckState.success;\n    } catch (e) {\n      this.stateFailError = e;\n      this._checkState = CheckState.fail;\n    }\n  }\n\n  /**\n   * Validates the constructor parameters.\n   * @param {Object} params The parameters to validate.\n   */\n  _validateParams(params) {\n    Utils.validateParams(params, {\n      group: { t: 'string', v: isString },\n      title: { t: 'string', v: isString },\n      warning: { t: 'string', v: isString },\n      solution: { t: 'string', v: isString },\n      check: { t: 'function', v: isFunction },\n    });\n  }\n}\n\n/**\n * The check state.\n */\nconst CheckState = Object.freeze({\n  none: 'none',\n  fail: 'fail',\n  success: 'success',\n});\n\nexport default Check;\nmodule.exports = {\n  Check,\n  CheckState,\n};\n"]}