"use strict";function cov_227x0c6q1m(){var path="/parse-server/lib/GraphQL/helpers/objectsQueries.js";var hash="e3311fe67bdd98ff85fd4c43fd72ff901388d860";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/GraphQL/helpers/objectsQueries.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:108}},"2":{start:{line:8,column:12},end:{line:8,column:57}},"3":{start:{line:10,column:20},end:{line:10,column:44}},"4":{start:{line:12,column:12},end:{line:12,column:57}},"5":{start:{line:14,column:13},end:{line:14,column:45}},"6":{start:{line:16,column:39},end:{line:16,column:93}},"7":{start:{line:21,column:25},end:{line:44,column:9}},"8":{start:{line:21,column:57},end:{line:44,column:9}},"9":{start:{line:22,column:14},end:{line:22,column:32}},"10":{start:{line:24,column:2},end:{line:40,column:3}},"11":{start:{line:25,column:4},end:{line:25,column:57}},"12":{start:{line:25,column:44},end:{line:25,column:57}},"13":{start:{line:27,column:4},end:{line:39,column:5}},"14":{start:{line:28,column:23},end:{line:30,column:58}},"15":{start:{line:30,column:12},end:{line:30,column:57}},"16":{start:{line:32,column:6},end:{line:35,column:7}},"17":{start:{line:34,column:8},end:{line:34,column:21}},"18":{start:{line:36,column:11},end:{line:39,column:5}},"19":{start:{line:38,column:6},end:{line:38,column:19}},"20":{start:{line:43,column:2},end:{line:43,column:14}},"21":{start:{line:48,column:0},end:{line:48,column:44}},"22":{start:{line:50,column:18},end:{line:88,column:1}},"23":{start:{line:51,column:18},end:{line:51,column:20}},"24":{start:{line:53,column:2},end:{line:61,column:3}},"25":{start:{line:54,column:4},end:{line:58,column:5}},"26":{start:{line:56,column:10},end:{line:56,column:38}},"27":{start:{line:57,column:6},end:{line:57,column:26}},"28":{start:{line:60,column:4},end:{line:60,column:19}},"29":{start:{line:63,column:2},end:{line:69,column:3}},"30":{start:{line:64,column:4},end:{line:64,column:30}},"31":{start:{line:66,column:4},end:{line:68,column:5}},"32":{start:{line:67,column:6},end:{line:67,column:60}},"33":{start:{line:71,column:2},end:{line:73,column:3}},"34":{start:{line:72,column:4},end:{line:72,column:44}},"35":{start:{line:75,column:19},end:{line:75,column:116}},"36":{start:{line:77,column:2},end:{line:79,column:3}},"37":{start:{line:78,column:4},end:{line:78,column:93}},"38":{start:{line:81,column:17},end:{line:81,column:36}},"39":{start:{line:83,column:2},end:{line:85,column:3}},"40":{start:{line:84,column:4},end:{line:84,column:31}},"41":{start:{line:87,column:2},end:{line:87,column:16}},"42":{start:{line:90,column:0},end:{line:90,column:30}},"43":{start:{line:92,column:20},end:{line:215,column:1}},"44":{start:{line:93,column:2},end:{line:95,column:3}},"45":{start:{line:94,column:4},end:{line:94,column:15}},"46":{start:{line:97,column:2},end:{line:97,column:73}},"47":{start:{line:98,column:34},end:{line:98,column:111}},"48":{start:{line:101,column:6},end:{line:101,column:29}},"49":{start:{line:105,column:6},end:{line:105,column:29}},"50":{start:{line:106,column:17},end:{line:106,column:26}},"51":{start:{line:108,column:2},end:{line:127,column:3}},"52":{start:{line:109,column:28},end:{line:112,column:5}},"53":{start:{line:114,column:4},end:{line:116,column:5}},"54":{start:{line:115,column:6},end:{line:115,column:54}},"55":{start:{line:118,column:4},end:{line:120,column:5}},"56":{start:{line:119,column:6},end:{line:119,column:70}},"57":{start:{line:122,column:4},end:{line:122,column:127}},"58":{start:{line:124,column:4},end:{line:126,column:5}},"59":{start:{line:125,column:6},end:{line:125,column:30}},"60":{start:{line:129,column:18},end:{line:129,column:20}},"61":{start:{line:131,column:2},end:{line:172,column:3}},"62":{start:{line:131,column:35},end:{line:131,column:94}},"63":{start:{line:132,column:4},end:{line:136,column:5}},"64":{start:{line:133,column:6},end:{line:133,column:28}},"65":{start:{line:135,column:6},end:{line:135,column:26}},"66":{start:{line:138,column:4},end:{line:169,column:5}},"67":{start:{line:139,column:6},end:{line:141,column:7}},"68":{start:{line:140,column:8},end:{line:140,column:30}},"69":{start:{line:143,column:6},end:{line:145,column:7}},"70":{start:{line:144,column:8},end:{line:144,column:28}},"71":{start:{line:147,column:6},end:{line:150,column:7}},"72":{start:{line:149,column:8},end:{line:149,column:40}},"73":{start:{line:152,column:6},end:{line:156,column:7}},"74":{start:{line:154,column:12},end:{line:154,column:40}},"75":{start:{line:155,column:8},end:{line:155,column:28}},"76":{start:{line:158,column:6},end:{line:160,column:7}},"77":{start:{line:159,column:8},end:{line:159,column:40}},"78":{start:{line:162,column:6},end:{line:164,column:7}},"79":{start:{line:163,column:8},end:{line:163,column:34}},"80":{start:{line:166,column:6},end:{line:168,column:7}},"81":{start:{line:167,column:8},end:{line:167,column:62}},"82":{start:{line:171,column:4},end:{line:171,column:22}},"83":{start:{line:174,column:2},end:{line:176,column:3}},"84":{start:{line:175,column:4},end:{line:175,column:25}},"85":{start:{line:178,column:2},end:{line:180,column:3}},"86":{start:{line:179,column:4},end:{line:179,column:44}},"87":{start:{line:182,column:2},end:{line:184,column:3}},"88":{start:{line:183,column:4},end:{line:183,column:60}},"89":{start:{line:188,column:2},end:{line:192,column:3}},"90":{start:{line:189,column:23},end:{line:189,column:118}},"91":{start:{line:190,column:4},end:{line:190,column:33}},"92":{start:{line:191,column:4},end:{line:191,column:29}},"93":{start:{line:194,column:14},end:{line:194,column:18}},"94":{start:{line:195,column:17},end:{line:195,column:21}},"95":{start:{line:197,column:2},end:{line:208,column:3}},"96":{start:{line:198,column:4},end:{line:201,column:8}},"97":{start:{line:198,column:44},end:{line:201,column:5}},"98":{start:{line:202,column:4},end:{line:207,column:6}},"99":{start:{line:210,column:2},end:{line:214,column:4}},"100":{start:{line:217,column:0},end:{line:217,column:34}},"101":{start:{line:219,column:30},end:{line:306,column:1}},"102":{start:{line:220,column:13},end:{line:220,column:22}},"103":{start:{line:221,column:14},end:{line:221,column:23}},"104":{start:{line:222,column:23},end:{line:222,column:28}},"105":{start:{line:224,column:2},end:{line:230,column:3}},"106":{start:{line:225,column:4},end:{line:227,column:5}},"107":{start:{line:226,column:6},end:{line:226,column:107}},"108":{start:{line:229,column:4},end:{line:229,column:21}},"109":{start:{line:233,column:2},end:{line:242,column:3}},"110":{start:{line:234,column:4},end:{line:234,column:53}},"111":{start:{line:236,column:4},end:{line:238,column:5}},"112":{start:{line:237,column:6},end:{line:237,column:102}},"113":{start:{line:241,column:4},end:{line:241,column:37}},"114":{start:{line:245,column:2},end:{line:252,column:3}},"115":{start:{line:246,column:4},end:{line:248,column:5}},"116":{start:{line:247,column:6},end:{line:247,column:108}},"117":{start:{line:251,column:4},end:{line:251,column:18}},"118":{start:{line:255,column:2},end:{line:270,column:3}},"119":{start:{line:257,column:4},end:{line:257,column:55}},"120":{start:{line:259,column:4},end:{line:261,column:5}},"121":{start:{line:260,column:6},end:{line:260,column:103}},"122":{start:{line:263,column:4},end:{line:269,column:5}},"123":{start:{line:265,column:6},end:{line:265,column:16}},"124":{start:{line:266,column:11},end:{line:269,column:5}},"125":{start:{line:268,column:6},end:{line:268,column:35}},"126":{start:{line:273,column:2},end:{line:299,column:3}},"127":{start:{line:274,column:4},end:{line:276,column:5}},"128":{start:{line:275,column:6},end:{line:275,column:107}},"129":{start:{line:278,column:4},end:{line:281,column:5}},"130":{start:{line:280,column:6},end:{line:280,column:22}},"131":{start:{line:283,column:4},end:{line:298,column:5}},"132":{start:{line:285,column:6},end:{line:290,column:7}},"133":{start:{line:287,column:8},end:{line:287,column:44}},"134":{start:{line:289,column:8},end:{line:289,column:21}},"135":{start:{line:291,column:11},end:{line:298,column:5}},"136":{start:{line:293,column:6},end:{line:293,column:16}},"137":{start:{line:296,column:6},end:{line:296,column:19}},"138":{start:{line:297,column:6},end:{line:297,column:28}},"139":{start:{line:301,column:2},end:{line:305,column:4}},"140":{start:{line:308,column:0},end:{line:308,column:54}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:16,column:9},end:{line:16,column:31}},loc:{start:{line:16,column:37},end:{line:16,column:95}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:25},end:{line:21,column:26}},loc:{start:{line:21,column:57},end:{line:44,column:9}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:85},end:{line:21,column:86}},loc:{start:{line:21,column:96},end:{line:44,column:1}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:28,column:41},end:{line:28,column:42}},loc:{start:{line:30,column:12},end:{line:30,column:57}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:18},end:{line:50,column:19}},loc:{start:{line:50,column:137},end:{line:88,column:1}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:54,column:44},end:{line:54,column:45}},loc:{start:{line:56,column:10},end:{line:56,column:38}},line:56},"6":{name:"(anonymous_6)",decl:{start:{line:92,column:20},end:{line:92,column:21}},loc:{start:{line:92,column:234},end:{line:215,column:1}},line:92},"7":{name:"(anonymous_7)",decl:{start:{line:131,column:26},end:{line:131,column:27}},loc:{start:{line:131,column:35},end:{line:131,column:94}},line:131},"8":{name:"(anonymous_8)",decl:{start:{line:152,column:46},end:{line:152,column:47}},loc:{start:{line:154,column:12},end:{line:154,column:40}},line:154},"9":{name:"(anonymous_9)",decl:{start:{line:198,column:24},end:{line:198,column:25}},loc:{start:{line:198,column:44},end:{line:201,column:5}},line:198},"10":{name:"(anonymous_10)",decl:{start:{line:219,column:30},end:{line:219,column:31}},loc:{start:{line:219,column:83},end:{line:306,column:1}},line:219}},branchMap:{"0":{loc:{start:{line:16,column:46},end:{line:16,column:92}},type:"cond-expr",locations:[{start:{line:16,column:70},end:{line:16,column:73}},{start:{line:16,column:76},end:{line:16,column:92}}],line:16},"1":{loc:{start:{line:16,column:46},end:{line:16,column:67}},type:"binary-expr",locations:[{start:{line:16,column:46},end:{line:16,column:49}},{start:{line:16,column:53},end:{line:16,column:67}}],line:16},"2":{loc:{start:{line:21,column:57},end:{line:44,column:9}},type:"cond-expr",locations:[{start:{line:21,column:64},end:{line:44,column:2}},{start:{line:44,column:5},end:{line:44,column:9}}],line:21},"3":{loc:{start:{line:24,column:2},end:{line:40,column:3}},type:"if",locations:[{start:{line:24,column:2},end:{line:40,column:3}},{start:{line:24,column:2},end:{line:40,column:3}}],line:24},"4":{loc:{start:{line:25,column:4},end:{line:25,column:57}},type:"if",locations:[{start:{line:25,column:4},end:{line:25,column:57}},{start:{line:25,column:4},end:{line:25,column:57}}],line:25},"5":{loc:{start:{line:27,column:4},end:{line:39,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:39,column:5}},{start:{line:27,column:4},end:{line:39,column:5}}],line:27},"6":{loc:{start:{line:32,column:6},end:{line:35,column:7}},type:"if",locations:[{start:{line:32,column:6},end:{line:35,column:7}},{start:{line:32,column:6},end:{line:35,column:7}}],line:32},"7":{loc:{start:{line:32,column:10},end:{line:32,column:45}},type:"binary-expr",locations:[{start:{line:32,column:10},end:{line:32,column:18}},{start:{line:32,column:22},end:{line:32,column:45}}],line:32},"8":{loc:{start:{line:36,column:11},end:{line:39,column:5}},type:"if",locations:[{start:{line:36,column:11},end:{line:39,column:5}},{start:{line:36,column:11},end:{line:39,column:5}}],line:36},"9":{loc:{start:{line:36,column:15},end:{line:36,column:93}},type:"binary-expr",locations:[{start:{line:36,column:15},end:{line:36,column:22}},{start:{line:36,column:26},end:{line:36,column:57}},{start:{line:36,column:61},end:{line:36,column:93}}],line:36},"10":{loc:{start:{line:54,column:4},end:{line:58,column:5}},type:"if",locations:[{start:{line:54,column:4},end:{line:58,column:5}},{start:{line:54,column:4},end:{line:58,column:5}}],line:54},"11":{loc:{start:{line:63,column:2},end:{line:69,column:3}},type:"if",locations:[{start:{line:63,column:2},end:{line:69,column:3}},{start:{line:63,column:2},end:{line:69,column:3}}],line:63},"12":{loc:{start:{line:66,column:4},end:{line:68,column:5}},type:"if",locations:[{start:{line:66,column:4},end:{line:68,column:5}},{start:{line:66,column:4},end:{line:68,column:5}}],line:66},"13":{loc:{start:{line:71,column:2},end:{line:73,column:3}},type:"if",locations:[{start:{line:71,column:2},end:{line:73,column:3}},{start:{line:71,column:2},end:{line:73,column:3}}],line:71},"14":{loc:{start:{line:77,column:2},end:{line:79,column:3}},type:"if",locations:[{start:{line:77,column:2},end:{line:79,column:3}},{start:{line:77,column:2},end:{line:79,column:3}}],line:77},"15":{loc:{start:{line:77,column:6},end:{line:77,column:55}},type:"binary-expr",locations:[{start:{line:77,column:6},end:{line:77,column:23}},{start:{line:77,column:27},end:{line:77,column:55}}],line:77},"16":{loc:{start:{line:83,column:2},end:{line:85,column:3}},type:"if",locations:[{start:{line:83,column:2},end:{line:85,column:3}},{start:{line:83,column:2},end:{line:85,column:3}}],line:83},"17":{loc:{start:{line:93,column:2},end:{line:95,column:3}},type:"if",locations:[{start:{line:93,column:2},end:{line:95,column:3}},{start:{line:93,column:2},end:{line:95,column:3}}],line:93},"18":{loc:{start:{line:108,column:2},end:{line:127,column:3}},type:"if",locations:[{start:{line:108,column:2},end:{line:127,column:3}},{start:{line:108,column:2},end:{line:127,column:3}}],line:108},"19":{loc:{start:{line:114,column:4},end:{line:116,column:5}},type:"if",locations:[{start:{line:114,column:4},end:{line:116,column:5}},{start:{line:114,column:4},end:{line:116,column:5}}],line:114},"20":{loc:{start:{line:118,column:4},end:{line:120,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:120,column:5}},{start:{line:118,column:4},end:{line:120,column:5}}],line:118},"21":{loc:{start:{line:118,column:8},end:{line:118,column:63}},type:"binary-expr",locations:[{start:{line:118,column:8},end:{line:118,column:37}},{start:{line:118,column:41},end:{line:118,column:63}}],line:118},"22":{loc:{start:{line:124,column:4},end:{line:126,column:5}},type:"if",locations:[{start:{line:124,column:4},end:{line:126,column:5}},{start:{line:124,column:4},end:{line:126,column:5}}],line:124},"23":{loc:{start:{line:124,column:9},end:{line:124,column:18}},type:"binary-expr",locations:[{start:{line:124,column:9},end:{line:124,column:13}},{start:{line:124,column:17},end:{line:124,column:18}}],line:124},"24":{loc:{start:{line:131,column:2},end:{line:172,column:3}},type:"if",locations:[{start:{line:131,column:2},end:{line:172,column:3}},{start:{line:131,column:2},end:{line:172,column:3}}],line:131},"25":{loc:{start:{line:131,column:35},end:{line:131,column:94}},type:"binary-expr",locations:[{start:{line:131,column:35},end:{line:131,column:61}},{start:{line:131,column:65},end:{line:131,column:94}}],line:131},"26":{loc:{start:{line:132,column:4},end:{line:136,column:5}},type:"if",locations:[{start:{line:132,column:4},end:{line:136,column:5}},{start:{line:132,column:4},end:{line:136,column:5}}],line:132},"27":{loc:{start:{line:132,column:8},end:{line:132,column:28}},type:"binary-expr",locations:[{start:{line:132,column:8},end:{line:132,column:13}},{start:{line:132,column:17},end:{line:132,column:28}}],line:132},"28":{loc:{start:{line:138,column:4},end:{line:169,column:5}},type:"if",locations:[{start:{line:138,column:4},end:{line:169,column:5}},{start:{line:138,column:4},end:{line:169,column:5}}],line:138},"29":{loc:{start:{line:139,column:6},end:{line:141,column:7}},type:"if",locations:[{start:{line:139,column:6},end:{line:141,column:7}},{start:{line:139,column:6},end:{line:141,column:7}}],line:139},"30":{loc:{start:{line:143,column:6},end:{line:145,column:7}},type:"if",locations:[{start:{line:143,column:6},end:{line:145,column:7}},{start:{line:143,column:6},end:{line:145,column:7}}],line:143},"31":{loc:{start:{line:147,column:6},end:{line:150,column:7}},type:"if",locations:[{start:{line:147,column:6},end:{line:150,column:7}},{start:{line:147,column:6},end:{line:150,column:7}}],line:147},"32":{loc:{start:{line:147,column:10},end:{line:147,column:60}},type:"binary-expr",locations:[{start:{line:147,column:10},end:{line:147,column:25}},{start:{line:147,column:29},end:{line:147,column:60}}],line:147},"33":{loc:{start:{line:152,column:6},end:{line:156,column:7}},type:"if",locations:[{start:{line:152,column:6},end:{line:156,column:7}},{start:{line:152,column:6},end:{line:156,column:7}}],line:152},"34":{loc:{start:{line:158,column:6},end:{line:160,column:7}},type:"if",locations:[{start:{line:158,column:6},end:{line:160,column:7}},{start:{line:158,column:6},end:{line:160,column:7}}],line:158},"35":{loc:{start:{line:162,column:6},end:{line:164,column:7}},type:"if",locations:[{start:{line:162,column:6},end:{line:164,column:7}},{start:{line:162,column:6},end:{line:164,column:7}}],line:162},"36":{loc:{start:{line:162,column:10},end:{line:162,column:40}},type:"binary-expr",locations:[{start:{line:162,column:10},end:{line:162,column:29}},{start:{line:162,column:33},end:{line:162,column:40}}],line:162},"37":{loc:{start:{line:166,column:6},end:{line:168,column:7}},type:"if",locations:[{start:{line:166,column:6},end:{line:168,column:7}},{start:{line:166,column:6},end:{line:168,column:7}}],line:166},"38":{loc:{start:{line:166,column:10},end:{line:166,column:74}},type:"binary-expr",locations:[{start:{line:166,column:11},end:{line:166,column:29}},{start:{line:166,column:33},end:{line:166,column:48}},{start:{line:166,column:53},end:{line:166,column:74}}],line:166},"39":{loc:{start:{line:174,column:2},end:{line:176,column:3}},type:"if",locations:[{start:{line:174,column:2},end:{line:176,column:3}},{start:{line:174,column:2},end:{line:176,column:3}}],line:174},"40":{loc:{start:{line:174,column:6},end:{line:174,column:165}},type:"binary-expr",locations:[{start:{line:174,column:7},end:{line:174,column:39}},{start:{line:174,column:43},end:{line:174,column:94}},{start:{line:174,column:98},end:{line:174,column:145}},{start:{line:174,column:150},end:{line:174,column:165}}],line:174},"41":{loc:{start:{line:178,column:2},end:{line:180,column:3}},type:"if",locations:[{start:{line:178,column:2},end:{line:180,column:3}},{start:{line:178,column:2},end:{line:180,column:3}}],line:178},"42":{loc:{start:{line:182,column:2},end:{line:184,column:3}},type:"if",locations:[{start:{line:182,column:2},end:{line:184,column:3}},{start:{line:182,column:2},end:{line:184,column:3}}],line:182},"43":{loc:{start:{line:182,column:6},end:{line:182,column:61}},type:"binary-expr",locations:[{start:{line:182,column:6},end:{line:182,column:35}},{start:{line:182,column:39},end:{line:182,column:61}}],line:182},"44":{loc:{start:{line:188,column:2},end:{line:192,column:3}},type:"if",locations:[{start:{line:188,column:2},end:{line:192,column:3}},{start:{line:188,column:2},end:{line:192,column:3}}],line:188},"45":{loc:{start:{line:188,column:6},end:{line:188,column:75}},type:"binary-expr",locations:[{start:{line:188,column:6},end:{line:188,column:19}},{start:{line:188,column:23},end:{line:188,column:37}},{start:{line:188,column:41},end:{line:188,column:54}},{start:{line:188,column:58},end:{line:188,column:75}}],line:188},"46":{loc:{start:{line:197,column:2},end:{line:208,column:3}},type:"if",locations:[{start:{line:197,column:2},end:{line:208,column:3}},{start:{line:197,column:2},end:{line:208,column:3}}],line:197},"47":{loc:{start:{line:199,column:49},end:{line:199,column:58}},type:"binary-expr",locations:[{start:{line:199,column:49},end:{line:199,column:53}},{start:{line:199,column:57},end:{line:199,column:58}}],line:199},"48":{loc:{start:{line:203,column:23},end:{line:203,column:105}},type:"binary-expr",locations:[{start:{line:203,column:24},end:{line:203,column:32}},{start:{line:203,column:36},end:{line:203,column:48}},{start:{line:203,column:52},end:{line:203,column:57}},{start:{line:203,column:61},end:{line:203,column:70}},{start:{line:203,column:75},end:{line:203,column:93}},{start:{line:203,column:97},end:{line:203,column:105}}],line:203},"49":{loc:{start:{line:204,column:53},end:{line:204,column:62}},type:"binary-expr",locations:[{start:{line:204,column:53},end:{line:204,column:57}},{start:{line:204,column:61},end:{line:204,column:62}}],line:204},"50":{loc:{start:{line:205,column:52},end:{line:205,column:61}},type:"binary-expr",locations:[{start:{line:205,column:52},end:{line:205,column:56}},{start:{line:205,column:60},end:{line:205,column:61}}],line:205},"51":{loc:{start:{line:205,column:66},end:{line:205,column:85}},type:"binary-expr",locations:[{start:{line:205,column:66},end:{line:205,column:80}},{start:{line:205,column:84},end:{line:205,column:85}}],line:205},"52":{loc:{start:{line:206,column:20},end:{line:206,column:37}},type:"binary-expr",locations:[{start:{line:206,column:20},end:{line:206,column:28}},{start:{line:206,column:32},end:{line:206,column:37}}],line:206},"53":{loc:{start:{line:206,column:42},end:{line:206,column:51}},type:"binary-expr",locations:[{start:{line:206,column:42},end:{line:206,column:46}},{start:{line:206,column:50},end:{line:206,column:51}}],line:206},"54":{loc:{start:{line:213,column:11},end:{line:213,column:28}},type:"binary-expr",locations:[{start:{line:213,column:11},end:{line:213,column:19}},{start:{line:213,column:23},end:{line:213,column:28}}],line:213},"55":{loc:{start:{line:224,column:2},end:{line:230,column:3}},type:"if",locations:[{start:{line:224,column:2},end:{line:230,column:3}},{start:{line:224,column:2},end:{line:230,column:3}}],line:224},"56":{loc:{start:{line:224,column:6},end:{line:224,column:34}},type:"binary-expr",locations:[{start:{line:224,column:6},end:{line:224,column:15}},{start:{line:224,column:19},end:{line:224,column:34}}],line:224},"57":{loc:{start:{line:225,column:4},end:{line:227,column:5}},type:"if",locations:[{start:{line:225,column:4},end:{line:227,column:5}},{start:{line:225,column:4},end:{line:227,column:5}}],line:225},"58":{loc:{start:{line:233,column:2},end:{line:242,column:3}},type:"if",locations:[{start:{line:233,column:2},end:{line:242,column:3}},{start:{line:233,column:2},end:{line:242,column:3}}],line:233},"59":{loc:{start:{line:236,column:4},end:{line:238,column:5}},type:"if",locations:[{start:{line:236,column:4},end:{line:238,column:5}},{start:{line:236,column:4},end:{line:238,column:5}}],line:236},"60":{loc:{start:{line:236,column:8},end:{line:236,column:42}},type:"binary-expr",locations:[{start:{line:236,column:8},end:{line:236,column:14}},{start:{line:236,column:18},end:{line:236,column:29}},{start:{line:236,column:33},end:{line:236,column:42}}],line:236},"61":{loc:{start:{line:241,column:12},end:{line:241,column:21}},type:"binary-expr",locations:[{start:{line:241,column:12},end:{line:241,column:16}},{start:{line:241,column:20},end:{line:241,column:21}}],line:241},"62":{loc:{start:{line:245,column:2},end:{line:252,column:3}},type:"if",locations:[{start:{line:245,column:2},end:{line:252,column:3}},{start:{line:245,column:2},end:{line:252,column:3}}],line:245},"63":{loc:{start:{line:245,column:6},end:{line:245,column:26}},type:"binary-expr",locations:[{start:{line:245,column:6},end:{line:245,column:11}},{start:{line:245,column:15},end:{line:245,column:26}}],line:245},"64":{loc:{start:{line:246,column:4},end:{line:248,column:5}},type:"if",locations:[{start:{line:246,column:4},end:{line:248,column:5}},{start:{line:246,column:4},end:{line:248,column:5}}],line:246},"65":{loc:{start:{line:255,column:2},end:{line:270,column:3}},type:"if",locations:[{start:{line:255,column:2},end:{line:270,column:3}},{start:{line:255,column:2},end:{line:270,column:3}}],line:255},"66":{loc:{start:{line:255,column:6},end:{line:255,column:28}},type:"binary-expr",locations:[{start:{line:255,column:6},end:{line:255,column:12}},{start:{line:255,column:16},end:{line:255,column:28}}],line:255},"67":{loc:{start:{line:259,column:4},end:{line:261,column:5}},type:"if",locations:[{start:{line:259,column:4},end:{line:261,column:5}},{start:{line:259,column:4},end:{line:261,column:5}}],line:259},"68":{loc:{start:{line:259,column:8},end:{line:259,column:45}},type:"binary-expr",locations:[{start:{line:259,column:8},end:{line:259,column:15}},{start:{line:259,column:19},end:{line:259,column:31}},{start:{line:259,column:35},end:{line:259,column:45}}],line:259},"69":{loc:{start:{line:263,column:4},end:{line:269,column:5}},type:"if",locations:[{start:{line:263,column:4},end:{line:269,column:5}},{start:{line:263,column:4},end:{line:269,column:5}}],line:263},"70":{loc:{start:{line:263,column:9},end:{line:263,column:18}},type:"binary-expr",locations:[{start:{line:263,column:9},end:{line:263,column:13}},{start:{line:263,column:17},end:{line:263,column:18}}],line:263},"71":{loc:{start:{line:266,column:11},end:{line:269,column:5}},type:"if",locations:[{start:{line:266,column:11},end:{line:269,column:5}},{start:{line:266,column:11},end:{line:269,column:5}}],line:266},"72":{loc:{start:{line:266,column:15},end:{line:266,column:68}},type:"binary-expr",locations:[{start:{line:266,column:15},end:{line:266,column:21}},{start:{line:266,column:25},end:{line:266,column:36}},{start:{line:266,column:40},end:{line:266,column:68}}],line:266},"73":{loc:{start:{line:266,column:41},end:{line:266,column:50}},type:"binary-expr",locations:[{start:{line:266,column:41},end:{line:266,column:45}},{start:{line:266,column:49},end:{line:266,column:50}}],line:266},"74":{loc:{start:{line:268,column:24},end:{line:268,column:33}},type:"binary-expr",locations:[{start:{line:268,column:24},end:{line:268,column:28}},{start:{line:268,column:32},end:{line:268,column:33}}],line:268},"75":{loc:{start:{line:273,column:2},end:{line:299,column:3}},type:"if",locations:[{start:{line:273,column:2},end:{line:299,column:3}},{start:{line:273,column:2},end:{line:299,column:3}}],line:273},"76":{loc:{start:{line:273,column:6},end:{line:273,column:24}},type:"binary-expr",locations:[{start:{line:273,column:6},end:{line:273,column:10}},{start:{line:273,column:14},end:{line:273,column:24}}],line:273},"77":{loc:{start:{line:274,column:4},end:{line:276,column:5}},type:"if",locations:[{start:{line:274,column:4},end:{line:276,column:5}},{start:{line:274,column:4},end:{line:276,column:5}}],line:274},"78":{loc:{start:{line:278,column:4},end:{line:281,column:5}},type:"if",locations:[{start:{line:278,column:4},end:{line:281,column:5}},{start:{line:278,column:4},end:{line:281,column:5}}],line:278},"79":{loc:{start:{line:283,column:4},end:{line:298,column:5}},type:"if",locations:[{start:{line:283,column:4},end:{line:298,column:5}},{start:{line:283,column:4},end:{line:298,column:5}}],line:283},"80":{loc:{start:{line:283,column:8},end:{line:283,column:28}},type:"binary-expr",locations:[{start:{line:283,column:8},end:{line:283,column:13}},{start:{line:283,column:17},end:{line:283,column:28}}],line:283},"81":{loc:{start:{line:285,column:6},end:{line:290,column:7}},type:"if",locations:[{start:{line:285,column:6},end:{line:290,column:7}},{start:{line:285,column:6},end:{line:290,column:7}}],line:285},"82":{loc:{start:{line:287,column:16},end:{line:287,column:25}},type:"binary-expr",locations:[{start:{line:287,column:16},end:{line:287,column:20}},{start:{line:287,column:24},end:{line:287,column:25}}],line:287},"83":{loc:{start:{line:291,column:11},end:{line:298,column:5}},type:"if",locations:[{start:{line:291,column:11},end:{line:298,column:5}},{start:{line:291,column:11},end:{line:298,column:5}}],line:291}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0]},inputSourceMap:{version:3,sources:["../../../src/GraphQL/helpers/objectsQueries.js"],names:["needToGetAllKeys","fields","keys","parseClasses","split","some","keyName","key","type","subClass","find","className","parseClassName","targetClass","getObject","objectId","include","readPreference","includeReadPreference","config","auth","info","options","e","console","log","response","rest","get","clientSDK","context","results","length","Parse","Error","OBJECT_NOT_FOUND","object","sessionToken","findObjects","where","order","skipInput","first","after","last","before","includeAll","subqueryReadPreference","selectedFields","skipAndLimitCalculation","calculateSkipAndLimit","maxLimit","skip","limit","needToPreCount","preCount","undefined","preCountOptions","count","Object","field","startsWith","includes","findResult","edges","pageInfo","map","result","index","cursor","node","hasPreviousPage","startCursor","endCursor","hasNextPage","INVALID_QUERY"],mappings:"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",sourcesContent:["import Parse from 'parse/node';\nimport { offsetToCursor, cursorToOffset } from 'graphql-relay';\nimport rest from '../../rest';\nimport { transformQueryInputToParse } from '../transformers/query';\n\n// Eslint/Prettier conflict\n/* eslint-disable*/\nconst needToGetAllKeys = (fields, keys, parseClasses) =>\n  keys\n    ? keys.split(',').some(keyName => {\n        const key = keyName.split('.');\n        if (fields[key[0]]) {\n          if (fields[key[0]].type === 'Relation') return false;\n          if (fields[key[0]].type === 'Pointer') {\n            const subClass = parseClasses.find(\n              ({ className: parseClassName }) => fields[key[0]].targetClass === parseClassName\n            );\n            if (subClass && subClass.fields[key[1]]) {\n              // Current sub key is not custom\n              return false;\n            }\n          } else if (\n            !key[1] ||\n            fields[key[0]].type === 'Array' ||\n            fields[key[0]].type === 'Object'\n          ) {\n            // current key is not custom\n            return false;\n          }\n        }\n        // Key not found into Parse Schema so it's custom\n        return true;\n      })\n    : true;\n/* eslint-enable*/\n\nconst getObject = async (\n  className,\n  objectId,\n  keys,\n  include,\n  readPreference,\n  includeReadPreference,\n  config,\n  auth,\n  info,\n  parseClasses\n) => {\n  const options = {};\n  try {\n    if (\n      !needToGetAllKeys(\n        parseClasses.find(({ className: parseClassName }) => className === parseClassName).fields,\n        keys,\n        parseClasses\n      )\n    ) {\n      options.keys = keys;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  if (include) {\n    options.include = include;\n    if (includeReadPreference) {\n      options.includeReadPreference = includeReadPreference;\n    }\n  }\n  if (readPreference) {\n    options.readPreference = readPreference;\n  }\n\n  const response = await rest.get(\n    config,\n    auth,\n    className,\n    objectId,\n    options,\n    info.clientSDK,\n    info.context\n  );\n\n  if (!response.results || response.results.length == 0) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n  }\n\n  const object = response.results[0];\n  if (className === '_User') {\n    delete object.sessionToken;\n  }\n  return object;\n};\n\nconst findObjects = async (\n  className,\n  where,\n  order,\n  skipInput,\n  first,\n  after,\n  last,\n  before,\n  keys,\n  include,\n  includeAll,\n  readPreference,\n  includeReadPreference,\n  subqueryReadPreference,\n  config,\n  auth,\n  info,\n  selectedFields,\n  parseClasses\n) => {\n  if (!where) {\n    where = {};\n  }\n  transformQueryInputToParse(where, className, parseClasses);\n  const skipAndLimitCalculation = calculateSkipAndLimit(\n    skipInput,\n    first,\n    after,\n    last,\n    before,\n    config.maxLimit\n  );\n  let { skip } = skipAndLimitCalculation;\n  const { limit, needToPreCount } = skipAndLimitCalculation;\n  let preCount = undefined;\n  if (needToPreCount) {\n    const preCountOptions = {\n      limit: 0,\n      count: true,\n    };\n    if (readPreference) {\n      preCountOptions.readPreference = readPreference;\n    }\n    if (Object.keys(where).length > 0 && subqueryReadPreference) {\n      preCountOptions.subqueryReadPreference = subqueryReadPreference;\n    }\n    preCount = (\n      await rest.find(config, auth, className, where, preCountOptions, info.clientSDK, info.context)\n    ).count;\n    if ((skip || 0) + limit < preCount) {\n      skip = preCount - limit;\n    }\n  }\n\n  const options = {};\n\n  if (selectedFields.find(field => field.startsWith('edges.') || field.startsWith('pageInfo.'))) {\n    if (limit || limit === 0) {\n      options.limit = limit;\n    } else {\n      options.limit = 100;\n    }\n    if (options.limit !== 0) {\n      if (order) {\n        options.order = order;\n      }\n      if (skip) {\n        options.skip = skip;\n      }\n      if (config.maxLimit && options.limit > config.maxLimit) {\n        // Silently replace the limit on the query with the max configured\n        options.limit = config.maxLimit;\n      }\n      if (\n        !needToGetAllKeys(\n          parseClasses.find(({ className: parseClassName }) => className === parseClassName).fields,\n          keys,\n          parseClasses\n        )\n      ) {\n        options.keys = keys;\n      }\n      if (includeAll === true) {\n        options.includeAll = includeAll;\n      }\n      if (!options.includeAll && include) {\n        options.include = include;\n      }\n      if ((options.includeAll || options.include) && includeReadPreference) {\n        options.includeReadPreference = includeReadPreference;\n      }\n    }\n  } else {\n    options.limit = 0;\n  }\n\n  if (\n    (selectedFields.includes('count') ||\n      selectedFields.includes('pageInfo.hasPreviousPage') ||\n      selectedFields.includes('pageInfo.hasNextPage')) &&\n    !needToPreCount\n  ) {\n    options.count = true;\n  }\n\n  if (readPreference) {\n    options.readPreference = readPreference;\n  }\n  if (Object.keys(where).length > 0 && subqueryReadPreference) {\n    options.subqueryReadPreference = subqueryReadPreference;\n  }\n\n  let results, count;\n  if (options.count || !options.limit || (options.limit && options.limit > 0)) {\n    const findResult = await rest.find(\n      config,\n      auth,\n      className,\n      where,\n      options,\n      info.clientSDK,\n      info.context\n    );\n    results = findResult.results;\n    count = findResult.count;\n  }\n\n  let edges = null;\n  let pageInfo = null;\n  if (results) {\n    edges = results.map((result, index) => ({\n      cursor: offsetToCursor((skip || 0) + index),\n      node: result,\n    }));\n\n    pageInfo = {\n      hasPreviousPage:\n        ((preCount && preCount > 0) || (count && count > 0)) && skip !== undefined && skip > 0,\n      startCursor: offsetToCursor(skip || 0),\n      endCursor: offsetToCursor((skip || 0) + (results.length || 1) - 1),\n      hasNextPage: (preCount || count) > (skip || 0) + results.length,\n    };\n  }\n\n  return {\n    edges,\n    pageInfo,\n    count: preCount || count,\n  };\n};\n\nconst calculateSkipAndLimit = (skipInput, first, after, last, before, maxLimit) => {\n  let skip = undefined;\n  let limit = undefined;\n  let needToPreCount = false;\n\n  // Validates the skip input\n  if (skipInput || skipInput === 0) {\n    if (skipInput < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Skip should be a positive number');\n    }\n    skip = skipInput;\n  }\n\n  // Validates the after param\n  if (after) {\n    after = cursorToOffset(after);\n    if ((!after && after !== 0) || after < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'After is not a valid cursor');\n    }\n\n    // If skip and after are passed, a new skip is calculated by adding them\n    skip = (skip || 0) + (after + 1);\n  }\n\n  // Validates the first param\n  if (first || first === 0) {\n    if (first < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'First should be a positive number');\n    }\n\n    // The first param is translated to the limit param of the Parse legacy API\n    limit = first;\n  }\n\n  // Validates the before param\n  if (before || before === 0) {\n    // This method converts the cursor to the index of the object\n    before = cursorToOffset(before);\n    if ((!before && before !== 0) || before < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Before is not a valid cursor');\n    }\n\n    if ((skip || 0) >= before) {\n      // If the before index is less then the skip, no objects will be returned\n      limit = 0;\n    } else if ((!limit && limit !== 0) || (skip || 0) + limit > before) {\n      // If there is no limit set, the limit is calculated. Or, if the limit (plus skip) is bigger than the before index, the new limit is set.\n      limit = before - (skip || 0);\n    }\n  }\n\n  // Validates the last param\n  if (last || last === 0) {\n    if (last < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Last should be a positive number');\n    }\n\n    if (last > maxLimit) {\n      // Last can't be bigger than Parse server maxLimit config.\n      last = maxLimit;\n    }\n\n    if (limit || limit === 0) {\n      // If there is a previous limit set, it may be adjusted\n      if (last < limit) {\n        // if last is less than the current limit\n        skip = (skip || 0) + (limit - last); // The skip is adjusted\n        limit = last; // the limit is adjusted\n      }\n    } else if (last === 0) {\n      // No objects will be returned\n      limit = 0;\n    } else {\n      // No previous limit set, the limit will be equal to last and pre count is needed.\n      limit = last;\n      needToPreCount = true;\n    }\n  }\n  return {\n    skip,\n    limit,\n    needToPreCount,\n  };\n};\n\nexport { getObject, findObjects, calculateSkipAndLimit, needToGetAllKeys };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e3311fe67bdd98ff85fd4c43fd72ff901388d860"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_227x0c6q1m=function(){return actualCoverage;};}return actualCoverage;}cov_227x0c6q1m();cov_227x0c6q1m().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_227x0c6q1m().s[1]++;exports.needToGetAllKeys=exports.calculateSkipAndLimit=exports.findObjects=exports.getObject=void 0;var _node=(cov_227x0c6q1m().s[2]++,_interopRequireDefault(require("parse/node")));var _graphqlRelay=(cov_227x0c6q1m().s[3]++,require("graphql-relay"));var _rest=(cov_227x0c6q1m().s[4]++,_interopRequireDefault(require("../../rest")));var _query=(cov_227x0c6q1m().s[5]++,require("../transformers/query"));function _interopRequireDefault(obj){cov_227x0c6q1m().f[0]++;cov_227x0c6q1m().s[6]++;return(cov_227x0c6q1m().b[1][0]++,obj)&&(cov_227x0c6q1m().b[1][1]++,obj.__esModule)?(cov_227x0c6q1m().b[0][0]++,obj):(cov_227x0c6q1m().b[0][1]++,{default:obj});}// Eslint/Prettier conflict
/* eslint-disable*/cov_227x0c6q1m().s[7]++;const needToGetAllKeys=(fields,keys,parseClasses)=>{cov_227x0c6q1m().f[1]++;cov_227x0c6q1m().s[8]++;return keys?(cov_227x0c6q1m().b[2][0]++,keys.split(',').some(keyName=>{cov_227x0c6q1m().f[2]++;const key=(cov_227x0c6q1m().s[9]++,keyName.split('.'));cov_227x0c6q1m().s[10]++;if(fields[key[0]]){cov_227x0c6q1m().b[3][0]++;cov_227x0c6q1m().s[11]++;if(fields[key[0]].type==='Relation'){cov_227x0c6q1m().b[4][0]++;cov_227x0c6q1m().s[12]++;return false;}else{cov_227x0c6q1m().b[4][1]++;}cov_227x0c6q1m().s[13]++;if(fields[key[0]].type==='Pointer'){cov_227x0c6q1m().b[5][0]++;const subClass=(cov_227x0c6q1m().s[14]++,parseClasses.find(({className:parseClassName})=>{cov_227x0c6q1m().f[3]++;cov_227x0c6q1m().s[15]++;return fields[key[0]].targetClass===parseClassName;}));cov_227x0c6q1m().s[16]++;if((cov_227x0c6q1m().b[7][0]++,subClass)&&(cov_227x0c6q1m().b[7][1]++,subClass.fields[key[1]])){cov_227x0c6q1m().b[6][0]++;cov_227x0c6q1m().s[17]++;// Current sub key is not custom
return false;}else{cov_227x0c6q1m().b[6][1]++;}}else{cov_227x0c6q1m().b[5][1]++;cov_227x0c6q1m().s[18]++;if((cov_227x0c6q1m().b[9][0]++,!key[1])||(cov_227x0c6q1m().b[9][1]++,fields[key[0]].type==='Array')||(cov_227x0c6q1m().b[9][2]++,fields[key[0]].type==='Object')){cov_227x0c6q1m().b[8][0]++;cov_227x0c6q1m().s[19]++;// current key is not custom
return false;}else{cov_227x0c6q1m().b[8][1]++;}}}else{cov_227x0c6q1m().b[3][1]++;}// Key not found into Parse Schema so it's custom
cov_227x0c6q1m().s[20]++;return true;})):(cov_227x0c6q1m().b[2][1]++,true);};/* eslint-enable*/cov_227x0c6q1m().s[21]++;exports.needToGetAllKeys=needToGetAllKeys;cov_227x0c6q1m().s[22]++;const getObject=async(className,objectId,keys,include,readPreference,includeReadPreference,config,auth,info,parseClasses)=>{cov_227x0c6q1m().f[4]++;const options=(cov_227x0c6q1m().s[23]++,{});cov_227x0c6q1m().s[24]++;try{cov_227x0c6q1m().s[25]++;if(!needToGetAllKeys(parseClasses.find(({className:parseClassName})=>{cov_227x0c6q1m().f[5]++;cov_227x0c6q1m().s[26]++;return className===parseClassName;}).fields,keys,parseClasses)){cov_227x0c6q1m().b[10][0]++;cov_227x0c6q1m().s[27]++;options.keys=keys;}else{cov_227x0c6q1m().b[10][1]++;}}catch(e){cov_227x0c6q1m().s[28]++;console.log(e);}cov_227x0c6q1m().s[29]++;if(include){cov_227x0c6q1m().b[11][0]++;cov_227x0c6q1m().s[30]++;options.include=include;cov_227x0c6q1m().s[31]++;if(includeReadPreference){cov_227x0c6q1m().b[12][0]++;cov_227x0c6q1m().s[32]++;options.includeReadPreference=includeReadPreference;}else{cov_227x0c6q1m().b[12][1]++;}}else{cov_227x0c6q1m().b[11][1]++;}cov_227x0c6q1m().s[33]++;if(readPreference){cov_227x0c6q1m().b[13][0]++;cov_227x0c6q1m().s[34]++;options.readPreference=readPreference;}else{cov_227x0c6q1m().b[13][1]++;}const response=(cov_227x0c6q1m().s[35]++,await _rest.default.get(config,auth,className,objectId,options,info.clientSDK,info.context));cov_227x0c6q1m().s[36]++;if((cov_227x0c6q1m().b[15][0]++,!response.results)||(cov_227x0c6q1m().b[15][1]++,response.results.length==0)){cov_227x0c6q1m().b[14][0]++;cov_227x0c6q1m().s[37]++;throw new _node.default.Error(_node.default.Error.OBJECT_NOT_FOUND,'Object not found.');}else{cov_227x0c6q1m().b[14][1]++;}const object=(cov_227x0c6q1m().s[38]++,response.results[0]);cov_227x0c6q1m().s[39]++;if(className==='_User'){cov_227x0c6q1m().b[16][0]++;cov_227x0c6q1m().s[40]++;delete object.sessionToken;}else{cov_227x0c6q1m().b[16][1]++;}cov_227x0c6q1m().s[41]++;return object;};cov_227x0c6q1m().s[42]++;exports.getObject=getObject;cov_227x0c6q1m().s[43]++;const findObjects=async(className,where,order,skipInput,first,after,last,before,keys,include,includeAll,readPreference,includeReadPreference,subqueryReadPreference,config,auth,info,selectedFields,parseClasses)=>{cov_227x0c6q1m().f[6]++;cov_227x0c6q1m().s[44]++;if(!where){cov_227x0c6q1m().b[17][0]++;cov_227x0c6q1m().s[45]++;where={};}else{cov_227x0c6q1m().b[17][1]++;}cov_227x0c6q1m().s[46]++;(0,_query.transformQueryInputToParse)(where,className,parseClasses);const skipAndLimitCalculation=(cov_227x0c6q1m().s[47]++,calculateSkipAndLimit(skipInput,first,after,last,before,config.maxLimit));let{skip}=(cov_227x0c6q1m().s[48]++,skipAndLimitCalculation);const{limit,needToPreCount}=(cov_227x0c6q1m().s[49]++,skipAndLimitCalculation);let preCount=(cov_227x0c6q1m().s[50]++,undefined);cov_227x0c6q1m().s[51]++;if(needToPreCount){cov_227x0c6q1m().b[18][0]++;const preCountOptions=(cov_227x0c6q1m().s[52]++,{limit:0,count:true});cov_227x0c6q1m().s[53]++;if(readPreference){cov_227x0c6q1m().b[19][0]++;cov_227x0c6q1m().s[54]++;preCountOptions.readPreference=readPreference;}else{cov_227x0c6q1m().b[19][1]++;}cov_227x0c6q1m().s[55]++;if((cov_227x0c6q1m().b[21][0]++,Object.keys(where).length>0)&&(cov_227x0c6q1m().b[21][1]++,subqueryReadPreference)){cov_227x0c6q1m().b[20][0]++;cov_227x0c6q1m().s[56]++;preCountOptions.subqueryReadPreference=subqueryReadPreference;}else{cov_227x0c6q1m().b[20][1]++;}cov_227x0c6q1m().s[57]++;preCount=(await _rest.default.find(config,auth,className,where,preCountOptions,info.clientSDK,info.context)).count;cov_227x0c6q1m().s[58]++;if(((cov_227x0c6q1m().b[23][0]++,skip)||(cov_227x0c6q1m().b[23][1]++,0))+limit<preCount){cov_227x0c6q1m().b[22][0]++;cov_227x0c6q1m().s[59]++;skip=preCount-limit;}else{cov_227x0c6q1m().b[22][1]++;}}else{cov_227x0c6q1m().b[18][1]++;}const options=(cov_227x0c6q1m().s[60]++,{});cov_227x0c6q1m().s[61]++;if(selectedFields.find(field=>{cov_227x0c6q1m().f[7]++;cov_227x0c6q1m().s[62]++;return(cov_227x0c6q1m().b[25][0]++,field.startsWith('edges.'))||(cov_227x0c6q1m().b[25][1]++,field.startsWith('pageInfo.'));})){cov_227x0c6q1m().b[24][0]++;cov_227x0c6q1m().s[63]++;if((cov_227x0c6q1m().b[27][0]++,limit)||(cov_227x0c6q1m().b[27][1]++,limit===0)){cov_227x0c6q1m().b[26][0]++;cov_227x0c6q1m().s[64]++;options.limit=limit;}else{cov_227x0c6q1m().b[26][1]++;cov_227x0c6q1m().s[65]++;options.limit=100;}cov_227x0c6q1m().s[66]++;if(options.limit!==0){cov_227x0c6q1m().b[28][0]++;cov_227x0c6q1m().s[67]++;if(order){cov_227x0c6q1m().b[29][0]++;cov_227x0c6q1m().s[68]++;options.order=order;}else{cov_227x0c6q1m().b[29][1]++;}cov_227x0c6q1m().s[69]++;if(skip){cov_227x0c6q1m().b[30][0]++;cov_227x0c6q1m().s[70]++;options.skip=skip;}else{cov_227x0c6q1m().b[30][1]++;}cov_227x0c6q1m().s[71]++;if((cov_227x0c6q1m().b[32][0]++,config.maxLimit)&&(cov_227x0c6q1m().b[32][1]++,options.limit>config.maxLimit)){cov_227x0c6q1m().b[31][0]++;cov_227x0c6q1m().s[72]++;// Silently replace the limit on the query with the max configured
options.limit=config.maxLimit;}else{cov_227x0c6q1m().b[31][1]++;}cov_227x0c6q1m().s[73]++;if(!needToGetAllKeys(parseClasses.find(({className:parseClassName})=>{cov_227x0c6q1m().f[8]++;cov_227x0c6q1m().s[74]++;return className===parseClassName;}).fields,keys,parseClasses)){cov_227x0c6q1m().b[33][0]++;cov_227x0c6q1m().s[75]++;options.keys=keys;}else{cov_227x0c6q1m().b[33][1]++;}cov_227x0c6q1m().s[76]++;if(includeAll===true){cov_227x0c6q1m().b[34][0]++;cov_227x0c6q1m().s[77]++;options.includeAll=includeAll;}else{cov_227x0c6q1m().b[34][1]++;}cov_227x0c6q1m().s[78]++;if((cov_227x0c6q1m().b[36][0]++,!options.includeAll)&&(cov_227x0c6q1m().b[36][1]++,include)){cov_227x0c6q1m().b[35][0]++;cov_227x0c6q1m().s[79]++;options.include=include;}else{cov_227x0c6q1m().b[35][1]++;}cov_227x0c6q1m().s[80]++;if(((cov_227x0c6q1m().b[38][0]++,options.includeAll)||(cov_227x0c6q1m().b[38][1]++,options.include))&&(cov_227x0c6q1m().b[38][2]++,includeReadPreference)){cov_227x0c6q1m().b[37][0]++;cov_227x0c6q1m().s[81]++;options.includeReadPreference=includeReadPreference;}else{cov_227x0c6q1m().b[37][1]++;}}else{cov_227x0c6q1m().b[28][1]++;}}else{cov_227x0c6q1m().b[24][1]++;cov_227x0c6q1m().s[82]++;options.limit=0;}cov_227x0c6q1m().s[83]++;if(((cov_227x0c6q1m().b[40][0]++,selectedFields.includes('count'))||(cov_227x0c6q1m().b[40][1]++,selectedFields.includes('pageInfo.hasPreviousPage'))||(cov_227x0c6q1m().b[40][2]++,selectedFields.includes('pageInfo.hasNextPage')))&&(cov_227x0c6q1m().b[40][3]++,!needToPreCount)){cov_227x0c6q1m().b[39][0]++;cov_227x0c6q1m().s[84]++;options.count=true;}else{cov_227x0c6q1m().b[39][1]++;}cov_227x0c6q1m().s[85]++;if(readPreference){cov_227x0c6q1m().b[41][0]++;cov_227x0c6q1m().s[86]++;options.readPreference=readPreference;}else{cov_227x0c6q1m().b[41][1]++;}cov_227x0c6q1m().s[87]++;if((cov_227x0c6q1m().b[43][0]++,Object.keys(where).length>0)&&(cov_227x0c6q1m().b[43][1]++,subqueryReadPreference)){cov_227x0c6q1m().b[42][0]++;cov_227x0c6q1m().s[88]++;options.subqueryReadPreference=subqueryReadPreference;}else{cov_227x0c6q1m().b[42][1]++;}let results,count;cov_227x0c6q1m().s[89]++;if((cov_227x0c6q1m().b[45][0]++,options.count)||(cov_227x0c6q1m().b[45][1]++,!options.limit)||(cov_227x0c6q1m().b[45][2]++,options.limit)&&(cov_227x0c6q1m().b[45][3]++,options.limit>0)){cov_227x0c6q1m().b[44][0]++;const findResult=(cov_227x0c6q1m().s[90]++,await _rest.default.find(config,auth,className,where,options,info.clientSDK,info.context));cov_227x0c6q1m().s[91]++;results=findResult.results;cov_227x0c6q1m().s[92]++;count=findResult.count;}else{cov_227x0c6q1m().b[44][1]++;}let edges=(cov_227x0c6q1m().s[93]++,null);let pageInfo=(cov_227x0c6q1m().s[94]++,null);cov_227x0c6q1m().s[95]++;if(results){cov_227x0c6q1m().b[46][0]++;cov_227x0c6q1m().s[96]++;edges=results.map((result,index)=>{cov_227x0c6q1m().f[9]++;cov_227x0c6q1m().s[97]++;return{cursor:(0,_graphqlRelay.offsetToCursor)(((cov_227x0c6q1m().b[47][0]++,skip)||(cov_227x0c6q1m().b[47][1]++,0))+index),node:result};});cov_227x0c6q1m().s[98]++;pageInfo={hasPreviousPage:((cov_227x0c6q1m().b[48][0]++,preCount)&&(cov_227x0c6q1m().b[48][1]++,preCount>0)||(cov_227x0c6q1m().b[48][2]++,count)&&(cov_227x0c6q1m().b[48][3]++,count>0))&&(cov_227x0c6q1m().b[48][4]++,skip!==undefined)&&(cov_227x0c6q1m().b[48][5]++,skip>0),startCursor:(0,_graphqlRelay.offsetToCursor)((cov_227x0c6q1m().b[49][0]++,skip)||(cov_227x0c6q1m().b[49][1]++,0)),endCursor:(0,_graphqlRelay.offsetToCursor)(((cov_227x0c6q1m().b[50][0]++,skip)||(cov_227x0c6q1m().b[50][1]++,0))+((cov_227x0c6q1m().b[51][0]++,results.length)||(cov_227x0c6q1m().b[51][1]++,1))-1),hasNextPage:((cov_227x0c6q1m().b[52][0]++,preCount)||(cov_227x0c6q1m().b[52][1]++,count))>((cov_227x0c6q1m().b[53][0]++,skip)||(cov_227x0c6q1m().b[53][1]++,0))+results.length};}else{cov_227x0c6q1m().b[46][1]++;}cov_227x0c6q1m().s[99]++;return{edges,pageInfo,count:(cov_227x0c6q1m().b[54][0]++,preCount)||(cov_227x0c6q1m().b[54][1]++,count)};};cov_227x0c6q1m().s[100]++;exports.findObjects=findObjects;cov_227x0c6q1m().s[101]++;const calculateSkipAndLimit=(skipInput,first,after,last,before,maxLimit)=>{cov_227x0c6q1m().f[10]++;let skip=(cov_227x0c6q1m().s[102]++,undefined);let limit=(cov_227x0c6q1m().s[103]++,undefined);let needToPreCount=(cov_227x0c6q1m().s[104]++,false);// Validates the skip input
cov_227x0c6q1m().s[105]++;if((cov_227x0c6q1m().b[56][0]++,skipInput)||(cov_227x0c6q1m().b[56][1]++,skipInput===0)){cov_227x0c6q1m().b[55][0]++;cov_227x0c6q1m().s[106]++;if(skipInput<0){cov_227x0c6q1m().b[57][0]++;cov_227x0c6q1m().s[107]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'Skip should be a positive number');}else{cov_227x0c6q1m().b[57][1]++;}cov_227x0c6q1m().s[108]++;skip=skipInput;}else{cov_227x0c6q1m().b[55][1]++;}// Validates the after param
cov_227x0c6q1m().s[109]++;if(after){cov_227x0c6q1m().b[58][0]++;cov_227x0c6q1m().s[110]++;after=(0,_graphqlRelay.cursorToOffset)(after);cov_227x0c6q1m().s[111]++;if((cov_227x0c6q1m().b[60][0]++,!after)&&(cov_227x0c6q1m().b[60][1]++,after!==0)||(cov_227x0c6q1m().b[60][2]++,after<0)){cov_227x0c6q1m().b[59][0]++;cov_227x0c6q1m().s[112]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'After is not a valid cursor');}else{cov_227x0c6q1m().b[59][1]++;}// If skip and after are passed, a new skip is calculated by adding them
cov_227x0c6q1m().s[113]++;skip=((cov_227x0c6q1m().b[61][0]++,skip)||(cov_227x0c6q1m().b[61][1]++,0))+(after+1);}else{cov_227x0c6q1m().b[58][1]++;}// Validates the first param
cov_227x0c6q1m().s[114]++;if((cov_227x0c6q1m().b[63][0]++,first)||(cov_227x0c6q1m().b[63][1]++,first===0)){cov_227x0c6q1m().b[62][0]++;cov_227x0c6q1m().s[115]++;if(first<0){cov_227x0c6q1m().b[64][0]++;cov_227x0c6q1m().s[116]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'First should be a positive number');}else{cov_227x0c6q1m().b[64][1]++;}// The first param is translated to the limit param of the Parse legacy API
cov_227x0c6q1m().s[117]++;limit=first;}else{cov_227x0c6q1m().b[62][1]++;}// Validates the before param
cov_227x0c6q1m().s[118]++;if((cov_227x0c6q1m().b[66][0]++,before)||(cov_227x0c6q1m().b[66][1]++,before===0)){cov_227x0c6q1m().b[65][0]++;cov_227x0c6q1m().s[119]++;// This method converts the cursor to the index of the object
before=(0,_graphqlRelay.cursorToOffset)(before);cov_227x0c6q1m().s[120]++;if((cov_227x0c6q1m().b[68][0]++,!before)&&(cov_227x0c6q1m().b[68][1]++,before!==0)||(cov_227x0c6q1m().b[68][2]++,before<0)){cov_227x0c6q1m().b[67][0]++;cov_227x0c6q1m().s[121]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'Before is not a valid cursor');}else{cov_227x0c6q1m().b[67][1]++;}cov_227x0c6q1m().s[122]++;if(((cov_227x0c6q1m().b[70][0]++,skip)||(cov_227x0c6q1m().b[70][1]++,0))>=before){cov_227x0c6q1m().b[69][0]++;cov_227x0c6q1m().s[123]++;// If the before index is less then the skip, no objects will be returned
limit=0;}else{cov_227x0c6q1m().b[69][1]++;cov_227x0c6q1m().s[124]++;if((cov_227x0c6q1m().b[72][0]++,!limit)&&(cov_227x0c6q1m().b[72][1]++,limit!==0)||(cov_227x0c6q1m().b[72][2]++,((cov_227x0c6q1m().b[73][0]++,skip)||(cov_227x0c6q1m().b[73][1]++,0))+limit>before)){cov_227x0c6q1m().b[71][0]++;cov_227x0c6q1m().s[125]++;// If there is no limit set, the limit is calculated. Or, if the limit (plus skip) is bigger than the before index, the new limit is set.
limit=before-((cov_227x0c6q1m().b[74][0]++,skip)||(cov_227x0c6q1m().b[74][1]++,0));}else{cov_227x0c6q1m().b[71][1]++;}}}else{cov_227x0c6q1m().b[65][1]++;}// Validates the last param
cov_227x0c6q1m().s[126]++;if((cov_227x0c6q1m().b[76][0]++,last)||(cov_227x0c6q1m().b[76][1]++,last===0)){cov_227x0c6q1m().b[75][0]++;cov_227x0c6q1m().s[127]++;if(last<0){cov_227x0c6q1m().b[77][0]++;cov_227x0c6q1m().s[128]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'Last should be a positive number');}else{cov_227x0c6q1m().b[77][1]++;}cov_227x0c6q1m().s[129]++;if(last>maxLimit){cov_227x0c6q1m().b[78][0]++;cov_227x0c6q1m().s[130]++;// Last can't be bigger than Parse server maxLimit config.
last=maxLimit;}else{cov_227x0c6q1m().b[78][1]++;}cov_227x0c6q1m().s[131]++;if((cov_227x0c6q1m().b[80][0]++,limit)||(cov_227x0c6q1m().b[80][1]++,limit===0)){cov_227x0c6q1m().b[79][0]++;cov_227x0c6q1m().s[132]++;// If there is a previous limit set, it may be adjusted
if(last<limit){cov_227x0c6q1m().b[81][0]++;cov_227x0c6q1m().s[133]++;// if last is less than the current limit
skip=((cov_227x0c6q1m().b[82][0]++,skip)||(cov_227x0c6q1m().b[82][1]++,0))+(limit-last);// The skip is adjusted
cov_227x0c6q1m().s[134]++;limit=last;// the limit is adjusted
}else{cov_227x0c6q1m().b[81][1]++;}}else{cov_227x0c6q1m().b[79][1]++;cov_227x0c6q1m().s[135]++;if(last===0){cov_227x0c6q1m().b[83][0]++;cov_227x0c6q1m().s[136]++;// No objects will be returned
limit=0;}else{cov_227x0c6q1m().b[83][1]++;cov_227x0c6q1m().s[137]++;// No previous limit set, the limit will be equal to last and pre count is needed.
limit=last;cov_227x0c6q1m().s[138]++;needToPreCount=true;}}}else{cov_227x0c6q1m().b[75][1]++;}cov_227x0c6q1m().s[139]++;return{skip,limit,needToPreCount};};cov_227x0c6q1m().s[140]++;exports.calculateSkipAndLimit=calculateSkipAndLimit;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,