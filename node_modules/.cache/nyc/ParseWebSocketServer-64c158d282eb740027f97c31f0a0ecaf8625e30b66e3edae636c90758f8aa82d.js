"use strict";function cov_i4lps95f2(){var path="/parse-server/lib/LiveQuery/ParseWebSocketServer.js";var hash="ce2f504af17787f4a83868e33694f64ec997f33c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/LiveQuery/ParseWebSocketServer.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:63}},"2":{start:{line:8,column:21},end:{line:8,column:57}},"3":{start:{line:10,column:17},end:{line:10,column:65}},"4":{start:{line:12,column:14},end:{line:12,column:58}},"5":{start:{line:14,column:14},end:{line:14,column:55}},"6":{start:{line:16,column:12},end:{line:16,column:27}},"7":{start:{line:18,column:39},end:{line:18,column:93}},"8":{start:{line:22,column:4},end:{line:22,column:27}},"9":{start:{line:23,column:16},end:{line:23,column:96}},"10":{start:{line:25,column:4},end:{line:27,column:6}},"11":{start:{line:26,column:6},end:{line:26,column:69}},"12":{start:{line:29,column:4},end:{line:44,column:6}},"13":{start:{line:30,column:6},end:{line:34,column:9}},"14":{start:{line:31,column:8},end:{line:31,column:45}},"15":{start:{line:33,column:8},end:{line:33,column:61}},"16":{start:{line:35,column:6},end:{line:35,column:40}},"17":{start:{line:37,column:29},end:{line:43,column:46}},"18":{start:{line:38,column:8},end:{line:42,column:9}},"19":{start:{line:39,column:10},end:{line:39,column:20}},"20":{start:{line:41,column:10},end:{line:41,column:40}},"21":{start:{line:46,column:4},end:{line:48,column:6}},"22":{start:{line:47,column:6},end:{line:47,column:35}},"23":{start:{line:50,column:4},end:{line:50,column:16}},"24":{start:{line:51,column:4},end:{line:51,column:22}},"25":{start:{line:55,column:4},end:{line:57,column:5}},"26":{start:{line:56,column:6},end:{line:56,column:26}},"27":{start:{line:62,column:0},end:{line:62,column:52}},"28":{start:{line:66,column:4},end:{line:66,column:12}},"29":{start:{line:68,column:4},end:{line:68,column:101}},"30":{start:{line:68,column:30},end:{line:68,column:100}},"31":{start:{line:70,column:4},end:{line:70,column:47}},"32":{start:{line:70,column:23},end:{line:70,column:46}},"33":{start:{line:72,column:4},end:{line:72,column:17}},"34":{start:{line:76,column:4},end:{line:76,column:26}},"35":{start:{line:81,column:0},end:{line:81,column:40}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:2},end:{line:21,column:3}},loc:{start:{line:21,column:41},end:{line:52,column:3}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:19},end:{line:25,column:20}},loc:{start:{line:25,column:25},end:{line:27,column:5}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:29,column:23},end:{line:29,column:24}},loc:{start:{line:29,column:29},end:{line:44,column:5}},line:29},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:21},end:{line:30,column:22}},loc:{start:{line:30,column:30},end:{line:34,column:7}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:41},end:{line:37,column:42}},loc:{start:{line:37,column:47},end:{line:43,column:7}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:46,column:18},end:{line:46,column:19}},loc:{start:{line:46,column:27},end:{line:48,column:5}},line:46},"7":{name:"(anonymous_7)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:10},end:{line:58,column:3}},line:54},"8":{name:"(anonymous_8)",decl:{start:{line:65,column:2},end:{line:65,column:3}},loc:{start:{line:65,column:18},end:{line:73,column:3}},line:65},"9":{name:"(anonymous_9)",decl:{start:{line:68,column:19},end:{line:68,column:20}},loc:{start:{line:68,column:30},end:{line:68,column:100}},line:68},"10":{name:"(anonymous_10)",decl:{start:{line:70,column:17},end:{line:70,column:18}},loc:{start:{line:70,column:23},end:{line:70,column:46}},line:70},"11":{name:"(anonymous_11)",decl:{start:{line:75,column:2},end:{line:75,column:3}},loc:{start:{line:75,column:16},end:{line:77,column:3}},line:75}},branchMap:{"0":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"1":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"2":{loc:{start:{line:38,column:8},end:{line:42,column:9}},type:"if",locations:[{start:{line:38,column:8},end:{line:42,column:9}},{start:{line:38,column:8},end:{line:42,column:9}}],line:38},"3":{loc:{start:{line:43,column:9},end:{line:43,column:45}},type:"binary-expr",locations:[{start:{line:43,column:9},end:{line:43,column:32}},{start:{line:43,column:36},end:{line:43,column:45}}],line:43},"4":{loc:{start:{line:55,column:4},end:{line:57,column:5}},type:"if",locations:[{start:{line:55,column:4},end:{line:57,column:5}},{start:{line:55,column:4},end:{line:57,column:5}}],line:55},"5":{loc:{start:{line:55,column:8},end:{line:55,column:40}},type:"binary-expr",locations:[{start:{line:55,column:8},end:{line:55,column:19}},{start:{line:55,column:23},end:{line:55,column:40}}],line:55},"6":{loc:{start:{line:68,column:51},end:{line:68,column:99}},type:"cond-expr",locations:[{start:{line:68,column:77},end:{line:68,column:89}},{start:{line:68,column:92},end:{line:68,column:99}}],line:68},"7":{loc:{start:{line:68,column:51},end:{line:68,column:74}},type:"binary-expr",locations:[{start:{line:68,column:51},end:{line:68,column:58}},{start:{line:68,column:62},end:{line:68,column:74}}],line:68}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},inputSourceMap:{version:3,sources:["../../src/LiveQuery/ParseWebSocketServer.js"],names:["ParseWebSocketServer","constructor","server","onConnect","config","wss","wssAdapter","WSAdapter","onListen","logger","info","onConnection","ws","on","error","message","ParseWebSocket","pingIntervalId","setInterval","readyState","OPEN","ping","clearInterval","websocketTimeout","onError","start","close","events","EventEmitter","onmessage","request","emit","data","onclose","send"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,oBAAN,CAA2B;AAGhCC,EAAAA,WAAW,CAACC,MAAD,EAAcC,SAAd,EAAmCC,MAAnC,EAA2C;AACpDA,IAAAA,MAAM,CAACF,MAAP,GAAgBA,MAAhB;AACA,UAAMG,GAAG,GAAG,gCAAYD,MAAM,CAACE,UAAnB,EAA+BC,oBAA/B,EAA0CH,MAA1C,CAAZ;;AACAC,IAAAA,GAAG,CAACG,QAAJ,GAAe,MAAM;AACnBC,sBAAOC,IAAP,CAAY,wCAAZ;AACD,KAFD;;AAGAL,IAAAA,GAAG,CAACM,YAAJ,GAAmBC,EAAE,IAAI;AACvBA,MAAAA,EAAE,CAACC,EAAH,CAAM,OAAN,EAAeC,KAAK,IAAI;AACtBL,wBAAOK,KAAP,CAAaA,KAAK,CAACC,OAAnB;;AACAN,wBAAOK,KAAP,CAAa,mBAAQF,EAAR,EAAY,KAAZ,CAAb;AACD,OAHD;AAIAT,MAAAA,SAAS,CAAC,IAAIa,cAAJ,CAAmBJ,EAAnB,CAAD,CAAT,CALuB,CAMvB;;AACA,YAAMK,cAAc,GAAGC,WAAW,CAAC,MAAM;AACvC,YAAIN,EAAE,CAACO,UAAH,IAAiBP,EAAE,CAACQ,IAAxB,EAA8B;AAC5BR,UAAAA,EAAE,CAACS,IAAH;AACD,SAFD,MAEO;AACLC,UAAAA,aAAa,CAACL,cAAD,CAAb;AACD;AACF,OANiC,EAM/Bb,MAAM,CAACmB,gBAAP,IAA2B,KAAK,IAND,CAAlC;AAOD,KAdD;;AAeAlB,IAAAA,GAAG,CAACmB,OAAJ,GAAcV,KAAK,IAAI;AACrBL,sBAAOK,KAAP,CAAaA,KAAb;AACD,KAFD;;AAGAT,IAAAA,GAAG,CAACoB,KAAJ;AACA,SAAKvB,MAAL,GAAcG,GAAd;AACD;;AAEDqB,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKxB,MAAL,IAAe,KAAKA,MAAL,CAAYwB,KAA/B,EAAsC;AACpC,WAAKxB,MAAL,CAAYwB,KAAZ;AACD;AACF;;AAnC+B;;;;AAsC3B,MAAMV,cAAN,SAA6BW,gBAAOC,YAApC,CAAiD;AAGtD3B,EAAAA,WAAW,CAACW,EAAD,EAAU;AACnB;;AACAA,IAAAA,EAAE,CAACiB,SAAH,GAAeC,OAAO,IACpB,KAAKC,IAAL,CAAU,SAAV,EAAqBD,OAAO,IAAIA,OAAO,CAACE,IAAnB,GAA0BF,OAAO,CAACE,IAAlC,GAAyCF,OAA9D,CADF;;AAEAlB,IAAAA,EAAE,CAACqB,OAAH,GAAa,MAAM,KAAKF,IAAL,CAAU,YAAV,CAAnB;;AACA,SAAKnB,EAAL,GAAUA,EAAV;AACD;;AAEDsB,EAAAA,IAAI,CAACnB,OAAD,EAAqB;AACvB,SAAKH,EAAL,CAAQsB,IAAR,CAAanB,OAAb;AACD;;AAbqD",sourcesContent:["import { loadAdapter } from '../Adapters/AdapterLoader';\nimport { WSAdapter } from '../Adapters/WebSocketServer/WSAdapter';\nimport logger from '../logger';\nimport events from 'events';\nimport { inspect } from 'util';\n\nexport class ParseWebSocketServer {\n  server: Object;\n\n  constructor(server: any, onConnect: Function, config) {\n    config.server = server;\n    const wss = loadAdapter(config.wssAdapter, WSAdapter, config);\n    wss.onListen = () => {\n      logger.info('Parse LiveQuery Server started running');\n    };\n    wss.onConnection = ws => {\n      ws.on('error', error => {\n        logger.error(error.message);\n        logger.error(inspect(ws, false));\n      });\n      onConnect(new ParseWebSocket(ws));\n      // Send ping to client periodically\n      const pingIntervalId = setInterval(() => {\n        if (ws.readyState == ws.OPEN) {\n          ws.ping();\n        } else {\n          clearInterval(pingIntervalId);\n        }\n      }, config.websocketTimeout || 10 * 1000);\n    };\n    wss.onError = error => {\n      logger.error(error);\n    };\n    wss.start();\n    this.server = wss;\n  }\n\n  close() {\n    if (this.server && this.server.close) {\n      this.server.close();\n    }\n  }\n}\n\nexport class ParseWebSocket extends events.EventEmitter {\n  ws: any;\n\n  constructor(ws: any) {\n    super();\n    ws.onmessage = request =>\n      this.emit('message', request && request.data ? request.data : request);\n    ws.onclose = () => this.emit('disconnect');\n    this.ws = ws;\n  }\n\n  send(message: any): void {\n    this.ws.send(message);\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ce2f504af17787f4a83868e33694f64ec997f33c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i4lps95f2=function(){return actualCoverage;};}return actualCoverage;}cov_i4lps95f2();cov_i4lps95f2().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_i4lps95f2().s[1]++;exports.ParseWebSocket=exports.ParseWebSocketServer=void 0;var _AdapterLoader=(cov_i4lps95f2().s[2]++,require("../Adapters/AdapterLoader"));var _WSAdapter=(cov_i4lps95f2().s[3]++,require("../Adapters/WebSocketServer/WSAdapter"));var _logger=(cov_i4lps95f2().s[4]++,_interopRequireDefault(require("../logger")));var _events=(cov_i4lps95f2().s[5]++,_interopRequireDefault(require("events")));var _util=(cov_i4lps95f2().s[6]++,require("util"));function _interopRequireDefault(obj){cov_i4lps95f2().f[0]++;cov_i4lps95f2().s[7]++;return(cov_i4lps95f2().b[1][0]++,obj)&&(cov_i4lps95f2().b[1][1]++,obj.__esModule)?(cov_i4lps95f2().b[0][0]++,obj):(cov_i4lps95f2().b[0][1]++,{default:obj});}class ParseWebSocketServer{constructor(server,onConnect,config){cov_i4lps95f2().f[1]++;cov_i4lps95f2().s[8]++;config.server=server;const wss=(cov_i4lps95f2().s[9]++,(0,_AdapterLoader.loadAdapter)(config.wssAdapter,_WSAdapter.WSAdapter,config));cov_i4lps95f2().s[10]++;wss.onListen=()=>{cov_i4lps95f2().f[2]++;cov_i4lps95f2().s[11]++;_logger.default.info('Parse LiveQuery Server started running');};cov_i4lps95f2().s[12]++;wss.onConnection=ws=>{cov_i4lps95f2().f[3]++;cov_i4lps95f2().s[13]++;ws.on('error',error=>{cov_i4lps95f2().f[4]++;cov_i4lps95f2().s[14]++;_logger.default.error(error.message);cov_i4lps95f2().s[15]++;_logger.default.error((0,_util.inspect)(ws,false));});cov_i4lps95f2().s[16]++;onConnect(new ParseWebSocket(ws));// Send ping to client periodically
const pingIntervalId=(cov_i4lps95f2().s[17]++,setInterval(()=>{cov_i4lps95f2().f[5]++;cov_i4lps95f2().s[18]++;if(ws.readyState==ws.OPEN){cov_i4lps95f2().b[2][0]++;cov_i4lps95f2().s[19]++;ws.ping();}else{cov_i4lps95f2().b[2][1]++;cov_i4lps95f2().s[20]++;clearInterval(pingIntervalId);}},(cov_i4lps95f2().b[3][0]++,config.websocketTimeout)||(cov_i4lps95f2().b[3][1]++,10*1000)));};cov_i4lps95f2().s[21]++;wss.onError=error=>{cov_i4lps95f2().f[6]++;cov_i4lps95f2().s[22]++;_logger.default.error(error);};cov_i4lps95f2().s[23]++;wss.start();cov_i4lps95f2().s[24]++;this.server=wss;}close(){cov_i4lps95f2().f[7]++;cov_i4lps95f2().s[25]++;if((cov_i4lps95f2().b[5][0]++,this.server)&&(cov_i4lps95f2().b[5][1]++,this.server.close)){cov_i4lps95f2().b[4][0]++;cov_i4lps95f2().s[26]++;this.server.close();}else{cov_i4lps95f2().b[4][1]++;}}}cov_i4lps95f2().s[27]++;exports.ParseWebSocketServer=ParseWebSocketServer;class ParseWebSocket extends(_events.default.EventEmitter){constructor(ws){cov_i4lps95f2().f[8]++;cov_i4lps95f2().s[28]++;super();cov_i4lps95f2().s[29]++;ws.onmessage=request=>{cov_i4lps95f2().f[9]++;cov_i4lps95f2().s[30]++;return this.emit('message',(cov_i4lps95f2().b[7][0]++,request)&&(cov_i4lps95f2().b[7][1]++,request.data)?(cov_i4lps95f2().b[6][0]++,request.data):(cov_i4lps95f2().b[6][1]++,request));};cov_i4lps95f2().s[31]++;ws.onclose=()=>{cov_i4lps95f2().f[10]++;cov_i4lps95f2().s[32]++;return this.emit('disconnect');};cov_i4lps95f2().s[33]++;this.ws=ws;}send(message){cov_i4lps95f2().f[11]++;cov_i4lps95f2().s[34]++;this.ws.send(message);}}cov_i4lps95f2().s[35]++;exports.ParseWebSocket=ParseWebSocket;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MaXZlUXVlcnkvUGFyc2VXZWJTb2NrZXRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiUGFyc2VXZWJTb2NrZXRTZXJ2ZXIiLCJjb25zdHJ1Y3RvciIsInNlcnZlciIsIm9uQ29ubmVjdCIsImNvbmZpZyIsIndzcyIsIndzc0FkYXB0ZXIiLCJXU0FkYXB0ZXIiLCJvbkxpc3RlbiIsImxvZ2dlciIsImluZm8iLCJvbkNvbm5lY3Rpb24iLCJ3cyIsIm9uIiwiZXJyb3IiLCJtZXNzYWdlIiwiUGFyc2VXZWJTb2NrZXQiLCJwaW5nSW50ZXJ2YWxJZCIsInNldEludGVydmFsIiwicmVhZHlTdGF0ZSIsIk9QRU4iLCJwaW5nIiwiY2xlYXJJbnRlcnZhbCIsIndlYnNvY2tldFRpbWVvdXQiLCJvbkVycm9yIiwic3RhcnQiLCJjbG9zZSIsImV2ZW50cyIsIkV2ZW50RW1pdHRlciIsIm9ubWVzc2FnZSIsInJlcXVlc3QiLCJlbWl0IiwiZGF0YSIsIm9uY2xvc2UiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxNQUFNQSxvQkFBTixDQUEyQjtBQUdoQ0MsRUFBQUEsV0FBVyxDQUFDQyxNQUFELEVBQWNDLFNBQWQsRUFBbUNDLE1BQW5DLEVBQTJDO0FBQ3BEQSxJQUFBQSxNQUFNLENBQUNGLE1BQVAsR0FBZ0JBLE1BQWhCO0FBQ0EsVUFBTUcsR0FBRyxHQUFHLGdDQUFZRCxNQUFNLENBQUNFLFVBQW5CLEVBQStCQyxvQkFBL0IsRUFBMENILE1BQTFDLENBQVo7O0FBQ0FDLElBQUFBLEdBQUcsQ0FBQ0csUUFBSixHQUFlLE1BQU07QUFDbkJDLHNCQUFPQyxJQUFQLENBQVksd0NBQVo7QUFDRCxLQUZEOztBQUdBTCxJQUFBQSxHQUFHLENBQUNNLFlBQUosR0FBbUJDLEVBQUUsSUFBSTtBQUN2QkEsTUFBQUEsRUFBRSxDQUFDQyxFQUFILENBQU0sT0FBTixFQUFlQyxLQUFLLElBQUk7QUFDdEJMLHdCQUFPSyxLQUFQLENBQWFBLEtBQUssQ0FBQ0MsT0FBbkI7O0FBQ0FOLHdCQUFPSyxLQUFQLENBQWEsbUJBQVFGLEVBQVIsRUFBWSxLQUFaLENBQWI7QUFDRCxPQUhEO0FBSUFULE1BQUFBLFNBQVMsQ0FBQyxJQUFJYSxjQUFKLENBQW1CSixFQUFuQixDQUFELENBQVQsQ0FMdUIsQ0FNdkI7O0FBQ0EsWUFBTUssY0FBYyxHQUFHQyxXQUFXLENBQUMsTUFBTTtBQUN2QyxZQUFJTixFQUFFLENBQUNPLFVBQUgsSUFBaUJQLEVBQUUsQ0FBQ1EsSUFBeEIsRUFBOEI7QUFDNUJSLFVBQUFBLEVBQUUsQ0FBQ1MsSUFBSDtBQUNELFNBRkQsTUFFTztBQUNMQyxVQUFBQSxhQUFhLENBQUNMLGNBQUQsQ0FBYjtBQUNEO0FBQ0YsT0FOaUMsRUFNL0JiLE1BQU0sQ0FBQ21CLGdCQUFQLElBQTJCLEtBQUssSUFORCxDQUFsQztBQU9ELEtBZEQ7O0FBZUFsQixJQUFBQSxHQUFHLENBQUNtQixPQUFKLEdBQWNWLEtBQUssSUFBSTtBQUNyQkwsc0JBQU9LLEtBQVAsQ0FBYUEsS0FBYjtBQUNELEtBRkQ7O0FBR0FULElBQUFBLEdBQUcsQ0FBQ29CLEtBQUo7QUFDQSxTQUFLdkIsTUFBTCxHQUFjRyxHQUFkO0FBQ0Q7O0FBRURxQixFQUFBQSxLQUFLLEdBQUc7QUFDTixRQUFJLEtBQUt4QixNQUFMLElBQWUsS0FBS0EsTUFBTCxDQUFZd0IsS0FBL0IsRUFBc0M7QUFDcEMsV0FBS3hCLE1BQUwsQ0FBWXdCLEtBQVo7QUFDRDtBQUNGOztBQW5DK0I7Ozs7QUFzQzNCLE1BQU1WLGNBQU4sU0FBNkJXLGdCQUFPQyxZQUFwQyxDQUFpRDtBQUd0RDNCLEVBQUFBLFdBQVcsQ0FBQ1csRUFBRCxFQUFVO0FBQ25COztBQUNBQSxJQUFBQSxFQUFFLENBQUNpQixTQUFILEdBQWVDLE9BQU8sSUFDcEIsS0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUJELE9BQU8sSUFBSUEsT0FBTyxDQUFDRSxJQUFuQixHQUEwQkYsT0FBTyxDQUFDRSxJQUFsQyxHQUF5Q0YsT0FBOUQsQ0FERjs7QUFFQWxCLElBQUFBLEVBQUUsQ0FBQ3FCLE9BQUgsR0FBYSxNQUFNLEtBQUtGLElBQUwsQ0FBVSxZQUFWLENBQW5COztBQUNBLFNBQUtuQixFQUFMLEdBQVVBLEVBQVY7QUFDRDs7QUFFRHNCLEVBQUFBLElBQUksQ0FBQ25CLE9BQUQsRUFBcUI7QUFDdkIsU0FBS0gsRUFBTCxDQUFRc0IsSUFBUixDQUFhbkIsT0FBYjtBQUNEOztBQWJxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvYWRBZGFwdGVyIH0gZnJvbSAnLi4vQWRhcHRlcnMvQWRhcHRlckxvYWRlcic7XG5pbXBvcnQgeyBXU0FkYXB0ZXIgfSBmcm9tICcuLi9BZGFwdGVycy9XZWJTb2NrZXRTZXJ2ZXIvV1NBZGFwdGVyJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcbmltcG9ydCBldmVudHMgZnJvbSAnZXZlbnRzJztcbmltcG9ydCB7IGluc3BlY3QgfSBmcm9tICd1dGlsJztcblxuZXhwb3J0IGNsYXNzIFBhcnNlV2ViU29ja2V0U2VydmVyIHtcbiAgc2VydmVyOiBPYmplY3Q7XG5cbiAgY29uc3RydWN0b3Ioc2VydmVyOiBhbnksIG9uQ29ubmVjdDogRnVuY3Rpb24sIGNvbmZpZykge1xuICAgIGNvbmZpZy5zZXJ2ZXIgPSBzZXJ2ZXI7XG4gICAgY29uc3Qgd3NzID0gbG9hZEFkYXB0ZXIoY29uZmlnLndzc0FkYXB0ZXIsIFdTQWRhcHRlciwgY29uZmlnKTtcbiAgICB3c3Mub25MaXN0ZW4gPSAoKSA9PiB7XG4gICAgICBsb2dnZXIuaW5mbygnUGFyc2UgTGl2ZVF1ZXJ5IFNlcnZlciBzdGFydGVkIHJ1bm5pbmcnKTtcbiAgICB9O1xuICAgIHdzcy5vbkNvbm5lY3Rpb24gPSB3cyA9PiB7XG4gICAgICB3cy5vbignZXJyb3InLCBlcnJvciA9PiB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGluc3BlY3Qod3MsIGZhbHNlKSk7XG4gICAgICB9KTtcbiAgICAgIG9uQ29ubmVjdChuZXcgUGFyc2VXZWJTb2NrZXQod3MpKTtcbiAgICAgIC8vIFNlbmQgcGluZyB0byBjbGllbnQgcGVyaW9kaWNhbGx5XG4gICAgICBjb25zdCBwaW5nSW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgaWYgKHdzLnJlYWR5U3RhdGUgPT0gd3MuT1BFTikge1xuICAgICAgICAgIHdzLnBpbmcoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjbGVhckludGVydmFsKHBpbmdJbnRlcnZhbElkKTtcbiAgICAgICAgfVxuICAgICAgfSwgY29uZmlnLndlYnNvY2tldFRpbWVvdXQgfHwgMTAgKiAxMDAwKTtcbiAgICB9O1xuICAgIHdzcy5vbkVycm9yID0gZXJyb3IgPT4ge1xuICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICB9O1xuICAgIHdzcy5zdGFydCgpO1xuICAgIHRoaXMuc2VydmVyID0gd3NzO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgaWYgKHRoaXMuc2VydmVyICYmIHRoaXMuc2VydmVyLmNsb3NlKSB7XG4gICAgICB0aGlzLnNlcnZlci5jbG9zZSgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFyc2VXZWJTb2NrZXQgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgd3M6IGFueTtcblxuICBjb25zdHJ1Y3Rvcih3czogYW55KSB7XG4gICAgc3VwZXIoKTtcbiAgICB3cy5vbm1lc3NhZ2UgPSByZXF1ZXN0ID0+XG4gICAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCByZXF1ZXN0ICYmIHJlcXVlc3QuZGF0YSA/IHJlcXVlc3QuZGF0YSA6IHJlcXVlc3QpO1xuICAgIHdzLm9uY2xvc2UgPSAoKSA9PiB0aGlzLmVtaXQoJ2Rpc2Nvbm5lY3QnKTtcbiAgICB0aGlzLndzID0gd3M7XG4gIH1cblxuICBzZW5kKG1lc3NhZ2U6IGFueSk6IHZvaWQge1xuICAgIHRoaXMud3Muc2VuZChtZXNzYWdlKTtcbiAgfVxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MaXZlUXVlcnkvUGFyc2VXZWJTb2NrZXRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJjb25maWciLCJ3c3MiLCJXU0FkYXB0ZXIiLCJsb2dnZXIiLCJ3cyIsImVycm9yIiwib25Db25uZWN0IiwicGluZ0ludGVydmFsSWQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJjbG9zZSIsImV2ZW50cyIsInJlcXVlc3QiLCJzZW5kIl0sIm1hcHBpbmdzIjoiMHlUQUlBOzJQQUpBLEdBQUEsQ0FBQSxjQUFBLHlCQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsVUFBQSx5QkFBQSxPQUFBLENBQUEsdUNBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLE9BQUEseUJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQSxPQUFBLHlCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsS0FBQSx5QkFBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQyxnUEFFTyxLQUFBLENBQUEsb0JBQTJCLENBR2hDQSxXQUFXLENBQUEsTUFBQSxDQUFBLFNBQUEsQ0FBQSxNQUFBLENBQTJDLCtDQUNwREMsTUFBTSxDQUFOQSxNQUFBQSxDQUFBQSxNQUFBQSxDQUNBLEtBQU1DLENBQUFBLEdBQUcseUJBQUcsQ0FBQSxFQUFBLGNBQUEsQ0FBQSxXQUFBLEVBQVlELE1BQU0sQ0FBbEIsVUFBQSxDQUErQkUsVUFBQUEsQ0FBL0IsU0FBQSxDQUFaLE1BQVksQ0FBSCxDQUFULENBRm9ELHdCQUdwREQsR0FBRyxDQUFIQSxRQUFBQSxDQUFlLElBQU0sZ0RBQ25CRSxPQUFBQSxDQUFBQSxPQUFBQSxDQUFBQSxJQUFBQSxDQUFBQSx3Q0FBQUEsRUFERkYsQ0FBQUEsQ0FIb0Qsd0JBTXBEQSxHQUFHLENBQUhBLFlBQUFBLENBQW1CRyxFQUFFLEVBQUksZ0RBQ3ZCQSxFQUFFLENBQUZBLEVBQUFBLENBQUFBLE9BQUFBLENBQWVDLEtBQUssRUFBSSxnREFDdEJGLE9BQUFBLENBQUFBLE9BQUFBLENBQUFBLEtBQUFBLENBQWFFLEtBQUssQ0FBbEJGLE9BQUFBLEVBRHNCLHdCQUV0QkEsT0FBQUEsQ0FBQUEsT0FBQUEsQ0FBQUEsS0FBQUEsQ0FBYSxDQUFBLEVBQUEsS0FBQSxDQUFBLE9BQUEsRUFBQSxFQUFBLENBQWJBLEtBQWEsQ0FBYkEsRUFGRkMsQ0FBQUEsRUFEdUIsd0JBS3ZCRSxTQUFTLENBQUMsR0FBQSxDQUFBLGNBQUEsQ0FMYSxFQUtiLENBQUQsQ0FBVEEsQ0FDQTtBQUNBLEtBQU1DLENBQUFBLGNBQWMsMEJBQUdDLFdBQVcsQ0FBQyxJQUFNLGdEQUN2QyxHQUFJSixFQUFFLENBQUZBLFVBQUFBLEVBQWlCQSxFQUFFLENBQXZCLElBQUEsQ0FBOEIsbURBQzVCQSxFQUFFLENBQUZBLElBQUFBLEdBREYsQ0FBQSxJQUVPLG1EQUNMSyxhQUFhLENBQWJBLGNBQWEsQ0FBYkEsQ0FDRCxDQUwrQixDQUFBLENBTS9CVCwyQkFBQUEsTUFBTSxDQUFOQSxnQkFBQUEsOEJBQTJCLEdBTjlCLElBTUdBLENBTitCLENBQWQsQ0FBcEIsQ0FQRkMsQ0FBQUEsQ0FOb0Qsd0JBcUJwREEsR0FBRyxDQUFIQSxPQUFBQSxDQUFjSSxLQUFLLEVBQUksZ0RBQ3JCRixPQUFBQSxDQUFBQSxPQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxLQUFBQSxFQURGRixDQUFBQSxDQXJCb0Qsd0JBd0JwREEsR0FBRyxDQUFIQSxLQUFBQSxHQXhCb0Qsd0JBeUJwRCxLQUFBLE1BQUEsQ0FBQSxHQUFBLENBQ0QsQ0FFRFMsS0FBSyxFQUFHLGdEQUNOLEdBQUksZ0NBQUEsTUFBQSw4QkFBZSxLQUFBLE1BQUEsQ0FBbkIsS0FBSSxDQUFKLENBQXNDLG1EQUNwQyxLQUFBLE1BQUEsQ0FBQSxLQUFBLEdBQ0QsQ0FGRCxnQ0FHRCxDQW5DK0IsQywwRUFzQzNCLEtBQUEsQ0FBQSxjQUFBLFNBQTZCQyxPQUFBQSxDQUFBQSxPQUFBQSxDQUE3QixZQUFBLENBQWlELENBR3REWixXQUFXLENBQUEsRUFBQSxDQUFVLGdEQUNuQixRQURtQix3QkFFbkJLLEVBQUUsQ0FBRkEsU0FBQUEsQ0FBZVEsT0FBTyxFQUNwQiw0REFBQSxJQUFBLENBQUEsU0FBQSxDQUFxQkEsMkJBQUFBLE9BQU8sOEJBQUlBLE9BQU8sQ0FBbEJBLElBQU8sQ0FBUEEsNEJBQTBCQSxPQUFPLENBQWpDQSxJQUFBQSw2QkFBckIsT0FBcUJBLENBQXJCLEVBREZSLENBQUFBLENBRm1CLHdCQUluQkEsRUFBRSxDQUFGQSxPQUFBQSxDQUFhLElBQU0sNkRBQUEsSUFBQSxDQUFBLFlBQUEsRUFBbkJBLENBQUFBLENBSm1CLHdCQUtuQixLQUFBLEVBQUEsQ0FBQSxFQUFBLENBQ0QsQ0FFRFMsSUFBSSxDQUFBLE9BQUEsQ0FBcUIsaURBQ3ZCLEtBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxPQUFBLEVBQ0QsQ0FicUQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvYWRBZGFwdGVyIH0gZnJvbSAnLi4vQWRhcHRlcnMvQWRhcHRlckxvYWRlcic7XG5pbXBvcnQgeyBXU0FkYXB0ZXIgfSBmcm9tICcuLi9BZGFwdGVycy9XZWJTb2NrZXRTZXJ2ZXIvV1NBZGFwdGVyJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcbmltcG9ydCBldmVudHMgZnJvbSAnZXZlbnRzJztcbmltcG9ydCB7IGluc3BlY3QgfSBmcm9tICd1dGlsJztcblxuZXhwb3J0IGNsYXNzIFBhcnNlV2ViU29ja2V0U2VydmVyIHtcbiAgc2VydmVyOiBPYmplY3Q7XG5cbiAgY29uc3RydWN0b3Ioc2VydmVyOiBhbnksIG9uQ29ubmVjdDogRnVuY3Rpb24sIGNvbmZpZykge1xuICAgIGNvbmZpZy5zZXJ2ZXIgPSBzZXJ2ZXI7XG4gICAgY29uc3Qgd3NzID0gbG9hZEFkYXB0ZXIoY29uZmlnLndzc0FkYXB0ZXIsIFdTQWRhcHRlciwgY29uZmlnKTtcbiAgICB3c3Mub25MaXN0ZW4gPSAoKSA9PiB7XG4gICAgICBsb2dnZXIuaW5mbygnUGFyc2UgTGl2ZVF1ZXJ5IFNlcnZlciBzdGFydGVkIHJ1bm5pbmcnKTtcbiAgICB9O1xuICAgIHdzcy5vbkNvbm5lY3Rpb24gPSB3cyA9PiB7XG4gICAgICB3cy5vbignZXJyb3InLCBlcnJvciA9PiB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGluc3BlY3Qod3MsIGZhbHNlKSk7XG4gICAgICB9KTtcbiAgICAgIG9uQ29ubmVjdChuZXcgUGFyc2VXZWJTb2NrZXQod3MpKTtcbiAgICAgIC8vIFNlbmQgcGluZyB0byBjbGllbnQgcGVyaW9kaWNhbGx5XG4gICAgICBjb25zdCBwaW5nSW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgaWYgKHdzLnJlYWR5U3RhdGUgPT0gd3MuT1BFTikge1xuICAgICAgICAgIHdzLnBpbmcoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjbGVhckludGVydmFsKHBpbmdJbnRlcnZhbElkKTtcbiAgICAgICAgfVxuICAgICAgfSwgY29uZmlnLndlYnNvY2tldFRpbWVvdXQgfHwgMTAgKiAxMDAwKTtcbiAgICB9O1xuICAgIHdzcy5vbkVycm9yID0gZXJyb3IgPT4ge1xuICAgICAgbG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICB9O1xuICAgIHdzcy5zdGFydCgpO1xuICAgIHRoaXMuc2VydmVyID0gd3NzO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgaWYgKHRoaXMuc2VydmVyICYmIHRoaXMuc2VydmVyLmNsb3NlKSB7XG4gICAgICB0aGlzLnNlcnZlci5jbG9zZSgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFyc2VXZWJTb2NrZXQgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgd3M6IGFueTtcblxuICBjb25zdHJ1Y3Rvcih3czogYW55KSB7XG4gICAgc3VwZXIoKTtcbiAgICB3cy5vbm1lc3NhZ2UgPSByZXF1ZXN0ID0+XG4gICAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCByZXF1ZXN0ICYmIHJlcXVlc3QuZGF0YSA/IHJlcXVlc3QuZGF0YSA6IHJlcXVlc3QpO1xuICAgIHdzLm9uY2xvc2UgPSAoKSA9PiB0aGlzLmVtaXQoJ2Rpc2Nvbm5lY3QnKTtcbiAgICB0aGlzLndzID0gd3M7XG4gIH1cblxuICBzZW5kKG1lc3NhZ2U6IGFueSk6IHZvaWQge1xuICAgIHRoaXMud3Muc2VuZChtZXNzYWdlKTtcbiAgfVxufVxuIl19