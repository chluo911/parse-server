{"version":3,"sources":["../../src/Routers/SecurityRouter.js"],"names":["SecurityRouter","PromiseRouter","mountRoutes","route","middleware","promiseEnforceMasterKeyAccess","_enforceSecurityCheckEnabled","req","report","CheckRunner","config","security","run","status","response","enableCheck","error","Error","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEO,MAAMA,cAAN,SAA6BC,sBAA7B,CAA2C;AAChDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,CACE,KADF,EAEE,WAFF,EAGEC,UAAU,CAACC,6BAHb,EAIE,KAAKC,4BAJP,EAKE,MAAMC,GAAN,IAAa;AACX,YAAMC,MAAM,GAAG,MAAM,IAAIC,oBAAJ,CAAgBF,GAAG,CAACG,MAAJ,CAAWC,QAA3B,EAAqCC,GAArC,EAArB;AACA,aAAO;AACLC,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,QAAQ,EAAEN;AAFL,OAAP;AAID,KAXH;AAaD;;AAEiC,QAA5BF,4BAA4B,CAACC,GAAD,EAAM;AACtC,UAAMG,MAAM,GAAGH,GAAG,CAACG,MAAnB;;AACA,QAAI,CAACA,MAAM,CAACC,QAAR,IAAoB,CAACD,MAAM,CAACC,QAAP,CAAgBI,WAAzC,EAAsD;AACpD,YAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,MAAAA,KAAK,CAACH,MAAN,GAAe,GAAf;AACAG,MAAAA,KAAK,CAACE,OAAN,GAAgB,0EAAhB;AACA,YAAMF,KAAN;AACD;AACF;;AAzB+C;;;eA4BnChB,c","sourcesContent":["import PromiseRouter from '../PromiseRouter';\nimport * as middleware from '../middlewares';\nimport CheckRunner from '../Security/CheckRunner';\n\nexport class SecurityRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route(\n      'GET',\n      '/security',\n      middleware.promiseEnforceMasterKeyAccess,\n      this._enforceSecurityCheckEnabled,\n      async req => {\n        const report = await new CheckRunner(req.config.security).run();\n        return {\n          status: 200,\n          response: report,\n        };\n      }\n    );\n  }\n\n  async _enforceSecurityCheckEnabled(req) {\n    const config = req.config;\n    if (!config.security || !config.security.enableCheck) {\n      const error = new Error();\n      error.status = 409;\n      error.message = 'Enable Parse Server option `security.enableCheck` to run security check.';\n      throw error;\n    }\n  }\n}\n\nexport default SecurityRouter;\n"]}