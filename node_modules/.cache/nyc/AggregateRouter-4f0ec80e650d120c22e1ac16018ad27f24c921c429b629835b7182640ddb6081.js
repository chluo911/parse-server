"use strict";function cov_nabj4td94(){var path="/parse-server/lib/Routers/AggregateRouter.js";var hash="d96a4e88a1a1ae473faffb2d589aafb0a481f5d2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/AggregateRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:51}},"2":{start:{line:8,column:21},end:{line:8,column:71}},"3":{start:{line:10,column:12},end:{line:10,column:54}},"4":{start:{line:12,column:17},end:{line:12,column:67}},"5":{start:{line:14,column:12},end:{line:14,column:57}},"6":{start:{line:16,column:19},end:{line:16,column:67}},"7":{start:{line:18,column:18},end:{line:18,column:77}},"8":{start:{line:20,column:49},end:{line:20,column:96}},"9":{start:{line:20,column:84},end:{line:20,column:96}},"10":{start:{line:20,column:121},end:{line:20,column:134}},"11":{start:{line:20,column:159},end:{line:20,column:172}},"12":{start:{line:20,column:174},end:{line:20,column:309}},"13":{start:{line:20,column:234},end:{line:20,column:292}},"14":{start:{line:22,column:53},end:{line:22,column:111}},"15":{start:{line:22,column:98},end:{line:22,column:109}},"16":{start:{line:22,column:112},end:{line:22,column:214}},"17":{start:{line:22,column:188},end:{line:22,column:212}},"18":{start:{line:22,column:227},end:{line:22,column:264}},"19":{start:{line:22,column:266},end:{line:22,column:321}},"20":{start:{line:22,column:297},end:{line:22,column:319}},"21":{start:{line:22,column:335},end:{line:22,column:337}},"22":{start:{line:22,column:367},end:{line:22,column:423}},"23":{start:{line:22,column:425},end:{line:22,column:726}},"24":{start:{line:22,column:448},end:{line:22,column:724}},"25":{start:{line:22,column:534},end:{line:22,column:606}},"26":{start:{line:22,column:608},end:{line:22,column:722}},"27":{start:{line:22,column:646},end:{line:22,column:687}},"28":{start:{line:22,column:697},end:{line:22,column:720}},"29":{start:{line:22,column:727},end:{line:22,column:748}},"30":{start:{line:22,column:749},end:{line:22,column:787}},"31":{start:{line:22,column:762},end:{line:22,column:785}},"32":{start:{line:22,column:788},end:{line:22,column:802}},"33":{start:{line:24,column:39},end:{line:24,column:93}},"34":{start:{line:28,column:17},end:{line:28,column:89}},"35":{start:{line:29,column:20},end:{line:29,column:22}},"36":{start:{line:31,column:4},end:{line:33,column:5}},"37":{start:{line:32,column:6},end:{line:32,column:47}},"38":{start:{line:35,column:4},end:{line:38,column:5}},"39":{start:{line:36,column:6},end:{line:36,column:31}},"40":{start:{line:37,column:6},end:{line:37,column:23}},"41":{start:{line:40,column:4},end:{line:43,column:5}},"42":{start:{line:41,column:6},end:{line:41,column:37}},"43":{start:{line:42,column:6},end:{line:42,column:26}},"44":{start:{line:45,column:4},end:{line:48,column:5}},"45":{start:{line:46,column:6},end:{line:46,column:51}},"46":{start:{line:47,column:6},end:{line:47,column:33}},"47":{start:{line:50,column:4},end:{line:50,column:57}},"48":{start:{line:52,column:4},end:{line:54,column:5}},"49":{start:{line:53,column:6},end:{line:53,column:42}},"50":{start:{line:56,column:4},end:{line:66,column:7}},"51":{start:{line:57,column:6},end:{line:61,column:7}},"52":{start:{line:58,column:8},end:{line:60,column:9}},"53":{start:{line:59,column:10},end:{line:59,column:62}},"54":{start:{line:63,column:6},end:{line:65,column:8}},"55":{start:{line:96,column:19},end:{line:96,column:40}},"56":{start:{line:98,column:4},end:{line:104,column:5}},"57":{start:{line:99,column:6},end:{line:103,column:9}},"58":{start:{line:100,column:8},end:{line:102,column:10}},"59":{start:{line:106,column:4},end:{line:114,column:7}},"60":{start:{line:107,column:19},end:{line:107,column:37}},"61":{start:{line:109,column:6},end:{line:111,column:7}},"62":{start:{line:110,column:8},end:{line:110,column:93}},"63":{start:{line:113,column:6},end:{line:113,column:60}},"64":{start:{line:118,column:4},end:{line:132,column:5}},"65":{start:{line:119,column:6},end:{line:127,column:7}},"66":{start:{line:120,column:8},end:{line:123,column:11}},"67":{start:{line:125,column:8},end:{line:125,column:57}},"68":{start:{line:126,column:8},end:{line:126,column:41}},"69":{start:{line:129,column:6},end:{line:131,column:7}},"70":{start:{line:130,column:8},end:{line:130,column:128}},"71":{start:{line:134,column:4},end:{line:139,column:5}},"72":{start:{line:135,column:6},end:{line:138,column:9}},"73":{start:{line:141,column:16},end:{line:141,column:66}},"74":{start:{line:142,column:4},end:{line:144,column:6}},"75":{start:{line:148,column:4},end:{line:150,column:7}},"76":{start:{line:149,column:6},end:{line:149,column:34}},"77":{start:{line:155,column:0},end:{line:155,column:42}},"78":{start:{line:156,column:15},end:{line:156,column:30}},"79":{start:{line:157,column:0},end:{line:157,column:27}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:20,column:9},end:{line:20,column:33}},loc:{start:{line:20,column:47},end:{line:20,column:311}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:209},end:{line:20,column:210}},loc:{start:{line:20,column:232},end:{line:20,column:294}},line:20},"2":{name:"_interopRequireWildcard",decl:{start:{line:22,column:9},end:{line:22,column:32}},loc:{start:{line:22,column:51},end:{line:22,column:804}},line:22},"3":{name:"_interopRequireDefault",decl:{start:{line:24,column:9},end:{line:24,column:31}},loc:{start:{line:24,column:37},end:{line:24,column:95}},line:24},"4":{name:"(anonymous_4)",decl:{start:{line:27,column:2},end:{line:27,column:3}},loc:{start:{line:27,column:18},end:{line:67,column:3}},line:27},"5":{name:"(anonymous_5)",decl:{start:{line:56,column:137},end:{line:56,column:138}},loc:{start:{line:56,column:149},end:{line:66,column:5}},line:56},"6":{name:"(anonymous_6)",decl:{start:{line:95,column:2},end:{line:95,column:3}},loc:{start:{line:95,column:27},end:{line:115,column:3}},line:95},"7":{name:"(anonymous_7)",decl:{start:{line:99,column:43},end:{line:99,column:44}},loc:{start:{line:99,column:50},end:{line:103,column:7}},line:99},"8":{name:"(anonymous_8)",decl:{start:{line:106,column:24},end:{line:106,column:25}},loc:{start:{line:106,column:33},end:{line:114,column:5}},line:106},"9":{name:"(anonymous_9)",decl:{start:{line:117,column:2},end:{line:117,column:3}},loc:{start:{line:117,column:42},end:{line:145,column:3}},line:117},"10":{name:"(anonymous_10)",decl:{start:{line:147,column:2},end:{line:147,column:3}},loc:{start:{line:147,column:16},end:{line:151,column:3}},line:147},"11":{name:"(anonymous_11)",decl:{start:{line:148,column:89},end:{line:148,column:90}},loc:{start:{line:148,column:96},end:{line:150,column:5}},line:148}},branchMap:{"0":{loc:{start:{line:20,column:49},end:{line:20,column:96}},type:"if",locations:[{start:{line:20,column:49},end:{line:20,column:96}},{start:{line:20,column:49},end:{line:20,column:96}}],line:20},"1":{loc:{start:{line:20,column:241},end:{line:20,column:291}},type:"cond-expr",locations:[{start:{line:20,column:255},end:{line:20,column:271}},{start:{line:20,column:274},end:{line:20,column:291}}],line:20},"2":{loc:{start:{line:22,column:53},end:{line:22,column:111}},type:"if",locations:[{start:{line:22,column:53},end:{line:22,column:111}},{start:{line:22,column:53},end:{line:22,column:111}}],line:22},"3":{loc:{start:{line:22,column:57},end:{line:22,column:94}},type:"binary-expr",locations:[{start:{line:22,column:57},end:{line:22,column:69}},{start:{line:22,column:73},end:{line:22,column:76}},{start:{line:22,column:80},end:{line:22,column:94}}],line:22},"4":{loc:{start:{line:22,column:112},end:{line:22,column:214}},type:"if",locations:[{start:{line:22,column:112},end:{line:22,column:214}},{start:{line:22,column:112},end:{line:22,column:214}}],line:22},"5":{loc:{start:{line:22,column:116},end:{line:22,column:184}},type:"binary-expr",locations:[{start:{line:22,column:116},end:{line:22,column:128}},{start:{line:22,column:132},end:{line:22,column:155}},{start:{line:22,column:159},end:{line:22,column:184}}],line:22},"6":{loc:{start:{line:22,column:266},end:{line:22,column:321}},type:"if",locations:[{start:{line:22,column:266},end:{line:22,column:321}},{start:{line:22,column:266},end:{line:22,column:321}}],line:22},"7":{loc:{start:{line:22,column:270},end:{line:22,column:293}},type:"binary-expr",locations:[{start:{line:22,column:270},end:{line:22,column:275}},{start:{line:22,column:279},end:{line:22,column:293}}],line:22},"8":{loc:{start:{line:22,column:367},end:{line:22,column:423}},type:"binary-expr",locations:[{start:{line:22,column:367},end:{line:22,column:388}},{start:{line:22,column:392},end:{line:22,column:423}}],line:22},"9":{loc:{start:{line:22,column:448},end:{line:22,column:724}},type:"if",locations:[{start:{line:22,column:448},end:{line:22,column:724}},{start:{line:22,column:448},end:{line:22,column:724}}],line:22},"10":{loc:{start:{line:22,column:452},end:{line:22,column:519}},type:"binary-expr",locations:[{start:{line:22,column:452},end:{line:22,column:469}},{start:{line:22,column:473},end:{line:22,column:519}}],line:22},"11":{loc:{start:{line:22,column:534},end:{line:22,column:606}},type:"cond-expr",locations:[{start:{line:22,column:558},end:{line:22,column:599}},{start:{line:22,column:602},end:{line:22,column:606}}],line:22},"12":{loc:{start:{line:22,column:608},end:{line:22,column:722}},type:"if",locations:[{start:{line:22,column:608},end:{line:22,column:722}},{start:{line:22,column:608},end:{line:22,column:722}}],line:22},"13":{loc:{start:{line:22,column:612},end:{line:22,column:642}},type:"binary-expr",locations:[{start:{line:22,column:612},end:{line:22,column:616}},{start:{line:22,column:621},end:{line:22,column:629}},{start:{line:22,column:633},end:{line:22,column:641}}],line:22},"14":{loc:{start:{line:22,column:749},end:{line:22,column:787}},type:"if",locations:[{start:{line:22,column:749},end:{line:22,column:787}},{start:{line:22,column:749},end:{line:22,column:787}}],line:22},"15":{loc:{start:{line:24,column:46},end:{line:24,column:92}},type:"cond-expr",locations:[{start:{line:24,column:70},end:{line:24,column:73}},{start:{line:24,column:76},end:{line:24,column:92}}],line:24},"16":{loc:{start:{line:24,column:46},end:{line:24,column:67}},type:"binary-expr",locations:[{start:{line:24,column:46},end:{line:24,column:49}},{start:{line:24,column:53},end:{line:24,column:67}}],line:24},"17":{loc:{start:{line:31,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:31,column:4},end:{line:33,column:5}},{start:{line:31,column:4},end:{line:33,column:5}}],line:31},"18":{loc:{start:{line:35,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:35,column:4},end:{line:38,column:5}},{start:{line:35,column:4},end:{line:38,column:5}}],line:35},"19":{loc:{start:{line:40,column:4},end:{line:43,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:43,column:5}},{start:{line:40,column:4},end:{line:43,column:5}}],line:40},"20":{loc:{start:{line:45,column:4},end:{line:48,column:5}},type:"if",locations:[{start:{line:45,column:4},end:{line:48,column:5}},{start:{line:45,column:4},end:{line:48,column:5}}],line:45},"21":{loc:{start:{line:52,column:4},end:{line:54,column:5}},type:"if",locations:[{start:{line:52,column:4},end:{line:54,column:5}},{start:{line:52,column:4},end:{line:54,column:5}}],line:52},"22":{loc:{start:{line:58,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:58,column:8},end:{line:60,column:9}},{start:{line:58,column:8},end:{line:60,column:9}}],line:58},"23":{loc:{start:{line:96,column:19},end:{line:96,column:40}},type:"binary-expr",locations:[{start:{line:96,column:19},end:{line:96,column:32}},{start:{line:96,column:36},end:{line:96,column:40}}],line:96},"24":{loc:{start:{line:98,column:4},end:{line:104,column:5}},type:"if",locations:[{start:{line:98,column:4},end:{line:104,column:5}},{start:{line:98,column:4},end:{line:104,column:5}}],line:98},"25":{loc:{start:{line:109,column:6},end:{line:111,column:7}},type:"if",locations:[{start:{line:109,column:6},end:{line:111,column:7}},{start:{line:109,column:6},end:{line:111,column:7}}],line:109},"26":{loc:{start:{line:118,column:4},end:{line:132,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:132,column:5}},{start:{line:118,column:4},end:{line:132,column:5}}],line:118},"27":{loc:{start:{line:119,column:6},end:{line:127,column:7}},type:"if",locations:[{start:{line:119,column:6},end:{line:127,column:7}},{start:{line:119,column:6},end:{line:127,column:7}}],line:119},"28":{loc:{start:{line:129,column:6},end:{line:131,column:7}},type:"if",locations:[{start:{line:129,column:6},end:{line:131,column:7}},{start:{line:129,column:6},end:{line:131,column:7}}],line:129},"29":{loc:{start:{line:134,column:4},end:{line:139,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:139,column:5}},{start:{line:134,column:4},end:{line:139,column:5}}],line:134},"30":{loc:{start:{line:141,column:16},end:{line:141,column:66}},type:"cond-expr",locations:[{start:{line:141,column:39},end:{line:141,column:48}},{start:{line:141,column:51},end:{line:141,column:66}}],line:141}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/AggregateRouter.js"],names:["AggregateRouter","ClassesRouter","handleFind","req","body","Object","assign","JSONFromQuery","query","options","distinct","String","hint","explain","readPreference","pipeline","getPipeline","where","JSON","parse","rest","find","config","auth","className","info","clientSDK","context","then","response","result","results","UsersRouter","removeHiddenProperties","Array","isArray","keys","map","key","stage","length","Error","join","transformStage","stageName","prototype","hasOwnProperty","call","Deprecator","logRuntimeDeprecation","usage","solution","_id","objectId","Parse","INVALID_QUERY","mountRoutes","route","middleware","promiseEnforceMasterKeyAccess"],mappings:"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",sourcesContent:["import ClassesRouter from './ClassesRouter';\nimport rest from '../rest';\nimport * as middleware from '../middlewares';\nimport Parse from 'parse/node';\nimport UsersRouter from './UsersRouter';\nimport Deprecator from '../Deprecator/Deprecator';\n\nexport class AggregateRouter extends ClassesRouter {\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n    if (body.distinct) {\n      options.distinct = String(body.distinct);\n    }\n    if (body.hint) {\n      options.hint = body.hint;\n      delete body.hint;\n    }\n    if (body.explain) {\n      options.explain = body.explain;\n      delete body.explain;\n    }\n    if (body.readPreference) {\n      options.readPreference = body.readPreference;\n      delete body.readPreference;\n    }\n    options.pipeline = AggregateRouter.getPipeline(body);\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest\n      .find(\n        req.config,\n        req.auth,\n        this.className(req),\n        body.where,\n        options,\n        req.info.clientSDK,\n        req.info.context\n      )\n      .then(response => {\n        for (const result of response.results) {\n          if (typeof result === 'object') {\n            UsersRouter.removeHiddenProperties(result);\n          }\n        }\n        return { response };\n      });\n  }\n\n  /* Builds a pipeline from the body. Originally the body could be passed as a single object,\n   * and now we support many options\n   *\n   * Array\n   *\n   * body: [{\n   *   group: { objectId: '$name' },\n   * }]\n   *\n   * Object\n   *\n   * body: {\n   *   group: { objectId: '$name' },\n   * }\n   *\n   *\n   * Pipeline Operator with an Array or an Object\n   *\n   * body: {\n   *   pipeline: {\n   *     group: { objectId: '$name' },\n   *   }\n   * }\n   *\n   */\n  static getPipeline(body) {\n    let pipeline = body.pipeline || body;\n    if (!Array.isArray(pipeline)) {\n      pipeline = Object.keys(pipeline).map(key => {\n        return { [key]: pipeline[key] };\n      });\n    }\n\n    return pipeline.map(stage => {\n      const keys = Object.keys(stage);\n      if (keys.length != 1) {\n        throw new Error(`Pipeline stages should only have one key found ${keys.join(', ')}`);\n      }\n      return AggregateRouter.transformStage(keys[0], stage);\n    });\n  }\n\n  static transformStage(stageName, stage) {\n    if (stageName === 'group') {\n      if (Object.prototype.hasOwnProperty.call(stage[stageName], 'objectId')) {\n        Deprecator.logRuntimeDeprecation({\n          usage: 'The use of objectId in aggregation stage $group',\n          solution: 'Use _id instead.',\n        });\n        stage[stageName]._id = stage[stageName].objectId;\n        delete stage[stageName].objectId;\n      }\n      if (!Object.prototype.hasOwnProperty.call(stage[stageName], '_id')) {\n        throw new Parse.Error(\n          Parse.Error.INVALID_QUERY,\n          `Invalid parameter for query: group. Missing key _id`\n        );\n      }\n    }\n\n    if (stageName[0] !== '$') {\n      Deprecator.logRuntimeDeprecation({\n        usage: \"Using aggregation stages without a leading '$'\",\n        solution: `Try $${stageName} instead.`,\n      });\n    }\n    const key = stageName[0] === '$' ? stageName : `$${stageName}`;\n    return { [key]: stage[stageName] };\n  }\n\n  mountRoutes() {\n    this.route('GET', '/aggregate/:className', middleware.promiseEnforceMasterKeyAccess, req => {\n      return this.handleFind(req);\n    });\n  }\n}\n\nexport default AggregateRouter;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d96a4e88a1a1ae473faffb2d589aafb0a481f5d2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_nabj4td94=function(){return actualCoverage;};}return actualCoverage;}cov_nabj4td94();cov_nabj4td94().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_nabj4td94().s[1]++;exports.default=exports.AggregateRouter=void 0;var _ClassesRouter=(cov_nabj4td94().s[2]++,_interopRequireDefault(require("./ClassesRouter")));var _rest=(cov_nabj4td94().s[3]++,_interopRequireDefault(require("../rest")));var middleware=(cov_nabj4td94().s[4]++,_interopRequireWildcard(require("../middlewares")));var _node=(cov_nabj4td94().s[5]++,_interopRequireDefault(require("parse/node")));var _UsersRouter=(cov_nabj4td94().s[6]++,_interopRequireDefault(require("./UsersRouter")));var _Deprecator=(cov_nabj4td94().s[7]++,_interopRequireDefault(require("../Deprecator/Deprecator")));function _getRequireWildcardCache(nodeInterop){cov_nabj4td94().f[0]++;cov_nabj4td94().s[8]++;if(typeof WeakMap!=="function"){cov_nabj4td94().b[0][0]++;cov_nabj4td94().s[9]++;return null;}else{cov_nabj4td94().b[0][1]++;}var cacheBabelInterop=(cov_nabj4td94().s[10]++,new WeakMap());var cacheNodeInterop=(cov_nabj4td94().s[11]++,new WeakMap());cov_nabj4td94().s[12]++;return(_getRequireWildcardCache=function(nodeInterop){cov_nabj4td94().f[1]++;cov_nabj4td94().s[13]++;return nodeInterop?(cov_nabj4td94().b[1][0]++,cacheNodeInterop):(cov_nabj4td94().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_nabj4td94().f[2]++;cov_nabj4td94().s[14]++;if((cov_nabj4td94().b[3][0]++,!nodeInterop)&&(cov_nabj4td94().b[3][1]++,obj)&&(cov_nabj4td94().b[3][2]++,obj.__esModule)){cov_nabj4td94().b[2][0]++;cov_nabj4td94().s[15]++;return obj;}else{cov_nabj4td94().b[2][1]++;}cov_nabj4td94().s[16]++;if((cov_nabj4td94().b[5][0]++,obj===null)||(cov_nabj4td94().b[5][1]++,typeof obj!=="object")&&(cov_nabj4td94().b[5][2]++,typeof obj!=="function")){cov_nabj4td94().b[4][0]++;cov_nabj4td94().s[17]++;return{default:obj};}else{cov_nabj4td94().b[4][1]++;}var cache=(cov_nabj4td94().s[18]++,_getRequireWildcardCache(nodeInterop));cov_nabj4td94().s[19]++;if((cov_nabj4td94().b[7][0]++,cache)&&(cov_nabj4td94().b[7][1]++,cache.has(obj))){cov_nabj4td94().b[6][0]++;cov_nabj4td94().s[20]++;return cache.get(obj);}else{cov_nabj4td94().b[6][1]++;}var newObj=(cov_nabj4td94().s[21]++,{});var hasPropertyDescriptor=(cov_nabj4td94().s[22]++,(cov_nabj4td94().b[8][0]++,Object.defineProperty)&&(cov_nabj4td94().b[8][1]++,Object.getOwnPropertyDescriptor));cov_nabj4td94().s[23]++;for(var key in obj){cov_nabj4td94().s[24]++;if((cov_nabj4td94().b[10][0]++,key!=="default")&&(cov_nabj4td94().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_nabj4td94().b[9][0]++;var desc=(cov_nabj4td94().s[25]++,hasPropertyDescriptor?(cov_nabj4td94().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_nabj4td94().b[11][1]++,null));cov_nabj4td94().s[26]++;if((cov_nabj4td94().b[13][0]++,desc)&&((cov_nabj4td94().b[13][1]++,desc.get)||(cov_nabj4td94().b[13][2]++,desc.set))){cov_nabj4td94().b[12][0]++;cov_nabj4td94().s[27]++;Object.defineProperty(newObj,key,desc);}else{cov_nabj4td94().b[12][1]++;cov_nabj4td94().s[28]++;newObj[key]=obj[key];}}else{cov_nabj4td94().b[9][1]++;}}cov_nabj4td94().s[29]++;newObj.default=obj;cov_nabj4td94().s[30]++;if(cache){cov_nabj4td94().b[14][0]++;cov_nabj4td94().s[31]++;cache.set(obj,newObj);}else{cov_nabj4td94().b[14][1]++;}cov_nabj4td94().s[32]++;return newObj;}function _interopRequireDefault(obj){cov_nabj4td94().f[3]++;cov_nabj4td94().s[33]++;return(cov_nabj4td94().b[16][0]++,obj)&&(cov_nabj4td94().b[16][1]++,obj.__esModule)?(cov_nabj4td94().b[15][0]++,obj):(cov_nabj4td94().b[15][1]++,{default:obj});}class AggregateRouter extends(_ClassesRouter.default){handleFind(req){cov_nabj4td94().f[4]++;const body=(cov_nabj4td94().s[34]++,Object.assign(req.body,_ClassesRouter.default.JSONFromQuery(req.query)));const options=(cov_nabj4td94().s[35]++,{});cov_nabj4td94().s[36]++;if(body.distinct){cov_nabj4td94().b[17][0]++;cov_nabj4td94().s[37]++;options.distinct=String(body.distinct);}else{cov_nabj4td94().b[17][1]++;}cov_nabj4td94().s[38]++;if(body.hint){cov_nabj4td94().b[18][0]++;cov_nabj4td94().s[39]++;options.hint=body.hint;cov_nabj4td94().s[40]++;delete body.hint;}else{cov_nabj4td94().b[18][1]++;}cov_nabj4td94().s[41]++;if(body.explain){cov_nabj4td94().b[19][0]++;cov_nabj4td94().s[42]++;options.explain=body.explain;cov_nabj4td94().s[43]++;delete body.explain;}else{cov_nabj4td94().b[19][1]++;}cov_nabj4td94().s[44]++;if(body.readPreference){cov_nabj4td94().b[20][0]++;cov_nabj4td94().s[45]++;options.readPreference=body.readPreference;cov_nabj4td94().s[46]++;delete body.readPreference;}else{cov_nabj4td94().b[20][1]++;}cov_nabj4td94().s[47]++;options.pipeline=AggregateRouter.getPipeline(body);cov_nabj4td94().s[48]++;if(typeof body.where==='string'){cov_nabj4td94().b[21][0]++;cov_nabj4td94().s[49]++;body.where=JSON.parse(body.where);}else{cov_nabj4td94().b[21][1]++;}cov_nabj4td94().s[50]++;return _rest.default.find(req.config,req.auth,this.className(req),body.where,options,req.info.clientSDK,req.info.context).then(response=>{cov_nabj4td94().f[5]++;cov_nabj4td94().s[51]++;for(const result of response.results){cov_nabj4td94().s[52]++;if(typeof result==='object'){cov_nabj4td94().b[22][0]++;cov_nabj4td94().s[53]++;_UsersRouter.default.removeHiddenProperties(result);}else{cov_nabj4td94().b[22][1]++;}}cov_nabj4td94().s[54]++;return{response};});}/* Builds a pipeline from the body. Originally the body could be passed as a single object,
   * and now we support many options
   *
   * Array
   *
   * body: [{
   *   group: { objectId: '$name' },
   * }]
   *
   * Object
   *
   * body: {
   *   group: { objectId: '$name' },
   * }
   *
   *
   * Pipeline Operator with an Array or an Object
   *
   * body: {
   *   pipeline: {
   *     group: { objectId: '$name' },
   *   }
   * }
   *
   */static getPipeline(body){cov_nabj4td94().f[6]++;let pipeline=(cov_nabj4td94().s[55]++,(cov_nabj4td94().b[23][0]++,body.pipeline)||(cov_nabj4td94().b[23][1]++,body));cov_nabj4td94().s[56]++;if(!Array.isArray(pipeline)){cov_nabj4td94().b[24][0]++;cov_nabj4td94().s[57]++;pipeline=Object.keys(pipeline).map(key=>{cov_nabj4td94().f[7]++;cov_nabj4td94().s[58]++;return{[key]:pipeline[key]};});}else{cov_nabj4td94().b[24][1]++;}cov_nabj4td94().s[59]++;return pipeline.map(stage=>{cov_nabj4td94().f[8]++;const keys=(cov_nabj4td94().s[60]++,Object.keys(stage));cov_nabj4td94().s[61]++;if(keys.length!=1){cov_nabj4td94().b[25][0]++;cov_nabj4td94().s[62]++;throw new Error(`Pipeline stages should only have one key found ${keys.join(', ')}`);}else{cov_nabj4td94().b[25][1]++;}cov_nabj4td94().s[63]++;return AggregateRouter.transformStage(keys[0],stage);});}static transformStage(stageName,stage){cov_nabj4td94().f[9]++;cov_nabj4td94().s[64]++;if(stageName==='group'){cov_nabj4td94().b[26][0]++;cov_nabj4td94().s[65]++;if(Object.prototype.hasOwnProperty.call(stage[stageName],'objectId')){cov_nabj4td94().b[27][0]++;cov_nabj4td94().s[66]++;_Deprecator.default.logRuntimeDeprecation({usage:'The use of objectId in aggregation stage $group',solution:'Use _id instead.'});cov_nabj4td94().s[67]++;stage[stageName]._id=stage[stageName].objectId;cov_nabj4td94().s[68]++;delete stage[stageName].objectId;}else{cov_nabj4td94().b[27][1]++;}cov_nabj4td94().s[69]++;if(!Object.prototype.hasOwnProperty.call(stage[stageName],'_id')){cov_nabj4td94().b[28][0]++;cov_nabj4td94().s[70]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,`Invalid parameter for query: group. Missing key _id`);}else{cov_nabj4td94().b[28][1]++;}}else{cov_nabj4td94().b[26][1]++;}cov_nabj4td94().s[71]++;if(stageName[0]!=='$'){cov_nabj4td94().b[29][0]++;cov_nabj4td94().s[72]++;_Deprecator.default.logRuntimeDeprecation({usage:"Using aggregation stages without a leading '$'",solution:`Try $${stageName} instead.`});}else{cov_nabj4td94().b[29][1]++;}const key=(cov_nabj4td94().s[73]++,stageName[0]==='$'?(cov_nabj4td94().b[30][0]++,stageName):(cov_nabj4td94().b[30][1]++,`$${stageName}`));cov_nabj4td94().s[74]++;return{[key]:stage[stageName]};}mountRoutes(){cov_nabj4td94().f[10]++;cov_nabj4td94().s[75]++;this.route('GET','/aggregate/:className',middleware.promiseEnforceMasterKeyAccess,req=>{cov_nabj4td94().f[11]++;cov_nabj4td94().s[76]++;return this.handleFind(req);});}}cov_nabj4td94().s[77]++;exports.AggregateRouter=AggregateRouter;var _default=(cov_nabj4td94().s[78]++,AggregateRouter);cov_nabj4td94().s[79]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,