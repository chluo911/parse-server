"use strict";function cov_k920res22(){var path="/parse-server/lib/Routers/ClassesRouter.js";var hash="07254c21420a0fd25bb77358ee1822b0b25b48a7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Routers/ClassesRouter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:49}},"2":{start:{line:8,column:21},end:{line:8,column:72}},"3":{start:{line:10,column:12},end:{line:10,column:54}},"4":{start:{line:12,column:14},end:{line:12,column:55}},"5":{start:{line:14,column:12},end:{line:14,column:57}},"6":{start:{line:16,column:19},end:{line:16,column:44}},"7":{start:{line:18,column:39},end:{line:18,column:93}},"8":{start:{line:20,column:31},end:{line:20,column:134}},"9":{start:{line:24,column:4},end:{line:24,column:32}},"10":{start:{line:28,column:17},end:{line:28,column:80}},"11":{start:{line:29,column:20},end:{line:29,column:55}},"12":{start:{line:31,column:4},end:{line:34,column:5}},"13":{start:{line:33,column:6},end:{line:33,column:50}},"14":{start:{line:36,column:4},end:{line:38,column:5}},"15":{start:{line:37,column:6},end:{line:37,column:77}},"16":{start:{line:40,column:4},end:{line:42,column:5}},"17":{start:{line:41,column:6},end:{line:41,column:42}},"18":{start:{line:44,column:4},end:{line:48,column:7}},"19":{start:{line:45,column:6},end:{line:47,column:8}},"20":{start:{line:53,column:17},end:{line:53,column:80}},"21":{start:{line:54,column:20},end:{line:54,column:22}},"22":{start:{line:56,column:4},end:{line:60,column:5}},"23":{start:{line:57,column:6},end:{line:59,column:7}},"24":{start:{line:58,column:8},end:{line:58,column:105}},"25":{start:{line:62,column:4},end:{line:64,column:5}},"26":{start:{line:63,column:6},end:{line:63,column:39}},"27":{start:{line:66,column:4},end:{line:68,column:5}},"28":{start:{line:67,column:6},end:{line:67,column:45}},"29":{start:{line:70,column:4},end:{line:72,column:5}},"30":{start:{line:71,column:6},end:{line:71,column:53}},"31":{start:{line:74,column:4},end:{line:76,column:5}},"32":{start:{line:75,column:6},end:{line:75,column:51}},"33":{start:{line:78,column:4},end:{line:80,column:5}},"34":{start:{line:79,column:6},end:{line:79,column:65}},"35":{start:{line:82,column:4},end:{line:84,column:5}},"36":{start:{line:83,column:6},end:{line:83,column:67}},"37":{start:{line:86,column:4},end:{line:104,column:7}},"38":{start:{line:87,column:6},end:{line:89,column:7}},"39":{start:{line:88,column:8},end:{line:88,column:97}},"40":{start:{line:91,column:6},end:{line:99,column:7}},"41":{start:{line:92,column:8},end:{line:92,column:48}},"42":{start:{line:93,column:21},end:{line:93,column:40}},"43":{start:{line:95,column:8},end:{line:98,column:9}},"44":{start:{line:97,column:10},end:{line:97,column:67}},"45":{start:{line:101,column:6},end:{line:103,column:8}},"46":{start:{line:108,column:4},end:{line:108,column:123}},"47":{start:{line:112,column:18},end:{line:114,column:5}},"48":{start:{line:115,column:4},end:{line:115,column:130}},"49":{start:{line:119,column:4},end:{line:123,column:7}},"50":{start:{line:120,column:6},end:{line:122,column:8}},"51":{start:{line:127,column:17},end:{line:127,column:19}},"52":{start:{line:129,column:4},end:{line:135,column:5}},"53":{start:{line:130,column:6},end:{line:134,column:7}},"54":{start:{line:131,column:8},end:{line:131,column:38}},"55":{start:{line:133,column:8},end:{line:133,column:26}},"56":{start:{line:137,column:4},end:{line:137,column:16}},"57":{start:{line:141,column:29},end:{line:141,column:236}},"58":{start:{line:143,column:4},end:{line:147,column:5}},"59":{start:{line:144,column:6},end:{line:146,column:7}},"60":{start:{line:145,column:8},end:{line:145,column:112}},"61":{start:{line:149,column:20},end:{line:149,column:22}},"62":{start:{line:151,column:4},end:{line:153,column:5}},"63":{start:{line:152,column:6},end:{line:152,column:39}},"64":{start:{line:155,column:4},end:{line:159,column:5}},"65":{start:{line:156,column:6},end:{line:156,column:41}},"66":{start:{line:158,column:6},end:{line:158,column:34}},"67":{start:{line:161,column:4},end:{line:163,column:5}},"68":{start:{line:162,column:6},end:{line:162,column:41}},"69":{start:{line:165,column:4},end:{line:167,column:5}},"70":{start:{line:166,column:6},end:{line:166,column:27}},"71":{start:{line:169,column:4},end:{line:171,column:5}},"72":{start:{line:170,column:6},end:{line:170,column:39}},"73":{start:{line:173,column:4},end:{line:175,column:5}},"74":{start:{line:174,column:6},end:{line:174,column:53}},"75":{start:{line:177,column:4},end:{line:179,column:5}},"76":{start:{line:178,column:6},end:{line:178,column:45}},"77":{start:{line:181,column:4},end:{line:183,column:5}},"78":{start:{line:182,column:6},end:{line:182,column:32}},"79":{start:{line:185,column:4},end:{line:187,column:5}},"80":{start:{line:186,column:6},end:{line:186,column:51}},"81":{start:{line:189,column:4},end:{line:191,column:5}},"82":{start:{line:190,column:6},end:{line:190,column:65}},"83":{start:{line:193,column:4},end:{line:195,column:5}},"84":{start:{line:194,column:6},end:{line:194,column:67}},"85":{start:{line:197,column:4},end:{line:199,column:5}},"86":{start:{line:198,column:6},end:{line:198,column:31}},"87":{start:{line:201,column:4},end:{line:203,column:5}},"88":{start:{line:202,column:6},end:{line:202,column:37}},"89":{start:{line:205,column:4},end:{line:205,column:19}},"90":{start:{line:209,column:4},end:{line:211,column:7}},"91":{start:{line:210,column:6},end:{line:210,column:34}},"92":{start:{line:212,column:4},end:{line:214,column:7}},"93":{start:{line:213,column:6},end:{line:213,column:33}},"94":{start:{line:215,column:4},end:{line:217,column:7}},"95":{start:{line:216,column:6},end:{line:216,column:36}},"96":{start:{line:218,column:4},end:{line:220,column:7}},"97":{start:{line:219,column:6},end:{line:219,column:36}},"98":{start:{line:221,column:4},end:{line:223,column:7}},"99":{start:{line:222,column:6},end:{line:222,column:36}},"100":{start:{line:228,column:0},end:{line:228,column:38}},"101":{start:{line:229,column:15},end:{line:229,column:28}},"102":{start:{line:230,column:0},end:{line:230,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:17},end:{line:25,column:3}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:2},end:{line:27,column:3}},loc:{start:{line:27,column:18},end:{line:49,column:3}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:137},end:{line:44,column:138}},loc:{start:{line:44,column:149},end:{line:48,column:5}},line:44},"4":{name:"(anonymous_4)",decl:{start:{line:52,column:2},end:{line:52,column:3}},loc:{start:{line:52,column:17},end:{line:105,column:3}},line:52},"5":{name:"(anonymous_5)",decl:{start:{line:86,column:127},end:{line:86,column:128}},loc:{start:{line:86,column:139},end:{line:104,column:5}},line:86},"6":{name:"(anonymous_6)",decl:{start:{line:107,column:2},end:{line:107,column:3}},loc:{start:{line:107,column:20},end:{line:109,column:3}},line:107},"7":{name:"(anonymous_7)",decl:{start:{line:111,column:2},end:{line:111,column:3}},loc:{start:{line:111,column:20},end:{line:116,column:3}},line:111},"8":{name:"(anonymous_8)",decl:{start:{line:118,column:2},end:{line:118,column:3}},loc:{start:{line:118,column:20},end:{line:124,column:3}},line:118},"9":{name:"(anonymous_9)",decl:{start:{line:119,column:116},end:{line:119,column:117}},loc:{start:{line:119,column:122},end:{line:123,column:5}},line:119},"10":{name:"(anonymous_10)",decl:{start:{line:126,column:2},end:{line:126,column:3}},loc:{start:{line:126,column:30},end:{line:138,column:3}},line:126},"11":{name:"(anonymous_11)",decl:{start:{line:140,column:2},end:{line:140,column:3}},loc:{start:{line:140,column:31},end:{line:206,column:3}},line:140},"12":{name:"(anonymous_12)",decl:{start:{line:208,column:2},end:{line:208,column:3}},loc:{start:{line:208,column:16},end:{line:224,column:3}},line:208},"13":{name:"(anonymous_13)",decl:{start:{line:209,column:45},end:{line:209,column:46}},loc:{start:{line:209,column:52},end:{line:211,column:5}},line:209},"14":{name:"(anonymous_14)",decl:{start:{line:212,column:55},end:{line:212,column:56}},loc:{start:{line:212,column:62},end:{line:214,column:5}},line:212},"15":{name:"(anonymous_15)",decl:{start:{line:215,column:85},end:{line:215,column:86}},loc:{start:{line:215,column:92},end:{line:217,column:5}},line:215},"16":{name:"(anonymous_16)",decl:{start:{line:218,column:94},end:{line:218,column:95}},loc:{start:{line:218,column:101},end:{line:220,column:5}},line:218},"17":{name:"(anonymous_17)",decl:{start:{line:221,column:58},end:{line:221,column:59}},loc:{start:{line:221,column:65},end:{line:223,column:5}},line:221}},branchMap:{"0":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"1":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"2":{loc:{start:{line:31,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:31,column:4},end:{line:34,column:5}},{start:{line:31,column:4},end:{line:34,column:5}}],line:31},"3":{loc:{start:{line:31,column:8},end:{line:31,column:63}},type:"binary-expr",locations:[{start:{line:31,column:8},end:{line:31,column:27}},{start:{line:31,column:31},end:{line:31,column:63}}],line:31},"4":{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:36,column:4},end:{line:38,column:5}}],line:36},"5":{loc:{start:{line:40,column:4},end:{line:42,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:42,column:5}},{start:{line:40,column:4},end:{line:42,column:5}}],line:40},"6":{loc:{start:{line:57,column:6},end:{line:59,column:7}},type:"if",locations:[{start:{line:57,column:6},end:{line:59,column:7}},{start:{line:57,column:6},end:{line:59,column:7}}],line:57},"7":{loc:{start:{line:62,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:64,column:5}},{start:{line:62,column:4},end:{line:64,column:5}}],line:62},"8":{loc:{start:{line:66,column:4},end:{line:68,column:5}},type:"if",locations:[{start:{line:66,column:4},end:{line:68,column:5}},{start:{line:66,column:4},end:{line:68,column:5}}],line:66},"9":{loc:{start:{line:70,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:70,column:4},end:{line:72,column:5}},{start:{line:70,column:4},end:{line:72,column:5}}],line:70},"10":{loc:{start:{line:74,column:4},end:{line:76,column:5}},type:"if",locations:[{start:{line:74,column:4},end:{line:76,column:5}},{start:{line:74,column:4},end:{line:76,column:5}}],line:74},"11":{loc:{start:{line:78,column:4},end:{line:80,column:5}},type:"if",locations:[{start:{line:78,column:4},end:{line:80,column:5}},{start:{line:78,column:4},end:{line:80,column:5}}],line:78},"12":{loc:{start:{line:82,column:4},end:{line:84,column:5}},type:"if",locations:[{start:{line:82,column:4},end:{line:84,column:5}},{start:{line:82,column:4},end:{line:84,column:5}}],line:82},"13":{loc:{start:{line:87,column:6},end:{line:89,column:7}},type:"if",locations:[{start:{line:87,column:6},end:{line:89,column:7}},{start:{line:87,column:6},end:{line:89,column:7}}],line:87},"14":{loc:{start:{line:87,column:10},end:{line:87,column:59}},type:"binary-expr",locations:[{start:{line:87,column:10},end:{line:87,column:27}},{start:{line:87,column:31},end:{line:87,column:59}}],line:87},"15":{loc:{start:{line:91,column:6},end:{line:99,column:7}},type:"if",locations:[{start:{line:91,column:6},end:{line:99,column:7}},{start:{line:91,column:6},end:{line:99,column:7}}],line:91},"16":{loc:{start:{line:95,column:8},end:{line:98,column:9}},type:"if",locations:[{start:{line:95,column:8},end:{line:98,column:9}},{start:{line:95,column:8},end:{line:98,column:9}}],line:95},"17":{loc:{start:{line:95,column:12},end:{line:95,column:62}},type:"binary-expr",locations:[{start:{line:95,column:12},end:{line:95,column:25}},{start:{line:95,column:29},end:{line:95,column:62}}],line:95},"18":{loc:{start:{line:144,column:6},end:{line:146,column:7}},type:"if",locations:[{start:{line:144,column:6},end:{line:146,column:7}},{start:{line:144,column:6},end:{line:146,column:7}}],line:144},"19":{loc:{start:{line:151,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:153,column:5}},{start:{line:151,column:4},end:{line:153,column:5}}],line:151},"20":{loc:{start:{line:155,column:4},end:{line:159,column:5}},type:"if",locations:[{start:{line:155,column:4},end:{line:159,column:5}},{start:{line:155,column:4},end:{line:159,column:5}}],line:155},"21":{loc:{start:{line:155,column:8},end:{line:155,column:38}},type:"binary-expr",locations:[{start:{line:155,column:8},end:{line:155,column:18}},{start:{line:155,column:22},end:{line:155,column:38}}],line:155},"22":{loc:{start:{line:161,column:4},end:{line:163,column:5}},type:"if",locations:[{start:{line:161,column:4},end:{line:163,column:5}},{start:{line:161,column:4},end:{line:163,column:5}}],line:161},"23":{loc:{start:{line:165,column:4},end:{line:167,column:5}},type:"if",locations:[{start:{line:165,column:4},end:{line:167,column:5}},{start:{line:165,column:4},end:{line:167,column:5}}],line:165},"24":{loc:{start:{line:169,column:4},end:{line:171,column:5}},type:"if",locations:[{start:{line:169,column:4},end:{line:171,column:5}},{start:{line:169,column:4},end:{line:171,column:5}}],line:169},"25":{loc:{start:{line:173,column:4},end:{line:175,column:5}},type:"if",locations:[{start:{line:173,column:4},end:{line:175,column:5}},{start:{line:173,column:4},end:{line:175,column:5}}],line:173},"26":{loc:{start:{line:177,column:4},end:{line:179,column:5}},type:"if",locations:[{start:{line:177,column:4},end:{line:179,column:5}},{start:{line:177,column:4},end:{line:179,column:5}}],line:177},"27":{loc:{start:{line:181,column:4},end:{line:183,column:5}},type:"if",locations:[{start:{line:181,column:4},end:{line:183,column:5}},{start:{line:181,column:4},end:{line:183,column:5}}],line:181},"28":{loc:{start:{line:185,column:4},end:{line:187,column:5}},type:"if",locations:[{start:{line:185,column:4},end:{line:187,column:5}},{start:{line:185,column:4},end:{line:187,column:5}}],line:185},"29":{loc:{start:{line:189,column:4},end:{line:191,column:5}},type:"if",locations:[{start:{line:189,column:4},end:{line:191,column:5}},{start:{line:189,column:4},end:{line:191,column:5}}],line:189},"30":{loc:{start:{line:193,column:4},end:{line:195,column:5}},type:"if",locations:[{start:{line:193,column:4},end:{line:195,column:5}},{start:{line:193,column:4},end:{line:195,column:5}}],line:193},"31":{loc:{start:{line:197,column:4},end:{line:199,column:5}},type:"if",locations:[{start:{line:197,column:4},end:{line:199,column:5}},{start:{line:197,column:4},end:{line:199,column:5}}],line:197},"32":{loc:{start:{line:197,column:8},end:{line:197,column:85}},type:"binary-expr",locations:[{start:{line:197,column:8},end:{line:197,column:17}},{start:{line:197,column:22},end:{line:197,column:51}},{start:{line:197,column:55},end:{line:197,column:84}}],line:197},"33":{loc:{start:{line:201,column:4},end:{line:203,column:5}},type:"if",locations:[{start:{line:201,column:4},end:{line:203,column:5}},{start:{line:201,column:4},end:{line:203,column:5}}],line:201}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0]},inputSourceMap:{version:3,sources:["../../src/Routers/ClassesRouter.js"],names:["ALLOWED_GET_QUERY_KEYS","ClassesRouter","PromiseRouter","className","req","params","handleFind","body","Object","assign","JSONFromQuery","query","options","optionsFromBody","config","maxLimit","limit","Number","redirectClassNameForKey","String","where","JSON","parse","rest","find","auth","info","clientSDK","context","then","response","handleGet","key","keys","indexOf","Parse","Error","INVALID_QUERY","include","excludeKeys","readPreference","includeReadPreference","subqueryReadPreference","get","objectId","results","length","OBJECT_NOT_FOUND","sessionToken","user","id","handleCreate","create","handleUpdate","update","handleDelete","del","json","value","_","entries","e","allowConstraints","skip","order","count","includeAll","hint","explain","mountRoutes","route","promiseEnsureIdempotency"],mappings:"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",sourcesContent:["import PromiseRouter from '../PromiseRouter';\nimport rest from '../rest';\nimport _ from 'lodash';\nimport Parse from 'parse/node';\nimport { promiseEnsureIdempotency } from '../middlewares';\n\nconst ALLOWED_GET_QUERY_KEYS = [\n  'keys',\n  'include',\n  'excludeKeys',\n  'readPreference',\n  'includeReadPreference',\n  'subqueryReadPreference',\n];\n\nexport class ClassesRouter extends PromiseRouter {\n  className(req) {\n    return req.params.className;\n  }\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = ClassesRouter.optionsFromBody(body);\n    if (req.config.maxLimit && body.limit > req.config.maxLimit) {\n      // Silently replace the limit on the query with the max configured\n      options.limit = Number(req.config.maxLimit);\n    }\n    if (body.redirectClassNameForKey) {\n      options.redirectClassNameForKey = String(body.redirectClassNameForKey);\n    }\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest\n      .find(\n        req.config,\n        req.auth,\n        this.className(req),\n        body.where,\n        options,\n        req.info.clientSDK,\n        req.info.context\n      )\n      .then(response => {\n        return { response: response };\n      });\n  }\n\n  // Returns a promise for a {response} object.\n  handleGet(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n\n    for (const key of Object.keys(body)) {\n      if (ALLOWED_GET_QUERY_KEYS.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Improper encode of parameter');\n      }\n    }\n\n    if (body.keys != null) {\n      options.keys = String(body.keys);\n    }\n    if (body.include != null) {\n      options.include = String(body.include);\n    }\n    if (body.excludeKeys != null) {\n      options.excludeKeys = String(body.excludeKeys);\n    }\n    if (typeof body.readPreference === 'string') {\n      options.readPreference = body.readPreference;\n    }\n    if (typeof body.includeReadPreference === 'string') {\n      options.includeReadPreference = body.includeReadPreference;\n    }\n    if (typeof body.subqueryReadPreference === 'string') {\n      options.subqueryReadPreference = body.subqueryReadPreference;\n    }\n\n    return rest\n      .get(\n        req.config,\n        req.auth,\n        this.className(req),\n        req.params.objectId,\n        options,\n        req.info.clientSDK\n      )\n      .then(response => {\n        if (!response.results || response.results.length == 0) {\n          throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n        }\n\n        if (this.className(req) === '_User') {\n          delete response.results[0].sessionToken;\n\n          const user = response.results[0];\n\n          if (req.auth.user && user.objectId == req.auth.user.id) {\n            // Force the session token\n            response.results[0].sessionToken = req.info.sessionToken;\n          }\n        }\n        return { response: response.results[0] };\n      });\n  }\n\n  handleCreate(req) {\n    return rest.create(\n      req.config,\n      req.auth,\n      this.className(req),\n      req.body,\n      req.info.clientSDK,\n      req.info.context\n    );\n  }\n\n  handleUpdate(req) {\n    const where = { objectId: req.params.objectId };\n    return rest.update(\n      req.config,\n      req.auth,\n      this.className(req),\n      where,\n      req.body,\n      req.info.clientSDK,\n      req.info.context\n    );\n  }\n\n  handleDelete(req) {\n    return rest\n      .del(req.config, req.auth, this.className(req), req.params.objectId, req.info.context)\n      .then(() => {\n        return { response: {} };\n      });\n  }\n\n  static JSONFromQuery(query) {\n    const json = {};\n    for (const [key, value] of _.entries(query)) {\n      try {\n        json[key] = JSON.parse(value);\n      } catch (e) {\n        json[key] = value;\n      }\n    }\n    return json;\n  }\n\n  static optionsFromBody(body) {\n    const allowConstraints = [\n      'skip',\n      'limit',\n      'order',\n      'count',\n      'keys',\n      'excludeKeys',\n      'include',\n      'includeAll',\n      'redirectClassNameForKey',\n      'where',\n      'readPreference',\n      'includeReadPreference',\n      'subqueryReadPreference',\n      'hint',\n      'explain',\n    ];\n\n    for (const key of Object.keys(body)) {\n      if (allowConstraints.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, `Invalid parameter for query: ${key}`);\n      }\n    }\n    const options = {};\n    if (body.skip) {\n      options.skip = Number(body.skip);\n    }\n    if (body.limit || body.limit === 0) {\n      options.limit = Number(body.limit);\n    } else {\n      options.limit = Number(100);\n    }\n    if (body.order) {\n      options.order = String(body.order);\n    }\n    if (body.count) {\n      options.count = true;\n    }\n    if (body.keys != null) {\n      options.keys = String(body.keys);\n    }\n    if (body.excludeKeys != null) {\n      options.excludeKeys = String(body.excludeKeys);\n    }\n    if (body.include != null) {\n      options.include = String(body.include);\n    }\n    if (body.includeAll) {\n      options.includeAll = true;\n    }\n    if (typeof body.readPreference === 'string') {\n      options.readPreference = body.readPreference;\n    }\n    if (typeof body.includeReadPreference === 'string') {\n      options.includeReadPreference = body.includeReadPreference;\n    }\n    if (typeof body.subqueryReadPreference === 'string') {\n      options.subqueryReadPreference = body.subqueryReadPreference;\n    }\n    if (body.hint && (typeof body.hint === 'string' || typeof body.hint === 'object')) {\n      options.hint = body.hint;\n    }\n    if (body.explain) {\n      options.explain = body.explain;\n    }\n    return options;\n  }\n\n  mountRoutes() {\n    this.route('GET', '/classes/:className', req => {\n      return this.handleFind(req);\n    });\n    this.route('GET', '/classes/:className/:objectId', req => {\n      return this.handleGet(req);\n    });\n    this.route('POST', '/classes/:className', promiseEnsureIdempotency, req => {\n      return this.handleCreate(req);\n    });\n    this.route('PUT', '/classes/:className/:objectId', promiseEnsureIdempotency, req => {\n      return this.handleUpdate(req);\n    });\n    this.route('DELETE', '/classes/:className/:objectId', req => {\n      return this.handleDelete(req);\n    });\n  }\n}\n\nexport default ClassesRouter;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"07254c21420a0fd25bb77358ee1822b0b25b48a7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_k920res22=function(){return actualCoverage;};}return actualCoverage;}cov_k920res22();cov_k920res22().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_k920res22().s[1]++;exports.default=exports.ClassesRouter=void 0;var _PromiseRouter=(cov_k920res22().s[2]++,_interopRequireDefault(require("../PromiseRouter")));var _rest=(cov_k920res22().s[3]++,_interopRequireDefault(require("../rest")));var _lodash=(cov_k920res22().s[4]++,_interopRequireDefault(require("lodash")));var _node=(cov_k920res22().s[5]++,_interopRequireDefault(require("parse/node")));var _middlewares=(cov_k920res22().s[6]++,require("../middlewares"));function _interopRequireDefault(obj){cov_k920res22().f[0]++;cov_k920res22().s[7]++;return(cov_k920res22().b[1][0]++,obj)&&(cov_k920res22().b[1][1]++,obj.__esModule)?(cov_k920res22().b[0][0]++,obj):(cov_k920res22().b[0][1]++,{default:obj});}const ALLOWED_GET_QUERY_KEYS=(cov_k920res22().s[8]++,['keys','include','excludeKeys','readPreference','includeReadPreference','subqueryReadPreference']);class ClassesRouter extends(_PromiseRouter.default){className(req){cov_k920res22().f[1]++;cov_k920res22().s[9]++;return req.params.className;}handleFind(req){cov_k920res22().f[2]++;const body=(cov_k920res22().s[10]++,Object.assign(req.body,ClassesRouter.JSONFromQuery(req.query)));const options=(cov_k920res22().s[11]++,ClassesRouter.optionsFromBody(body));cov_k920res22().s[12]++;if((cov_k920res22().b[3][0]++,req.config.maxLimit)&&(cov_k920res22().b[3][1]++,body.limit>req.config.maxLimit)){cov_k920res22().b[2][0]++;cov_k920res22().s[13]++;// Silently replace the limit on the query with the max configured
options.limit=Number(req.config.maxLimit);}else{cov_k920res22().b[2][1]++;}cov_k920res22().s[14]++;if(body.redirectClassNameForKey){cov_k920res22().b[4][0]++;cov_k920res22().s[15]++;options.redirectClassNameForKey=String(body.redirectClassNameForKey);}else{cov_k920res22().b[4][1]++;}cov_k920res22().s[16]++;if(typeof body.where==='string'){cov_k920res22().b[5][0]++;cov_k920res22().s[17]++;body.where=JSON.parse(body.where);}else{cov_k920res22().b[5][1]++;}cov_k920res22().s[18]++;return _rest.default.find(req.config,req.auth,this.className(req),body.where,options,req.info.clientSDK,req.info.context).then(response=>{cov_k920res22().f[3]++;cov_k920res22().s[19]++;return{response:response};});}// Returns a promise for a {response} object.
handleGet(req){cov_k920res22().f[4]++;const body=(cov_k920res22().s[20]++,Object.assign(req.body,ClassesRouter.JSONFromQuery(req.query)));const options=(cov_k920res22().s[21]++,{});cov_k920res22().s[22]++;for(const key of Object.keys(body)){cov_k920res22().s[23]++;if(ALLOWED_GET_QUERY_KEYS.indexOf(key)===-1){cov_k920res22().b[6][0]++;cov_k920res22().s[24]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,'Improper encode of parameter');}else{cov_k920res22().b[6][1]++;}}cov_k920res22().s[25]++;if(body.keys!=null){cov_k920res22().b[7][0]++;cov_k920res22().s[26]++;options.keys=String(body.keys);}else{cov_k920res22().b[7][1]++;}cov_k920res22().s[27]++;if(body.include!=null){cov_k920res22().b[8][0]++;cov_k920res22().s[28]++;options.include=String(body.include);}else{cov_k920res22().b[8][1]++;}cov_k920res22().s[29]++;if(body.excludeKeys!=null){cov_k920res22().b[9][0]++;cov_k920res22().s[30]++;options.excludeKeys=String(body.excludeKeys);}else{cov_k920res22().b[9][1]++;}cov_k920res22().s[31]++;if(typeof body.readPreference==='string'){cov_k920res22().b[10][0]++;cov_k920res22().s[32]++;options.readPreference=body.readPreference;}else{cov_k920res22().b[10][1]++;}cov_k920res22().s[33]++;if(typeof body.includeReadPreference==='string'){cov_k920res22().b[11][0]++;cov_k920res22().s[34]++;options.includeReadPreference=body.includeReadPreference;}else{cov_k920res22().b[11][1]++;}cov_k920res22().s[35]++;if(typeof body.subqueryReadPreference==='string'){cov_k920res22().b[12][0]++;cov_k920res22().s[36]++;options.subqueryReadPreference=body.subqueryReadPreference;}else{cov_k920res22().b[12][1]++;}cov_k920res22().s[37]++;return _rest.default.get(req.config,req.auth,this.className(req),req.params.objectId,options,req.info.clientSDK).then(response=>{cov_k920res22().f[5]++;cov_k920res22().s[38]++;if((cov_k920res22().b[14][0]++,!response.results)||(cov_k920res22().b[14][1]++,response.results.length==0)){cov_k920res22().b[13][0]++;cov_k920res22().s[39]++;throw new _node.default.Error(_node.default.Error.OBJECT_NOT_FOUND,'Object not found.');}else{cov_k920res22().b[13][1]++;}cov_k920res22().s[40]++;if(this.className(req)==='_User'){cov_k920res22().b[15][0]++;cov_k920res22().s[41]++;delete response.results[0].sessionToken;const user=(cov_k920res22().s[42]++,response.results[0]);cov_k920res22().s[43]++;if((cov_k920res22().b[17][0]++,req.auth.user)&&(cov_k920res22().b[17][1]++,user.objectId==req.auth.user.id)){cov_k920res22().b[16][0]++;cov_k920res22().s[44]++;// Force the session token
response.results[0].sessionToken=req.info.sessionToken;}else{cov_k920res22().b[16][1]++;}}else{cov_k920res22().b[15][1]++;}cov_k920res22().s[45]++;return{response:response.results[0]};});}handleCreate(req){cov_k920res22().f[6]++;cov_k920res22().s[46]++;return _rest.default.create(req.config,req.auth,this.className(req),req.body,req.info.clientSDK,req.info.context);}handleUpdate(req){cov_k920res22().f[7]++;const where=(cov_k920res22().s[47]++,{objectId:req.params.objectId});cov_k920res22().s[48]++;return _rest.default.update(req.config,req.auth,this.className(req),where,req.body,req.info.clientSDK,req.info.context);}handleDelete(req){cov_k920res22().f[8]++;cov_k920res22().s[49]++;return _rest.default.del(req.config,req.auth,this.className(req),req.params.objectId,req.info.context).then(()=>{cov_k920res22().f[9]++;cov_k920res22().s[50]++;return{response:{}};});}static JSONFromQuery(query){cov_k920res22().f[10]++;const json=(cov_k920res22().s[51]++,{});cov_k920res22().s[52]++;for(const[key,value]of _lodash.default.entries(query)){cov_k920res22().s[53]++;try{cov_k920res22().s[54]++;json[key]=JSON.parse(value);}catch(e){cov_k920res22().s[55]++;json[key]=value;}}cov_k920res22().s[56]++;return json;}static optionsFromBody(body){cov_k920res22().f[11]++;const allowConstraints=(cov_k920res22().s[57]++,['skip','limit','order','count','keys','excludeKeys','include','includeAll','redirectClassNameForKey','where','readPreference','includeReadPreference','subqueryReadPreference','hint','explain']);cov_k920res22().s[58]++;for(const key of Object.keys(body)){cov_k920res22().s[59]++;if(allowConstraints.indexOf(key)===-1){cov_k920res22().b[18][0]++;cov_k920res22().s[60]++;throw new _node.default.Error(_node.default.Error.INVALID_QUERY,`Invalid parameter for query: ${key}`);}else{cov_k920res22().b[18][1]++;}}const options=(cov_k920res22().s[61]++,{});cov_k920res22().s[62]++;if(body.skip){cov_k920res22().b[19][0]++;cov_k920res22().s[63]++;options.skip=Number(body.skip);}else{cov_k920res22().b[19][1]++;}cov_k920res22().s[64]++;if((cov_k920res22().b[21][0]++,body.limit)||(cov_k920res22().b[21][1]++,body.limit===0)){cov_k920res22().b[20][0]++;cov_k920res22().s[65]++;options.limit=Number(body.limit);}else{cov_k920res22().b[20][1]++;cov_k920res22().s[66]++;options.limit=Number(100);}cov_k920res22().s[67]++;if(body.order){cov_k920res22().b[22][0]++;cov_k920res22().s[68]++;options.order=String(body.order);}else{cov_k920res22().b[22][1]++;}cov_k920res22().s[69]++;if(body.count){cov_k920res22().b[23][0]++;cov_k920res22().s[70]++;options.count=true;}else{cov_k920res22().b[23][1]++;}cov_k920res22().s[71]++;if(body.keys!=null){cov_k920res22().b[24][0]++;cov_k920res22().s[72]++;options.keys=String(body.keys);}else{cov_k920res22().b[24][1]++;}cov_k920res22().s[73]++;if(body.excludeKeys!=null){cov_k920res22().b[25][0]++;cov_k920res22().s[74]++;options.excludeKeys=String(body.excludeKeys);}else{cov_k920res22().b[25][1]++;}cov_k920res22().s[75]++;if(body.include!=null){cov_k920res22().b[26][0]++;cov_k920res22().s[76]++;options.include=String(body.include);}else{cov_k920res22().b[26][1]++;}cov_k920res22().s[77]++;if(body.includeAll){cov_k920res22().b[27][0]++;cov_k920res22().s[78]++;options.includeAll=true;}else{cov_k920res22().b[27][1]++;}cov_k920res22().s[79]++;if(typeof body.readPreference==='string'){cov_k920res22().b[28][0]++;cov_k920res22().s[80]++;options.readPreference=body.readPreference;}else{cov_k920res22().b[28][1]++;}cov_k920res22().s[81]++;if(typeof body.includeReadPreference==='string'){cov_k920res22().b[29][0]++;cov_k920res22().s[82]++;options.includeReadPreference=body.includeReadPreference;}else{cov_k920res22().b[29][1]++;}cov_k920res22().s[83]++;if(typeof body.subqueryReadPreference==='string'){cov_k920res22().b[30][0]++;cov_k920res22().s[84]++;options.subqueryReadPreference=body.subqueryReadPreference;}else{cov_k920res22().b[30][1]++;}cov_k920res22().s[85]++;if((cov_k920res22().b[32][0]++,body.hint)&&((cov_k920res22().b[32][1]++,typeof body.hint==='string')||(cov_k920res22().b[32][2]++,typeof body.hint==='object'))){cov_k920res22().b[31][0]++;cov_k920res22().s[86]++;options.hint=body.hint;}else{cov_k920res22().b[31][1]++;}cov_k920res22().s[87]++;if(body.explain){cov_k920res22().b[33][0]++;cov_k920res22().s[88]++;options.explain=body.explain;}else{cov_k920res22().b[33][1]++;}cov_k920res22().s[89]++;return options;}mountRoutes(){cov_k920res22().f[12]++;cov_k920res22().s[90]++;this.route('GET','/classes/:className',req=>{cov_k920res22().f[13]++;cov_k920res22().s[91]++;return this.handleFind(req);});cov_k920res22().s[92]++;this.route('GET','/classes/:className/:objectId',req=>{cov_k920res22().f[14]++;cov_k920res22().s[93]++;return this.handleGet(req);});cov_k920res22().s[94]++;this.route('POST','/classes/:className',_middlewares.promiseEnsureIdempotency,req=>{cov_k920res22().f[15]++;cov_k920res22().s[95]++;return this.handleCreate(req);});cov_k920res22().s[96]++;this.route('PUT','/classes/:className/:objectId',_middlewares.promiseEnsureIdempotency,req=>{cov_k920res22().f[16]++;cov_k920res22().s[97]++;return this.handleUpdate(req);});cov_k920res22().s[98]++;this.route('DELETE','/classes/:className/:objectId',req=>{cov_k920res22().f[17]++;cov_k920res22().s[99]++;return this.handleDelete(req);});}}cov_k920res22().s[100]++;exports.ClassesRouter=ClassesRouter;var _default=(cov_k920res22().s[101]++,ClassesRouter);cov_k920res22().s[102]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,