"use strict";function cov_2ig7rfco7k(){var path="/parse-server/lib/Security/Check.js";var hash="d2f965fe70c1f6b72645964831d047205bb41879";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Security/Check.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:13},end:{line:8,column:56}},"3":{start:{line:10,column:14},end:{line:10,column:31}},"4":{start:{line:12,column:39},end:{line:12,column:93}},"5":{start:{line:32,column:4},end:{line:32,column:33}},"6":{start:{line:39,column:8},end:{line:39,column:14}},"7":{start:{line:40,column:4},end:{line:40,column:23}},"8":{start:{line:41,column:4},end:{line:41,column:27}},"9":{start:{line:42,column:4},end:{line:42,column:29}},"10":{start:{line:43,column:4},end:{line:43,column:23}},"11":{start:{line:45,column:4},end:{line:45,column:39}},"12":{start:{line:46,column:4},end:{line:46,column:15}},"13":{start:{line:55,column:4},end:{line:55,column:28}},"14":{start:{line:60,column:18},end:{line:60,column:79}},"15":{start:{line:62,column:4},end:{line:68,column:5}},"16":{start:{line:63,column:6},end:{line:63,column:14}},"17":{start:{line:64,column:6},end:{line:64,column:44}},"18":{start:{line:66,column:6},end:{line:66,column:30}},"19":{start:{line:67,column:6},end:{line:67,column:41}},"20":{start:{line:77,column:4},end:{line:98,column:7}},"21":{start:{line:107,column:19},end:{line:111,column:2}},"22":{start:{line:112,column:15},end:{line:112,column:20}},"23":{start:{line:113,column:0},end:{line:113,column:27}},"24":{start:{line:114,column:0},end:{line:117,column:2}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:12,column:9},end:{line:12,column:31}},loc:{start:{line:12,column:37},end:{line:12,column:95}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:22},end:{line:47,column:3}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:15},end:{line:56,column:3}},line:54},"3":{name:"(anonymous_3)",decl:{start:{line:58,column:2},end:{line:58,column:3}},loc:{start:{line:58,column:14},end:{line:69,column:3}},line:58},"4":{name:"(anonymous_4)",decl:{start:{line:76,column:2},end:{line:76,column:3}},loc:{start:{line:76,column:26},end:{line:99,column:3}},line:76}},branchMap:{"0":{loc:{start:{line:12,column:46},end:{line:12,column:92}},type:"cond-expr",locations:[{start:{line:12,column:70},end:{line:12,column:73}},{start:{line:12,column:76},end:{line:12,column:92}}],line:12},"1":{loc:{start:{line:12,column:46},end:{line:12,column:67}},type:"binary-expr",locations:[{start:{line:12,column:46},end:{line:12,column:49}},{start:{line:12,column:53},end:{line:12,column:67}}],line:12},"2":{loc:{start:{line:60,column:18},end:{line:60,column:79}},type:"cond-expr",locations:[{start:{line:60,column:50},end:{line:60,column:66}},{start:{line:60,column:69},end:{line:60,column:79}}],line:60}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,sources:["../../src/Security/Check.js"],names:["Check","constructor","params","_validateParams","title","warning","solution","check","_checkState","CheckState","none","error","checkState","run","Promise","success","e","stateFailError","fail","Utils","validateParams","group","t","v","isString","isFunction","Object","freeze","module","exports"],mappings:";;;;;;;AAIA;;AACA;;;;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA,MAAMA,KAAN,CAAY;AACV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,eAAL,CAAqBD,MAArB;;AACA,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,QAAlB;AAA4BC,MAAAA;AAA5B,QAAsCL,MAA5C;AAEA,SAAKE,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb,CAPkB,CASlB;;AACA,SAAKC,WAAL,GAAmBC,UAAU,CAACC,IAA9B;AACA,SAAKC,KAAL;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKJ,WAAZ;AACD;;AAEQ,QAAHK,GAAG,GAAG;AACV;AACA,UAAMN,KAAK,GAAG,KAAKA,KAAL,YAAsBO,OAAtB,GAAgC,MAAM,KAAKP,KAA3C,GAAmD,KAAKA,KAAtE,CAFU,CAIV;;AACA,QAAI;AACFA,MAAAA,KAAK;AACL,WAAKC,WAAL,GAAmBC,UAAU,CAACM,OAA9B;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAKC,cAAL,GAAsBD,CAAtB;AACA,WAAKR,WAAL,GAAmBC,UAAU,CAACS,IAA9B;AACD;AACF;AAED;AACF;AACA;AACA;;;AACEf,EAAAA,eAAe,CAACD,MAAD,EAAS;AACtBiB,mBAAMC,cAAN,CAAqBlB,MAArB,EAA6B;AAC3BmB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OADoB;AAE3BpB,MAAAA,KAAK,EAAE;AAAEkB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAFoB;AAG3BnB,MAAAA,OAAO,EAAE;AAAEiB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAHkB;AAI3BlB,MAAAA,QAAQ,EAAE;AAAEgB,QAAAA,CAAC,EAAE,QAAL;AAAeC,QAAAA,CAAC,EAAEC;AAAlB,OAJiB;AAK3BjB,MAAAA,KAAK,EAAE;AAAEe,QAAAA,CAAC,EAAE,UAAL;AAAiBC,QAAAA,CAAC,EAAEE;AAApB;AALoB,KAA7B;AAOD;;AAzDS;AA4DZ;AACA;AACA;;;AACA,MAAMhB,UAAU,GAAGiB,MAAM,CAACC,MAAP,CAAc;AAC/BjB,EAAAA,IAAI,EAAE,MADyB;AAE/BQ,EAAAA,IAAI,EAAE,MAFyB;AAG/BH,EAAAA,OAAO,EAAE;AAHsB,CAAd,CAAnB;eAMef,K;;AACf4B,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,KADe;AAEfS,EAAAA;AAFe,CAAjB",sourcesContent:["/**\n * @module SecurityCheck\n */\n\nimport Utils from '../Utils';\nimport { isFunction, isString } from 'lodash';\n\n/**\n * A security check.\n * @class Check\n */\nclass Check {\n  /**\n   * Constructs a new security check.\n   * @param {Object} params The parameters.\n   * @param {String} params.title The title.\n   * @param {String} params.warning The warning message if the check fails.\n   * @param {String} params.solution The solution to fix the check.\n   * @param {Promise} params.check The check as synchronous or asynchronous function.\n   */\n  constructor(params) {\n    this._validateParams(params);\n    const { title, warning, solution, check } = params;\n\n    this.title = title;\n    this.warning = warning;\n    this.solution = solution;\n    this.check = check;\n\n    // Set default properties\n    this._checkState = CheckState.none;\n    this.error;\n  }\n\n  /**\n   * Returns the current check state.\n   * @return {CheckState} The check state.\n   */\n  checkState() {\n    return this._checkState;\n  }\n\n  async run() {\n    // Get check as synchronous or asynchronous function\n    const check = this.check instanceof Promise ? await this.check : this.check;\n\n    // Run check\n    try {\n      check();\n      this._checkState = CheckState.success;\n    } catch (e) {\n      this.stateFailError = e;\n      this._checkState = CheckState.fail;\n    }\n  }\n\n  /**\n   * Validates the constructor parameters.\n   * @param {Object} params The parameters to validate.\n   */\n  _validateParams(params) {\n    Utils.validateParams(params, {\n      group: { t: 'string', v: isString },\n      title: { t: 'string', v: isString },\n      warning: { t: 'string', v: isString },\n      solution: { t: 'string', v: isString },\n      check: { t: 'function', v: isFunction },\n    });\n  }\n}\n\n/**\n * The check state.\n */\nconst CheckState = Object.freeze({\n  none: 'none',\n  fail: 'fail',\n  success: 'success',\n});\n\nexport default Check;\nmodule.exports = {\n  Check,\n  CheckState,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d2f965fe70c1f6b72645964831d047205bb41879"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ig7rfco7k=function(){return actualCoverage;};}return actualCoverage;}cov_2ig7rfco7k();cov_2ig7rfco7k().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2ig7rfco7k().s[1]++;exports.default=void 0;var _Utils=(cov_2ig7rfco7k().s[2]++,_interopRequireDefault(require("../Utils")));var _lodash=(cov_2ig7rfco7k().s[3]++,require("lodash"));function _interopRequireDefault(obj){cov_2ig7rfco7k().f[0]++;cov_2ig7rfco7k().s[4]++;return(cov_2ig7rfco7k().b[1][0]++,obj)&&(cov_2ig7rfco7k().b[1][1]++,obj.__esModule)?(cov_2ig7rfco7k().b[0][0]++,obj):(cov_2ig7rfco7k().b[0][1]++,{default:obj});}/**
 * @module SecurityCheck
 */ /**
 * A security check.
 * @class Check
 */class Check{/**
   * Constructs a new security check.
   * @param {Object} params The parameters.
   * @param {String} params.title The title.
   * @param {String} params.warning The warning message if the check fails.
   * @param {String} params.solution The solution to fix the check.
   * @param {Promise} params.check The check as synchronous or asynchronous function.
   */constructor(params){cov_2ig7rfco7k().f[1]++;cov_2ig7rfco7k().s[5]++;this._validateParams(params);const{title,warning,solution,check}=(cov_2ig7rfco7k().s[6]++,params);cov_2ig7rfco7k().s[7]++;this.title=title;cov_2ig7rfco7k().s[8]++;this.warning=warning;cov_2ig7rfco7k().s[9]++;this.solution=solution;cov_2ig7rfco7k().s[10]++;this.check=check;// Set default properties
cov_2ig7rfco7k().s[11]++;this._checkState=CheckState.none;cov_2ig7rfco7k().s[12]++;this.error;}/**
   * Returns the current check state.
   * @return {CheckState} The check state.
   */checkState(){cov_2ig7rfco7k().f[2]++;cov_2ig7rfco7k().s[13]++;return this._checkState;}async run(){cov_2ig7rfco7k().f[3]++;// Get check as synchronous or asynchronous function
const check=(cov_2ig7rfco7k().s[14]++,this.check instanceof Promise?(cov_2ig7rfco7k().b[2][0]++,await this.check):(cov_2ig7rfco7k().b[2][1]++,this.check));// Run check
cov_2ig7rfco7k().s[15]++;try{cov_2ig7rfco7k().s[16]++;check();cov_2ig7rfco7k().s[17]++;this._checkState=CheckState.success;}catch(e){cov_2ig7rfco7k().s[18]++;this.stateFailError=e;cov_2ig7rfco7k().s[19]++;this._checkState=CheckState.fail;}}/**
   * Validates the constructor parameters.
   * @param {Object} params The parameters to validate.
   */_validateParams(params){cov_2ig7rfco7k().f[4]++;cov_2ig7rfco7k().s[20]++;_Utils.default.validateParams(params,{group:{t:'string',v:_lodash.isString},title:{t:'string',v:_lodash.isString},warning:{t:'string',v:_lodash.isString},solution:{t:'string',v:_lodash.isString},check:{t:'function',v:_lodash.isFunction}});}}/**
 * The check state.
 */const CheckState=(cov_2ig7rfco7k().s[21]++,Object.freeze({none:'none',fail:'fail',success:'success'}));var _default=(cov_2ig7rfco7k().s[22]++,Check);cov_2ig7rfco7k().s[23]++;exports.default=_default;cov_2ig7rfco7k().s[24]++;module.exports={Check,CheckState};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZWN1cml0eS9DaGVjay5qcyJdLCJuYW1lcyI6WyJDaGVjayIsImNvbnN0cnVjdG9yIiwicGFyYW1zIiwiX3ZhbGlkYXRlUGFyYW1zIiwidGl0bGUiLCJ3YXJuaW5nIiwic29sdXRpb24iLCJjaGVjayIsIl9jaGVja1N0YXRlIiwiQ2hlY2tTdGF0ZSIsIm5vbmUiLCJlcnJvciIsImNoZWNrU3RhdGUiLCJydW4iLCJQcm9taXNlIiwic3VjY2VzcyIsImUiLCJzdGF0ZUZhaWxFcnJvciIsImZhaWwiLCJVdGlscyIsInZhbGlkYXRlUGFyYW1zIiwiZ3JvdXAiLCJ0IiwidiIsImlzU3RyaW5nIiwiaXNGdW5jdGlvbiIsIk9iamVjdCIsImZyZWV6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQTs7QUFDQTs7OztBQUxBO0FBQ0E7QUFDQTs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLEtBQU4sQ0FBWTtBQUNWO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRUMsRUFBQUEsV0FBVyxDQUFDQyxNQUFELEVBQVM7QUFDbEIsU0FBS0MsZUFBTCxDQUFxQkQsTUFBckI7O0FBQ0EsVUFBTTtBQUFFRSxNQUFBQSxLQUFGO0FBQVNDLE1BQUFBLE9BQVQ7QUFBa0JDLE1BQUFBLFFBQWxCO0FBQTRCQyxNQUFBQTtBQUE1QixRQUFzQ0wsTUFBNUM7QUFFQSxTQUFLRSxLQUFMLEdBQWFBLEtBQWI7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYixDQVBrQixDQVNsQjs7QUFDQSxTQUFLQyxXQUFMLEdBQW1CQyxVQUFVLENBQUNDLElBQTlCO0FBQ0EsU0FBS0MsS0FBTDtBQUNEO0FBRUQ7QUFDRjtBQUNBO0FBQ0E7OztBQUNFQyxFQUFBQSxVQUFVLEdBQUc7QUFDWCxXQUFPLEtBQUtKLFdBQVo7QUFDRDs7QUFFUSxRQUFISyxHQUFHLEdBQUc7QUFDVjtBQUNBLFVBQU1OLEtBQUssR0FBRyxLQUFLQSxLQUFMLFlBQXNCTyxPQUF0QixHQUFnQyxNQUFNLEtBQUtQLEtBQTNDLEdBQW1ELEtBQUtBLEtBQXRFLENBRlUsQ0FJVjs7QUFDQSxRQUFJO0FBQ0ZBLE1BQUFBLEtBQUs7QUFDTCxXQUFLQyxXQUFMLEdBQW1CQyxVQUFVLENBQUNNLE9BQTlCO0FBQ0QsS0FIRCxDQUdFLE9BQU9DLENBQVAsRUFBVTtBQUNWLFdBQUtDLGNBQUwsR0FBc0JELENBQXRCO0FBQ0EsV0FBS1IsV0FBTCxHQUFtQkMsVUFBVSxDQUFDUyxJQUE5QjtBQUNEO0FBQ0Y7QUFFRDtBQUNGO0FBQ0E7QUFDQTs7O0FBQ0VmLEVBQUFBLGVBQWUsQ0FBQ0QsTUFBRCxFQUFTO0FBQ3RCaUIsbUJBQU1DLGNBQU4sQ0FBcUJsQixNQUFyQixFQUE2QjtBQUMzQm1CLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxDQUFDLEVBQUUsUUFBTDtBQUFlQyxRQUFBQSxDQUFDLEVBQUVDO0FBQWxCLE9BRG9CO0FBRTNCcEIsTUFBQUEsS0FBSyxFQUFFO0FBQUVrQixRQUFBQSxDQUFDLEVBQUUsUUFBTDtBQUFlQyxRQUFBQSxDQUFDLEVBQUVDO0FBQWxCLE9BRm9CO0FBRzNCbkIsTUFBQUEsT0FBTyxFQUFFO0FBQUVpQixRQUFBQSxDQUFDLEVBQUUsUUFBTDtBQUFlQyxRQUFBQSxDQUFDLEVBQUVDO0FBQWxCLE9BSGtCO0FBSTNCbEIsTUFBQUEsUUFBUSxFQUFFO0FBQUVnQixRQUFBQSxDQUFDLEVBQUUsUUFBTDtBQUFlQyxRQUFBQSxDQUFDLEVBQUVDO0FBQWxCLE9BSmlCO0FBSzNCakIsTUFBQUEsS0FBSyxFQUFFO0FBQUVlLFFBQUFBLENBQUMsRUFBRSxVQUFMO0FBQWlCQyxRQUFBQSxDQUFDLEVBQUVFO0FBQXBCO0FBTG9CLEtBQTdCO0FBT0Q7O0FBekRTO0FBNERaO0FBQ0E7QUFDQTs7O0FBQ0EsTUFBTWhCLFVBQVUsR0FBR2lCLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQy9CakIsRUFBQUEsSUFBSSxFQUFFLE1BRHlCO0FBRS9CUSxFQUFBQSxJQUFJLEVBQUUsTUFGeUI7QUFHL0JILEVBQUFBLE9BQU8sRUFBRTtBQUhzQixDQUFkLENBQW5CO2VBTWVmLEs7O0FBQ2Y0QixNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZjdCLEVBQUFBLEtBRGU7QUFFZlMsRUFBQUE7QUFGZSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBTZWN1cml0eUNoZWNrXG4gKi9cblxuaW1wb3J0IFV0aWxzIGZyb20gJy4uL1V0aWxzJztcbmltcG9ydCB7IGlzRnVuY3Rpb24sIGlzU3RyaW5nIH0gZnJvbSAnbG9kYXNoJztcblxuLyoqXG4gKiBBIHNlY3VyaXR5IGNoZWNrLlxuICogQGNsYXNzIENoZWNrXG4gKi9cbmNsYXNzIENoZWNrIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgc2VjdXJpdHkgY2hlY2suXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgVGhlIHBhcmFtZXRlcnMuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwYXJhbXMudGl0bGUgVGhlIHRpdGxlLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1zLndhcm5pbmcgVGhlIHdhcm5pbmcgbWVzc2FnZSBpZiB0aGUgY2hlY2sgZmFpbHMuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwYXJhbXMuc29sdXRpb24gVGhlIHNvbHV0aW9uIHRvIGZpeCB0aGUgY2hlY2suXG4gICAqIEBwYXJhbSB7UHJvbWlzZX0gcGFyYW1zLmNoZWNrIFRoZSBjaGVjayBhcyBzeW5jaHJvbm91cyBvciBhc3luY2hyb25vdXMgZnVuY3Rpb24uXG4gICAqL1xuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICB0aGlzLl92YWxpZGF0ZVBhcmFtcyhwYXJhbXMpO1xuICAgIGNvbnN0IHsgdGl0bGUsIHdhcm5pbmcsIHNvbHV0aW9uLCBjaGVjayB9ID0gcGFyYW1zO1xuXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgIHRoaXMud2FybmluZyA9IHdhcm5pbmc7XG4gICAgdGhpcy5zb2x1dGlvbiA9IHNvbHV0aW9uO1xuICAgIHRoaXMuY2hlY2sgPSBjaGVjaztcblxuICAgIC8vIFNldCBkZWZhdWx0IHByb3BlcnRpZXNcbiAgICB0aGlzLl9jaGVja1N0YXRlID0gQ2hlY2tTdGF0ZS5ub25lO1xuICAgIHRoaXMuZXJyb3I7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgY3VycmVudCBjaGVjayBzdGF0ZS5cbiAgICogQHJldHVybiB7Q2hlY2tTdGF0ZX0gVGhlIGNoZWNrIHN0YXRlLlxuICAgKi9cbiAgY2hlY2tTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2hlY2tTdGF0ZTtcbiAgfVxuXG4gIGFzeW5jIHJ1bigpIHtcbiAgICAvLyBHZXQgY2hlY2sgYXMgc3luY2hyb25vdXMgb3IgYXN5bmNocm9ub3VzIGZ1bmN0aW9uXG4gICAgY29uc3QgY2hlY2sgPSB0aGlzLmNoZWNrIGluc3RhbmNlb2YgUHJvbWlzZSA/IGF3YWl0IHRoaXMuY2hlY2sgOiB0aGlzLmNoZWNrO1xuXG4gICAgLy8gUnVuIGNoZWNrXG4gICAgdHJ5IHtcbiAgICAgIGNoZWNrKCk7XG4gICAgICB0aGlzLl9jaGVja1N0YXRlID0gQ2hlY2tTdGF0ZS5zdWNjZXNzO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuc3RhdGVGYWlsRXJyb3IgPSBlO1xuICAgICAgdGhpcy5fY2hlY2tTdGF0ZSA9IENoZWNrU3RhdGUuZmFpbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoZSBjb25zdHJ1Y3RvciBwYXJhbWV0ZXJzLlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFRoZSBwYXJhbWV0ZXJzIHRvIHZhbGlkYXRlLlxuICAgKi9cbiAgX3ZhbGlkYXRlUGFyYW1zKHBhcmFtcykge1xuICAgIFV0aWxzLnZhbGlkYXRlUGFyYW1zKHBhcmFtcywge1xuICAgICAgZ3JvdXA6IHsgdDogJ3N0cmluZycsIHY6IGlzU3RyaW5nIH0sXG4gICAgICB0aXRsZTogeyB0OiAnc3RyaW5nJywgdjogaXNTdHJpbmcgfSxcbiAgICAgIHdhcm5pbmc6IHsgdDogJ3N0cmluZycsIHY6IGlzU3RyaW5nIH0sXG4gICAgICBzb2x1dGlvbjogeyB0OiAnc3RyaW5nJywgdjogaXNTdHJpbmcgfSxcbiAgICAgIGNoZWNrOiB7IHQ6ICdmdW5jdGlvbicsIHY6IGlzRnVuY3Rpb24gfSxcbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBjaGVjayBzdGF0ZS5cbiAqL1xuY29uc3QgQ2hlY2tTdGF0ZSA9IE9iamVjdC5mcmVlemUoe1xuICBub25lOiAnbm9uZScsXG4gIGZhaWw6ICdmYWlsJyxcbiAgc3VjY2VzczogJ3N1Y2Nlc3MnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENoZWNrO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIENoZWNrLFxuICBDaGVja1N0YXRlLFxufTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZWN1cml0eS9DaGVjay5qcyJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImNoZWNrIiwiQ2hlY2tTdGF0ZSIsImNoZWNrU3RhdGUiLCJydW4iLCJfdmFsaWRhdGVQYXJhbXMiLCJVdGlscyIsImdyb3VwIiwidCIsInYiLCJpc1N0cmluZyIsInRpdGxlIiwid2FybmluZyIsInNvbHV0aW9uIiwiaXNGdW5jdGlvbiIsIm5vbmUiLCJmYWlsIiwic3VjY2VzcyIsIkNoZWNrIiwibW9kdWxlIl0sIm1hcHBpbmdzIjoicTZPQUVBOzJOQUVBLEdBQUEsQ0FBQSxNQUFBLDBCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsT0FBQSwwQkFBQSxPQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQyxzUEFMQTtBQUNBO0FBQ0EsRyxDQUtBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBQSxDQUFBLEtBQVksQ0FDVjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQ0VBLFdBQVcsQ0FBQSxNQUFBLENBQVMsaURBQ2xCLEtBQUEsZUFBQSxDQUFBLE1BQUEsRUFDQSxLQUFNLENBQUEsS0FBQSxDQUFBLE9BQUEsQ0FBQSxRQUFBLENBQTRCQyxLQUE1QiwyQkFBTixNQUFNLENBQU4sQ0FGa0Isd0JBSWxCLEtBQUEsS0FBQSxDQUFBLEtBQUEsQ0FKa0Isd0JBS2xCLEtBQUEsT0FBQSxDQUFBLE9BQUEsQ0FMa0Isd0JBTWxCLEtBQUEsUUFBQSxDQUFBLFFBQUEsQ0FOa0IseUJBT2xCLEtBQUEsS0FBQSxDQVBrQixLQU9sQixDQUVBO0FBVGtCLHlCQVVsQixLQUFBLFdBQUEsQ0FBbUJDLFVBQVUsQ0FBN0IsSUFBQSxDQVZrQix5QkFXbEIsS0FBQSxLQUFBLENBQ0QsQ0FFRDtBQUNGO0FBQ0E7QUFDQSxLQUNFQyxVQUFVLEVBQUcsa0RBQ1gsTUFBTyxNQUFQLFdBQUEsQ0FDRCxDQUVRLEtBQUhDLENBQUFBLEdBQUcsRUFBRyx5QkFDVjtBQUNBLEtBQU1ILENBQUFBLEtBQUssMkJBQUcsS0FBQSxLQUFBLFdBQUEsQ0FBQSxPQUFBLDZCQUFnQyxLQUFNLE1BQXRDLEtBQUEsOEJBQW1ELEtBRnZELEtBRUksQ0FBSCxDQUFYLENBRUE7QUFKVSx5QkFLVixHQUFJLDBCQUNGQSxLQUFLLEdBREgseUJBRUYsS0FBQSxXQUFBLENBQW1CQyxVQUFVLENBQTdCLE9BQUEsQ0FGRixDQUdFLE1BQUEsQ0FBQSxDQUFVLDBCQUNWLEtBQUEsY0FBQSxDQUFBLENBQUEsQ0FEVSx5QkFFVixLQUFBLFdBQUEsQ0FBbUJBLFVBQVUsQ0FBN0IsSUFBQSxDQUNELENBQ0YsQ0FFRDtBQUNGO0FBQ0E7QUFDQSxLQUNFRyxlQUFlLENBQUEsTUFBQSxDQUFTLGtEQUN0QkMsTUFBQUEsQ0FBQUEsT0FBQUEsQ0FBQUEsY0FBQUEsQ0FBQUEsTUFBQUEsQ0FBNkIsQ0FDM0JDLEtBQUssQ0FBRSxDQUFFQyxDQUFDLENBQUgsUUFBQSxDQUFlQyxDQUFDLENBQUVDLE9BQUFBLENBQUFBLFFBQWxCLENBRG9CLENBRTNCQyxLQUFLLENBQUUsQ0FBRUgsQ0FBQyxDQUFILFFBQUEsQ0FBZUMsQ0FBQyxDQUFFQyxPQUFBQSxDQUFBQSxRQUFsQixDQUZvQixDQUczQkUsT0FBTyxDQUFFLENBQUVKLENBQUMsQ0FBSCxRQUFBLENBQWVDLENBQUMsQ0FBRUMsT0FBQUEsQ0FBQUEsUUFBbEIsQ0FIa0IsQ0FJM0JHLFFBQVEsQ0FBRSxDQUFFTCxDQUFDLENBQUgsUUFBQSxDQUFlQyxDQUFDLENBQUVDLE9BQUFBLENBQUFBLFFBQWxCLENBSmlCLENBSzNCVCxLQUFLLENBQUUsQ0FBRU8sQ0FBQyxDQUFILFVBQUEsQ0FBaUJDLENBQUMsQ0FBRUssT0FBQUEsQ0FBQUEsVUFBcEIsQ0FMb0IsQ0FBN0JSLEVBT0QsQ0F6RFMsQ0E0RFo7QUFDQTtBQUNBLEdBQ0EsS0FBTUosQ0FBQUEsVUFBVSwyQkFBRyxNQUFNLENBQU4sTUFBQSxDQUFjLENBQy9CYSxJQUFJLENBRDJCLE1BQUEsQ0FFL0JDLElBQUksQ0FGMkIsTUFBQSxDQUcvQkMsT0FBTyxDQUFFLFNBSHNCLENBQWQsQ0FBSCxDQUFoQixDLHVDQU1lQyxLLDZFQUNmQyxNQUFNLENBQU5BLE9BQUFBLENBQWlCLENBQUEsS0FBQSxDQUVmakIsVUFGZSxDQUFqQmlCLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgU2VjdXJpdHlDaGVja1xuICovXG5cbmltcG9ydCBVdGlscyBmcm9tICcuLi9VdGlscyc7XG5pbXBvcnQgeyBpc0Z1bmN0aW9uLCBpc1N0cmluZyB9IGZyb20gJ2xvZGFzaCc7XG5cbi8qKlxuICogQSBzZWN1cml0eSBjaGVjay5cbiAqIEBjbGFzcyBDaGVja1xuICovXG5jbGFzcyBDaGVjayB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgbmV3IHNlY3VyaXR5IGNoZWNrLlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFRoZSBwYXJhbWV0ZXJzLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1zLnRpdGxlIFRoZSB0aXRsZS5cbiAgICogQHBhcmFtIHtTdHJpbmd9IHBhcmFtcy53YXJuaW5nIFRoZSB3YXJuaW5nIG1lc3NhZ2UgaWYgdGhlIGNoZWNrIGZhaWxzLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1zLnNvbHV0aW9uIFRoZSBzb2x1dGlvbiB0byBmaXggdGhlIGNoZWNrLlxuICAgKiBAcGFyYW0ge1Byb21pc2V9IHBhcmFtcy5jaGVjayBUaGUgY2hlY2sgYXMgc3luY2hyb25vdXMgb3IgYXN5bmNocm9ub3VzIGZ1bmN0aW9uLlxuICAgKi9cbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgdGhpcy5fdmFsaWRhdGVQYXJhbXMocGFyYW1zKTtcbiAgICBjb25zdCB7IHRpdGxlLCB3YXJuaW5nLCBzb2x1dGlvbiwgY2hlY2sgfSA9IHBhcmFtcztcblxuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLndhcm5pbmcgPSB3YXJuaW5nO1xuICAgIHRoaXMuc29sdXRpb24gPSBzb2x1dGlvbjtcbiAgICB0aGlzLmNoZWNrID0gY2hlY2s7XG5cbiAgICAvLyBTZXQgZGVmYXVsdCBwcm9wZXJ0aWVzXG4gICAgdGhpcy5fY2hlY2tTdGF0ZSA9IENoZWNrU3RhdGUubm9uZTtcbiAgICB0aGlzLmVycm9yO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGN1cnJlbnQgY2hlY2sgc3RhdGUuXG4gICAqIEByZXR1cm4ge0NoZWNrU3RhdGV9IFRoZSBjaGVjayBzdGF0ZS5cbiAgICovXG4gIGNoZWNrU3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NoZWNrU3RhdGU7XG4gIH1cblxuICBhc3luYyBydW4oKSB7XG4gICAgLy8gR2V0IGNoZWNrIGFzIHN5bmNocm9ub3VzIG9yIGFzeW5jaHJvbm91cyBmdW5jdGlvblxuICAgIGNvbnN0IGNoZWNrID0gdGhpcy5jaGVjayBpbnN0YW5jZW9mIFByb21pc2UgPyBhd2FpdCB0aGlzLmNoZWNrIDogdGhpcy5jaGVjaztcblxuICAgIC8vIFJ1biBjaGVja1xuICAgIHRyeSB7XG4gICAgICBjaGVjaygpO1xuICAgICAgdGhpcy5fY2hlY2tTdGF0ZSA9IENoZWNrU3RhdGUuc3VjY2VzcztcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLnN0YXRlRmFpbEVycm9yID0gZTtcbiAgICAgIHRoaXMuX2NoZWNrU3RhdGUgPSBDaGVja1N0YXRlLmZhaWw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGUgY29uc3RydWN0b3IgcGFyYW1ldGVycy5cbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyBUaGUgcGFyYW1ldGVycyB0byB2YWxpZGF0ZS5cbiAgICovXG4gIF92YWxpZGF0ZVBhcmFtcyhwYXJhbXMpIHtcbiAgICBVdGlscy52YWxpZGF0ZVBhcmFtcyhwYXJhbXMsIHtcbiAgICAgIGdyb3VwOiB7IHQ6ICdzdHJpbmcnLCB2OiBpc1N0cmluZyB9LFxuICAgICAgdGl0bGU6IHsgdDogJ3N0cmluZycsIHY6IGlzU3RyaW5nIH0sXG4gICAgICB3YXJuaW5nOiB7IHQ6ICdzdHJpbmcnLCB2OiBpc1N0cmluZyB9LFxuICAgICAgc29sdXRpb246IHsgdDogJ3N0cmluZycsIHY6IGlzU3RyaW5nIH0sXG4gICAgICBjaGVjazogeyB0OiAnZnVuY3Rpb24nLCB2OiBpc0Z1bmN0aW9uIH0sXG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgY2hlY2sgc3RhdGUuXG4gKi9cbmNvbnN0IENoZWNrU3RhdGUgPSBPYmplY3QuZnJlZXplKHtcbiAgbm9uZTogJ25vbmUnLFxuICBmYWlsOiAnZmFpbCcsXG4gIHN1Y2Nlc3M6ICdzdWNjZXNzJyxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBDaGVjaztcbm1vZHVsZS5leHBvcnRzID0ge1xuICBDaGVjayxcbiAgQ2hlY2tTdGF0ZSxcbn07XG4iXX0=