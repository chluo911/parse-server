"use strict";function cov_2osqi96as5(){var path="/parse-server/lib/GraphQL/loaders/parseClassMutations.js";var hash="5e31d0f4dcb3b9b79a7e6b53ac33bd4ce800e84f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/GraphQL/loaders/parseClassMutations.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:22}},"2":{start:{line:8,column:15},end:{line:8,column:33}},"3":{start:{line:10,column:20},end:{line:10,column:44}},"4":{start:{line:12,column:25},end:{line:12,column:79}},"5":{start:{line:14,column:16},end:{line:14,column:59}},"6":{start:{line:16,column:26},end:{line:16,column:83}},"7":{start:{line:18,column:25},end:{line:18,column:56}},"8":{start:{line:20,column:23},end:{line:20,column:86}},"9":{start:{line:22,column:21},end:{line:22,column:82}},"10":{start:{line:24,column:30},end:{line:24,column:81}},"11":{start:{line:26,column:17},end:{line:26,column:53}},"12":{start:{line:28,column:16},end:{line:28,column:51}},"13":{start:{line:30,column:49},end:{line:30,column:96}},"14":{start:{line:30,column:84},end:{line:30,column:96}},"15":{start:{line:30,column:121},end:{line:30,column:134}},"16":{start:{line:30,column:159},end:{line:30,column:172}},"17":{start:{line:30,column:174},end:{line:30,column:309}},"18":{start:{line:30,column:234},end:{line:30,column:292}},"19":{start:{line:32,column:53},end:{line:32,column:111}},"20":{start:{line:32,column:98},end:{line:32,column:109}},"21":{start:{line:32,column:112},end:{line:32,column:214}},"22":{start:{line:32,column:188},end:{line:32,column:212}},"23":{start:{line:32,column:227},end:{line:32,column:264}},"24":{start:{line:32,column:266},end:{line:32,column:321}},"25":{start:{line:32,column:297},end:{line:32,column:319}},"26":{start:{line:32,column:335},end:{line:32,column:337}},"27":{start:{line:32,column:367},end:{line:32,column:423}},"28":{start:{line:32,column:425},end:{line:32,column:726}},"29":{start:{line:32,column:448},end:{line:32,column:724}},"30":{start:{line:32,column:534},end:{line:32,column:606}},"31":{start:{line:32,column:608},end:{line:32,column:722}},"32":{start:{line:32,column:646},end:{line:32,column:687}},"33":{start:{line:32,column:697},end:{line:32,column:720}},"34":{start:{line:32,column:727},end:{line:32,column:748}},"35":{start:{line:32,column:749},end:{line:32,column:787}},"36":{start:{line:32,column:762},end:{line:32,column:785}},"37":{start:{line:32,column:788},end:{line:32,column:802}},"38":{start:{line:34,column:39},end:{line:34,column:93}},"39":{start:{line:36,column:54},end:{line:36,column:73}},"40":{start:{line:36,column:75},end:{line:36,column:330}},"41":{start:{line:36,column:125},end:{line:36,column:161}},"42":{start:{line:36,column:163},end:{line:36,column:296}},"43":{start:{line:36,column:185},end:{line:36,column:294}},"44":{start:{line:36,column:227},end:{line:36,column:290}},"45":{start:{line:36,column:297},end:{line:36,column:328}},"46":{start:{line:36,column:331},end:{line:36,column:343}},"47":{start:{line:38,column:33},end:{line:38,column:517}},"48":{start:{line:38,column:46},end:{line:38,column:47}},"49":{start:{line:38,column:91},end:{line:38,column:131}},"50":{start:{line:38,column:133},end:{line:38,column:515}},"51":{start:{line:38,column:146},end:{line:38,column:247}},"52":{start:{line:38,column:201},end:{line:38,column:243}},"53":{start:{line:38,column:255},end:{line:38,column:515}},"54":{start:{line:38,column:295},end:{line:38,column:369}},"55":{start:{line:38,column:379},end:{line:38,column:513}},"56":{start:{line:38,column:428},end:{line:38,column:509}},"57":{start:{line:38,column:518},end:{line:38,column:532}},"58":{start:{line:40,column:44},end:{line:40,column:195}},"59":{start:{line:40,column:62},end:{line:40,column:166}},"60":{start:{line:40,column:176},end:{line:40,column:193}},"61":{start:{line:40,column:196},end:{line:40,column:207}},"62":{start:{line:42,column:28},end:{line:50,column:10}},"63":{start:{line:42,column:38},end:{line:50,column:10}},"64":{start:{line:45,column:2},end:{line:47,column:3}},"65":{start:{line:46,column:4},end:{line:46,column:20}},"66":{start:{line:49,column:2},end:{line:49,column:13}},"67":{start:{line:52,column:30},end:{line:68,column:1}},"68":{start:{line:53,column:25},end:{line:53,column:84}},"69":{start:{line:54,column:25},end:{line:54,column:84}},"70":{start:{line:55,column:24},end:{line:55,column:135}},"71":{start:{line:55,column:55},end:{line:55,column:124}},"72":{start:{line:57,column:2},end:{line:67,column:3}},"73":{start:{line:58,column:4},end:{line:61,column:6}},"74":{start:{line:63,column:4},end:{line:66,column:6}},"75":{start:{line:70,column:13},end:{line:297,column:1}},"76":{start:{line:71,column:20},end:{line:71,column:40}},"77":{start:{line:72,column:27},end:{line:72,column:81}},"78":{start:{line:73,column:30},end:{line:73,column:98}},"79":{start:{line:81,column:6},end:{line:81,column:75}},"80":{start:{line:86,column:6},end:{line:86,column:51}},"81":{start:{line:88,column:2},end:{line:158,column:3}},"82":{start:{line:89,column:38},end:{line:89,column:80}},"83":{start:{line:90,column:34},end:{line:153,column:6}},"84":{start:{line:106,column:8},end:{line:151,column:9}},"85":{start:{line:109,column:14},end:{line:109,column:42}},"86":{start:{line:110,column:10},end:{line:110,column:35}},"87":{start:{line:110,column:23},end:{line:110,column:35}},"88":{start:{line:115,column:14},end:{line:115,column:21}},"89":{start:{line:116,column:30},end:{line:124,column:12}},"90":{start:{line:125,column:32},end:{line:125,column:111}},"91":{start:{line:126,column:33},end:{line:126,column:198}},"92":{start:{line:126,column:95},end:{line:126,column:138}},"93":{start:{line:126,column:153},end:{line:126,column:197}},"94":{start:{line:130,column:14},end:{line:130,column:75}},"95":{start:{line:134,column:14},end:{line:134,column:104}},"96":{start:{line:135,column:35},end:{line:135,column:124}},"97":{start:{line:136,column:32},end:{line:136,column:34}},"98":{start:{line:138,column:10},end:{line:142,column:11}},"99":{start:{line:139,column:12},end:{line:139,column:194}},"100":{start:{line:140,column:17},end:{line:142,column:11}},"101":{start:{line:141,column:12},end:{line:141,column:191}},"102":{start:{line:144,column:10},end:{line:148,column:12}},"103":{start:{line:150,column:10},end:{line:150,column:44}},"104":{start:{line:155,column:4},end:{line:157,column:5}},"105":{start:{line:156,column:6},end:{line:156,column:94}},"106":{start:{line:160,column:2},end:{line:238,column:3}},"107":{start:{line:161,column:38},end:{line:161,column:80}},"108":{start:{line:162,column:34},end:{line:233,column:6}},"109":{start:{line:179,column:8},end:{line:231,column:9}},"110":{start:{line:183,column:14},end:{line:183,column:42}},"111":{start:{line:184,column:10},end:{line:184,column:35}},"112":{start:{line:184,column:23},end:{line:184,column:35}},"113":{start:{line:189,column:14},end:{line:189,column:21}},"114":{start:{line:190,column:33},end:{line:190,column:68}},"115":{start:{line:192,column:10},end:{line:194,column:11}},"116":{start:{line:193,column:12},end:{line:193,column:35}},"117":{start:{line:196,column:30},end:{line:204,column:12}},"118":{start:{line:205,column:32},end:{line:205,column:115}},"119":{start:{line:206,column:33},end:{line:206,column:198}},"120":{start:{line:206,column:95},end:{line:206,column:138}},"121":{start:{line:206,column:153},end:{line:206,column:197}},"122":{start:{line:210,column:14},end:{line:210,column:75}},"123":{start:{line:214,column:14},end:{line:214,column:91}},"124":{start:{line:215,column:35},end:{line:215,column:124}},"125":{start:{line:216,column:32},end:{line:216,column:34}},"126":{start:{line:218,column:10},end:{line:222,column:11}},"127":{start:{line:219,column:12},end:{line:219,column:174}},"128":{start:{line:220,column:17},end:{line:222,column:11}},"129":{start:{line:221,column:12},end:{line:221,column:171}},"130":{start:{line:224,column:10},end:{line:228,column:12}},"131":{start:{line:230,column:10},end:{line:230,column:44}},"132":{start:{line:235,column:4},end:{line:237,column:5}},"133":{start:{line:236,column:6},end:{line:236,column:94}},"134":{start:{line:240,column:2},end:{line:296,column:3}},"135":{start:{line:241,column:38},end:{line:241,column:81}},"136":{start:{line:242,column:34},end:{line:291,column:6}},"137":{start:{line:255,column:8},end:{line:289,column:9}},"138":{start:{line:258,column:14},end:{line:258,column:42}},"139":{start:{line:263,column:14},end:{line:263,column:21}},"140":{start:{line:264,column:33},end:{line:264,column:68}},"141":{start:{line:266,column:10},end:{line:268,column:11}},"142":{start:{line:267,column:12},end:{line:267,column:35}},"143":{start:{line:270,column:33},end:{line:270,column:198}},"144":{start:{line:270,column:95},end:{line:270,column:138}},"145":{start:{line:270,column:153},end:{line:270,column:197}},"146":{start:{line:274,column:14},end:{line:274,column:75}},"147":{start:{line:275,column:32},end:{line:275,column:34}},"148":{start:{line:277,column:10},end:{line:279,column:11}},"149":{start:{line:277,column:52},end:{line:277,column:85}},"150":{start:{line:278,column:12},end:{line:278,column:166}},"151":{start:{line:281,column:10},end:{line:281,column:81}},"152":{start:{line:282,column:10},end:{line:286,column:12}},"153":{start:{line:288,column:10},end:{line:288,column:44}},"154":{start:{line:293,column:4},end:{line:295,column:5}},"155":{start:{line:294,column:6},end:{line:294,column:94}},"156":{start:{line:299,column:0},end:{line:299,column:20}}},fnMap:{"0":{name:"_getRequireWildcardCache",decl:{start:{line:30,column:9},end:{line:30,column:33}},loc:{start:{line:30,column:47},end:{line:30,column:311}},line:30},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:209},end:{line:30,column:210}},loc:{start:{line:30,column:232},end:{line:30,column:294}},line:30},"2":{name:"_interopRequireWildcard",decl:{start:{line:32,column:9},end:{line:32,column:32}},loc:{start:{line:32,column:51},end:{line:32,column:804}},line:32},"3":{name:"_interopRequireDefault",decl:{start:{line:34,column:9},end:{line:34,column:31}},loc:{start:{line:34,column:37},end:{line:34,column:95}},line:34},"4":{name:"ownKeys",decl:{start:{line:36,column:9},end:{line:36,column:16}},loc:{start:{line:36,column:41},end:{line:36,column:345}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:36,column:210},end:{line:36,column:211}},loc:{start:{line:36,column:225},end:{line:36,column:292}},line:36},"6":{name:"_objectSpread",decl:{start:{line:38,column:9},end:{line:38,column:22}},loc:{start:{line:38,column:31},end:{line:38,column:534}},line:38},"7":{name:"(anonymous_7)",decl:{start:{line:38,column:184},end:{line:38,column:185}},loc:{start:{line:38,column:199},end:{line:38,column:245}},line:38},"8":{name:"(anonymous_8)",decl:{start:{line:38,column:411},end:{line:38,column:412}},loc:{start:{line:38,column:426},end:{line:38,column:511}},line:38},"9":{name:"_defineProperty",decl:{start:{line:40,column:9},end:{line:40,column:24}},loc:{start:{line:40,column:42},end:{line:40,column:209}},line:40},"10":{name:"(anonymous_10)",decl:{start:{line:42,column:28},end:{line:42,column:29}},loc:{start:{line:42,column:38},end:{line:50,column:10}},line:42},"11":{name:"(anonymous_11)",decl:{start:{line:42,column:65},end:{line:42,column:66}},loc:{start:{line:42,column:79},end:{line:50,column:1}},line:42},"12":{name:"(anonymous_12)",decl:{start:{line:52,column:30},end:{line:52,column:31}},loc:{start:{line:52,column:113},end:{line:68,column:1}},line:52},"13":{name:"(anonymous_13)",decl:{start:{line:55,column:46},end:{line:55,column:47}},loc:{start:{line:55,column:55},end:{line:55,column:124}},line:55},"14":{name:"(anonymous_14)",decl:{start:{line:70,column:13},end:{line:70,column:14}},loc:{start:{line:70,column:73},end:{line:297,column:1}},line:70},"15":{name:"(anonymous_15)",decl:{start:{line:105,column:27},end:{line:105,column:28}},loc:{start:{line:105,column:66},end:{line:152,column:7}},line:105},"16":{name:"(anonymous_16)",decl:{start:{line:126,column:86},end:{line:126,column:87}},loc:{start:{line:126,column:95},end:{line:126,column:138}},line:126},"17":{name:"(anonymous_17)",decl:{start:{line:126,column:144},end:{line:126,column:145}},loc:{start:{line:126,column:153},end:{line:126,column:197}},line:126},"18":{name:"(anonymous_18)",decl:{start:{line:178,column:27},end:{line:178,column:28}},loc:{start:{line:178,column:66},end:{line:232,column:7}},line:178},"19":{name:"(anonymous_19)",decl:{start:{line:206,column:86},end:{line:206,column:87}},loc:{start:{line:206,column:95},end:{line:206,column:138}},line:206},"20":{name:"(anonymous_20)",decl:{start:{line:206,column:144},end:{line:206,column:145}},loc:{start:{line:206,column:153},end:{line:206,column:197}},line:206},"21":{name:"(anonymous_21)",decl:{start:{line:254,column:27},end:{line:254,column:28}},loc:{start:{line:254,column:66},end:{line:290,column:7}},line:254},"22":{name:"(anonymous_22)",decl:{start:{line:270,column:86},end:{line:270,column:87}},loc:{start:{line:270,column:95},end:{line:270,column:138}},line:270},"23":{name:"(anonymous_23)",decl:{start:{line:270,column:144},end:{line:270,column:145}},loc:{start:{line:270,column:153},end:{line:270,column:197}},line:270},"24":{name:"(anonymous_24)",decl:{start:{line:277,column:45},end:{line:277,column:46}},loc:{start:{line:277,column:52},end:{line:277,column:85}},line:277}},branchMap:{"0":{loc:{start:{line:30,column:49},end:{line:30,column:96}},type:"if",locations:[{start:{line:30,column:49},end:{line:30,column:96}},{start:{line:30,column:49},end:{line:30,column:96}}],line:30},"1":{loc:{start:{line:30,column:241},end:{line:30,column:291}},type:"cond-expr",locations:[{start:{line:30,column:255},end:{line:30,column:271}},{start:{line:30,column:274},end:{line:30,column:291}}],line:30},"2":{loc:{start:{line:32,column:53},end:{line:32,column:111}},type:"if",locations:[{start:{line:32,column:53},end:{line:32,column:111}},{start:{line:32,column:53},end:{line:32,column:111}}],line:32},"3":{loc:{start:{line:32,column:57},end:{line:32,column:94}},type:"binary-expr",locations:[{start:{line:32,column:57},end:{line:32,column:69}},{start:{line:32,column:73},end:{line:32,column:76}},{start:{line:32,column:80},end:{line:32,column:94}}],line:32},"4":{loc:{start:{line:32,column:112},end:{line:32,column:214}},type:"if",locations:[{start:{line:32,column:112},end:{line:32,column:214}},{start:{line:32,column:112},end:{line:32,column:214}}],line:32},"5":{loc:{start:{line:32,column:116},end:{line:32,column:184}},type:"binary-expr",locations:[{start:{line:32,column:116},end:{line:32,column:128}},{start:{line:32,column:132},end:{line:32,column:155}},{start:{line:32,column:159},end:{line:32,column:184}}],line:32},"6":{loc:{start:{line:32,column:266},end:{line:32,column:321}},type:"if",locations:[{start:{line:32,column:266},end:{line:32,column:321}},{start:{line:32,column:266},end:{line:32,column:321}}],line:32},"7":{loc:{start:{line:32,column:270},end:{line:32,column:293}},type:"binary-expr",locations:[{start:{line:32,column:270},end:{line:32,column:275}},{start:{line:32,column:279},end:{line:32,column:293}}],line:32},"8":{loc:{start:{line:32,column:367},end:{line:32,column:423}},type:"binary-expr",locations:[{start:{line:32,column:367},end:{line:32,column:388}},{start:{line:32,column:392},end:{line:32,column:423}}],line:32},"9":{loc:{start:{line:32,column:448},end:{line:32,column:724}},type:"if",locations:[{start:{line:32,column:448},end:{line:32,column:724}},{start:{line:32,column:448},end:{line:32,column:724}}],line:32},"10":{loc:{start:{line:32,column:452},end:{line:32,column:519}},type:"binary-expr",locations:[{start:{line:32,column:452},end:{line:32,column:469}},{start:{line:32,column:473},end:{line:32,column:519}}],line:32},"11":{loc:{start:{line:32,column:534},end:{line:32,column:606}},type:"cond-expr",locations:[{start:{line:32,column:558},end:{line:32,column:599}},{start:{line:32,column:602},end:{line:32,column:606}}],line:32},"12":{loc:{start:{line:32,column:608},end:{line:32,column:722}},type:"if",locations:[{start:{line:32,column:608},end:{line:32,column:722}},{start:{line:32,column:608},end:{line:32,column:722}}],line:32},"13":{loc:{start:{line:32,column:612},end:{line:32,column:642}},type:"binary-expr",locations:[{start:{line:32,column:612},end:{line:32,column:616}},{start:{line:32,column:621},end:{line:32,column:629}},{start:{line:32,column:633},end:{line:32,column:641}}],line:32},"14":{loc:{start:{line:32,column:749},end:{line:32,column:787}},type:"if",locations:[{start:{line:32,column:749},end:{line:32,column:787}},{start:{line:32,column:749},end:{line:32,column:787}}],line:32},"15":{loc:{start:{line:34,column:46},end:{line:34,column:92}},type:"cond-expr",locations:[{start:{line:34,column:70},end:{line:34,column:73}},{start:{line:34,column:76},end:{line:34,column:92}}],line:34},"16":{loc:{start:{line:34,column:46},end:{line:34,column:67}},type:"binary-expr",locations:[{start:{line:34,column:46},end:{line:34,column:49}},{start:{line:34,column:53},end:{line:34,column:67}}],line:34},"17":{loc:{start:{line:36,column:75},end:{line:36,column:330}},type:"if",locations:[{start:{line:36,column:75},end:{line:36,column:330}},{start:{line:36,column:75},end:{line:36,column:330}}],line:36},"18":{loc:{start:{line:36,column:163},end:{line:36,column:296}},type:"if",locations:[{start:{line:36,column:163},end:{line:36,column:296}},{start:{line:36,column:163},end:{line:36,column:296}}],line:36},"19":{loc:{start:{line:38,column:91},end:{line:38,column:131}},type:"cond-expr",locations:[{start:{line:38,column:114},end:{line:38,column:126}},{start:{line:38,column:129},end:{line:38,column:131}}],line:38},"20":{loc:{start:{line:38,column:133},end:{line:38,column:515}},type:"if",locations:[{start:{line:38,column:133},end:{line:38,column:515}},{start:{line:38,column:133},end:{line:38,column:515}}],line:38},"21":{loc:{start:{line:38,column:255},end:{line:38,column:515}},type:"if",locations:[{start:{line:38,column:255},end:{line:38,column:515}},{start:{line:38,column:255},end:{line:38,column:515}}],line:38},"22":{loc:{start:{line:40,column:44},end:{line:40,column:195}},type:"if",locations:[{start:{line:40,column:44},end:{line:40,column:195}},{start:{line:40,column:44},end:{line:40,column:195}}],line:40},"23":{loc:{start:{line:45,column:2},end:{line:47,column:3}},type:"if",locations:[{start:{line:45,column:2},end:{line:47,column:3}},{start:{line:45,column:2},end:{line:47,column:3}}],line:45},"24":{loc:{start:{line:45,column:6},end:{line:45,column:146}},type:"binary-expr",locations:[{start:{line:45,column:6},end:{line:45,column:37}},{start:{line:45,column:41},end:{line:45,column:146}}],line:45},"25":{loc:{start:{line:45,column:42},end:{line:45,column:132}},type:"cond-expr",locations:[{start:{line:45,column:107},end:{line:45,column:113}},{start:{line:45,column:116},end:{line:45,column:132}}],line:45},"26":{loc:{start:{line:45,column:42},end:{line:45,column:104}},type:"binary-expr",locations:[{start:{line:45,column:42},end:{line:45,column:78}},{start:{line:45,column:82},end:{line:45,column:104}}],line:45},"27":{loc:{start:{line:53,column:25},end:{line:53,column:84}},type:"cond-expr",locations:[{start:{line:53,column:48},end:{line:53,column:79}},{start:{line:53,column:82},end:{line:53,column:84}}],line:53},"28":{loc:{start:{line:54,column:25},end:{line:54,column:84}},type:"cond-expr",locations:[{start:{line:54,column:48},end:{line:54,column:79}},{start:{line:54,column:82},end:{line:54,column:84}}],line:54},"29":{loc:{start:{line:55,column:55},end:{line:55,column:124}},type:"binary-expr",locations:[{start:{line:55,column:55},end:{line:55,column:90}},{start:{line:55,column:94},end:{line:55,column:124}}],line:55},"30":{loc:{start:{line:57,column:2},end:{line:67,column:3}},type:"if",locations:[{start:{line:57,column:2},end:{line:67,column:3}},{start:{line:57,column:2},end:{line:67,column:3}}],line:57},"31":{loc:{start:{line:75,column:12},end:{line:75,column:34}},type:"default-arg",locations:[{start:{line:75,column:30},end:{line:75,column:34}}],line:75},"32":{loc:{start:{line:76,column:12},end:{line:76,column:34}},type:"default-arg",locations:[{start:{line:76,column:30},end:{line:76,column:34}}],line:76},"33":{loc:{start:{line:77,column:13},end:{line:77,column:36}},type:"default-arg",locations:[{start:{line:77,column:32},end:{line:77,column:36}}],line:77},"34":{loc:{start:{line:78,column:4},end:{line:78,column:20}},type:"default-arg",locations:[{start:{line:78,column:18},end:{line:78,column:20}}],line:78},"35":{loc:{start:{line:79,column:4},end:{line:79,column:20}},type:"default-arg",locations:[{start:{line:79,column:18},end:{line:79,column:20}}],line:79},"36":{loc:{start:{line:80,column:4},end:{line:80,column:21}},type:"default-arg",locations:[{start:{line:80,column:19},end:{line:80,column:21}}],line:80},"37":{loc:{start:{line:88,column:2},end:{line:158,column:3}},type:"if",locations:[{start:{line:88,column:2},end:{line:158,column:3}},{start:{line:88,column:2},end:{line:158,column:3}}],line:88},"38":{loc:{start:{line:89,column:38},end:{line:89,column:80}},type:"binary-expr",locations:[{start:{line:89,column:38},end:{line:89,column:49}},{start:{line:89,column:53},end:{line:89,column:80}}],line:89},"39":{loc:{start:{line:96,column:16},end:{line:96,column:68}},type:"binary-expr",locations:[{start:{line:96,column:16},end:{line:96,column:38}},{start:{line:96,column:42},end:{line:96,column:68}}],line:96},"40":{loc:{start:{line:102,column:44},end:{line:102,column:96}},type:"binary-expr",locations:[{start:{line:102,column:44},end:{line:102,column:66}},{start:{line:102,column:70},end:{line:102,column:96}}],line:102},"41":{loc:{start:{line:110,column:10},end:{line:110,column:35}},type:"if",locations:[{start:{line:110,column:10},end:{line:110,column:35}},{start:{line:110,column:10},end:{line:110,column:35}}],line:110},"42":{loc:{start:{line:138,column:10},end:{line:142,column:11}},type:"if",locations:[{start:{line:138,column:10},end:{line:142,column:11}},{start:{line:138,column:10},end:{line:142,column:11}}],line:138},"43":{loc:{start:{line:138,column:14},end:{line:138,column:42}},type:"binary-expr",locations:[{start:{line:138,column:14},end:{line:138,column:21}},{start:{line:138,column:25},end:{line:138,column:42}}],line:138},"44":{loc:{start:{line:140,column:17},end:{line:142,column:11}},type:"if",locations:[{start:{line:140,column:17},end:{line:142,column:11}},{start:{line:140,column:17},end:{line:142,column:11}}],line:140},"45":{loc:{start:{line:155,column:4},end:{line:157,column:5}},type:"if",locations:[{start:{line:155,column:4},end:{line:157,column:5}},{start:{line:155,column:4},end:{line:157,column:5}}],line:155},"46":{loc:{start:{line:155,column:8},end:{line:155,column:152}},type:"binary-expr",locations:[{start:{line:155,column:8},end:{line:155,column:87}},{start:{line:155,column:91},end:{line:155,column:152}}],line:155},"47":{loc:{start:{line:160,column:2},end:{line:238,column:3}},type:"if",locations:[{start:{line:160,column:2},end:{line:238,column:3}},{start:{line:160,column:2},end:{line:238,column:3}}],line:160},"48":{loc:{start:{line:161,column:38},end:{line:161,column:80}},type:"binary-expr",locations:[{start:{line:161,column:38},end:{line:161,column:49}},{start:{line:161,column:53},end:{line:161,column:80}}],line:161},"49":{loc:{start:{line:169,column:16},end:{line:169,column:68}},type:"binary-expr",locations:[{start:{line:169,column:16},end:{line:169,column:38}},{start:{line:169,column:42},end:{line:169,column:68}}],line:169},"50":{loc:{start:{line:175,column:44},end:{line:175,column:96}},type:"binary-expr",locations:[{start:{line:175,column:44},end:{line:175,column:66}},{start:{line:175,column:70},end:{line:175,column:96}}],line:175},"51":{loc:{start:{line:184,column:10},end:{line:184,column:35}},type:"if",locations:[{start:{line:184,column:10},end:{line:184,column:35}},{start:{line:184,column:10},end:{line:184,column:35}}],line:184},"52":{loc:{start:{line:192,column:10},end:{line:194,column:11}},type:"if",locations:[{start:{line:192,column:10},end:{line:194,column:11}},{start:{line:192,column:10},end:{line:194,column:11}}],line:192},"53":{loc:{start:{line:218,column:10},end:{line:222,column:11}},type:"if",locations:[{start:{line:218,column:10},end:{line:222,column:11}},{start:{line:218,column:10},end:{line:222,column:11}}],line:218},"54":{loc:{start:{line:218,column:14},end:{line:218,column:42}},type:"binary-expr",locations:[{start:{line:218,column:14},end:{line:218,column:21}},{start:{line:218,column:25},end:{line:218,column:42}}],line:218},"55":{loc:{start:{line:220,column:17},end:{line:222,column:11}},type:"if",locations:[{start:{line:220,column:17},end:{line:222,column:11}},{start:{line:220,column:17},end:{line:222,column:11}}],line:220},"56":{loc:{start:{line:235,column:4},end:{line:237,column:5}},type:"if",locations:[{start:{line:235,column:4},end:{line:237,column:5}},{start:{line:235,column:4},end:{line:237,column:5}}],line:235},"57":{loc:{start:{line:235,column:8},end:{line:235,column:152}},type:"binary-expr",locations:[{start:{line:235,column:8},end:{line:235,column:87}},{start:{line:235,column:91},end:{line:235,column:152}}],line:235},"58":{loc:{start:{line:240,column:2},end:{line:296,column:3}},type:"if",locations:[{start:{line:240,column:2},end:{line:296,column:3}},{start:{line:240,column:2},end:{line:296,column:3}}],line:240},"59":{loc:{start:{line:241,column:38},end:{line:241,column:81}},type:"binary-expr",locations:[{start:{line:241,column:38},end:{line:241,column:50}},{start:{line:241,column:54},end:{line:241,column:81}}],line:241},"60":{loc:{start:{line:251,column:44},end:{line:251,column:96}},type:"binary-expr",locations:[{start:{line:251,column:44},end:{line:251,column:66}},{start:{line:251,column:70},end:{line:251,column:96}}],line:251},"61":{loc:{start:{line:266,column:10},end:{line:268,column:11}},type:"if",locations:[{start:{line:266,column:10},end:{line:268,column:11}},{start:{line:266,column:10},end:{line:268,column:11}}],line:266},"62":{loc:{start:{line:277,column:10},end:{line:279,column:11}},type:"if",locations:[{start:{line:277,column:10},end:{line:279,column:11}},{start:{line:277,column:10},end:{line:279,column:11}}],line:277},"63":{loc:{start:{line:277,column:14},end:{line:277,column:97}},type:"binary-expr",locations:[{start:{line:277,column:14},end:{line:277,column:18}},{start:{line:277,column:22},end:{line:277,column:97}}],line:277},"64":{loc:{start:{line:293,column:4},end:{line:295,column:5}},type:"if",locations:[{start:{line:293,column:4},end:{line:295,column:5}},{start:{line:293,column:4},end:{line:295,column:5}}],line:293},"65":{loc:{start:{line:293,column:8},end:{line:293,column:152}},type:"binary-expr",locations:[{start:{line:293,column:8},end:{line:293,column:87}},{start:{line:293,column:91},end:{line:293,column:152}}],line:293}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0],"32":[0],"33":[0],"34":[0],"35":[0],"36":[0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0]},inputSourceMap:{version:3,sources:["../../../src/GraphQL/loaders/parseClassMutations.js"],names:["filterDeletedFields","fields","Object","keys","reduce","acc","key","__op","getOnlyRequiredFields","updatedFields","selectedFieldsString","includedFieldsString","nativeObjectFields","includedFields","split","selectedFields","missingFields","filter","field","includes","join","length","needGet","load","parseGraphQLSchema","parseClass","parseClassConfig","className","graphQLClassName","getGraphQLQueryName","charAt","toLowerCase","slice","create","isCreateEnabled","update","isUpdateEnabled","destroy","isDestroyEnabled","createAlias","updateAlias","destroyAlias","classGraphQLCreateType","classGraphQLUpdateType","classGraphQLOutputType","parseClassTypes","createGraphQLMutationName","createGraphQLMutation","name","description","inputFields","type","defaultGraphQLTypes","OBJECT","outputFields","GraphQLNonNull","mutateAndGetPayload","args","context","mutationInfo","config","auth","info","parseFields","req","createdObject","objectsMutations","createObject","startsWith","map","replace","include","requiredKeys","needToGetAllKeys","objectsQueries","parseClasses","optimizedObject","getObject","objectId","undefined","updatedAt","createdAt","e","handleError","addGraphQLType","input","ofType","addGraphQLMutation","updateGraphQLMutationName","updateGraphQLMutation","id","GLOBAL_OR_OBJECT_ID_ATT","globalIdObject","updatedObject","updateObject","deleteGraphQLMutationName","deleteGraphQLMutation","deleteObject"],mappings:"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",sourcesContent:["import { GraphQLNonNull } from 'graphql';\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay';\nimport getFieldNames from 'graphql-list-fields';\nimport deepcopy from 'deepcopy';\nimport * as defaultGraphQLTypes from './defaultGraphQLTypes';\nimport { extractKeysAndInclude, getParseClassMutationConfig } from '../parseGraphQLUtils';\nimport * as objectsMutations from '../helpers/objectsMutations';\nimport * as objectsQueries from '../helpers/objectsQueries';\nimport { ParseGraphQLClassConfig } from '../../Controllers/ParseGraphQLController';\nimport { transformClassNameToGraphQL } from '../transformers/className';\nimport { transformTypes } from '../transformers/mutation';\n\nconst filterDeletedFields = fields =>\n  Object.keys(fields).reduce((acc, key) => {\n    if (typeof fields[key] === 'object' && fields[key]?.__op === 'Delete') {\n      acc[key] = null;\n    }\n    return acc;\n  }, fields);\n\nconst getOnlyRequiredFields = (\n  updatedFields,\n  selectedFieldsString,\n  includedFieldsString,\n  nativeObjectFields\n) => {\n  const includedFields = includedFieldsString ? includedFieldsString.split(',') : [];\n  const selectedFields = selectedFieldsString ? selectedFieldsString.split(',') : [];\n  const missingFields = selectedFields\n    .filter(field => !nativeObjectFields.includes(field) || includedFields.includes(field))\n    .join(',');\n  if (!missingFields.length) {\n    return { needGet: false, keys: '' };\n  } else {\n    return { needGet: true, keys: missingFields };\n  }\n};\n\nconst load = function (parseGraphQLSchema, parseClass, parseClassConfig: ?ParseGraphQLClassConfig) {\n  const className = parseClass.className;\n  const graphQLClassName = transformClassNameToGraphQL(className);\n  const getGraphQLQueryName = graphQLClassName.charAt(0).toLowerCase() + graphQLClassName.slice(1);\n\n  const {\n    create: isCreateEnabled = true,\n    update: isUpdateEnabled = true,\n    destroy: isDestroyEnabled = true,\n    createAlias: createAlias = '',\n    updateAlias: updateAlias = '',\n    destroyAlias: destroyAlias = '',\n  } = getParseClassMutationConfig(parseClassConfig);\n\n  const {\n    classGraphQLCreateType,\n    classGraphQLUpdateType,\n    classGraphQLOutputType,\n  } = parseGraphQLSchema.parseClassTypes[className];\n\n  if (isCreateEnabled) {\n    const createGraphQLMutationName = createAlias || `create${graphQLClassName}`;\n    const createGraphQLMutation = mutationWithClientMutationId({\n      name: `Create${graphQLClassName}`,\n      description: `The ${createGraphQLMutationName} mutation can be used to create a new object of the ${graphQLClassName} class.`,\n      inputFields: {\n        fields: {\n          description: 'These are the fields that will be used to create the new object.',\n          type: classGraphQLCreateType || defaultGraphQLTypes.OBJECT,\n        },\n      },\n      outputFields: {\n        [getGraphQLQueryName]: {\n          description: 'This is the created object.',\n          type: new GraphQLNonNull(classGraphQLOutputType || defaultGraphQLTypes.OBJECT),\n        },\n      },\n      mutateAndGetPayload: async (args, context, mutationInfo) => {\n        try {\n          let { fields } = deepcopy(args);\n          if (!fields) fields = {};\n          const { config, auth, info } = context;\n\n          const parseFields = await transformTypes('create', fields, {\n            className,\n            parseGraphQLSchema,\n            req: { config, auth, info },\n          });\n\n          const createdObject = await objectsMutations.createObject(\n            className,\n            parseFields,\n            config,\n            auth,\n            info\n          );\n          const selectedFields = getFieldNames(mutationInfo)\n            .filter(field => field.startsWith(`${getGraphQLQueryName}.`))\n            .map(field => field.replace(`${getGraphQLQueryName}.`, ''));\n          const { keys, include } = extractKeysAndInclude(selectedFields);\n          const { keys: requiredKeys, needGet } = getOnlyRequiredFields(fields, keys, include, [\n            'id',\n            'objectId',\n            'createdAt',\n            'updatedAt',\n          ]);\n          const needToGetAllKeys = objectsQueries.needToGetAllKeys(\n            parseClass.fields,\n            keys,\n            parseGraphQLSchema.parseClasses\n          );\n          let optimizedObject = {};\n          if (needGet && !needToGetAllKeys) {\n            optimizedObject = await objectsQueries.getObject(\n              className,\n              createdObject.objectId,\n              requiredKeys,\n              include,\n              undefined,\n              undefined,\n              config,\n              auth,\n              info,\n              parseGraphQLSchema.parseClasses\n            );\n          } else if (needToGetAllKeys) {\n            optimizedObject = await objectsQueries.getObject(\n              className,\n              createdObject.objectId,\n              undefined,\n              include,\n              undefined,\n              undefined,\n              config,\n              auth,\n              info,\n              parseGraphQLSchema.parseClasses\n            );\n          }\n          return {\n            [getGraphQLQueryName]: {\n              ...createdObject,\n              updatedAt: createdObject.createdAt,\n              ...filterDeletedFields(parseFields),\n              ...optimizedObject,\n            },\n          };\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      },\n    });\n\n    if (\n      parseGraphQLSchema.addGraphQLType(createGraphQLMutation.args.input.type.ofType) &&\n      parseGraphQLSchema.addGraphQLType(createGraphQLMutation.type)\n    ) {\n      parseGraphQLSchema.addGraphQLMutation(createGraphQLMutationName, createGraphQLMutation);\n    }\n  }\n\n  if (isUpdateEnabled) {\n    const updateGraphQLMutationName = updateAlias || `update${graphQLClassName}`;\n    const updateGraphQLMutation = mutationWithClientMutationId({\n      name: `Update${graphQLClassName}`,\n      description: `The ${updateGraphQLMutationName} mutation can be used to update an object of the ${graphQLClassName} class.`,\n      inputFields: {\n        id: defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT,\n        fields: {\n          description: 'These are the fields that will be used to update the object.',\n          type: classGraphQLUpdateType || defaultGraphQLTypes.OBJECT,\n        },\n      },\n      outputFields: {\n        [getGraphQLQueryName]: {\n          description: 'This is the updated object.',\n          type: new GraphQLNonNull(classGraphQLOutputType || defaultGraphQLTypes.OBJECT),\n        },\n      },\n      mutateAndGetPayload: async (args, context, mutationInfo) => {\n        try {\n          let { id, fields } = deepcopy(args);\n          if (!fields) fields = {};\n          const { config, auth, info } = context;\n\n          const globalIdObject = fromGlobalId(id);\n\n          if (globalIdObject.type === className) {\n            id = globalIdObject.id;\n          }\n\n          const parseFields = await transformTypes('update', fields, {\n            className,\n            parseGraphQLSchema,\n            req: { config, auth, info },\n          });\n\n          const updatedObject = await objectsMutations.updateObject(\n            className,\n            id,\n            parseFields,\n            config,\n            auth,\n            info\n          );\n\n          const selectedFields = getFieldNames(mutationInfo)\n            .filter(field => field.startsWith(`${getGraphQLQueryName}.`))\n            .map(field => field.replace(`${getGraphQLQueryName}.`, ''));\n          const { keys, include } = extractKeysAndInclude(selectedFields);\n          const { keys: requiredKeys, needGet } = getOnlyRequiredFields(fields, keys, include, [\n            'id',\n            'objectId',\n            'updatedAt',\n          ]);\n          const needToGetAllKeys = objectsQueries.needToGetAllKeys(\n            parseClass.fields,\n            keys,\n            parseGraphQLSchema.parseClasses\n          );\n          let optimizedObject = {};\n          if (needGet && !needToGetAllKeys) {\n            optimizedObject = await objectsQueries.getObject(\n              className,\n              id,\n              requiredKeys,\n              include,\n              undefined,\n              undefined,\n              config,\n              auth,\n              info,\n              parseGraphQLSchema.parseClasses\n            );\n          } else if (needToGetAllKeys) {\n            optimizedObject = await objectsQueries.getObject(\n              className,\n              id,\n              undefined,\n              include,\n              undefined,\n              undefined,\n              config,\n              auth,\n              info,\n              parseGraphQLSchema.parseClasses\n            );\n          }\n          return {\n            [getGraphQLQueryName]: {\n              objectId: id,\n              ...updatedObject,\n              ...filterDeletedFields(parseFields),\n              ...optimizedObject,\n            },\n          };\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      },\n    });\n\n    if (\n      parseGraphQLSchema.addGraphQLType(updateGraphQLMutation.args.input.type.ofType) &&\n      parseGraphQLSchema.addGraphQLType(updateGraphQLMutation.type)\n    ) {\n      parseGraphQLSchema.addGraphQLMutation(updateGraphQLMutationName, updateGraphQLMutation);\n    }\n  }\n\n  if (isDestroyEnabled) {\n    const deleteGraphQLMutationName = destroyAlias || `delete${graphQLClassName}`;\n    const deleteGraphQLMutation = mutationWithClientMutationId({\n      name: `Delete${graphQLClassName}`,\n      description: `The ${deleteGraphQLMutationName} mutation can be used to delete an object of the ${graphQLClassName} class.`,\n      inputFields: {\n        id: defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT,\n      },\n      outputFields: {\n        [getGraphQLQueryName]: {\n          description: 'This is the deleted object.',\n          type: new GraphQLNonNull(classGraphQLOutputType || defaultGraphQLTypes.OBJECT),\n        },\n      },\n      mutateAndGetPayload: async (args, context, mutationInfo) => {\n        try {\n          let { id } = deepcopy(args);\n          const { config, auth, info } = context;\n\n          const globalIdObject = fromGlobalId(id);\n\n          if (globalIdObject.type === className) {\n            id = globalIdObject.id;\n          }\n\n          const selectedFields = getFieldNames(mutationInfo)\n            .filter(field => field.startsWith(`${getGraphQLQueryName}.`))\n            .map(field => field.replace(`${getGraphQLQueryName}.`, ''));\n          const { keys, include } = extractKeysAndInclude(selectedFields);\n          let optimizedObject = {};\n          if (keys && keys.split(',').filter(key => !['id', 'objectId'].includes(key)).length > 0) {\n            optimizedObject = await objectsQueries.getObject(\n              className,\n              id,\n              keys,\n              include,\n              undefined,\n              undefined,\n              config,\n              auth,\n              info,\n              parseGraphQLSchema.parseClasses\n            );\n          }\n          await objectsMutations.deleteObject(className, id, config, auth, info);\n          return {\n            [getGraphQLQueryName]: {\n              objectId: id,\n              ...optimizedObject,\n            },\n          };\n        } catch (e) {\n          parseGraphQLSchema.handleError(e);\n        }\n      },\n    });\n\n    if (\n      parseGraphQLSchema.addGraphQLType(deleteGraphQLMutation.args.input.type.ofType) &&\n      parseGraphQLSchema.addGraphQLType(deleteGraphQLMutation.type)\n    ) {\n      parseGraphQLSchema.addGraphQLMutation(deleteGraphQLMutationName, deleteGraphQLMutation);\n    }\n  }\n};\n\nexport { load };\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5e31d0f4dcb3b9b79a7e6b53ac33bd4ce800e84f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2osqi96as5=function(){return actualCoverage;};}return actualCoverage;}cov_2osqi96as5();cov_2osqi96as5().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2osqi96as5().s[1]++;exports.load=void 0;var _graphql=(cov_2osqi96as5().s[2]++,require("graphql"));var _graphqlRelay=(cov_2osqi96as5().s[3]++,require("graphql-relay"));var _graphqlListFields=(cov_2osqi96as5().s[4]++,_interopRequireDefault(require("graphql-list-fields")));var _deepcopy=(cov_2osqi96as5().s[5]++,_interopRequireDefault(require("deepcopy")));var defaultGraphQLTypes=(cov_2osqi96as5().s[6]++,_interopRequireWildcard(require("./defaultGraphQLTypes")));var _parseGraphQLUtils=(cov_2osqi96as5().s[7]++,require("../parseGraphQLUtils"));var objectsMutations=(cov_2osqi96as5().s[8]++,_interopRequireWildcard(require("../helpers/objectsMutations")));var objectsQueries=(cov_2osqi96as5().s[9]++,_interopRequireWildcard(require("../helpers/objectsQueries")));var _ParseGraphQLController=(cov_2osqi96as5().s[10]++,require("../../Controllers/ParseGraphQLController"));var _className=(cov_2osqi96as5().s[11]++,require("../transformers/className"));var _mutation=(cov_2osqi96as5().s[12]++,require("../transformers/mutation"));function _getRequireWildcardCache(nodeInterop){cov_2osqi96as5().f[0]++;cov_2osqi96as5().s[13]++;if(typeof WeakMap!=="function"){cov_2osqi96as5().b[0][0]++;cov_2osqi96as5().s[14]++;return null;}else{cov_2osqi96as5().b[0][1]++;}var cacheBabelInterop=(cov_2osqi96as5().s[15]++,new WeakMap());var cacheNodeInterop=(cov_2osqi96as5().s[16]++,new WeakMap());cov_2osqi96as5().s[17]++;return(_getRequireWildcardCache=function(nodeInterop){cov_2osqi96as5().f[1]++;cov_2osqi96as5().s[18]++;return nodeInterop?(cov_2osqi96as5().b[1][0]++,cacheNodeInterop):(cov_2osqi96as5().b[1][1]++,cacheBabelInterop);})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){cov_2osqi96as5().f[2]++;cov_2osqi96as5().s[19]++;if((cov_2osqi96as5().b[3][0]++,!nodeInterop)&&(cov_2osqi96as5().b[3][1]++,obj)&&(cov_2osqi96as5().b[3][2]++,obj.__esModule)){cov_2osqi96as5().b[2][0]++;cov_2osqi96as5().s[20]++;return obj;}else{cov_2osqi96as5().b[2][1]++;}cov_2osqi96as5().s[21]++;if((cov_2osqi96as5().b[5][0]++,obj===null)||(cov_2osqi96as5().b[5][1]++,typeof obj!=="object")&&(cov_2osqi96as5().b[5][2]++,typeof obj!=="function")){cov_2osqi96as5().b[4][0]++;cov_2osqi96as5().s[22]++;return{default:obj};}else{cov_2osqi96as5().b[4][1]++;}var cache=(cov_2osqi96as5().s[23]++,_getRequireWildcardCache(nodeInterop));cov_2osqi96as5().s[24]++;if((cov_2osqi96as5().b[7][0]++,cache)&&(cov_2osqi96as5().b[7][1]++,cache.has(obj))){cov_2osqi96as5().b[6][0]++;cov_2osqi96as5().s[25]++;return cache.get(obj);}else{cov_2osqi96as5().b[6][1]++;}var newObj=(cov_2osqi96as5().s[26]++,{});var hasPropertyDescriptor=(cov_2osqi96as5().s[27]++,(cov_2osqi96as5().b[8][0]++,Object.defineProperty)&&(cov_2osqi96as5().b[8][1]++,Object.getOwnPropertyDescriptor));cov_2osqi96as5().s[28]++;for(var key in obj){cov_2osqi96as5().s[29]++;if((cov_2osqi96as5().b[10][0]++,key!=="default")&&(cov_2osqi96as5().b[10][1]++,Object.prototype.hasOwnProperty.call(obj,key))){cov_2osqi96as5().b[9][0]++;var desc=(cov_2osqi96as5().s[30]++,hasPropertyDescriptor?(cov_2osqi96as5().b[11][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_2osqi96as5().b[11][1]++,null));cov_2osqi96as5().s[31]++;if((cov_2osqi96as5().b[13][0]++,desc)&&((cov_2osqi96as5().b[13][1]++,desc.get)||(cov_2osqi96as5().b[13][2]++,desc.set))){cov_2osqi96as5().b[12][0]++;cov_2osqi96as5().s[32]++;Object.defineProperty(newObj,key,desc);}else{cov_2osqi96as5().b[12][1]++;cov_2osqi96as5().s[33]++;newObj[key]=obj[key];}}else{cov_2osqi96as5().b[9][1]++;}}cov_2osqi96as5().s[34]++;newObj.default=obj;cov_2osqi96as5().s[35]++;if(cache){cov_2osqi96as5().b[14][0]++;cov_2osqi96as5().s[36]++;cache.set(obj,newObj);}else{cov_2osqi96as5().b[14][1]++;}cov_2osqi96as5().s[37]++;return newObj;}function _interopRequireDefault(obj){cov_2osqi96as5().f[3]++;cov_2osqi96as5().s[38]++;return(cov_2osqi96as5().b[16][0]++,obj)&&(cov_2osqi96as5().b[16][1]++,obj.__esModule)?(cov_2osqi96as5().b[15][0]++,obj):(cov_2osqi96as5().b[15][1]++,{default:obj});}function ownKeys(object,enumerableOnly){cov_2osqi96as5().f[4]++;var keys=(cov_2osqi96as5().s[39]++,Object.keys(object));cov_2osqi96as5().s[40]++;if(Object.getOwnPropertySymbols){cov_2osqi96as5().b[17][0]++;var symbols=(cov_2osqi96as5().s[41]++,Object.getOwnPropertySymbols(object));cov_2osqi96as5().s[42]++;if(enumerableOnly){cov_2osqi96as5().b[18][0]++;cov_2osqi96as5().s[43]++;symbols=symbols.filter(function(sym){cov_2osqi96as5().f[5]++;cov_2osqi96as5().s[44]++;return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}else{cov_2osqi96as5().b[18][1]++;}cov_2osqi96as5().s[45]++;keys.push.apply(keys,symbols);}else{cov_2osqi96as5().b[17][1]++;}cov_2osqi96as5().s[46]++;return keys;}function _objectSpread(target){cov_2osqi96as5().f[6]++;cov_2osqi96as5().s[47]++;for(var i=(cov_2osqi96as5().s[48]++,1);i<arguments.length;i++){var source=(cov_2osqi96as5().s[49]++,arguments[i]!=null?(cov_2osqi96as5().b[19][0]++,arguments[i]):(cov_2osqi96as5().b[19][1]++,{}));cov_2osqi96as5().s[50]++;if(i%2){cov_2osqi96as5().b[20][0]++;cov_2osqi96as5().s[51]++;ownKeys(Object(source),true).forEach(function(key){cov_2osqi96as5().f[7]++;cov_2osqi96as5().s[52]++;_defineProperty(target,key,source[key]);});}else{cov_2osqi96as5().b[20][1]++;cov_2osqi96as5().s[53]++;if(Object.getOwnPropertyDescriptors){cov_2osqi96as5().b[21][0]++;cov_2osqi96as5().s[54]++;Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{cov_2osqi96as5().b[21][1]++;cov_2osqi96as5().s[55]++;ownKeys(Object(source)).forEach(function(key){cov_2osqi96as5().f[8]++;cov_2osqi96as5().s[56]++;Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}}cov_2osqi96as5().s[57]++;return target;}function _defineProperty(obj,key,value){cov_2osqi96as5().f[9]++;cov_2osqi96as5().s[58]++;if(key in obj){cov_2osqi96as5().b[22][0]++;cov_2osqi96as5().s[59]++;Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{cov_2osqi96as5().b[22][1]++;cov_2osqi96as5().s[60]++;obj[key]=value;}cov_2osqi96as5().s[61]++;return obj;}cov_2osqi96as5().s[62]++;const filterDeletedFields=fields=>{cov_2osqi96as5().f[10]++;cov_2osqi96as5().s[63]++;return Object.keys(fields).reduce((acc,key)=>{cov_2osqi96as5().f[11]++;var _fields$key;cov_2osqi96as5().s[64]++;if((cov_2osqi96as5().b[24][0]++,typeof fields[key]==='object')&&(cov_2osqi96as5().b[24][1]++,((cov_2osqi96as5().b[26][0]++,(_fields$key=fields[key])===null)||(cov_2osqi96as5().b[26][1]++,_fields$key===void 0)?(cov_2osqi96as5().b[25][0]++,void 0):(cov_2osqi96as5().b[25][1]++,_fields$key.__op))==='Delete')){cov_2osqi96as5().b[23][0]++;cov_2osqi96as5().s[65]++;acc[key]=null;}else{cov_2osqi96as5().b[23][1]++;}cov_2osqi96as5().s[66]++;return acc;},fields);};cov_2osqi96as5().s[67]++;const getOnlyRequiredFields=(updatedFields,selectedFieldsString,includedFieldsString,nativeObjectFields)=>{cov_2osqi96as5().f[12]++;const includedFields=(cov_2osqi96as5().s[68]++,includedFieldsString?(cov_2osqi96as5().b[27][0]++,includedFieldsString.split(',')):(cov_2osqi96as5().b[27][1]++,[]));const selectedFields=(cov_2osqi96as5().s[69]++,selectedFieldsString?(cov_2osqi96as5().b[28][0]++,selectedFieldsString.split(',')):(cov_2osqi96as5().b[28][1]++,[]));const missingFields=(cov_2osqi96as5().s[70]++,selectedFields.filter(field=>{cov_2osqi96as5().f[13]++;cov_2osqi96as5().s[71]++;return(cov_2osqi96as5().b[29][0]++,!nativeObjectFields.includes(field))||(cov_2osqi96as5().b[29][1]++,includedFields.includes(field));}).join(','));cov_2osqi96as5().s[72]++;if(!missingFields.length){cov_2osqi96as5().b[30][0]++;cov_2osqi96as5().s[73]++;return{needGet:false,keys:''};}else{cov_2osqi96as5().b[30][1]++;cov_2osqi96as5().s[74]++;return{needGet:true,keys:missingFields};}};cov_2osqi96as5().s[75]++;const load=function(parseGraphQLSchema,parseClass,parseClassConfig){cov_2osqi96as5().f[14]++;const className=(cov_2osqi96as5().s[76]++,parseClass.className);const graphQLClassName=(cov_2osqi96as5().s[77]++,(0,_className.transformClassNameToGraphQL)(className));const getGraphQLQueryName=(cov_2osqi96as5().s[78]++,graphQLClassName.charAt(0).toLowerCase()+graphQLClassName.slice(1));const{create:isCreateEnabled=(cov_2osqi96as5().b[31][0]++,true),update:isUpdateEnabled=(cov_2osqi96as5().b[32][0]++,true),destroy:isDestroyEnabled=(cov_2osqi96as5().b[33][0]++,true),createAlias=(cov_2osqi96as5().b[34][0]++,''),updateAlias=(cov_2osqi96as5().b[35][0]++,''),destroyAlias=(cov_2osqi96as5().b[36][0]++,'')}=(cov_2osqi96as5().s[79]++,(0,_parseGraphQLUtils.getParseClassMutationConfig)(parseClassConfig));const{classGraphQLCreateType,classGraphQLUpdateType,classGraphQLOutputType}=(cov_2osqi96as5().s[80]++,parseGraphQLSchema.parseClassTypes[className]);cov_2osqi96as5().s[81]++;if(isCreateEnabled){cov_2osqi96as5().b[37][0]++;const createGraphQLMutationName=(cov_2osqi96as5().s[82]++,(cov_2osqi96as5().b[38][0]++,createAlias)||(cov_2osqi96as5().b[38][1]++,`create${graphQLClassName}`));const createGraphQLMutation=(cov_2osqi96as5().s[83]++,(0,_graphqlRelay.mutationWithClientMutationId)({name:`Create${graphQLClassName}`,description:`The ${createGraphQLMutationName} mutation can be used to create a new object of the ${graphQLClassName} class.`,inputFields:{fields:{description:'These are the fields that will be used to create the new object.',type:(cov_2osqi96as5().b[39][0]++,classGraphQLCreateType)||(cov_2osqi96as5().b[39][1]++,defaultGraphQLTypes.OBJECT)}},outputFields:{[getGraphQLQueryName]:{description:'This is the created object.',type:new _graphql.GraphQLNonNull((cov_2osqi96as5().b[40][0]++,classGraphQLOutputType)||(cov_2osqi96as5().b[40][1]++,defaultGraphQLTypes.OBJECT))}},mutateAndGetPayload:async(args,context,mutationInfo)=>{cov_2osqi96as5().f[15]++;cov_2osqi96as5().s[84]++;try{let{fields}=(cov_2osqi96as5().s[85]++,(0,_deepcopy.default)(args));cov_2osqi96as5().s[86]++;if(!fields){cov_2osqi96as5().b[41][0]++;cov_2osqi96as5().s[87]++;fields={};}else{cov_2osqi96as5().b[41][1]++;}const{config,auth,info}=(cov_2osqi96as5().s[88]++,context);const parseFields=(cov_2osqi96as5().s[89]++,await(0,_mutation.transformTypes)('create',fields,{className,parseGraphQLSchema,req:{config,auth,info}}));const createdObject=(cov_2osqi96as5().s[90]++,await objectsMutations.createObject(className,parseFields,config,auth,info));const selectedFields=(cov_2osqi96as5().s[91]++,(0,_graphqlListFields.default)(mutationInfo).filter(field=>{cov_2osqi96as5().f[16]++;cov_2osqi96as5().s[92]++;return field.startsWith(`${getGraphQLQueryName}.`);}).map(field=>{cov_2osqi96as5().f[17]++;cov_2osqi96as5().s[93]++;return field.replace(`${getGraphQLQueryName}.`,'');}));const{keys,include}=(cov_2osqi96as5().s[94]++,(0,_parseGraphQLUtils.extractKeysAndInclude)(selectedFields));const{keys:requiredKeys,needGet}=(cov_2osqi96as5().s[95]++,getOnlyRequiredFields(fields,keys,include,['id','objectId','createdAt','updatedAt']));const needToGetAllKeys=(cov_2osqi96as5().s[96]++,objectsQueries.needToGetAllKeys(parseClass.fields,keys,parseGraphQLSchema.parseClasses));let optimizedObject=(cov_2osqi96as5().s[97]++,{});cov_2osqi96as5().s[98]++;if((cov_2osqi96as5().b[43][0]++,needGet)&&(cov_2osqi96as5().b[43][1]++,!needToGetAllKeys)){cov_2osqi96as5().b[42][0]++;cov_2osqi96as5().s[99]++;optimizedObject=await objectsQueries.getObject(className,createdObject.objectId,requiredKeys,include,undefined,undefined,config,auth,info,parseGraphQLSchema.parseClasses);}else{cov_2osqi96as5().b[42][1]++;cov_2osqi96as5().s[100]++;if(needToGetAllKeys){cov_2osqi96as5().b[44][0]++;cov_2osqi96as5().s[101]++;optimizedObject=await objectsQueries.getObject(className,createdObject.objectId,undefined,include,undefined,undefined,config,auth,info,parseGraphQLSchema.parseClasses);}else{cov_2osqi96as5().b[44][1]++;}}cov_2osqi96as5().s[102]++;return{[getGraphQLQueryName]:_objectSpread(_objectSpread(_objectSpread({},createdObject),{},{updatedAt:createdObject.createdAt},filterDeletedFields(parseFields)),optimizedObject)};}catch(e){cov_2osqi96as5().s[103]++;parseGraphQLSchema.handleError(e);}}}));cov_2osqi96as5().s[104]++;if((cov_2osqi96as5().b[46][0]++,parseGraphQLSchema.addGraphQLType(createGraphQLMutation.args.input.type.ofType))&&(cov_2osqi96as5().b[46][1]++,parseGraphQLSchema.addGraphQLType(createGraphQLMutation.type))){cov_2osqi96as5().b[45][0]++;cov_2osqi96as5().s[105]++;parseGraphQLSchema.addGraphQLMutation(createGraphQLMutationName,createGraphQLMutation);}else{cov_2osqi96as5().b[45][1]++;}}else{cov_2osqi96as5().b[37][1]++;}cov_2osqi96as5().s[106]++;if(isUpdateEnabled){cov_2osqi96as5().b[47][0]++;const updateGraphQLMutationName=(cov_2osqi96as5().s[107]++,(cov_2osqi96as5().b[48][0]++,updateAlias)||(cov_2osqi96as5().b[48][1]++,`update${graphQLClassName}`));const updateGraphQLMutation=(cov_2osqi96as5().s[108]++,(0,_graphqlRelay.mutationWithClientMutationId)({name:`Update${graphQLClassName}`,description:`The ${updateGraphQLMutationName} mutation can be used to update an object of the ${graphQLClassName} class.`,inputFields:{id:defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT,fields:{description:'These are the fields that will be used to update the object.',type:(cov_2osqi96as5().b[49][0]++,classGraphQLUpdateType)||(cov_2osqi96as5().b[49][1]++,defaultGraphQLTypes.OBJECT)}},outputFields:{[getGraphQLQueryName]:{description:'This is the updated object.',type:new _graphql.GraphQLNonNull((cov_2osqi96as5().b[50][0]++,classGraphQLOutputType)||(cov_2osqi96as5().b[50][1]++,defaultGraphQLTypes.OBJECT))}},mutateAndGetPayload:async(args,context,mutationInfo)=>{cov_2osqi96as5().f[18]++;cov_2osqi96as5().s[109]++;try{let{id,fields}=(cov_2osqi96as5().s[110]++,(0,_deepcopy.default)(args));cov_2osqi96as5().s[111]++;if(!fields){cov_2osqi96as5().b[51][0]++;cov_2osqi96as5().s[112]++;fields={};}else{cov_2osqi96as5().b[51][1]++;}const{config,auth,info}=(cov_2osqi96as5().s[113]++,context);const globalIdObject=(cov_2osqi96as5().s[114]++,(0,_graphqlRelay.fromGlobalId)(id));cov_2osqi96as5().s[115]++;if(globalIdObject.type===className){cov_2osqi96as5().b[52][0]++;cov_2osqi96as5().s[116]++;id=globalIdObject.id;}else{cov_2osqi96as5().b[52][1]++;}const parseFields=(cov_2osqi96as5().s[117]++,await(0,_mutation.transformTypes)('update',fields,{className,parseGraphQLSchema,req:{config,auth,info}}));const updatedObject=(cov_2osqi96as5().s[118]++,await objectsMutations.updateObject(className,id,parseFields,config,auth,info));const selectedFields=(cov_2osqi96as5().s[119]++,(0,_graphqlListFields.default)(mutationInfo).filter(field=>{cov_2osqi96as5().f[19]++;cov_2osqi96as5().s[120]++;return field.startsWith(`${getGraphQLQueryName}.`);}).map(field=>{cov_2osqi96as5().f[20]++;cov_2osqi96as5().s[121]++;return field.replace(`${getGraphQLQueryName}.`,'');}));const{keys,include}=(cov_2osqi96as5().s[122]++,(0,_parseGraphQLUtils.extractKeysAndInclude)(selectedFields));const{keys:requiredKeys,needGet}=(cov_2osqi96as5().s[123]++,getOnlyRequiredFields(fields,keys,include,['id','objectId','updatedAt']));const needToGetAllKeys=(cov_2osqi96as5().s[124]++,objectsQueries.needToGetAllKeys(parseClass.fields,keys,parseGraphQLSchema.parseClasses));let optimizedObject=(cov_2osqi96as5().s[125]++,{});cov_2osqi96as5().s[126]++;if((cov_2osqi96as5().b[54][0]++,needGet)&&(cov_2osqi96as5().b[54][1]++,!needToGetAllKeys)){cov_2osqi96as5().b[53][0]++;cov_2osqi96as5().s[127]++;optimizedObject=await objectsQueries.getObject(className,id,requiredKeys,include,undefined,undefined,config,auth,info,parseGraphQLSchema.parseClasses);}else{cov_2osqi96as5().b[53][1]++;cov_2osqi96as5().s[128]++;if(needToGetAllKeys){cov_2osqi96as5().b[55][0]++;cov_2osqi96as5().s[129]++;optimizedObject=await objectsQueries.getObject(className,id,undefined,include,undefined,undefined,config,auth,info,parseGraphQLSchema.parseClasses);}else{cov_2osqi96as5().b[55][1]++;}}cov_2osqi96as5().s[130]++;return{[getGraphQLQueryName]:_objectSpread(_objectSpread(_objectSpread({objectId:id},updatedObject),filterDeletedFields(parseFields)),optimizedObject)};}catch(e){cov_2osqi96as5().s[131]++;parseGraphQLSchema.handleError(e);}}}));cov_2osqi96as5().s[132]++;if((cov_2osqi96as5().b[57][0]++,parseGraphQLSchema.addGraphQLType(updateGraphQLMutation.args.input.type.ofType))&&(cov_2osqi96as5().b[57][1]++,parseGraphQLSchema.addGraphQLType(updateGraphQLMutation.type))){cov_2osqi96as5().b[56][0]++;cov_2osqi96as5().s[133]++;parseGraphQLSchema.addGraphQLMutation(updateGraphQLMutationName,updateGraphQLMutation);}else{cov_2osqi96as5().b[56][1]++;}}else{cov_2osqi96as5().b[47][1]++;}cov_2osqi96as5().s[134]++;if(isDestroyEnabled){cov_2osqi96as5().b[58][0]++;const deleteGraphQLMutationName=(cov_2osqi96as5().s[135]++,(cov_2osqi96as5().b[59][0]++,destroyAlias)||(cov_2osqi96as5().b[59][1]++,`delete${graphQLClassName}`));const deleteGraphQLMutation=(cov_2osqi96as5().s[136]++,(0,_graphqlRelay.mutationWithClientMutationId)({name:`Delete${graphQLClassName}`,description:`The ${deleteGraphQLMutationName} mutation can be used to delete an object of the ${graphQLClassName} class.`,inputFields:{id:defaultGraphQLTypes.GLOBAL_OR_OBJECT_ID_ATT},outputFields:{[getGraphQLQueryName]:{description:'This is the deleted object.',type:new _graphql.GraphQLNonNull((cov_2osqi96as5().b[60][0]++,classGraphQLOutputType)||(cov_2osqi96as5().b[60][1]++,defaultGraphQLTypes.OBJECT))}},mutateAndGetPayload:async(args,context,mutationInfo)=>{cov_2osqi96as5().f[21]++;cov_2osqi96as5().s[137]++;try{let{id}=(cov_2osqi96as5().s[138]++,(0,_deepcopy.default)(args));const{config,auth,info}=(cov_2osqi96as5().s[139]++,context);const globalIdObject=(cov_2osqi96as5().s[140]++,(0,_graphqlRelay.fromGlobalId)(id));cov_2osqi96as5().s[141]++;if(globalIdObject.type===className){cov_2osqi96as5().b[61][0]++;cov_2osqi96as5().s[142]++;id=globalIdObject.id;}else{cov_2osqi96as5().b[61][1]++;}const selectedFields=(cov_2osqi96as5().s[143]++,(0,_graphqlListFields.default)(mutationInfo).filter(field=>{cov_2osqi96as5().f[22]++;cov_2osqi96as5().s[144]++;return field.startsWith(`${getGraphQLQueryName}.`);}).map(field=>{cov_2osqi96as5().f[23]++;cov_2osqi96as5().s[145]++;return field.replace(`${getGraphQLQueryName}.`,'');}));const{keys,include}=(cov_2osqi96as5().s[146]++,(0,_parseGraphQLUtils.extractKeysAndInclude)(selectedFields));let optimizedObject=(cov_2osqi96as5().s[147]++,{});cov_2osqi96as5().s[148]++;if((cov_2osqi96as5().b[63][0]++,keys)&&(cov_2osqi96as5().b[63][1]++,keys.split(',').filter(key=>{cov_2osqi96as5().f[24]++;cov_2osqi96as5().s[149]++;return!['id','objectId'].includes(key);}).length>0)){cov_2osqi96as5().b[62][0]++;cov_2osqi96as5().s[150]++;optimizedObject=await objectsQueries.getObject(className,id,keys,include,undefined,undefined,config,auth,info,parseGraphQLSchema.parseClasses);}else{cov_2osqi96as5().b[62][1]++;}cov_2osqi96as5().s[151]++;await objectsMutations.deleteObject(className,id,config,auth,info);cov_2osqi96as5().s[152]++;return{[getGraphQLQueryName]:_objectSpread({objectId:id},optimizedObject)};}catch(e){cov_2osqi96as5().s[153]++;parseGraphQLSchema.handleError(e);}}}));cov_2osqi96as5().s[154]++;if((cov_2osqi96as5().b[65][0]++,parseGraphQLSchema.addGraphQLType(deleteGraphQLMutation.args.input.type.ofType))&&(cov_2osqi96as5().b[65][1]++,parseGraphQLSchema.addGraphQLType(deleteGraphQLMutation.type))){cov_2osqi96as5().b[64][0]++;cov_2osqi96as5().s[155]++;parseGraphQLSchema.addGraphQLMutation(deleteGraphQLMutationName,deleteGraphQLMutation);}else{cov_2osqi96as5().b[64][1]++;}}else{cov_2osqi96as5().b[58][1]++;}};cov_2osqi96as5().s[156]++;exports.load=load;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9HcmFwaFFML2xvYWRlcnMvcGFyc2VDbGFzc011dGF0aW9ucy5qcyJdLCJuYW1lcyI6WyJmaWx0ZXJEZWxldGVkRmllbGRzIiwiZmllbGRzIiwiYWNjIiwiZ2V0T25seVJlcXVpcmVkRmllbGRzIiwiaW5jbHVkZWRGaWVsZHMiLCJpbmNsdWRlZEZpZWxkc1N0cmluZyIsInNlbGVjdGVkRmllbGRzIiwic2VsZWN0ZWRGaWVsZHNTdHJpbmciLCJtaXNzaW5nRmllbGRzIiwiZmllbGQiLCJuYXRpdmVPYmplY3RGaWVsZHMiLCJuZWVkR2V0Iiwia2V5cyIsImxvYWQiLCJjbGFzc05hbWUiLCJwYXJzZUNsYXNzIiwiZ3JhcGhRTENsYXNzTmFtZSIsImdldEdyYXBoUUxRdWVyeU5hbWUiLCJjcmVhdGUiLCJpc0NyZWF0ZUVuYWJsZWQiLCJ1cGRhdGUiLCJpc1VwZGF0ZUVuYWJsZWQiLCJkZXN0cm95IiwiaXNEZXN0cm95RW5hYmxlZCIsImNyZWF0ZUFsaWFzIiwidXBkYXRlQWxpYXMiLCJkZXN0cm95QWxpYXMiLCJjbGFzc0dyYXBoUUxPdXRwdXRUeXBlIiwicGFyc2VHcmFwaFFMU2NoZW1hIiwiY3JlYXRlR3JhcGhRTE11dGF0aW9uTmFtZSIsImNyZWF0ZUdyYXBoUUxNdXRhdGlvbiIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImlucHV0RmllbGRzIiwidHlwZSIsImNsYXNzR3JhcGhRTENyZWF0ZVR5cGUiLCJkZWZhdWx0R3JhcGhRTFR5cGVzIiwiT0JKRUNUIiwib3V0cHV0RmllbGRzIiwiR3JhcGhRTE5vbk51bGwiLCJtdXRhdGVBbmRHZXRQYXlsb2FkIiwiaW5mbyIsInBhcnNlRmllbGRzIiwicmVxIiwiY3JlYXRlZE9iamVjdCIsIm9iamVjdHNNdXRhdGlvbnMiLCJpbmNsdWRlIiwibmVlZFRvR2V0QWxsS2V5cyIsIm9iamVjdHNRdWVyaWVzIiwib3B0aW1pemVkT2JqZWN0IiwidXBkYXRlZEF0IiwiY3JlYXRlZEF0IiwidXBkYXRlR3JhcGhRTE11dGF0aW9uTmFtZSIsInVwZGF0ZUdyYXBoUUxNdXRhdGlvbiIsImlkIiwiY2xhc3NHcmFwaFFMVXBkYXRlVHlwZSIsImdsb2JhbElkT2JqZWN0IiwidXBkYXRlZE9iamVjdCIsIm9iamVjdElkIiwiZGVsZXRlR3JhcGhRTE11dGF0aW9uTmFtZSIsImRlbGV0ZUdyYXBoUUxNdXRhdGlvbiIsIkdMT0JBTF9PUl9PQkpFQ1RfSURfQVRUIiwia2V5Il0sIm1hcHBpbmdzIjoibW9sREFJQTt3TkFKQSxHQUFBLENBQUEsUUFBQSwwQkFBQSxPQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsYUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsa0JBQUEsMEJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsU0FBQSwwQkFBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLG1CQUFBLDBCQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLGtCQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsZ0JBQUEsMEJBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxHQUFBLENBQUEsY0FBQSwwQkFBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQSx1QkFBQSwyQkFBQSxPQUFBLENBQUEsMENBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLFVBQUEsMkJBQUEsT0FBQSxDQUFBLDJCQUFBLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQSxTQUFBLDJCQUFBLE9BQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUEsQyx3NUpBRUEsS0FBTUEsQ0FBQUEsbUJB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QUFBQSxJQUFBQSxDQUFsQ2hDLE1BQUFBLGlDQUNBQSxrQkFBa0IsQ0FBbEJBLGNBQUFBLENBQWtDZ0MscUJBQXFCLENBRnpELElBRUVoQyxDQURBQSxDQURGLENBR0UsdURBQ0FBLGtCQUFrQixDQUFsQkEsa0JBQUFBLENBQUFBLHlCQUFBQSxDQUFBQSxxQkFBQUEsRUFDRCxDQUxELGtDQU1ELENBL0RELGtDQXRPRixDQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMTm9uTnVsbCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZnJvbUdsb2JhbElkLCBtdXRhdGlvbldpdGhDbGllbnRNdXRhdGlvbklkIH0gZnJvbSAnZ3JhcGhxbC1yZWxheSc7XG5pbXBvcnQgZ2V0RmllbGROYW1lcyBmcm9tICdncmFwaHFsLWxpc3QtZmllbGRzJztcbmltcG9ydCBkZWVwY29weSBmcm9tICdkZWVwY29weSc7XG5pbXBvcnQgKiBhcyBkZWZhdWx0R3JhcGhRTFR5cGVzIGZyb20gJy4vZGVmYXVsdEdyYXBoUUxUeXBlcyc7XG5pbXBvcnQgeyBleHRyYWN0S2V5c0FuZEluY2x1ZGUsIGdldFBhcnNlQ2xhc3NNdXRhdGlvbkNvbmZpZyB9IGZyb20gJy4uL3BhcnNlR3JhcGhRTFV0aWxzJztcbmltcG9ydCAqIGFzIG9iamVjdHNNdXRhdGlvbnMgZnJvbSAnLi4vaGVscGVycy9vYmplY3RzTXV0YXRpb25zJztcbmltcG9ydCAqIGFzIG9iamVjdHNRdWVyaWVzIGZyb20gJy4uL2hlbHBlcnMvb2JqZWN0c1F1ZXJpZXMnO1xuaW1wb3J0IHsgUGFyc2VHcmFwaFFMQ2xhc3NDb25maWcgfSBmcm9tICcuLi8uLi9Db250cm9sbGVycy9QYXJzZUdyYXBoUUxDb250cm9sbGVyJztcbmltcG9ydCB7IHRyYW5zZm9ybUNsYXNzTmFtZVRvR3JhcGhRTCB9IGZyb20gJy4uL3RyYW5zZm9ybWVycy9jbGFzc05hbWUnO1xuaW1wb3J0IHsgdHJhbnNmb3JtVHlwZXMgfSBmcm9tICcuLi90cmFuc2Zvcm1lcnMvbXV0YXRpb24nO1xuXG5jb25zdCBmaWx0ZXJEZWxldGVkRmllbGRzID0gZmllbGRzID0+XG4gIE9iamVjdC5rZXlzKGZpZWxkcykucmVkdWNlKChhY2MsIGtleSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZmllbGRzW2tleV0gPT09ICdvYmplY3QnICYmIGZpZWxkc1trZXldPy5fX29wID09PSAnRGVsZXRlJykge1xuICAgICAgYWNjW2tleV0gPSBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCBmaWVsZHMpO1xuXG5jb25zdCBnZXRPbmx5UmVxdWlyZWRGaWVsZHMgPSAoXG4gIHVwZGF0ZWRGaWVsZHMsXG4gIHNlbGVjdGVkRmllbGRzU3RyaW5nLFxuICBpbmNsdWRlZEZpZWxkc1N0cmluZyxcbiAgbmF0aXZlT2JqZWN0RmllbGRzXG4pID0+IHtcbiAgY29uc3QgaW5jbHVkZWRGaWVsZHMgPSBpbmNsdWRlZEZpZWxkc1N0cmluZyA/IGluY2x1ZGVkRmllbGRzU3RyaW5nLnNwbGl0KCcsJykgOiBbXTtcbiAgY29uc3Qgc2VsZWN0ZWRGaWVsZHMgPSBzZWxlY3RlZEZpZWxkc1N0cmluZyA/IHNlbGVjdGVkRmllbGRzU3RyaW5nLnNwbGl0KCcsJykgOiBbXTtcbiAgY29uc3QgbWlzc2luZ0ZpZWxkcyA9IHNlbGVjdGVkRmllbGRzXG4gICAgLmZpbHRlcihmaWVsZCA9PiAhbmF0aXZlT2JqZWN0RmllbGRzLmluY2x1ZGVzKGZpZWxkKSB8fCBpbmNsdWRlZEZpZWxkcy5pbmNsdWRlcyhmaWVsZCkpXG4gICAgLmpvaW4oJywnKTtcbiAgaWYgKCFtaXNzaW5nRmllbGRzLmxlbmd0aCkge1xuICAgIHJldHVybiB7IG5lZWRHZXQ6IGZhbHNlLCBrZXlzOiAnJyB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IG5lZWRHZXQ6IHRydWUsIGtleXM6IG1pc3NpbmdGaWVsZHMgfTtcbiAgfVxufTtcblxuY29uc3QgbG9hZCA9IGZ1bmN0aW9uIChwYXJzZUdyYXBoUUxTY2hlbWEsIHBhcnNlQ2xhc3MsIHBhcnNlQ2xhc3NDb25maWc6ID9QYXJzZUdyYXBoUUxDbGFzc0NvbmZpZykge1xuICBjb25zdCBjbGFzc05hbWUgPSBwYXJzZUNsYXNzLmNsYXNzTmFtZTtcbiAgY29uc3QgZ3JhcGhRTENsYXNzTmFtZSA9IHRyYW5zZm9ybUNsYXNzTmFtZVRvR3JhcGhRTChjbGFzc05hbWUpO1xuICBjb25zdCBnZXRHcmFwaFFMUXVlcnlOYW1lID0gZ3JhcGhRTENsYXNzTmFtZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIGdyYXBoUUxDbGFzc05hbWUuc2xpY2UoMSk7XG5cbiAgY29uc3Qge1xuICAgIGNyZWF0ZTogaXNDcmVhdGVFbmFibGVkID0gdHJ1ZSxcbiAgICB1cGRhdGU6IGlzVXBkYXRlRW5hYmxlZCA9IHRydWUsXG4gICAgZGVzdHJveTogaXNEZXN0cm95RW5hYmxlZCA9IHRydWUsXG4gICAgY3JlYXRlQWxpYXM6IGNyZWF0ZUFsaWFzID0gJycsXG4gICAgdXBkYXRlQWxpYXM6IHVwZGF0ZUFsaWFzID0gJycsXG4gICAgZGVzdHJveUFsaWFzOiBkZXN0cm95QWxpYXMgPSAnJyxcbiAgfSA9IGdldFBhcnNlQ2xhc3NNdXRhdGlvbkNvbmZpZyhwYXJzZUNsYXNzQ29uZmlnKTtcblxuICBjb25zdCB7XG4gICAgY2xhc3NHcmFwaFFMQ3JlYXRlVHlwZSxcbiAgICBjbGFzc0dyYXBoUUxVcGRhdGVUeXBlLFxuICAgIGNsYXNzR3JhcGhRTE91dHB1dFR5cGUsXG4gIH0gPSBwYXJzZUdyYXBoUUxTY2hlbWEucGFyc2VDbGFzc1R5cGVzW2NsYXNzTmFtZV07XG5cbiAgaWYgKGlzQ3JlYXRlRW5hYmxlZCkge1xuICAgIGNvbnN0IGNyZWF0ZUdyYXBoUUxNdXRhdGlvbk5hbWUgPSBjcmVhdGVBbGlhcyB8fCBgY3JlYXRlJHtncmFwaFFMQ2xhc3NOYW1lfWA7XG4gICAgY29uc3QgY3JlYXRlR3JhcGhRTE11dGF0aW9uID0gbXV0YXRpb25XaXRoQ2xpZW50TXV0YXRpb25JZCh7XG4gICAgICBuYW1lOiBgQ3JlYXRlJHtncmFwaFFMQ2xhc3NOYW1lfWAsXG4gICAgICBkZXNjcmlwdGlvbjogYFRoZSAke2NyZWF0ZUdyYXBoUUxNdXRhdGlvbk5hbWV9IG11dGF0aW9uIGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhIG5ldyBvYmplY3Qgb2YgdGhlICR7Z3JhcGhRTENsYXNzTmFtZX0gY2xhc3MuYCxcbiAgICAgIGlucHV0RmllbGRzOiB7XG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlc2UgYXJlIHRoZSBmaWVsZHMgdGhhdCB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBuZXcgb2JqZWN0LicsXG4gICAgICAgICAgdHlwZTogY2xhc3NHcmFwaFFMQ3JlYXRlVHlwZSB8fCBkZWZhdWx0R3JhcGhRTFR5cGVzLk9CSkVDVCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBvdXRwdXRGaWVsZHM6IHtcbiAgICAgICAgW2dldEdyYXBoUUxRdWVyeU5hbWVdOiB7XG4gICAgICAgICAgZGVzY3JpcHRpb246ICdUaGlzIGlzIHRoZSBjcmVhdGVkIG9iamVjdC4nLFxuICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChjbGFzc0dyYXBoUUxPdXRwdXRUeXBlIHx8IGRlZmF1bHRHcmFwaFFMVHlwZXMuT0JKRUNUKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBtdXRhdGVBbmRHZXRQYXlsb2FkOiBhc3luYyAoYXJncywgY29udGV4dCwgbXV0YXRpb25JbmZvKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbGV0IHsgZmllbGRzIH0gPSBkZWVwY29weShhcmdzKTtcbiAgICAgICAgICBpZiAoIWZpZWxkcykgZmllbGRzID0ge307XG4gICAgICAgICAgY29uc3QgeyBjb25maWcsIGF1dGgsIGluZm8gfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgICBjb25zdCBwYXJzZUZpZWxkcyA9IGF3YWl0IHRyYW5zZm9ybVR5cGVzKCdjcmVhdGUnLCBmaWVsZHMsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYSxcbiAgICAgICAgICAgIHJlcTogeyBjb25maWcsIGF1dGgsIGluZm8gfSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGNvbnN0IGNyZWF0ZWRPYmplY3QgPSBhd2FpdCBvYmplY3RzTXV0YXRpb25zLmNyZWF0ZU9iamVjdChcbiAgICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICAgIHBhcnNlRmllbGRzLFxuICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgYXV0aCxcbiAgICAgICAgICAgIGluZm9cbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkRmllbGRzID0gZ2V0RmllbGROYW1lcyhtdXRhdGlvbkluZm8pXG4gICAgICAgICAgICAuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnN0YXJ0c1dpdGgoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCkpXG4gICAgICAgICAgICAubWFwKGZpZWxkID0+IGZpZWxkLnJlcGxhY2UoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCwgJycpKTtcbiAgICAgICAgICBjb25zdCB7IGtleXMsIGluY2x1ZGUgfSA9IGV4dHJhY3RLZXlzQW5kSW5jbHVkZShzZWxlY3RlZEZpZWxkcyk7XG4gICAgICAgICAgY29uc3QgeyBrZXlzOiByZXF1aXJlZEtleXMsIG5lZWRHZXQgfSA9IGdldE9ubHlSZXF1aXJlZEZpZWxkcyhmaWVsZHMsIGtleXMsIGluY2x1ZGUsIFtcbiAgICAgICAgICAgICdpZCcsXG4gICAgICAgICAgICAnb2JqZWN0SWQnLFxuICAgICAgICAgICAgJ2NyZWF0ZWRBdCcsXG4gICAgICAgICAgICAndXBkYXRlZEF0JyxcbiAgICAgICAgICBdKTtcbiAgICAgICAgICBjb25zdCBuZWVkVG9HZXRBbGxLZXlzID0gb2JqZWN0c1F1ZXJpZXMubmVlZFRvR2V0QWxsS2V5cyhcbiAgICAgICAgICAgIHBhcnNlQ2xhc3MuZmllbGRzLFxuICAgICAgICAgICAga2V5cyxcbiAgICAgICAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5wYXJzZUNsYXNzZXNcbiAgICAgICAgICApO1xuICAgICAgICAgIGxldCBvcHRpbWl6ZWRPYmplY3QgPSB7fTtcbiAgICAgICAgICBpZiAobmVlZEdldCAmJiAhbmVlZFRvR2V0QWxsS2V5cykge1xuICAgICAgICAgICAgb3B0aW1pemVkT2JqZWN0ID0gYXdhaXQgb2JqZWN0c1F1ZXJpZXMuZ2V0T2JqZWN0KFxuICAgICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICAgIGNyZWF0ZWRPYmplY3Qub2JqZWN0SWQsXG4gICAgICAgICAgICAgIHJlcXVpcmVkS2V5cyxcbiAgICAgICAgICAgICAgaW5jbHVkZSxcbiAgICAgICAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgYXV0aCxcbiAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLnBhcnNlQ2xhc3Nlc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKG5lZWRUb0dldEFsbEtleXMpIHtcbiAgICAgICAgICAgIG9wdGltaXplZE9iamVjdCA9IGF3YWl0IG9iamVjdHNRdWVyaWVzLmdldE9iamVjdChcbiAgICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgICBjcmVhdGVkT2JqZWN0Lm9iamVjdElkLFxuICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIGluY2x1ZGUsXG4gICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgIGF1dGgsXG4gICAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5wYXJzZUNsYXNzZXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBbZ2V0R3JhcGhRTFF1ZXJ5TmFtZV06IHtcbiAgICAgICAgICAgICAgLi4uY3JlYXRlZE9iamVjdCxcbiAgICAgICAgICAgICAgdXBkYXRlZEF0OiBjcmVhdGVkT2JqZWN0LmNyZWF0ZWRBdCxcbiAgICAgICAgICAgICAgLi4uZmlsdGVyRGVsZXRlZEZpZWxkcyhwYXJzZUZpZWxkcyksXG4gICAgICAgICAgICAgIC4uLm9wdGltaXplZE9iamVjdCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5oYW5kbGVFcnJvcihlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmIChcbiAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5hZGRHcmFwaFFMVHlwZShjcmVhdGVHcmFwaFFMTXV0YXRpb24uYXJncy5pbnB1dC50eXBlLm9mVHlwZSkgJiZcbiAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5hZGRHcmFwaFFMVHlwZShjcmVhdGVHcmFwaFFMTXV0YXRpb24udHlwZSlcbiAgICApIHtcbiAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5hZGRHcmFwaFFMTXV0YXRpb24oY3JlYXRlR3JhcGhRTE11dGF0aW9uTmFtZSwgY3JlYXRlR3JhcGhRTE11dGF0aW9uKTtcbiAgICB9XG4gIH1cblxuICBpZiAoaXNVcGRhdGVFbmFibGVkKSB7XG4gICAgY29uc3QgdXBkYXRlR3JhcGhRTE11dGF0aW9uTmFtZSA9IHVwZGF0ZUFsaWFzIHx8IGB1cGRhdGUke2dyYXBoUUxDbGFzc05hbWV9YDtcbiAgICBjb25zdCB1cGRhdGVHcmFwaFFMTXV0YXRpb24gPSBtdXRhdGlvbldpdGhDbGllbnRNdXRhdGlvbklkKHtcbiAgICAgIG5hbWU6IGBVcGRhdGUke2dyYXBoUUxDbGFzc05hbWV9YCxcbiAgICAgIGRlc2NyaXB0aW9uOiBgVGhlICR7dXBkYXRlR3JhcGhRTE11dGF0aW9uTmFtZX0gbXV0YXRpb24gY2FuIGJlIHVzZWQgdG8gdXBkYXRlIGFuIG9iamVjdCBvZiB0aGUgJHtncmFwaFFMQ2xhc3NOYW1lfSBjbGFzcy5gLFxuICAgICAgaW5wdXRGaWVsZHM6IHtcbiAgICAgICAgaWQ6IGRlZmF1bHRHcmFwaFFMVHlwZXMuR0xPQkFMX09SX09CSkVDVF9JRF9BVFQsXG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlc2UgYXJlIHRoZSBmaWVsZHMgdGhhdCB3aWxsIGJlIHVzZWQgdG8gdXBkYXRlIHRoZSBvYmplY3QuJyxcbiAgICAgICAgICB0eXBlOiBjbGFzc0dyYXBoUUxVcGRhdGVUeXBlIHx8IGRlZmF1bHRHcmFwaFFMVHlwZXMuT0JKRUNULFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIG91dHB1dEZpZWxkczoge1xuICAgICAgICBbZ2V0R3JhcGhRTFF1ZXJ5TmFtZV06IHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIHVwZGF0ZWQgb2JqZWN0LicsXG4gICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKGNsYXNzR3JhcGhRTE91dHB1dFR5cGUgfHwgZGVmYXVsdEdyYXBoUUxUeXBlcy5PQkpFQ1QpLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIG11dGF0ZUFuZEdldFBheWxvYWQ6IGFzeW5jIChhcmdzLCBjb250ZXh0LCBtdXRhdGlvbkluZm8pID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBsZXQgeyBpZCwgZmllbGRzIH0gPSBkZWVwY29weShhcmdzKTtcbiAgICAgICAgICBpZiAoIWZpZWxkcykgZmllbGRzID0ge307XG4gICAgICAgICAgY29uc3QgeyBjb25maWcsIGF1dGgsIGluZm8gfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgICBjb25zdCBnbG9iYWxJZE9iamVjdCA9IGZyb21HbG9iYWxJZChpZCk7XG5cbiAgICAgICAgICBpZiAoZ2xvYmFsSWRPYmplY3QudHlwZSA9PT0gY2xhc3NOYW1lKSB7XG4gICAgICAgICAgICBpZCA9IGdsb2JhbElkT2JqZWN0LmlkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHBhcnNlRmllbGRzID0gYXdhaXQgdHJhbnNmb3JtVHlwZXMoJ3VwZGF0ZScsIGZpZWxkcywge1xuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLFxuICAgICAgICAgICAgcmVxOiB7IGNvbmZpZywgYXV0aCwgaW5mbyB9LFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgY29uc3QgdXBkYXRlZE9iamVjdCA9IGF3YWl0IG9iamVjdHNNdXRhdGlvbnMudXBkYXRlT2JqZWN0KFxuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICBwYXJzZUZpZWxkcyxcbiAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgIGF1dGgsXG4gICAgICAgICAgICBpbmZvXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkRmllbGRzID0gZ2V0RmllbGROYW1lcyhtdXRhdGlvbkluZm8pXG4gICAgICAgICAgICAuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnN0YXJ0c1dpdGgoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCkpXG4gICAgICAgICAgICAubWFwKGZpZWxkID0+IGZpZWxkLnJlcGxhY2UoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCwgJycpKTtcbiAgICAgICAgICBjb25zdCB7IGtleXMsIGluY2x1ZGUgfSA9IGV4dHJhY3RLZXlzQW5kSW5jbHVkZShzZWxlY3RlZEZpZWxkcyk7XG4gICAgICAgICAgY29uc3QgeyBrZXlzOiByZXF1aXJlZEtleXMsIG5lZWRHZXQgfSA9IGdldE9ubHlSZXF1aXJlZEZpZWxkcyhmaWVsZHMsIGtleXMsIGluY2x1ZGUsIFtcbiAgICAgICAgICAgICdpZCcsXG4gICAgICAgICAgICAnb2JqZWN0SWQnLFxuICAgICAgICAgICAgJ3VwZGF0ZWRBdCcsXG4gICAgICAgICAgXSk7XG4gICAgICAgICAgY29uc3QgbmVlZFRvR2V0QWxsS2V5cyA9IG9iamVjdHNRdWVyaWVzLm5lZWRUb0dldEFsbEtleXMoXG4gICAgICAgICAgICBwYXJzZUNsYXNzLmZpZWxkcyxcbiAgICAgICAgICAgIGtleXMsXG4gICAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEucGFyc2VDbGFzc2VzXG4gICAgICAgICAgKTtcbiAgICAgICAgICBsZXQgb3B0aW1pemVkT2JqZWN0ID0ge307XG4gICAgICAgICAgaWYgKG5lZWRHZXQgJiYgIW5lZWRUb0dldEFsbEtleXMpIHtcbiAgICAgICAgICAgIG9wdGltaXplZE9iamVjdCA9IGF3YWl0IG9iamVjdHNRdWVyaWVzLmdldE9iamVjdChcbiAgICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAgcmVxdWlyZWRLZXlzLFxuICAgICAgICAgICAgICBpbmNsdWRlLFxuICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICBhdXRoLFxuICAgICAgICAgICAgICBpbmZvLFxuICAgICAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEucGFyc2VDbGFzc2VzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSBpZiAobmVlZFRvR2V0QWxsS2V5cykge1xuICAgICAgICAgICAgb3B0aW1pemVkT2JqZWN0ID0gYXdhaXQgb2JqZWN0c1F1ZXJpZXMuZ2V0T2JqZWN0KFxuICAgICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIGluY2x1ZGUsXG4gICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgIGF1dGgsXG4gICAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICAgIHBhcnNlR3JhcGhRTFNjaGVtYS5wYXJzZUNsYXNzZXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBbZ2V0R3JhcGhRTFF1ZXJ5TmFtZV06IHtcbiAgICAgICAgICAgICAgb2JqZWN0SWQ6IGlkLFxuICAgICAgICAgICAgICAuLi51cGRhdGVkT2JqZWN0LFxuICAgICAgICAgICAgICAuLi5maWx0ZXJEZWxldGVkRmllbGRzKHBhcnNlRmllbGRzKSxcbiAgICAgICAgICAgICAgLi4ub3B0aW1pemVkT2JqZWN0LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLmhhbmRsZUVycm9yKGUpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKFxuICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLmFkZEdyYXBoUUxUeXBlKHVwZGF0ZUdyYXBoUUxNdXRhdGlvbi5hcmdzLmlucHV0LnR5cGUub2ZUeXBlKSAmJlxuICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLmFkZEdyYXBoUUxUeXBlKHVwZGF0ZUdyYXBoUUxNdXRhdGlvbi50eXBlKVxuICAgICkge1xuICAgICAgcGFyc2VHcmFwaFFMU2NoZW1hLmFkZEdyYXBoUUxNdXRhdGlvbih1cGRhdGVHcmFwaFFMTXV0YXRpb25OYW1lLCB1cGRhdGVHcmFwaFFMTXV0YXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGlmIChpc0Rlc3Ryb3lFbmFibGVkKSB7XG4gICAgY29uc3QgZGVsZXRlR3JhcGhRTE11dGF0aW9uTmFtZSA9IGRlc3Ryb3lBbGlhcyB8fCBgZGVsZXRlJHtncmFwaFFMQ2xhc3NOYW1lfWA7XG4gICAgY29uc3QgZGVsZXRlR3JhcGhRTE11dGF0aW9uID0gbXV0YXRpb25XaXRoQ2xpZW50TXV0YXRpb25JZCh7XG4gICAgICBuYW1lOiBgRGVsZXRlJHtncmFwaFFMQ2xhc3NOYW1lfWAsXG4gICAgICBkZXNjcmlwdGlvbjogYFRoZSAke2RlbGV0ZUdyYXBoUUxNdXRhdGlvbk5hbWV9IG11dGF0aW9uIGNhbiBiZSB1c2VkIHRvIGRlbGV0ZSBhbiBvYmplY3Qgb2YgdGhlICR7Z3JhcGhRTENsYXNzTmFtZX0gY2xhc3MuYCxcbiAgICAgIGlucHV0RmllbGRzOiB7XG4gICAgICAgIGlkOiBkZWZhdWx0R3JhcGhRTFR5cGVzLkdMT0JBTF9PUl9PQkpFQ1RfSURfQVRULFxuICAgICAgfSxcbiAgICAgIG91dHB1dEZpZWxkczoge1xuICAgICAgICBbZ2V0R3JhcGhRTFF1ZXJ5TmFtZV06IHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlbGV0ZWQgb2JqZWN0LicsXG4gICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKGNsYXNzR3JhcGhRTE91dHB1dFR5cGUgfHwgZGVmYXVsdEdyYXBoUUxUeXBlcy5PQkpFQ1QpLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIG11dGF0ZUFuZEdldFBheWxvYWQ6IGFzeW5jIChhcmdzLCBjb250ZXh0LCBtdXRhdGlvbkluZm8pID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBsZXQgeyBpZCB9ID0gZGVlcGNvcHkoYXJncyk7XG4gICAgICAgICAgY29uc3QgeyBjb25maWcsIGF1dGgsIGluZm8gfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgICBjb25zdCBnbG9iYWxJZE9iamVjdCA9IGZyb21HbG9iYWxJZChpZCk7XG5cbiAgICAgICAgICBpZiAoZ2xvYmFsSWRPYmplY3QudHlwZSA9PT0gY2xhc3NOYW1lKSB7XG4gICAgICAgICAgICBpZCA9IGdsb2JhbElkT2JqZWN0LmlkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkRmllbGRzID0gZ2V0RmllbGROYW1lcyhtdXRhdGlvbkluZm8pXG4gICAgICAgICAgICAuZmlsdGVyKGZpZWxkID0+IGZpZWxkLnN0YXJ0c1dpdGgoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCkpXG4gICAgICAgICAgICAubWFwKGZpZWxkID0+IGZpZWxkLnJlcGxhY2UoYCR7Z2V0R3JhcGhRTFF1ZXJ5TmFtZX0uYCwgJycpKTtcbiAgICAgICAgICBjb25zdCB7IGtleXMsIGluY2x1ZGUgfSA9IGV4dHJhY3RLZXlzQW5kSW5jbHVkZShzZWxlY3RlZEZpZWxkcyk7XG4gICAgICAgICAgbGV0IG9wdGltaXplZE9iamVjdCA9IHt9O1xuICAgICAgICAgIGlmIChrZXlzICYmIGtleXMuc3BsaXQoJywnKS5maWx0ZXIoa2V5ID0+ICFbJ2lkJywgJ29iamVjdElkJ10uaW5jbHVkZXMoa2V5KSkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgb3B0aW1pemVkT2JqZWN0ID0gYXdhaXQgb2JqZWN0c1F1ZXJpZXMuZ2V0T2JqZWN0KFxuICAgICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgICBrZXlzLFxuICAgICAgICAgICAgICBpbmNsdWRlLFxuICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICBhdXRoLFxuICAgICAgICAgICAgICBpbmZvLFxuICAgICAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEucGFyc2VDbGFzc2VzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhd2FpdCBvYmplY3RzTXV0YXRpb25zLmRlbGV0ZU9iamVjdChjbGFzc05hbWUsIGlkLCBjb25maWcsIGF1dGgsIGluZm8pO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBbZ2V0R3JhcGhRTFF1ZXJ5TmFtZV06IHtcbiAgICAgICAgICAgICAgb2JqZWN0SWQ6IGlkLFxuICAgICAgICAgICAgICAuLi5vcHRpbWl6ZWRPYmplY3QsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH07XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuaGFuZGxlRXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBpZiAoXG4gICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuYWRkR3JhcGhRTFR5cGUoZGVsZXRlR3JhcGhRTE11dGF0aW9uLmFyZ3MuaW5wdXQudHlwZS5vZlR5cGUpICYmXG4gICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuYWRkR3JhcGhRTFR5cGUoZGVsZXRlR3JhcGhRTE11dGF0aW9uLnR5cGUpXG4gICAgKSB7XG4gICAgICBwYXJzZUdyYXBoUUxTY2hlbWEuYWRkR3JhcGhRTE11dGF0aW9uKGRlbGV0ZUdyYXBoUUxNdXRhdGlvbk5hbWUsIGRlbGV0ZUdyYXBoUUxNdXRhdGlvbik7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgeyBsb2FkIH07XG4iXX0=