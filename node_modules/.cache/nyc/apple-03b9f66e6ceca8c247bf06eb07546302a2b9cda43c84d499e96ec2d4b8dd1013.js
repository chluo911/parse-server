"use strict";// Apple SignIn Auth
// https://developer.apple.com/documentation/signinwithapplerestapi
function cov_2r4avrgpn4(){var path="/parse-server/lib/Adapters/Auth/apple.js";var hash="dd608da5b40692daff5849f76c7e1f02a22ed664";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/apple.js",statementMap:{"0":{start:{line:5,column:14},end:{line:5,column:41}},"1":{start:{line:7,column:19},end:{line:7,column:38}},"2":{start:{line:9,column:13},end:{line:9,column:28}},"3":{start:{line:11,column:12},end:{line:11,column:35}},"4":{start:{line:13,column:21},end:{line:13,column:48}},"5":{start:{line:15,column:27},end:{line:32,column:1}},"6":{start:{line:16,column:17},end:{line:21,column:4}},"7":{start:{line:22,column:37},end:{line:22,column:73}},"8":{start:{line:25,column:2},end:{line:29,column:3}},"9":{start:{line:26,column:4},end:{line:26,column:50}},"10":{start:{line:28,column:4},end:{line:28,column:108}},"11":{start:{line:31,column:2},end:{line:31,column:13}},"12":{start:{line:34,column:27},end:{line:44,column:1}},"13":{start:{line:35,column:23},end:{line:37,column:4}},"14":{start:{line:39,column:2},end:{line:41,column:3}},"15":{start:{line:40,column:4},end:{line:40,column:97}},"16":{start:{line:43,column:2},end:{line:43,column:29}},"17":{start:{line:46,column:22},end:{line:89,column:1}},"18":{start:{line:54,column:2},end:{line:56,column:3}},"19":{start:{line:55,column:4},end:{line:55,column:94}},"20":{start:{line:61,column:6},end:{line:61,column:31}},"21":{start:{line:62,column:25},end:{line:62,column:32}},"22":{start:{line:64,column:2},end:{line:64,column:46}},"23":{start:{line:65,column:2},end:{line:65,column:41}},"24":{start:{line:66,column:19},end:{line:66,column:80}},"25":{start:{line:67,column:21},end:{line:67,column:64}},"26":{start:{line:69,column:2},end:{line:78,column:3}},"27":{start:{line:70,column:4},end:{line:74,column:7}},"28":{start:{line:76,column:20},end:{line:76,column:37}},"29":{start:{line:77,column:4},end:{line:77,column:70}},"30":{start:{line:80,column:2},end:{line:82,column:3}},"31":{start:{line:81,column:4},end:{line:81,column:159}},"32":{start:{line:84,column:2},end:{line:86,column:3}},"33":{start:{line:85,column:4},end:{line:85,column:95}},"34":{start:{line:88,column:2},end:{line:88,column:19}},"35":{start:{line:93,column:2},end:{line:93,column:42}},"36":{start:{line:98,column:2},end:{line:98,column:27}},"37":{start:{line:101,column:0},end:{line:104,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:27},end:{line:15,column:28}},loc:{start:{line:15,column:74},end:{line:32,column:1}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:27},end:{line:34,column:28}},loc:{start:{line:34,column:36},end:{line:44,column:1}},line:34},"2":{name:"(anonymous_2)",decl:{start:{line:46,column:22},end:{line:46,column:23}},loc:{start:{line:53,column:6},end:{line:89,column:1}},line:53},"3":{name:"validateAuthData",decl:{start:{line:92,column:9},end:{line:92,column:25}},loc:{start:{line:92,column:50},end:{line:94,column:1}},line:92},"4":{name:"validateAppId",decl:{start:{line:97,column:9},end:{line:97,column:22}},loc:{start:{line:97,column:25},end:{line:99,column:1}},line:97}},branchMap:{"0":{loc:{start:{line:39,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:39,column:2},end:{line:41,column:3}},{start:{line:39,column:2},end:{line:41,column:3}}],line:39},"1":{loc:{start:{line:54,column:2},end:{line:56,column:3}},type:"if",locations:[{start:{line:54,column:2},end:{line:56,column:3}},{start:{line:54,column:2},end:{line:56,column:3}}],line:54},"2":{loc:{start:{line:64,column:16},end:{line:64,column:45}},type:"binary-expr",locations:[{start:{line:64,column:16},end:{line:64,column:27}},{start:{line:64,column:31},end:{line:64,column:45}}],line:64},"3":{loc:{start:{line:65,column:20},end:{line:65,column:40}},type:"binary-expr",locations:[{start:{line:65,column:20},end:{line:65,column:35}},{start:{line:65,column:39},end:{line:65,column:40}}],line:65},"4":{loc:{start:{line:67,column:21},end:{line:67,column:64}},type:"binary-expr",locations:[{start:{line:67,column:21},end:{line:67,column:39}},{start:{line:67,column:43},end:{line:67,column:64}}],line:67},"5":{loc:{start:{line:80,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:80,column:2},end:{line:82,column:3}},{start:{line:80,column:2},end:{line:82,column:3}}],line:80},"6":{loc:{start:{line:84,column:2},end:{line:86,column:3}},type:"if",locations:[{start:{line:84,column:2},end:{line:86,column:3}},{start:{line:84,column:2},end:{line:86,column:3}}],line:84},"7":{loc:{start:{line:92,column:36},end:{line:92,column:48}},type:"default-arg",locations:[{start:{line:92,column:46},end:{line:92,column:48}}],line:92}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/apple.js"],names:["Parse","require","jwksClient","util","jwt","TOKEN_ISSUER","getAppleKeyByKeyId","keyId","cacheMaxEntries","cacheMaxAge","client","jwksUri","cache","asyncGetSigningKeyFunction","promisify","getSigningKey","key","error","Error","OBJECT_NOT_FOUND","getHeaderFromToken","token","decodedToken","decode","complete","header","verifyIdToken","id","clientId","kid","alg","algorithm","ONE_HOUR_IN_MS","jwtClaims","appleKey","signingKey","publicKey","rsaPublicKey","verify","algorithms","audience","exception","message","iss","sub","validateAuthData","authData","options","validateAppId","Promise","resolve","module","exports"],mappings:"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",sourcesContent:["// Apple SignIn Auth\n// https://developer.apple.com/documentation/signinwithapplerestapi\n\nconst Parse = require('parse/node').Parse;\nconst jwksClient = require('jwks-rsa');\nconst util = require('util');\nconst jwt = require('jsonwebtoken');\n\nconst TOKEN_ISSUER = 'https://appleid.apple.com';\n\nconst getAppleKeyByKeyId = async (keyId, cacheMaxEntries, cacheMaxAge) => {\n  const client = jwksClient({\n    jwksUri: `${TOKEN_ISSUER}/auth/keys`,\n    cache: true,\n    cacheMaxEntries,\n    cacheMaxAge,\n  });\n\n  const asyncGetSigningKeyFunction = util.promisify(client.getSigningKey);\n\n  let key;\n  try {\n    key = await asyncGetSigningKeyFunction(keyId);\n  } catch (error) {\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      `Unable to find matching key for Key ID: ${keyId}`\n    );\n  }\n  return key;\n};\n\nconst getHeaderFromToken = token => {\n  const decodedToken = jwt.decode(token, { complete: true });\n  if (!decodedToken) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `provided token does not decode as JWT`);\n  }\n\n  return decodedToken.header;\n};\n\nconst verifyIdToken = async ({ token, id }, { clientId, cacheMaxEntries, cacheMaxAge }) => {\n  if (!token) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `id token is invalid for this user.`);\n  }\n\n  const { kid: keyId, alg: algorithm } = getHeaderFromToken(token);\n  const ONE_HOUR_IN_MS = 3600000;\n  let jwtClaims;\n\n  cacheMaxAge = cacheMaxAge || ONE_HOUR_IN_MS;\n  cacheMaxEntries = cacheMaxEntries || 5;\n\n  const appleKey = await getAppleKeyByKeyId(keyId, cacheMaxEntries, cacheMaxAge);\n  const signingKey = appleKey.publicKey || appleKey.rsaPublicKey;\n\n  try {\n    jwtClaims = jwt.verify(token, signingKey, {\n      algorithms: algorithm,\n      // the audience can be checked against a string, a regular expression or a list of strings and/or regular expressions.\n      audience: clientId,\n    });\n  } catch (exception) {\n    const message = exception.message;\n\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `${message}`);\n  }\n\n  if (jwtClaims.iss !== TOKEN_ISSUER) {\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      `id token not issued by correct OpenID provider - expected: ${TOKEN_ISSUER} | from: ${jwtClaims.iss}`\n    );\n  }\n\n  if (jwtClaims.sub !== id) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `auth data is invalid for this user.`);\n  }\n  return jwtClaims;\n};\n\n// Returns a promise that fulfills if this id token is valid\nfunction validateAuthData(authData, options = {}) {\n  return verifyIdToken(authData, options);\n}\n\n// Returns a promise that fulfills if this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  validateAppId,\n  validateAuthData,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dd608da5b40692daff5849f76c7e1f02a22ed664"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2r4avrgpn4=function(){return actualCoverage;};}return actualCoverage;}cov_2r4avrgpn4();const Parse=(cov_2r4avrgpn4().s[0]++,require('parse/node').Parse);const jwksClient=(cov_2r4avrgpn4().s[1]++,require('jwks-rsa'));const util=(cov_2r4avrgpn4().s[2]++,require('util'));const jwt=(cov_2r4avrgpn4().s[3]++,require('jsonwebtoken'));const TOKEN_ISSUER=(cov_2r4avrgpn4().s[4]++,'https://appleid.apple.com');cov_2r4avrgpn4().s[5]++;const getAppleKeyByKeyId=async(keyId,cacheMaxEntries,cacheMaxAge)=>{cov_2r4avrgpn4().f[0]++;const client=(cov_2r4avrgpn4().s[6]++,jwksClient({jwksUri:`${TOKEN_ISSUER}/auth/keys`,cache:true,cacheMaxEntries,cacheMaxAge}));const asyncGetSigningKeyFunction=(cov_2r4avrgpn4().s[7]++,util.promisify(client.getSigningKey));let key;cov_2r4avrgpn4().s[8]++;try{cov_2r4avrgpn4().s[9]++;key=await asyncGetSigningKeyFunction(keyId);}catch(error){cov_2r4avrgpn4().s[10]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`Unable to find matching key for Key ID: ${keyId}`);}cov_2r4avrgpn4().s[11]++;return key;};cov_2r4avrgpn4().s[12]++;const getHeaderFromToken=token=>{cov_2r4avrgpn4().f[1]++;const decodedToken=(cov_2r4avrgpn4().s[13]++,jwt.decode(token,{complete:true}));cov_2r4avrgpn4().s[14]++;if(!decodedToken){cov_2r4avrgpn4().b[0][0]++;cov_2r4avrgpn4().s[15]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`provided token does not decode as JWT`);}else{cov_2r4avrgpn4().b[0][1]++;}cov_2r4avrgpn4().s[16]++;return decodedToken.header;};cov_2r4avrgpn4().s[17]++;const verifyIdToken=async({token,id},{clientId,cacheMaxEntries,cacheMaxAge})=>{cov_2r4avrgpn4().f[2]++;cov_2r4avrgpn4().s[18]++;if(!token){cov_2r4avrgpn4().b[1][0]++;cov_2r4avrgpn4().s[19]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`id token is invalid for this user.`);}else{cov_2r4avrgpn4().b[1][1]++;}const{kid:keyId,alg:algorithm}=(cov_2r4avrgpn4().s[20]++,getHeaderFromToken(token));const ONE_HOUR_IN_MS=(cov_2r4avrgpn4().s[21]++,3600000);let jwtClaims;cov_2r4avrgpn4().s[22]++;cacheMaxAge=(cov_2r4avrgpn4().b[2][0]++,cacheMaxAge)||(cov_2r4avrgpn4().b[2][1]++,ONE_HOUR_IN_MS);cov_2r4avrgpn4().s[23]++;cacheMaxEntries=(cov_2r4avrgpn4().b[3][0]++,cacheMaxEntries)||(cov_2r4avrgpn4().b[3][1]++,5);const appleKey=(cov_2r4avrgpn4().s[24]++,await getAppleKeyByKeyId(keyId,cacheMaxEntries,cacheMaxAge));const signingKey=(cov_2r4avrgpn4().s[25]++,(cov_2r4avrgpn4().b[4][0]++,appleKey.publicKey)||(cov_2r4avrgpn4().b[4][1]++,appleKey.rsaPublicKey));cov_2r4avrgpn4().s[26]++;try{cov_2r4avrgpn4().s[27]++;jwtClaims=jwt.verify(token,signingKey,{algorithms:algorithm,// the audience can be checked against a string, a regular expression or a list of strings and/or regular expressions.
audience:clientId});}catch(exception){const message=(cov_2r4avrgpn4().s[28]++,exception.message);cov_2r4avrgpn4().s[29]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`${message}`);}cov_2r4avrgpn4().s[30]++;if(jwtClaims.iss!==TOKEN_ISSUER){cov_2r4avrgpn4().b[5][0]++;cov_2r4avrgpn4().s[31]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`id token not issued by correct OpenID provider - expected: ${TOKEN_ISSUER} | from: ${jwtClaims.iss}`);}else{cov_2r4avrgpn4().b[5][1]++;}cov_2r4avrgpn4().s[32]++;if(jwtClaims.sub!==id){cov_2r4avrgpn4().b[6][0]++;cov_2r4avrgpn4().s[33]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,`auth data is invalid for this user.`);}else{cov_2r4avrgpn4().b[6][1]++;}cov_2r4avrgpn4().s[34]++;return jwtClaims;};// Returns a promise that fulfills if this id token is valid
function validateAuthData(authData,options=(cov_2r4avrgpn4().b[7][0]++,{})){cov_2r4avrgpn4().f[3]++;cov_2r4avrgpn4().s[35]++;return verifyIdToken(authData,options);}// Returns a promise that fulfills if this app id is valid.
function validateAppId(){cov_2r4avrgpn4().f[4]++;cov_2r4avrgpn4().s[36]++;return Promise.resolve();}cov_2r4avrgpn4().s[37]++;module.exports={validateAppId,validateAuthData};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,