"use strict";// Helper functions for accessing the linkedin API.
function cov_wrfo5clna(){var path="/parse-server/lib/Adapters/Auth/linkedin.js";var hash="f389b8ffb732948c1d1774b69c36855bbe087b05";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/linkedin.js",statementMap:{"0":{start:{line:4,column:12},end:{line:4,column:39}},"1":{start:{line:6,column:21},end:{line:6,column:46}},"2":{start:{line:10,column:2},end:{line:16,column:5}},"3":{start:{line:11,column:4},end:{line:13,column:5}},"4":{start:{line:12,column:6},end:{line:12,column:13}},"5":{start:{line:15,column:4},end:{line:15,column:99}},"6":{start:{line:21,column:2},end:{line:21,column:27}},"7":{start:{line:26,column:16},end:{line:29,column:3}},"8":{start:{line:31,column:2},end:{line:33,column:3}},"9":{start:{line:32,column:4},end:{line:32,column:33}},"10":{start:{line:35,column:2},end:{line:39,column:5}},"11":{start:{line:42,column:0},end:{line:45,column:2}}},fnMap:{"0":{name:"validateAuthData",decl:{start:{line:9,column:9},end:{line:9,column:25}},loc:{start:{line:9,column:36},end:{line:17,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:75},end:{line:10,column:76}},loc:{start:{line:10,column:83},end:{line:16,column:3}},line:10},"2":{name:"validateAppId",decl:{start:{line:20,column:9},end:{line:20,column:22}},loc:{start:{line:20,column:25},end:{line:22,column:1}},line:20},"3":{name:"request",decl:{start:{line:25,column:9},end:{line:25,column:16}},loc:{start:{line:25,column:52},end:{line:40,column:1}},line:25}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:13,column:5}},{start:{line:11,column:4},end:{line:13,column:5}}],line:11},"1":{loc:{start:{line:11,column:8},end:{line:11,column:38}},type:"binary-expr",locations:[{start:{line:11,column:8},end:{line:11,column:12}},{start:{line:11,column:16},end:{line:11,column:38}}],line:11},"2":{loc:{start:{line:31,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:33,column:3}},{start:{line:31,column:2},end:{line:33,column:3}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/linkedin.js"],names:["Parse","require","httpsRequest","validateAuthData","authData","request","access_token","is_mobile_sdk","then","data","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","headers","Authorization","get","host","module","exports"],mappings:";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,OAAO,CAAC,IAAD,EAAOD,QAAQ,CAACE,YAAhB,EAA8BF,QAAQ,CAACG,aAAvC,CAAP,CAA6DC,IAA7D,CAAkEC,IAAI,IAAI;AAC/E,QAAIA,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWN,QAAQ,CAACM,EAAhC,EAAoC;AAClC;AACD;;AACD,UAAM,IAAIV,KAAK,CAACW,KAAV,CAAgBX,KAAK,CAACW,KAAN,CAAYC,gBAA5B,EAA8C,yCAA9C,CAAN;AACD,GALM,CAAP;AAMD,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,OAAO,CAACC,OAAR,EAAP;AACD,C,CAED;;;AACA,SAASV,OAAT,CAAiBW,IAAjB,EAAuBV,YAAvB,EAAqCC,aAArC,EAAoD;AAClD,MAAIU,OAAO,GAAG;AACZC,IAAAA,aAAa,EAAE,YAAYZ,YADf;AAEZ,mBAAe;AAFH,GAAd;;AAKA,MAAIC,aAAJ,EAAmB;AACjBU,IAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,MAAtB;AACD;;AACD,SAAOf,YAAY,CAACiB,GAAb,CAAiB;AACtBC,IAAAA,IAAI,EAAE,kBADgB;AAEtBJ,IAAAA,IAAI,EAAE,SAASA,IAFO;AAGtBC,IAAAA,OAAO,EAAEA;AAHa,GAAjB,CAAP;AAKD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,aAAa,EAAEA,aADA;AAEfV,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB",sourcesContent:["// Helper functions for accessing the linkedin API.\nvar Parse = require('parse/node').Parse;\nconst httpsRequest = require('./httpsRequest');\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData) {\n  return request('me', authData.access_token, authData.is_mobile_sdk).then(data => {\n    if (data && data.id == authData.id) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Linkedin auth is invalid for this user.');\n  });\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path, access_token, is_mobile_sdk) {\n  var headers = {\n    Authorization: 'Bearer ' + access_token,\n    'x-li-format': 'json',\n  };\n\n  if (is_mobile_sdk) {\n    headers['x-li-src'] = 'msdk';\n  }\n  return httpsRequest.get({\n    host: 'api.linkedin.com',\n    path: '/v2/' + path,\n    headers: headers,\n  });\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f389b8ffb732948c1d1774b69c36855bbe087b05"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_wrfo5clna=function(){return actualCoverage;};}return actualCoverage;}cov_wrfo5clna();var Parse=(cov_wrfo5clna().s[0]++,require('parse/node').Parse);const httpsRequest=(cov_wrfo5clna().s[1]++,require('./httpsRequest'));// Returns a promise that fulfills iff this user id is valid.
function validateAuthData(authData){cov_wrfo5clna().f[0]++;cov_wrfo5clna().s[2]++;return request('me',authData.access_token,authData.is_mobile_sdk).then(data=>{cov_wrfo5clna().f[1]++;cov_wrfo5clna().s[3]++;if((cov_wrfo5clna().b[1][0]++,data)&&(cov_wrfo5clna().b[1][1]++,data.id==authData.id)){cov_wrfo5clna().b[0][0]++;cov_wrfo5clna().s[4]++;return;}else{cov_wrfo5clna().b[0][1]++;}cov_wrfo5clna().s[5]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Linkedin auth is invalid for this user.');});}// Returns a promise that fulfills iff this app id is valid.
function validateAppId(){cov_wrfo5clna().f[2]++;cov_wrfo5clna().s[6]++;return Promise.resolve();}// A promisey wrapper for api requests
function request(path,access_token,is_mobile_sdk){cov_wrfo5clna().f[3]++;var headers=(cov_wrfo5clna().s[7]++,{Authorization:'Bearer '+access_token,'x-li-format':'json'});cov_wrfo5clna().s[8]++;if(is_mobile_sdk){cov_wrfo5clna().b[2][0]++;cov_wrfo5clna().s[9]++;headers['x-li-src']='msdk';}else{cov_wrfo5clna().b[2][1]++;}cov_wrfo5clna().s[10]++;return httpsRequest.get({host:'api.linkedin.com',path:'/v2/'+path,headers:headers});}cov_wrfo5clna().s[11]++;module.exports={validateAppId:validateAppId,validateAuthData:validateAuthData};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL2xpbmtlZGluLmpzIl0sIm5hbWVzIjpbIlBhcnNlIiwicmVxdWlyZSIsImh0dHBzUmVxdWVzdCIsInZhbGlkYXRlQXV0aERhdGEiLCJhdXRoRGF0YSIsInJlcXVlc3QiLCJhY2Nlc3NfdG9rZW4iLCJpc19tb2JpbGVfc2RrIiwidGhlbiIsImRhdGEiLCJpZCIsIkVycm9yIiwiT0JKRUNUX05PVF9GT1VORCIsInZhbGlkYXRlQXBwSWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInBhdGgiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImdldCIsImhvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCRCxLQUFsQzs7QUFDQSxNQUFNRSxZQUFZLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUE1QixDLENBRUE7OztBQUNBLFNBQVNFLGdCQUFULENBQTBCQyxRQUExQixFQUFvQztBQUNsQyxTQUFPQyxPQUFPLENBQUMsSUFBRCxFQUFPRCxRQUFRLENBQUNFLFlBQWhCLEVBQThCRixRQUFRLENBQUNHLGFBQXZDLENBQVAsQ0FBNkRDLElBQTdELENBQWtFQyxJQUFJLElBQUk7QUFDL0UsUUFBSUEsSUFBSSxJQUFJQSxJQUFJLENBQUNDLEVBQUwsSUFBV04sUUFBUSxDQUFDTSxFQUFoQyxFQUFvQztBQUNsQztBQUNEOztBQUNELFVBQU0sSUFBSVYsS0FBSyxDQUFDVyxLQUFWLENBQWdCWCxLQUFLLENBQUNXLEtBQU4sQ0FBWUMsZ0JBQTVCLEVBQThDLHlDQUE5QyxDQUFOO0FBQ0QsR0FMTSxDQUFQO0FBTUQsQyxDQUVEOzs7QUFDQSxTQUFTQyxhQUFULEdBQXlCO0FBQ3ZCLFNBQU9DLE9BQU8sQ0FBQ0MsT0FBUixFQUFQO0FBQ0QsQyxDQUVEOzs7QUFDQSxTQUFTVixPQUFULENBQWlCVyxJQUFqQixFQUF1QlYsWUFBdkIsRUFBcUNDLGFBQXJDLEVBQW9EO0FBQ2xELE1BQUlVLE9BQU8sR0FBRztBQUNaQyxJQUFBQSxhQUFhLEVBQUUsWUFBWVosWUFEZjtBQUVaLG1CQUFlO0FBRkgsR0FBZDs7QUFLQSxNQUFJQyxhQUFKLEVBQW1CO0FBQ2pCVSxJQUFBQSxPQUFPLENBQUMsVUFBRCxDQUFQLEdBQXNCLE1BQXRCO0FBQ0Q7O0FBQ0QsU0FBT2YsWUFBWSxDQUFDaUIsR0FBYixDQUFpQjtBQUN0QkMsSUFBQUEsSUFBSSxFQUFFLGtCQURnQjtBQUV0QkosSUFBQUEsSUFBSSxFQUFFLFNBQVNBLElBRk87QUFHdEJDLElBQUFBLE9BQU8sRUFBRUE7QUFIYSxHQUFqQixDQUFQO0FBS0Q7O0FBRURJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmVCxFQUFBQSxhQUFhLEVBQUVBLGFBREE7QUFFZlYsRUFBQUEsZ0JBQWdCLEVBQUVBO0FBRkgsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBIZWxwZXIgZnVuY3Rpb25zIGZvciBhY2Nlc3NpbmcgdGhlIGxpbmtlZGluIEFQSS5cbnZhciBQYXJzZSA9IHJlcXVpcmUoJ3BhcnNlL25vZGUnKS5QYXJzZTtcbmNvbnN0IGh0dHBzUmVxdWVzdCA9IHJlcXVpcmUoJy4vaHR0cHNSZXF1ZXN0Jyk7XG5cbi8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgaWZmIHRoaXMgdXNlciBpZCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXV0aERhdGEoYXV0aERhdGEpIHtcbiAgcmV0dXJuIHJlcXVlc3QoJ21lJywgYXV0aERhdGEuYWNjZXNzX3Rva2VuLCBhdXRoRGF0YS5pc19tb2JpbGVfc2RrKS50aGVuKGRhdGEgPT4ge1xuICAgIGlmIChkYXRhICYmIGRhdGEuaWQgPT0gYXV0aERhdGEuaWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFBhcnNlLkVycm9yKFBhcnNlLkVycm9yLk9CSkVDVF9OT1RfRk9VTkQsICdMaW5rZWRpbiBhdXRoIGlzIGludmFsaWQgZm9yIHRoaXMgdXNlci4nKTtcbiAgfSk7XG59XG5cbi8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgaWZmIHRoaXMgYXBwIGlkIGlzIHZhbGlkLlxuZnVuY3Rpb24gdmFsaWRhdGVBcHBJZCgpIHtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufVxuXG4vLyBBIHByb21pc2V5IHdyYXBwZXIgZm9yIGFwaSByZXF1ZXN0c1xuZnVuY3Rpb24gcmVxdWVzdChwYXRoLCBhY2Nlc3NfdG9rZW4sIGlzX21vYmlsZV9zZGspIHtcbiAgdmFyIGhlYWRlcnMgPSB7XG4gICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzX3Rva2VuLFxuICAgICd4LWxpLWZvcm1hdCc6ICdqc29uJyxcbiAgfTtcblxuICBpZiAoaXNfbW9iaWxlX3Nkaykge1xuICAgIGhlYWRlcnNbJ3gtbGktc3JjJ10gPSAnbXNkayc7XG4gIH1cbiAgcmV0dXJuIGh0dHBzUmVxdWVzdC5nZXQoe1xuICAgIGhvc3Q6ICdhcGkubGlua2VkaW4uY29tJyxcbiAgICBwYXRoOiAnL3YyLycgKyBwYXRoLFxuICAgIGhlYWRlcnM6IGhlYWRlcnMsXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmFsaWRhdGVBcHBJZDogdmFsaWRhdGVBcHBJZCxcbiAgdmFsaWRhdGVBdXRoRGF0YTogdmFsaWRhdGVBdXRoRGF0YSxcbn07XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL2xpbmtlZGluLmpzIl0sIm5hbWVzIjpbIlBhcnNlIiwicmVxdWlyZSIsImh0dHBzUmVxdWVzdCIsImF1dGhEYXRhIiwiZGF0YSIsIlByb21pc2UiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImhvc3QiLCJwYXRoIiwibW9kdWxlIiwidmFsaWRhdGVBcHBJZCIsInZhbGlkYXRlQXV0aERhdGEiXSwibWFwcGluZ3MiOiJhQUFBOzQySkFNRTt5RkFMRixHQUFJQSxDQUFBQSxLQUFLLHlCQUFHQyxPQUFPLENBQVBBLFlBQU8sQ0FBUEEsQ0FBWixLQUFTLENBQVQsQ0FDQSxLQUFNQyxDQUFBQSxZQUFZLHlCQUFHRCxPQUFPLENBQTVCLGdCQUE0QixDQUFWLENBQWxCLENBRUE7QUFDQSxRQUFBLENBQUEsZ0JBQUEsQ0FBQSxRQUFBLENBQW9DLCtDQUNsQyxNQUFPLENBQUEsT0FBTyxDQUFBLElBQUEsQ0FBT0UsUUFBUSxDQUFmLFlBQUEsQ0FBOEJBLFFBQVEsQ0FBN0MsYUFBTyxDQUFQLENBQUEsSUFBQSxDQUFrRUMsSUFBSSxFQUFJLCtDQUMvRSxHQUFJQSwyQkFBQUEsSUFBSSw4QkFBSUEsSUFBSSxDQUFKQSxFQUFBQSxFQUFXRCxRQUFRLENBQS9CLEVBQVEsQ0FBUixDQUFvQyxrREFDbEMsT0FDRCxDQUZELGdDQUQrRSx1QkFJL0UsS0FBTSxJQUFJSCxDQUFBQSxLQUFLLENBQVQsS0FBQSxDQUFnQkEsS0FBSyxDQUFMQSxLQUFBQSxDQUFoQixnQkFBQSxDQUFOLHlDQUFNLENBQU4sQ0FKRixDQUFPLENBQVAsQyxDQVFGO0FBQ0EsUUFBQSxDQUFBLGFBQUEsRUFBeUIsK0NBQ3ZCLE1BQU9LLENBQUFBLE9BQU8sQ0FBZCxPQUFPQSxFQUFQLEMsQ0FHRjtBQUNBLFFBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLFlBQUEsQ0FBQSxhQUFBLENBQW9ELHdCQUNsRCxHQUFJQyxDQUFBQSxPQUFPLHlCQUFHLENBQ1pDLGFBQWEsQ0FBRSxVQURILFlBQUEsQ0FFWixjQUFlLE1BRkgsQ0FBSCxDQUFYLENBRGtELHVCQU1sRCxHQUFBLGFBQUEsQ0FBbUIsa0RBQ2pCRCxPQUFPLENBQVBBLFVBQU8sQ0FBUEEsQ0FBQUEsTUFBQUEsQ0FDRCxDQUZELGdDQU5rRCx3QkFTbEQsTUFBTyxDQUFBLFlBQVksQ0FBWixHQUFBLENBQWlCLENBQ3RCRSxJQUFJLENBRGtCLGtCQUFBLENBRXRCQyxJQUFJLENBQUUsT0FGZ0IsSUFBQSxDQUd0QkgsT0FBTyxDQUFFQSxPQUhhLENBQWpCLENBQVAsQ0FLRCxDLHdCQUVESSxNQUFNLENBQU5BLE9BQUFBLENBQWlCLENBQ2ZDLGFBQWEsQ0FERSxhQUFBLENBRWZDLGdCQUFnQixDQUFFQSxnQkFGSCxDQUFqQkYsQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIGFjY2Vzc2luZyB0aGUgbGlua2VkaW4gQVBJLlxudmFyIFBhcnNlID0gcmVxdWlyZSgncGFyc2Uvbm9kZScpLlBhcnNlO1xuY29uc3QgaHR0cHNSZXF1ZXN0ID0gcmVxdWlyZSgnLi9odHRwc1JlcXVlc3QnKTtcblxuLy8gUmV0dXJucyBhIHByb21pc2UgdGhhdCBmdWxmaWxscyBpZmYgdGhpcyB1c2VyIGlkIGlzIHZhbGlkLlxuZnVuY3Rpb24gdmFsaWRhdGVBdXRoRGF0YShhdXRoRGF0YSkge1xuICByZXR1cm4gcmVxdWVzdCgnbWUnLCBhdXRoRGF0YS5hY2Nlc3NfdG9rZW4sIGF1dGhEYXRhLmlzX21vYmlsZV9zZGspLnRoZW4oZGF0YSA9PiB7XG4gICAgaWYgKGRhdGEgJiYgZGF0YS5pZCA9PSBhdXRoRGF0YS5pZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuT0JKRUNUX05PVF9GT1VORCwgJ0xpbmtlZGluIGF1dGggaXMgaW52YWxpZCBmb3IgdGhpcyB1c2VyLicpO1xuICB9KTtcbn1cblxuLy8gUmV0dXJucyBhIHByb21pc2UgdGhhdCBmdWxmaWxscyBpZmYgdGhpcyBhcHAgaWQgaXMgdmFsaWQuXG5mdW5jdGlvbiB2YWxpZGF0ZUFwcElkKCkge1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG59XG5cbi8vIEEgcHJvbWlzZXkgd3JhcHBlciBmb3IgYXBpIHJlcXVlc3RzXG5mdW5jdGlvbiByZXF1ZXN0KHBhdGgsIGFjY2Vzc190b2tlbiwgaXNfbW9iaWxlX3Nkaykge1xuICB2YXIgaGVhZGVycyA9IHtcbiAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBhY2Nlc3NfdG9rZW4sXG4gICAgJ3gtbGktZm9ybWF0JzogJ2pzb24nLFxuICB9O1xuXG4gIGlmIChpc19tb2JpbGVfc2RrKSB7XG4gICAgaGVhZGVyc1sneC1saS1zcmMnXSA9ICdtc2RrJztcbiAgfVxuICByZXR1cm4gaHR0cHNSZXF1ZXN0LmdldCh7XG4gICAgaG9zdDogJ2FwaS5saW5rZWRpbi5jb20nLFxuICAgIHBhdGg6ICcvdjIvJyArIHBhdGgsXG4gICAgaGVhZGVyczogaGVhZGVycyxcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB2YWxpZGF0ZUFwcElkOiB2YWxpZGF0ZUFwcElkLFxuICB2YWxpZGF0ZUF1dGhEYXRhOiB2YWxpZGF0ZUF1dGhEYXRhLFxufTtcbiJdfQ==