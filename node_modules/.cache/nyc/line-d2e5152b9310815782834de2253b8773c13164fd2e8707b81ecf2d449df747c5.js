"use strict";// Helper functions for accessing the line API.
function cov_45ix1m947(){var path="/parse-server/lib/Adapters/Auth/line.js";var hash="ca5b99a5ccb0430f918bccdadc9aae75ee0b5722";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/parse-server/lib/Adapters/Auth/line.js",statementMap:{"0":{start:{line:4,column:12},end:{line:4,column:39}},"1":{start:{line:6,column:21},end:{line:6,column:46}},"2":{start:{line:10,column:2},end:{line:16,column:5}},"3":{start:{line:11,column:4},end:{line:13,column:5}},"4":{start:{line:12,column:6},end:{line:12,column:13}},"5":{start:{line:15,column:4},end:{line:15,column:95}},"6":{start:{line:21,column:2},end:{line:21,column:27}},"7":{start:{line:26,column:16},end:{line:33,column:3}},"8":{start:{line:34,column:2},end:{line:34,column:35}},"9":{start:{line:37,column:0},end:{line:40,column:2}}},fnMap:{"0":{name:"validateAuthData",decl:{start:{line:9,column:9},end:{line:9,column:25}},loc:{start:{line:9,column:36},end:{line:17,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:56},end:{line:10,column:57}},loc:{start:{line:10,column:68},end:{line:16,column:3}},line:10},"2":{name:"validateAppId",decl:{start:{line:20,column:9},end:{line:20,column:22}},loc:{start:{line:20,column:25},end:{line:22,column:1}},line:20},"3":{name:"request",decl:{start:{line:25,column:9},end:{line:25,column:16}},loc:{start:{line:25,column:37},end:{line:35,column:1}},line:25}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:13,column:5}},{start:{line:11,column:4},end:{line:13,column:5}}],line:11},"1":{loc:{start:{line:11,column:8},end:{line:11,column:70}},type:"binary-expr",locations:[{start:{line:11,column:8},end:{line:11,column:16}},{start:{line:11,column:20},end:{line:11,column:35}},{start:{line:11,column:39},end:{line:11,column:70}}],line:11}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0,0]},inputSourceMap:{version:3,sources:["../../../src/Adapters/Auth/line.js"],names:["Parse","require","httpsRequest","validateAuthData","authData","request","access_token","then","response","userId","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","options","host","method","headers","Authorization","get","module","exports"],mappings:";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,OAAO,CAAC,SAAD,EAAYD,QAAQ,CAACE,YAArB,CAAP,CAA0CC,IAA1C,CAA+CC,QAAQ,IAAI;AAChE,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAArB,IAA+BD,QAAQ,CAACC,MAAT,KAAoBL,QAAQ,CAACM,EAAhE,EAAoE;AAClE;AACD;;AACD,UAAM,IAAIV,KAAK,CAACW,KAAV,CAAgBX,KAAK,CAACW,KAAN,CAAYC,gBAA5B,EAA8C,qCAA9C,CAAN;AACD,GALM,CAAP;AAMD,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,OAAO,CAACC,OAAR,EAAP;AACD,C,CAED;;;AACA,SAASV,OAAT,CAAiBW,IAAjB,EAAuBV,YAAvB,EAAqC;AACnC,MAAIW,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,aADM;AAEZF,IAAAA,IAAI,EAAE,SAASA,IAFH;AAGZG,IAAAA,MAAM,EAAE,KAHI;AAIZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYf;AADpB;AAJG,GAAd;AAQA,SAAOJ,YAAY,CAACoB,GAAb,CAAiBL,OAAjB,CAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,aAAa,EAAEA,aADA;AAEfV,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB",sourcesContent:["// Helper functions for accessing the line API.\nvar Parse = require('parse/node').Parse;\nconst httpsRequest = require('./httpsRequest');\n\n// Returns a promise that fulfills if this user id is valid.\nfunction validateAuthData(authData) {\n  return request('profile', authData.access_token).then(response => {\n    if (response && response.userId && response.userId === authData.id) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Line auth is invalid for this user.');\n  });\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path, access_token) {\n  var options = {\n    host: 'api.line.me',\n    path: '/v2/' + path,\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + access_token,\n    },\n  };\n  return httpsRequest.get(options);\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ca5b99a5ccb0430f918bccdadc9aae75ee0b5722"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_45ix1m947=function(){return actualCoverage;};}return actualCoverage;}cov_45ix1m947();var Parse=(cov_45ix1m947().s[0]++,require('parse/node').Parse);const httpsRequest=(cov_45ix1m947().s[1]++,require('./httpsRequest'));// Returns a promise that fulfills if this user id is valid.
function validateAuthData(authData){cov_45ix1m947().f[0]++;cov_45ix1m947().s[2]++;return request('profile',authData.access_token).then(response=>{cov_45ix1m947().f[1]++;cov_45ix1m947().s[3]++;if((cov_45ix1m947().b[1][0]++,response)&&(cov_45ix1m947().b[1][1]++,response.userId)&&(cov_45ix1m947().b[1][2]++,response.userId===authData.id)){cov_45ix1m947().b[0][0]++;cov_45ix1m947().s[4]++;return;}else{cov_45ix1m947().b[0][1]++;}cov_45ix1m947().s[5]++;throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,'Line auth is invalid for this user.');});}// Returns a promise that fulfills iff this app id is valid.
function validateAppId(){cov_45ix1m947().f[2]++;cov_45ix1m947().s[6]++;return Promise.resolve();}// A promisey wrapper for api requests
function request(path,access_token){cov_45ix1m947().f[3]++;var options=(cov_45ix1m947().s[7]++,{host:'api.line.me',path:'/v2/'+path,method:'GET',headers:{Authorization:'Bearer '+access_token}});cov_45ix1m947().s[8]++;return httpsRequest.get(options);}cov_45ix1m947().s[9]++;module.exports={validateAppId:validateAppId,validateAuthData:validateAuthData};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL2xpbmUuanMiXSwibmFtZXMiOlsiUGFyc2UiLCJyZXF1aXJlIiwiaHR0cHNSZXF1ZXN0IiwidmFsaWRhdGVBdXRoRGF0YSIsImF1dGhEYXRhIiwicmVxdWVzdCIsImFjY2Vzc190b2tlbiIsInRoZW4iLCJyZXNwb25zZSIsInVzZXJJZCIsImlkIiwiRXJyb3IiLCJPQkpFQ1RfTk9UX0ZPVU5EIiwidmFsaWRhdGVBcHBJZCIsIlByb21pc2UiLCJyZXNvbHZlIiwicGF0aCIsIm9wdGlvbnMiLCJob3N0IiwibWV0aG9kIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJnZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCRCxLQUFsQzs7QUFDQSxNQUFNRSxZQUFZLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUE1QixDLENBRUE7OztBQUNBLFNBQVNFLGdCQUFULENBQTBCQyxRQUExQixFQUFvQztBQUNsQyxTQUFPQyxPQUFPLENBQUMsU0FBRCxFQUFZRCxRQUFRLENBQUNFLFlBQXJCLENBQVAsQ0FBMENDLElBQTFDLENBQStDQyxRQUFRLElBQUk7QUFDaEUsUUFBSUEsUUFBUSxJQUFJQSxRQUFRLENBQUNDLE1BQXJCLElBQStCRCxRQUFRLENBQUNDLE1BQVQsS0FBb0JMLFFBQVEsQ0FBQ00sRUFBaEUsRUFBb0U7QUFDbEU7QUFDRDs7QUFDRCxVQUFNLElBQUlWLEtBQUssQ0FBQ1csS0FBVixDQUFnQlgsS0FBSyxDQUFDVyxLQUFOLENBQVlDLGdCQUE1QixFQUE4QyxxQ0FBOUMsQ0FBTjtBQUNELEdBTE0sQ0FBUDtBQU1ELEMsQ0FFRDs7O0FBQ0EsU0FBU0MsYUFBVCxHQUF5QjtBQUN2QixTQUFPQyxPQUFPLENBQUNDLE9BQVIsRUFBUDtBQUNELEMsQ0FFRDs7O0FBQ0EsU0FBU1YsT0FBVCxDQUFpQlcsSUFBakIsRUFBdUJWLFlBQXZCLEVBQXFDO0FBQ25DLE1BQUlXLE9BQU8sR0FBRztBQUNaQyxJQUFBQSxJQUFJLEVBQUUsYUFETTtBQUVaRixJQUFBQSxJQUFJLEVBQUUsU0FBU0EsSUFGSDtBQUdaRyxJQUFBQSxNQUFNLEVBQUUsS0FISTtBQUlaQyxJQUFBQSxPQUFPLEVBQUU7QUFDUEMsTUFBQUEsYUFBYSxFQUFFLFlBQVlmO0FBRHBCO0FBSkcsR0FBZDtBQVFBLFNBQU9KLFlBQVksQ0FBQ29CLEdBQWIsQ0FBaUJMLE9BQWpCLENBQVA7QUFDRDs7QUFFRE0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZYLEVBQUFBLGFBQWEsRUFBRUEsYUFEQTtBQUVmVixFQUFBQSxnQkFBZ0IsRUFBRUE7QUFGSCxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIGFjY2Vzc2luZyB0aGUgbGluZSBBUEkuXG52YXIgUGFyc2UgPSByZXF1aXJlKCdwYXJzZS9ub2RlJykuUGFyc2U7XG5jb25zdCBodHRwc1JlcXVlc3QgPSByZXF1aXJlKCcuL2h0dHBzUmVxdWVzdCcpO1xuXG4vLyBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGZ1bGZpbGxzIGlmIHRoaXMgdXNlciBpZCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXV0aERhdGEoYXV0aERhdGEpIHtcbiAgcmV0dXJuIHJlcXVlc3QoJ3Byb2ZpbGUnLCBhdXRoRGF0YS5hY2Nlc3NfdG9rZW4pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS51c2VySWQgJiYgcmVzcG9uc2UudXNlcklkID09PSBhdXRoRGF0YS5pZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgUGFyc2UuRXJyb3IoUGFyc2UuRXJyb3IuT0JKRUNUX05PVF9GT1VORCwgJ0xpbmUgYXV0aCBpcyBpbnZhbGlkIGZvciB0aGlzIHVzZXIuJyk7XG4gIH0pO1xufVxuXG4vLyBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IGZ1bGZpbGxzIGlmZiB0aGlzIGFwcCBpZCBpcyB2YWxpZC5cbmZ1bmN0aW9uIHZhbGlkYXRlQXBwSWQoKSB7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbn1cblxuLy8gQSBwcm9taXNleSB3cmFwcGVyIGZvciBhcGkgcmVxdWVzdHNcbmZ1bmN0aW9uIHJlcXVlc3QocGF0aCwgYWNjZXNzX3Rva2VuKSB7XG4gIHZhciBvcHRpb25zID0ge1xuICAgIGhvc3Q6ICdhcGkubGluZS5tZScsXG4gICAgcGF0aDogJy92Mi8nICsgcGF0aCxcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGFjY2Vzc190b2tlbixcbiAgICB9LFxuICB9O1xuICByZXR1cm4gaHR0cHNSZXF1ZXN0LmdldChvcHRpb25zKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHZhbGlkYXRlQXBwSWQ6IHZhbGlkYXRlQXBwSWQsXG4gIHZhbGlkYXRlQXV0aERhdGE6IHZhbGlkYXRlQXV0aERhdGEsXG59O1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9BdXRoL2xpbmUuanMiXSwibmFtZXMiOlsiUGFyc2UiLCJyZXF1aXJlIiwiaHR0cHNSZXF1ZXN0IiwiYXV0aERhdGEiLCJyZXNwb25zZSIsIlByb21pc2UiLCJvcHRpb25zIiwiaG9zdCIsInBhdGgiLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImFjY2Vzc190b2tlbiIsIm1vZHVsZSIsInZhbGlkYXRlQXBwSWQiLCJ2YWxpZGF0ZUF1dGhEYXRhIl0sIm1hcHBpbmdzIjoiYUFBQTtpOElBTUU7eUZBTEYsR0FBSUEsQ0FBQUEsS0FBSyx5QkFBR0MsT0FBTyxDQUFQQSxZQUFPLENBQVBBLENBQVosS0FBUyxDQUFULENBQ0EsS0FBTUMsQ0FBQUEsWUFBWSx5QkFBR0QsT0FBTyxDQUE1QixnQkFBNEIsQ0FBVixDQUFsQixDQUVBO0FBQ0EsUUFBQSxDQUFBLGdCQUFBLENBQUEsUUFBQSxDQUFvQywrQ0FDbEMsTUFBTyxDQUFBLE9BQU8sQ0FBQSxTQUFBLENBQVlFLFFBQVEsQ0FBM0IsWUFBTyxDQUFQLENBQUEsSUFBQSxDQUErQ0MsUUFBUSxFQUFJLCtDQUNoRSxHQUFJQSwyQkFBQUEsUUFBUSw4QkFBSUEsUUFBUSxDQUFwQkEsTUFBUSxDQUFSQSw2QkFBK0JBLFFBQVEsQ0FBUkEsTUFBQUEsR0FBb0JELFFBQVEsQ0FBL0QsRUFBSUMsQ0FBSixDQUFvRSxrREFDbEUsT0FDRCxDQUZELGdDQURnRSx1QkFJaEUsS0FBTSxJQUFJSixDQUFBQSxLQUFLLENBQVQsS0FBQSxDQUFnQkEsS0FBSyxDQUFMQSxLQUFBQSxDQUFoQixnQkFBQSxDQUFOLHFDQUFNLENBQU4sQ0FKRixDQUFPLENBQVAsQyxDQVFGO0FBQ0EsUUFBQSxDQUFBLGFBQUEsRUFBeUIsK0NBQ3ZCLE1BQU9LLENBQUFBLE9BQU8sQ0FBZCxPQUFPQSxFQUFQLEMsQ0FHRjtBQUNBLFFBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLFlBQUEsQ0FBcUMsd0JBQ25DLEdBQUlDLENBQUFBLE9BQU8seUJBQUcsQ0FDWkMsSUFBSSxDQURRLGFBQUEsQ0FFWkMsSUFBSSxDQUFFLE9BRk0sSUFBQSxDQUdaQyxNQUFNLENBSE0sS0FBQSxDQUlaQyxPQUFPLENBQUUsQ0FDUEMsYUFBYSxDQUFFLFVBQVlDLFlBRHBCLENBSkcsQ0FBSCxDQUFYLENBRG1DLHVCQVNuQyxNQUFPVixDQUFBQSxZQUFZLENBQVpBLEdBQUFBLENBQVAsT0FBT0EsQ0FBUCxDQUNELEMsdUJBRURXLE1BQU0sQ0FBTkEsT0FBQUEsQ0FBaUIsQ0FDZkMsYUFBYSxDQURFLGFBQUEsQ0FFZkMsZ0JBQWdCLENBQUVBLGdCQUZILENBQWpCRixDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSGVscGVyIGZ1bmN0aW9ucyBmb3IgYWNjZXNzaW5nIHRoZSBsaW5lIEFQSS5cbnZhciBQYXJzZSA9IHJlcXVpcmUoJ3BhcnNlL25vZGUnKS5QYXJzZTtcbmNvbnN0IGh0dHBzUmVxdWVzdCA9IHJlcXVpcmUoJy4vaHR0cHNSZXF1ZXN0Jyk7XG5cbi8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgaWYgdGhpcyB1c2VyIGlkIGlzIHZhbGlkLlxuZnVuY3Rpb24gdmFsaWRhdGVBdXRoRGF0YShhdXRoRGF0YSkge1xuICByZXR1cm4gcmVxdWVzdCgncHJvZmlsZScsIGF1dGhEYXRhLmFjY2Vzc190b2tlbikudGhlbihyZXNwb25zZSA9PiB7XG4gICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnVzZXJJZCAmJiByZXNwb25zZS51c2VySWQgPT09IGF1dGhEYXRhLmlkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRocm93IG5ldyBQYXJzZS5FcnJvcihQYXJzZS5FcnJvci5PQkpFQ1RfTk9UX0ZPVU5ELCAnTGluZSBhdXRoIGlzIGludmFsaWQgZm9yIHRoaXMgdXNlci4nKTtcbiAgfSk7XG59XG5cbi8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgaWZmIHRoaXMgYXBwIGlkIGlzIHZhbGlkLlxuZnVuY3Rpb24gdmFsaWRhdGVBcHBJZCgpIHtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufVxuXG4vLyBBIHByb21pc2V5IHdyYXBwZXIgZm9yIGFwaSByZXF1ZXN0c1xuZnVuY3Rpb24gcmVxdWVzdChwYXRoLCBhY2Nlc3NfdG9rZW4pIHtcbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgaG9zdDogJ2FwaS5saW5lLm1lJyxcbiAgICBwYXRoOiAnL3YyLycgKyBwYXRoLFxuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzX3Rva2VuLFxuICAgIH0sXG4gIH07XG4gIHJldHVybiBodHRwc1JlcXVlc3QuZ2V0KG9wdGlvbnMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmFsaWRhdGVBcHBJZDogdmFsaWRhdGVBcHBJZCxcbiAgdmFsaWRhdGVBdXRoRGF0YTogdmFsaWRhdGVBdXRoRGF0YSxcbn07XG4iXX0=