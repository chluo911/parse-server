{
   "swagger":"2.0",
   "info":{
      "title":"Parse API",
      "description":"Happy to code Parse API",
      "version":"1.0.0"
   },
   "schemes":[
      "http"
   ],
   "securityDefinitions":{
      "ParseAppId":{
         "type":"apiKey",
         "name":"X-Parse-Application-Id",
         "in":"header",
         "default": "APPLICATION_ID"
      },
      "ParseSessionId":{
         "type":"apiKey",
         "name":"X-Parse-Session-Token",
         "in":"header"
      },
      "MasterKey":{
         "type":"apiKey",
         "name":"X-Parse-REST-API-Key",
         "in":"header",
         "default": "MASTER_KEY"
      }
   },
   "parameters": {
      "ParseAppIdHeader": {
        "name": "X-Parse-Application-Id",
        "in": "header",
        "type": "string",
        "default": "APPLICATION_ID"
      },
      "MasterKey": {
         "name": "X-Parse-REST-API-Key",
         "in": "header",
         "type": "string",
         "default": "MASTER_KEY"
       }
    },
   "host": "http://localhost:1337",
   "basePath":"/",
   "produces":[
      "application/json"
   ],
   "components":{
      "schemas":{
         "Batch":{
            "type":"object",
            "properties":{
               "requests":{
                  "type":"array",
                  "items":{
                     "type":"object",
                     "properties":{
                        "method":{
                           "type":"string"
                        },
                        "path":{
                           "type":"string"
                        },
                        "body":{
                           "type":"object"
                        }
                     }
                  }
               }
            }
         },
         "notfound":{
            "type":"object",
            "properties":{
               "code":{
                  "type":"string"
               },
               "error":{
                  "type":"string"
               }
            }
         },
         "_User":{
            "type":"object",
            "properties":{
               "objectId":{
                  "type":"string"
               },
               "createdAt":{
                  "type":"string"
               },
               "updatedAt":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "password":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "emailVerified":{
                  "type":"boolean"
               },
               "authData":{
                  "type":"object"
               }
            }
         },
         "_User_post":{
            "type":"object",
            "properties":{
               "username":{
                  "type":"string"
               },
               "password":{
                  "type":"string"
               },
               "email":{
                  "type":"string"
               },
               "emailVerified":{
                  "type":"boolean"
               },
               "authData":{
                  "type":"object"
               }
            }
         },
         "_Role":{
            "type":"object",
            "properties":{
               "objectId":{
                  "type":"string"
               },
               "createdAt":{
                  "type":"string"
               },
               "updatedAt":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "users":{
                  "type":"object"
               },
               "roles":{
                  "type":"object"
               }
            }
         },
         "_Role_post":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string"
               },
               "users":{
                  "type":"object"
               },
               "roles":{
                  "type":"object"
               }
            }
         },
         "GameScore":{
            "type":"object",
            "properties":{
               "objectId":{
                  "type":"string"
               },
               "createdAt":{
                  "type":"string"
               },
               "updatedAt":{
                  "type":"string"
               },
               "score":{
                  "type":"number"
               },
               "playerName":{
                  "type":"string"
               },
               "cheatMode":{
                  "type":"boolean"
               }
            }
         },
         "GameScore_post":{
            "type":"object",
            "properties":{
               "score":{
                  "type":"number"
               },
               "playerName":{
                  "type":"string"
               },
               "cheatMode":{
                  "type":"boolean"
               }
            }
         }
      }
   },
   "paths":{
      "/parse/batch":{
         "post":{
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Batch Operations",
            "description":"To reduce the amount of time spent on network round trips, you can create, update, or delete up to 50 objects in one call, using the batch endpoint.",
            "parameters":[
               {
                  "name": "Accept",
                  "in": "header",
                  "description": "Content type accepted",
                  "required": true,
                  "type": "string",
                  "default": "application/json"
               },
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"batch requests",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/Batch"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns operation status"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            },
            "tags":[
               "Parse"
            ]
         }
      },
      "/parse/files/{filename}":{
         "post":{
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Uploading files",
            "description":"To upload a file to Parse, send a POST request to the files URL, postfixed with the name of the file. The request must contain the Content-Type header associated with the file. Keep in mind that files are limited to 10 megabytes. Here’s a simple example that’ll create a file named hello.txt containing a string.",
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"filename",
                  "type":"string",
                  "description":"The filename of the file you want to upload.",
                  "required":true
               }
            ],
            "requestBody":{
               "content":{
                  "image/png":{
                     "schema":{
                        "type":"string",
                        "format":"binary"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Returns operation status"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            },
            "tags":[
               "Files"
            ]
         }
      },
      "/parse/classes/_User":{
         "get":{
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Get _User data",
            "description":"Find queries documentation here https://docs.parseplatform.org/rest/guide/#queries",
            "tags":[
               "_User"
            ],
            "responses":{
               "200":{
                  "description":"Return _User data",
                  "schema":{
                     "$ref":"#/components/schemas/_User"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "post":{
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Add object instance",
            "description":"Happy to access The System",
            "tags":[
               "_User"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"object that needs to be added to the store",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/_User_post"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns _User data",
                  "schema":{
                     "$ref":"#/components/schemas/_User"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      },
      "/parse/classes/_User/{id}":{
         "get":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_User"
               }
           ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Get _User by id",
            "description":"Happy to access The System",
            "tags":[
               "_User"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to get.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns data",
                  "schema":{
                     "$ref":"#/components/schemas/_User"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "put":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_User"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Update instance",
            "description":"Happy to access The System",
            "tags":[
               "_User"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to update.",
                  "required":true
               },
               {
                  "in":"body",
                  "name":"movie",
                  "description":"The element you want update with.",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/_User_post"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns instance data",
                  "schema":{
                     "$ref":"#/components/schemas/_User"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "delete":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_User"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Delete instance",
            "description":"Happy to access The System",
            "tags":[
               "_User"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to delete.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns a confirmation message"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Id not found",
                  "schema":{
                     "$ref":"#/components/schemas/notfound"
                  }
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      },
      "/parse/classes/_Role":{
         "get":{
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Get _Role data",
            "description":"Find queries documentation here https://docs.parseplatform.org/rest/guide/#queries",
            "tags":[
               "_Role"
            ],
            "responses":{
               "200":{
                  "description":"Return _Role data",
                  "schema":{
                     "$ref":"#/components/schemas/_Role"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "post":{
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Add object instance",
            "description":"Happy to access The System",
            "tags":[
               "_Role"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"object that needs to be added to the store",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/_Role_post"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns _Role data",
                  "schema":{
                     "$ref":"#/components/schemas/_Role"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      },
      "/parse/classes/_Role/{id}":{
         "get":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_Role"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Get _Role by id",
            "description":"Happy to access The System",
            "tags":[
               "_Role"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to get.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns data",
                  "schema":{
                     "$ref":"#/components/schemas/_Role"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "put":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_Role"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Update instance",
            "description":"Happy to access The System",
            "tags":[
               "_Role"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to update.",
                  "required":true
               },
               {
                  "in":"body",
                  "name":"movie",
                  "description":"The element you want update with.",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/_Role"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns instance data",
                  "schema":{
                     "$ref":"#/components/schemas/_Role"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "delete":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/_Role"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Delete instance",
            "description":"Happy to access The System",
            "tags":[
               "_Role"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to delete.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns a confirmation message"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Id not found",
                  "schema":{
                     "$ref":"#/components/schemas/notfound"
                  }
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      },
      "/parse/classes/GameScore":{
         "get":{
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY":[]
               }
            ],
            "summary":"Get GameScore data",
            "description":"Find queries documentation here https://docs.parseplatform.org/rest/guide/#queries",
            "tags":[
               "GameScore"
            ],
            "responses":{
               "200":{
                  "description":"Return GameScore data",
                  "schema":{
                     "$ref":"#/components/schemas/GameScore"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "post":{
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Add object instance",
            "description":"Happy to access The System",
            "tags":[
               "GameScore"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"body",
                  "name":"body",
                  "description":"object that needs to be added to the store",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/GameScore_post"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns GameScore data",
                  "schema":{
                     "$ref":"#/components/schemas/GameScore"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      },
      "/parse/classes/GameScore/{id}":{
         "get":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/GameScore"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Get GameScore by id",
            "description":"Happy to access The System",
            "tags":[
               "GameScore"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to get.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns data",
                  "schema":{
                     "$ref":"#/components/schemas/GameScore"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "put":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/GameScore"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Update instance",
            "description":"Happy to access The System",
            "tags":[
               "GameScore"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to update.",
                  "required":true
               },
               {
                  "in":"body",
                  "name":"movie",
                  "description":"The element you want update with.",
                  "required":true,
                  "schema":{
                     "$ref":"#/components/schemas/GameScore_post"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns instance data",
                  "schema":{
                     "$ref":"#/components/schemas/GameScore"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         },
         "delete":{
            "x-restler-annotations": [
               {
                   "producer_resource_name": "objectId",
                   "producer_method": "POST",
                   "consumer_param": "id",
                   "producer_endpoint": "/parse/classes/GameScore"
               }
            ],
            "security":[
               {
                  "ParseAppId":[
                     "APPLICATION_ID"
                  ],
                  "ParseSessionId":[
                     
                  ],
                  "MASTER_KEY": []
               }
            ],
            "summary":"Delete instance",
            "description":"Happy to access The System",
            "tags":[
               "GameScore"
            ],
            "parameters":[
               {
                  "$ref": "#/parameters/ParseAppIdHeader"
               },
               {
                  "$ref": "#/parameters/MasterKey"
               },
               {
                  "in":"path",
                  "name":"id",
                  "type":"string",
                  "description":"The id of the element you want to delete.",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Returns a confirmation message"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "404":{
                  "description":"Id not found",
                  "schema":{
                     "$ref":"#/components/schemas/notfound"
                  }
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Server Internal error"
               }
            }
         }
      }
   }
}
